var searchIndex = JSON.parse('{\
"adler":{"doc":"Adler-32 checksum implementation.","t":"DFLLLLLLLLLLLLLLLL","n":["Adler32","adler32_slice","borrow","borrow_mut","checksum","clone","default","finish","fmt","from","from_checksum","into","new","try_from","try_into","type_id","write","write_slice"],"q":[[0,"adler"]],"d":["Adler-32 checksum calculator.","Calculates the Adler-32 checksum of a byte slice.","","","Returns the calculated checksum at this point in time.","","","","","Returns the argument unchanged.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Calls <code>U::from(self)</code>.","Creates a new Adler-32 instance with default state.","","","","","Adds <code>bytes</code> to the checksum calculation."],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[[[2,[1]]],3],[[]],[[]],[4,3],[4,4],[[],4],[4,5],[[4,6],7],[[]],[3,4],[[]],[[],4],[[],8],[[],8],[[],9],[[4,[2,[1]]]],[[4,[2,[1]]]]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"u32"],[3,"Adler32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at …","t":"DDEENNDNNDDDNNSNNSDDEENNDDSDNEDNNNNNSLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLALLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMIEDDSSNNDNDSDDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKKKKLLLLLLKLLKKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AhoCorasick","AhoCorasickBuilder","AhoCorasickKind","Anchored","Anchored","Both","BuildError","ContiguousNFA","DFA","FindIter","FindOverlappingIter","Input","InvalidInputAnchored","InvalidInputUnanchored","LIMIT","LeftmostFirst","LeftmostLongest","MAX","Match","MatchError","MatchErrorKind","MatchKind","No","NoncontiguousNFA","PatternID","PatternIDError","SIZE","Span","Standard","StartKind","StreamFindIter","Unanchored","UnsupportedEmpty","UnsupportedOverlapping","UnsupportedStream","Yes","ZERO","anchored","as_i32","as_u32","as_u64","as_usize","ascii_case_insensitive","attempted","automaton","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","byte_classes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","default","default","default","default","dense_depth","dfa","earliest","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find","find_iter","find_overlapping","find_overlapping_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ne_bytes","from_ne_bytes_unchecked","from_u32_unchecked","get_anchored","get_earliest","get_range","get_span","hash","hash","hash","haystack","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","invalid_input_anchored","invalid_input_unanchored","is_anchored","is_done","is_empty","is_empty","is_match","kind","kind","kind","len","len","match_kind","match_kind","max_pattern_len","memory_usage","min_pattern_len","must","must","new","new","new","new","new","new","new_unchecked","next","next","next","nfa","offset","offset","one_more","packed","partial_cmp","pattern","patterns_len","prefilter","range","range","range","replace_all","replace_all_bytes","replace_all_with","replace_all_with_bytes","set_anchored","set_earliest","set_end","set_range","set_span","set_start","span","span","start","start","start","start_kind","start_kind","stream_find_iter","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_find","try_find_iter","try_find_overlapping","try_find_overlapping_iter","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_replace_all","try_replace_all_bytes","try_replace_all_with","try_replace_all_with_bytes","try_stream_find_iter","try_stream_replace_all","try_stream_replace_all_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsupported_empty","unsupported_overlapping","unsupported_stream","got","got","Automaton","Candidate","FindIter","FindOverlappingIter","LIMIT","MAX","Match","None","OverlappingState","PossibleStartOfMatch","Prefilter","SIZE","StateID","StateIDError","StreamFindIter","ZERO","as_i32","as_u32","as_u64","as_usize","attempted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","eq","eq","equivalent","equivalent","find_in","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ne_bytes","from_ne_bytes_unchecked","from_u32_unchecked","get_match","hash","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_option","is_dead","is_match","is_special","is_start","match_kind","match_len","match_pattern","max_pattern_len","memory_usage","min_pattern_len","must","new","new_unchecked","next","next","next","next_state","one_more","partial_cmp","pattern_len","patterns_len","prefilter","start","start_state","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_find","try_find_iter","try_find_overlapping","try_find_overlapping_iter","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_replace_all","try_replace_all_bytes","try_replace_all_with","try_replace_all_with_bytes","try_stream_find_iter","try_stream_replace_all","try_stream_replace_all_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Builder","DFA","ascii_case_insensitive","borrow","borrow","borrow_mut","borrow_mut","build","build_from_noncontiguous","builder","byte_classes","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","into","into","is_dead","is_match","is_special","is_start","match_kind","match_kind","match_len","match_pattern","max_pattern_len","memory_usage","min_pattern_len","new","new","next_state","pattern_len","patterns_len","prefilter","prefilter","start_kind","start_state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","contiguous","noncontiguous","Builder","NFA","ascii_case_insensitive","borrow","borrow","borrow_mut","borrow_mut","build","build_from_noncontiguous","builder","byte_classes","clone","clone","clone_into","clone_into","default","dense_depth","fmt","fmt","from","from","into","into","is_dead","is_match","is_special","is_start","match_kind","match_kind","match_len","match_pattern","max_pattern_len","memory_usage","min_pattern_len","new","new","next_state","pattern_len","patterns_len","prefilter","prefilter","start_state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Builder","NFA","ascii_case_insensitive","borrow","borrow","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","default","dense_depth","fmt","fmt","from","from","into","into","is_dead","is_match","is_special","is_start","match_kind","match_kind","match_len","match_pattern","max_pattern_len","memory_usage","min_pattern_len","new","new","next_state","pattern_len","patterns_len","prefilter","prefilter","start_state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Builder","Config","FindIter","LeftmostFirst","LeftmostLongest","MatchKind","Searcher","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","default","default","default","eq","equivalent","extend","find","find_in","find_iter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","heuristic_pattern_limits","into","into","into","into","into","into_iter","len","match_kind","match_kind","memory_usage","minimum_len","minimum_len","new","new","new","next","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"aho_corasick"],[364,"aho_corasick::MatchErrorKind"],[366,"aho_corasick::automaton"],[525,"aho_corasick::dfa"],[575,"aho_corasick::nfa"],[577,"aho_corasick::nfa::contiguous"],[627,"aho_corasick::nfa::noncontiguous"],[675,"aho_corasick::packed"]],"d":["An automaton for searching multiple strings in linear time.","A builder for configuring an Aho-Corasick automaton.","The type of Aho-Corasick implementation to use in an …","The type of anchored search to perform.","Support only anchored searches. Requesting an unanchored …","Support both anchored and unanchored searches.","An error that occurred during the construction of an …","Use a contiguous NFA.","Use a DFA. Warning: DFAs typically use a large amount of …","An iterator of non-overlapping matches in a particular …","An iterator of overlapping matches in a particular …","The configuration and the haystack to use for an …","An error indicating that an anchored search was requested, …","An error indicating that an unanchored search was …","The total number of values that can be represented.","Use leftmost-first match semantics, which reports leftmost …","Use leftmost-longest match semantics, which reports …","The maximum value.","A representation of a match reported by an Aho-Corasick …","An error that occurred during an Aho-Corasick search.","The underlying kind of a <code>MatchError</code>.","A knob for controlling the match semantics of an …","Run an unanchored search. This means a match may occur …","Use a noncontiguous NFA.","The identifier of a pattern in an Aho-Corasick automaton.","This error occurs when an ID could not be constructed.","The number of bytes that a single value uses in memory.","A representation of a range in a haystack.","Use standard match semantics, which support overlapping …","The kind of anchored starting configurations to support in …","An iterator that reports Aho-Corasick matches in a stream.","Support only unanchored searches. Requesting an anchored …","An error indicating that the operation requested doesn’t …","An error indicating that an overlapping search was …","An error indicating that a stream search was attempted on …","Run an anchored search. This means that a match must begin …","The zero value.","Sets the anchor mode of a search.","Return the internal value as a <code>i32</code>. This is guaranteed to …","Return the internal value as a <code>u32</code>. This is guaranteed to …","Return the internal value as a <code>u64</code>. This is guaranteed to …","Return the internal value as a <code>usize</code>. This is guaranteed to","Enable ASCII-aware case insensitive matching.","Returns the value that could not be converted to an ID.","Provides <code>Automaton</code> trait for abstracting over Aho-Corasick …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build an Aho-Corasick automaton using the configuration …","A convenience method for returning a new Aho-Corasick …","A debug settting for whether to attempt to shrink the size …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true when the given offset is contained within …","","","","","Set the limit on how many states use a dense …","Provides direct access to a DFA implementation of …","Whether to execute an “earliest” search or not.","Return the end position of this search.","The ending position of the match.","The end offset of the span, exclusive.","","","","","","","","","","","","","","","","","","","","","","Returns the location of the first match according to the …","Returns an iterator of non-overlapping matches, using the …","Returns the location of the first overlapping match in the …","Returns an iterator of overlapping matches. Stated …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decode this value from the bytes given using the native …","Decode this value from the bytes given using the native …","Create a new value from a <code>u32</code> without checking whether the …","Return the anchored mode for this search configuration.","Return whether this search should execute in “earliest”…","Return the span as a range for this search configuration.","Return the span for this search configuration.","","","","Return a borrow of the underlying haystack as a slice of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new “invalid anchored search” error. This …","Create a new “invalid unanchored search” error. This …","Returns true if and only if this anchor mode corresponds …","Return true if this input has been exhausted, which in …","Returns true when this span is empty. That is, when …","Returns true when the span in this match is empty.","Returns true if and only if this automaton matches the …","Returns the kind of the Aho-Corasick automaton used by …","Choose the type of underlying automaton to use.","Returns a reference to the underlying error kind.","Returns the length of this span.","Returns the length of this match.","Returns the match kind used by this automaton.","Set the desired match semantics.","Returns the length of the longest pattern matched by this …","Returns the approximate total amount of heap used by this …","Returns the length of the shortest pattern matched by this …","Like <code>new</code>, but panics if the given value is not valid.","Create a new match from a pattern ID and a byte offset …","Create a new Aho-Corasick automaton using the default …","Create a new builder for configuring an Aho-Corasick …","Create a new error value with the given kind.","Create a new value that is represented by a “small index.…","Create a new search configuration for the given haystack.","Create a new match from a pattern ID and a span.","Create a new value without checking whether the given …","","","","Provides direct access to NFA implementations of …","Returns a new span with <code>offset</code> added to this span’s <code>start</code>…","Returns a new match with <code>offset</code> added to its span’s <code>start</code>…","Returns one more than this value as a usize.","Provides packed multiple substring search, principally for …","","Returns the ID of the pattern that matched.","Return the total number of patterns matched by this …","Enable heuristic prefilter optimizations.","Like <code>Input::span</code>, but accepts any range instead.","Returns this span as a range.","Returns the match span as a range.","Replace all matches with a corresponding value in the …","Replace all matches using raw bytes with a corresponding …","Replace all matches using a closure called on each match. …","Replace all matches using raw bytes with a closure called …","Set the anchor mode of a search.","Set whether the search should execute in “earliest” …","Set the ending offset for the span for this search …","Set the span for this search configuration given any range.","Set the span for this search configuration.","Set the starting offset for the span for this search …","Set the span for this search.","Returns the span for this match.","Return the start position of this search.","The starting position of the match.","The start offset of the span, inclusive.","Returns the type of starting search configuration …","Sets the starting state configuration for the automaton.","Returns an iterator of non-overlapping matches in the given","Return the underlying integer as raw bytes in native endian","","","","","","","","","","","","","","","","","","Returns the location of the first match according to the …","Returns an iterator of non-overlapping matches, using the …","Returns the location of the first overlapping match in the …","Returns an iterator of overlapping matches.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace all matches with a corresponding value in the …","Replace all matches using raw bytes with a corresponding …","Replace all matches using a closure called on each match. …","Replace all matches using raw bytes with a closure called …","Returns an iterator of non-overlapping matches in the given","Search for and replace all matches of this automaton in …","Search the given reader and replace all matches of this …","","","","","","","","","","","","","","","","","","Create a new “unsupported empty pattern” error. This …","Create a new “unsupported overlapping search” error. …","Create a new “unsupported stream search” error. This …","The match semantics for the automaton that was used.","The match semantics for the automaton that was used.","A trait that abstracts over Aho-Corasick automata.","A candidate is the result of running a prefilter on a …","An iterator of non-overlapping matches in a particular …","An iterator of overlapping matches in a particular …","The total number of values that can be represented.","The maximum value.","A confirmed match was found. Callers do not need to …","No match was found. Since false negatives are not …","Represents the current state of an overlapping search.","The start of a possible match was found. Callers must …","A prefilter for accelerating a search.","The number of bytes that a single value uses in memory.","The identifier of a finite automaton state.","This error occurs when an ID could not be constructed.","An iterator that reports matches in a stream.","The zero value.","Return the internal value as a <code>i32</code>. This is guaranteed to …","Return the internal value as a <code>u32</code>. This is guaranteed to …","Return the internal value as a <code>u64</code>. This is guaranteed to …","Return the internal value as a <code>usize</code>. This is guaranteed to","Returns the value that could not be converted to an ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a search in the haystack within the span given. If …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Decode this value from the bytes given using the native …","Decode this value from the bytes given using the native …","Create a new value from a <code>u32</code> without checking whether the …","Return the match result of the most recent search to …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Convert this candidate into an option. This is useful when …","Returns true if the given ID represents a dead state.","Returns true if the given ID represents a match state.","Returns true if the given ID represents a “special” …","Returns true if the given ID represents a start state.","Returns the match semantics that this automaton was built …","Returns the total number of matches for the given state ID.","Returns the pattern ID for the match state given by <code>sid</code> at …","Returns the length, in bytes, of the longest pattern in …","Returns the heap memory usage, in bytes, used by this …","Returns the length, in bytes, of the shortest pattern in …","Like <code>new</code>, but panics if the given value is not valid.","Create a new value that is represented by a “small index.…","Create a new value without checking whether the given …","","","","Performs a state transition from <code>sid</code> for <code>byte</code> and returns …","Returns one more than this value as a usize.","","Returns the length of the pattern for the given ID.","Returns the total number of patterns compiled into this …","Returns a prefilter, if available, that can be used to …","Create a new overlapping state that begins at the start …","Returns the starting state for the given anchor mode.","Return the underlying integer as raw bytes in native endian","","","","","","","Executes a non-overlapping search with this automaton …","Returns an iterator of non-overlapping matches with this …","Executes a overlapping search with this automaton using …","Returns an iterator of overlapping matches with this …","","","","","","","","","","","","","","","","","","","","","Replaces all non-overlapping matches in <code>haystack</code> with …","Replaces all non-overlapping matches in <code>haystack</code> with …","Replaces all non-overlapping matches in <code>haystack</code> by …","Replaces all non-overlapping matches in <code>haystack</code> by …","Returns an iterator of non-overlapping matches with this …","Replaces all non-overlapping matches in <code>rdr</code> with strings …","Replaces all non-overlapping matches in <code>rdr</code> by calling the …","","","","","","","","","A builder for configuring an Aho-Corasick DFA.","A DFA implementation of Aho-Corasick.","Enable ASCII-aware case insensitive matching.","","","","","Build an Aho-Corasick DFA from the given iterator of …","Build an Aho-Corasick DFA from the given noncontiguous NFA.","A convenience method for returning a new Aho-Corasick DFA …","A debug setting for whether to attempt to shrink the size …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Set the desired match semantics.","","","","","","Create a new Aho-Corasick DFA using the default …","Create a new builder for configuring an Aho-Corasick DFA.","","","","","Enable heuristic prefilter optimizations.","Sets the starting state configuration for the automaton.","","","","","","","","","","Provides a contiguous NFA implementation of Aho-Corasick.","Provides a noncontiguous NFA implementation of …","A builder for configuring an Aho-Corasick contiguous NFA.","A contiguous NFA implementation of Aho-Corasick.","Enable ASCII-aware case insensitive matching.","","","","","Build an Aho-Corasick contiguous NFA from the given …","Build an Aho-Corasick contiguous NFA from the given …","A convenience method for returning a new Aho-Corasick …","A debug setting for whether to attempt to shrink the size …","","","","","","Set the limit on how many states use a dense …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Set the desired match semantics.","","","","","","Create a new Aho-Corasick contiguous NFA using the default …","Create a new builder for configuring an Aho-Corasick …","","","","","Enable heuristic prefilter optimizations.","","","","","","","","","","A builder for configuring an Aho-Corasick noncontiguous …","A noncontiguous NFA implementation of Aho-Corasick.","Enable ASCII-aware case insensitive matching.","","","","","Build an Aho-Corasick noncontiguous NFA from the given …","A convenience method for returning a new Aho-Corasick …","","","","","","Set the limit on how many states use a dense …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Set the desired match semantics.","","","","","","Create a new Aho-Corasick noncontiguous NFA using the …","Create a new builder for configuring an Aho-Corasick …","","","","","Enable heuristic prefilter optimizations.","","","","","","","","","","A builder for constructing a packed searcher from a …","The configuration for a packed multiple pattern searcher.","An iterator over non-overlapping matches from a packed …","Use leftmost-first match semantics, which reports leftmost …","Use leftmost-longest match semantics, which reports …","A knob for controlling the match semantics of a packed …","A packed searcher for quickly finding occurrences of …","Add the given pattern to this set to match.","","","","","","","","","","","Build a searcher from the patterns added to this builder …","Create a packed builder from this configuration. The …","A convenience function for calling <code>Builder::new()</code>.","","","","","","","","","A convenience function for calling <code>Config::new()</code>.","","","","","","Add the given iterator of patterns to this set to match.","Return the first occurrence of any of the patterns in this …","Return the first occurrence of any of the patterns in this …","Return an iterator of non-overlapping occurrences of the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Request that heuristic limitations on the number of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the number of patterns added to this builder.","Set the match semantics for this configuration.","Returns the match kind used by this packed searcher.","Returns the approximate total amount of heap used by this …","Returns the length, in bytes, of the shortest pattern …","Returns the minimum length of a haystack that is required …","Create a new default configuration. A default …","Create a new builder for constructing a multi-pattern …","A convenience function for constructing a searcher from an …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,21,21,0,15,15,0,0,0,17,17,3,20,20,3,0,0,0,0,2,15,0,0,3,0,20,0,0,21,17,17,17,2,3,1,3,3,3,3,8,10,0,12,26,28,32,8,15,13,16,17,3,10,1,18,2,19,20,21,12,26,28,32,8,15,13,16,17,3,10,1,18,2,19,20,21,8,12,8,12,8,15,13,16,17,3,10,1,18,2,19,20,21,12,8,15,13,16,17,3,10,1,18,2,19,20,21,3,18,8,3,20,21,8,0,1,1,19,18,15,16,17,3,10,18,18,2,19,20,21,15,16,17,3,10,18,2,19,20,21,12,12,12,12,12,26,28,32,8,15,13,13,16,16,17,3,10,10,1,18,2,19,20,21,12,26,28,32,8,15,13,16,17,3,3,10,1,1,18,18,2,19,20,21,3,3,3,1,1,1,1,3,18,19,1,12,26,28,32,8,15,13,16,17,3,10,1,18,2,19,20,21,26,28,32,16,16,2,1,18,19,12,12,8,16,18,19,12,8,12,12,12,3,19,12,8,16,3,1,19,3,26,28,32,0,18,19,3,0,3,19,12,8,1,18,19,12,12,12,12,1,1,1,1,1,1,1,19,1,19,18,12,8,12,3,12,8,15,13,16,17,3,10,1,18,2,19,20,21,13,16,10,12,12,12,12,12,26,28,32,8,15,13,16,17,3,3,3,3,3,10,1,18,2,19,20,21,12,26,28,32,8,15,13,16,17,3,10,1,18,2,19,20,21,12,12,12,12,12,12,12,12,26,28,32,8,15,13,16,17,3,10,1,18,2,19,20,21,16,16,16,69,70,0,0,0,0,49,49,52,52,0,52,0,49,0,0,0,49,49,49,49,49,50,27,53,54,55,51,52,49,50,27,53,54,55,51,52,49,50,27,51,52,49,50,27,51,52,49,50,49,49,49,50,49,50,51,27,53,54,55,51,52,49,50,50,27,53,54,55,51,52,49,49,50,49,49,49,27,49,27,53,54,55,51,52,49,50,53,54,55,52,56,56,56,56,56,56,56,56,56,56,49,49,49,53,54,55,56,49,49,56,56,56,27,56,49,27,51,52,49,50,50,56,56,56,56,27,53,54,55,51,52,49,49,49,49,49,50,27,53,54,55,51,52,49,50,56,56,56,56,56,56,56,27,53,54,55,51,52,49,50,0,0,58,59,58,59,58,58,58,59,58,59,58,59,58,58,59,58,59,58,59,58,59,59,59,59,59,58,59,59,59,59,59,59,58,59,59,59,59,58,58,59,59,58,59,58,59,58,59,58,0,0,0,0,61,62,61,62,61,61,61,62,61,62,61,62,61,61,61,62,61,62,61,62,61,62,62,62,62,62,61,62,62,62,62,62,62,61,62,62,62,62,61,62,62,61,62,61,62,61,62,61,0,0,63,60,63,60,63,63,60,60,63,60,63,63,63,60,63,60,63,60,63,60,60,60,60,60,63,60,60,60,60,60,60,63,60,60,60,60,63,60,60,63,60,63,60,63,60,63,0,0,0,67,67,0,0,64,67,66,64,65,68,67,66,64,65,68,64,66,65,67,66,64,65,67,66,64,65,65,67,66,64,67,67,64,65,65,65,67,66,64,65,68,67,66,64,65,68,66,67,66,64,65,68,68,64,66,65,65,64,65,66,64,65,68,67,66,64,65,67,66,64,65,68,67,66,64,65,68,67,66,64,65,68],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[3,4],[3,5],[3,6],[3,7],[[8,9],8],[10,6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,11],[[14,[12,13]]]],[[],8],[[8,9],8],[12,12],[8,8],[15,15],[13,13],[16,16],[17,17],[3,3],[10,10],[1,1],[18,18],[2,2],[19,19],[20,20],[21,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],22],[[18,7],9],[[],8],[[],3],[[],20],[[],21],[[8,7],8],0,[[1,9],1],[1,7],[19,7],0,[[15,15],9],[[16,16],9],[[17,17],9],[[3,3],9],[[10,10],9],[[18,18],9],[[18,[23,[7]]],9],[[2,2],9],[[19,19],9],[[20,20],9],[[21,21],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[12,[24,[1]]],[[25,[19]]]],[[12,[24,[1]]],26],[[12,[24,[1]],27]],[[12,[24,[1]]],28],[[12,29],30],[[26,29],30],[[28,29],30],[[[32,[31]],29],30],[[8,29],30],[[15,29],30],[[13,29],30],[[13,29],30],[[16,29],30],[[16,29],30],[[17,29],30],[[3,29],30],[[10,29],30],[[10,29],30],[[1,29],30],[[18,29],30],[[2,29],30],[[19,29],30],[[20,29],30],[[21,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,3],[[]],[[]],[[[0,[34,[36,[[35,[33]]]]]]],1],[[[23,[7]]],18],[[]],[[]],[[]],[[]],[[]],[[[37,[33]]],[[14,[3,10]]]],[[[37,[33]]],3],[5,3],[1,2],[1,9],[1,[[23,[7]]]],[1,18],[[3,38]],[[18,38]],[[19,38]],[1,[[35,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[2,9],[1,9],[18,9],[19,9],[[12,[24,[1]]],9],[12,15],[[8,[25,[15]]],8],[16,17],[18,7],[19,7],[12,20],[[8,20],8],[12,7],[12,7],[12,7],[7,3],[[7,[24,[18]]],19],[11,[[14,[12,13]]]],[[],8],[17,16],[7,[[14,[3,10]]]],[[[0,[34,[36,[[35,[33]]]]]]],1],[[3,[24,[18]]],19],[7,3],[26,[[25,[19]]]],[28,[[25,[19]]]],[[[32,[39]]],[[25,[[14,[19,40]]]]]],0,[[18,7],18],[[19,7],19],[3,7],0,[[3,3],[[25,[22]]]],[19,3],[12,7],[[8,9],8],[[1,[41,[7]]],1],[18,[[23,[7]]]],[19,[[23,[7]]]],[[12,42,[35,[[36,[42]]]]],43],[[12,[35,[33]],[35,[[36,[[35,[33]]]]]]],[[44,[33]]]],[[12,42,43,45]],[[12,[35,[33]],[44,[33]],45]],[[1,2]],[[1,9]],[[1,7]],[[1,[41,[7]]]],[[1,[24,[18]]]],[[1,7]],[[1,[24,[18]]],1],[19,18],[1,7],[19,7],0,[12,21],[[8,21],8],[[12,39],[[32,[39]]]],[3,[[37,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],43],[[12,[24,[1]]],[[14,[[25,[19]],16]]]],[[12,[24,[1]]],[[14,[26,16]]]],[[12,[24,[1]],27],[[14,[16]]]],[[12,[24,[1]]],[[14,[28,16]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[46,[[14,[3,10]]]],[6,[[14,[3,10]]]],[5,[[14,[3,10]]]],[7,[[14,[3,10]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[12,42,[35,[[36,[42]]]]],[[14,[43,16]]]],[[12,[35,[33]],[35,[[36,[[35,[33]]]]]]],[[14,[[44,[33]],16]]]],[[12,42,43,45],[[14,[16]]]],[[12,[35,[33]],[44,[33]],45],[[14,[16]]]],[[12,39],[[14,[[32,[39]],16]]]],[[12,39,47,[35,[[36,[[35,[33]]]]]]],[[14,[40]]]],[[12,39,47,45],[[14,[40]]]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],16],[20,16],[20,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,4],[49,5],[49,6],[49,7],[50,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[51,51],[52,52],[49,49],[50,50],[[]],[[]],[[]],[[]],[[]],[[49,49],22],[[],49],[[49,49],9],[[50,50],9],[[],9],[[],9],[[51,[35,[33]],18],52],[[27,29],30],[[[53,[31]],29],30],[[[54,[31]],29],30],[[[55,[31,31]],29],30],[[51,29],30],[[52,29],30],[[49,29],30],[[50,29],30],[[50,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,49],[[]],[[[37,[33]]],[[14,[49,50]]]],[[[37,[33]]],49],[5,49],[27,[[25,[19]]]],[[49,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[25,[7]]]],[49,9],[49,9],[49,9],[49,9],[[],20],[49,7],[[49,7],3],[[],7],[[],7],[[],7],[7,49],[7,[[14,[49,50]]]],[7,49],[[[53,[56]]],[[25,[19]]]],[[[54,[56]]],[[25,[19]]]],[[[55,[56,39]]],[[25,[[57,[19]]]]]],[[2,49,33],49],[49,7],[[49,49],[[25,[22]]]],[3,7],[[],7],[[],[[25,[51]]]],[[],27],[2,[[14,[49,16]]]],[49,[[37,[33]]]],[[]],[[]],[[]],[[]],[[]],[[],43],[1,[[14,[[25,[19]],16]]]],[[34,1],[[14,[[53,[34]],16]]]],[[1,27],[[14,[16]]]],[[34,1],[[14,[[54,[34]],16]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[5,[[14,[49,50]]]],[[],14],[7,[[14,[49,50]]]],[46,[[14,[49,50]]]],[6,[[14,[49,50]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[34,42,[35,[[36,[42]]]]],[[14,[43,16]]]],[[34,[35,[33]],[35,[[36,[[35,[33]]]]]]],[[14,[[44,[33]],16]]]],[[34,42,43,45],[[14,[16]]]],[[34,[35,[33]],[44,[33]],45],[[14,[16]]]],[[34,39],[[14,[[55,[34,39]],16]]]],[[34,39,47,[35,[[36,[[35,[33]]]]]]],57],[[34,39,47,45],57],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],0,0,[[58,9],58],[[]],[[]],[[]],[[]],[[58,11],[[14,[59,13]]]],[[58,60],[[14,[59,13]]]],[[],58],[[58,9],58],[59,59],[58,58],[[]],[[]],[[],58],[[59,29],30],[[58,29],30],[[]],[[]],[[]],[[]],[[59,49],9],[[59,49],9],[[59,49],9],[[59,49],9],[59,20],[[58,20],58],[[59,49],7],[[59,49,7],3],[59,7],[59,7],[59,7],[11,[[14,[59,13]]]],[[],58],[[59,2,49,33],49],[[59,3],7],[59,7],[59,[[25,[51]]]],[[58,9],58],[[58,21],58],[[59,2],[[14,[49,16]]]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],48],[[],48],0,0,0,0,[[61,9],61],[[]],[[]],[[]],[[]],[[61,11],[[14,[62,13]]]],[[61,60],[[14,[62,13]]]],[[],61],[[61,9],61],[62,62],[61,61],[[]],[[]],[[],61],[[61,7],61],[[62,29],30],[[61,29],30],[[]],[[]],[[]],[[]],[[62,49],9],[[62,49],9],[[62,49],9],[[62,49],9],[62,20],[[61,20],61],[[62,49],7],[[62,49,7],3],[62,7],[62,7],[62,7],[11,[[14,[62,13]]]],[[],61],[[62,2,49,33],49],[[62,3],7],[62,7],[62,[[25,[51]]]],[[61,9],61],[[62,2],[[14,[49,16]]]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],48],[[],48],0,0,[[63,9],63],[[]],[[]],[[]],[[]],[[63,11],[[14,[60,13]]]],[[],63],[60,60],[63,63],[[]],[[]],[[],63],[[63,7],63],[[60,29],30],[[63,29],30],[[]],[[]],[[]],[[]],[[60,49],9],[[60,49],9],[[60,49],9],[[60,49],9],[60,20],[[63,20],63],[[60,49],7],[[60,49,7],3],[60,7],[60,7],[60,7],[11,[[14,[60,13]]]],[[],63],[[60,2,49,33],49],[[60,3],7],[60,7],[60,[[25,[51]]]],[[63,9],63],[[60,2],[[14,[49,16]]]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],48],[[],48],0,0,0,0,0,0,0,[[64,[36,[[35,[33]]]]],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,[[25,[65]]]],[66,64],[[],64],[67,67],[66,66],[64,64],[65,65],[[]],[[]],[[]],[[]],[[],66],[[],67],[[],66],[[],64],[[67,67],9],[[],9],[[64,11],64],[[65,[36,[[35,[33]]]]],[[25,[19]]]],[[65,[36,[[35,[33]]]],18],[[25,[19]]]],[[65,[0,[34,[36,[[35,[33]]]]]]],68],[[67,29],30],[[66,29],30],[[64,29],30],[[65,29],30],[[68,29],30],[[]],[[]],[[]],[[]],[[]],[[66,9],66],[[]],[[]],[[]],[[]],[[]],[[]],[64,7],[[66,67],66],[65,67],[65,7],[64,7],[65,7],[[],66],[[],64],[11,[[25,[65]]]],[68,[[25,[19]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],48],[[],48],[[],48],[[],48],[[],48]],"c":[],"p":[[3,"Input"],[4,"Anchored"],[3,"PatternID"],[15,"i32"],[15,"u32"],[15,"u64"],[15,"usize"],[3,"AhoCorasickBuilder"],[15,"bool"],[3,"PatternIDError"],[8,"IntoIterator"],[3,"AhoCorasick"],[3,"BuildError"],[4,"Result"],[4,"AhoCorasickKind"],[3,"MatchError"],[4,"MatchErrorKind"],[3,"Span"],[3,"Match"],[4,"MatchKind"],[4,"StartKind"],[4,"Ordering"],[3,"Range"],[8,"Into"],[4,"Option"],[3,"FindIter"],[3,"OverlappingState"],[3,"FindOverlappingIter"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"StreamFindIter"],[15,"u8"],[8,"Sized"],[15,"slice"],[8,"AsRef"],[15,"array"],[8,"Hasher"],[8,"Read"],[3,"Error"],[8,"RangeBounds"],[15,"str"],[3,"String"],[3,"Vec"],[8,"FnMut"],[15,"u16"],[8,"Write"],[3,"TypeId"],[3,"StateID"],[3,"StateIDError"],[3,"Prefilter"],[4,"Candidate"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[8,"Automaton"],[6,"Result"],[3,"Builder"],[3,"DFA"],[3,"NFA"],[3,"Builder"],[3,"NFA"],[3,"Builder"],[3,"Builder"],[3,"Searcher"],[3,"Config"],[4,"MatchKind"],[3,"FindIter"],[13,"UnsupportedStream"],[13,"UnsupportedOverlapping"]]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArrayString","ArrayVec","CapacityError","Drain","IntoIter","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","drain","drop","drop","drop","element","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_string","from_iter","from_str","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","to_owned","to_owned","to_owned","to_owned","to_string","to_string","truncate","truncate","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write","write_char","write_str","zero_filled"],"q":[[0,"arrayvec"]],"d":["A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","","","","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","","","","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …"],"i":[0,0,0,0,0,1,1,1,3,1,1,3,1,3,1,1,7,12,3,3,8,1,1,7,12,3,3,8,1,3,1,3,1,7,3,8,1,3,1,7,3,8,1,3,8,1,3,1,3,1,3,1,1,7,12,8,1,1,3,3,8,1,3,8,1,1,1,7,3,3,8,8,1,1,7,12,3,3,8,3,1,3,1,3,3,1,3,3,1,3,1,1,7,12,3,8,1,1,1,1,1,7,12,1,3,1,3,1,3,3,1,3,1,3,3,1,3,8,1,3,7,12,7,12,1,3,3,8,1,3,1,1,3,3,1,1,3,1,3,1,1,3,8,7,12,1,1,1,1,7,3,8,3,8,1,3,1,1,1,7,12,3,3,3,8,1,1,7,12,3,8,1,3,3,1,7,12,3,8,1,3,3,3],"f":[0,0,0,0,0,[1,2],[1],[1,2],[3,4],[1],[1,2],[3,4],[1,2],[3,4],[1,2],[[]],[[]],[[]],[[]],[3,4],[[]],[[]],[1,2],[[]],[[]],[3,4],[[]],[[]],[1,5],[3,5],[1],[3],[[[1,[6]]],[[1,[6]]]],[[[7,[6]]],[[7,[6]]]],[3,3],[[[8,[6]]],[[8,[6]]]],[[[1,[6]],[1,[6]]]],[[3,3]],[[]],[[]],[[]],[[]],[[[1,[9]],[1,[9]]],10],[[3,3],10],[[[8,[9]],[8,[9]]],10],[[],1],[[],3],[1],[3,4],[1],[3,4],[[1,[11,[5]]],12],[1],[7],[12],[8],[[[1,[13]],[2,[13]]],14],[[[1,[13]],[1,[13]]],14],[[3,4],14],[[3,3],14],[[[8,[13]],[8,[13]]],14],[[],14],[[],14],[[],14],[[1,15]],[[[1,[16]]],17],[[[1,[18]],19],20],[[[7,[18]],19],20],[[3,19],20],[[3,19],20],[[8,19],20],[[8,19],20],[[]],[21,1],[[]],[[]],[[]],[4,[[22,[3,[8,[4]]]]]],[[]],[[[21,[16]]],[[22,[3,23]]]],[15,1],[4,[[22,[3]]]],[[[1,[24]],[1,[24]]],14],[[3,4],14],[[3,3],14],[[[1,[24]],[1,[24]]],14],[[3,3],14],[[3,4],14],[[[1,[25]],26]],[[3,26]],[[1,5]],[[]],[[]],[[]],[[]],[[]],[1,[[22,[21,1]]]],[1,21],[1],[1,7],[1],[[]],[[]],[1,14],[3,14],[1,14],[3,14],[[[1,[24]],[1,[24]]],14],[[3,3],14],[[3,4],14],[1,5],[3,5],[[[1,[24]],[1,[24]]],14],[[3,3],14],[[3,4],14],[[],1],[[],3],[[],8],[[],1],[[],3],[7,27],[12,27],[7,27],[12,27],[[[1,[24]],[1,[24]]],[[27,[10]]]],[[3,3],[[27,[10]]]],[[3,4],[[27,[10]]]],[[[8,[24]],[8,[24]]],[[27,[10]]]],[1,27],[3,[[27,[28]]]],[[1,5],27],[1],[[3,28]],[[3,4]],[1],[1,5],[3,5],[[1,5]],[[3,5],28],[[1,29]],[[1,5]],[[3,5]],[8,8],[7],[12],[[1,5],27],[[1,5]],[1,1],[[]],[[]],[[]],[[]],[[],30],[[],30],[[1,5]],[[3,5]],[[[1,[31]],[2,[31]]],[[22,[8]]]],[[],22],[[[2,[6]]],[[22,[[1,[6]]]]]],[[],22],[[],22],[[],22],[4,[[22,[3]]]],[32,[[22,[3]]]],[[],22],[[1,5],[[22,[8]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[1,[[22,[8]]]],[[3,28],[[22,[[8,[28]]]]]],[[3,4],[[22,[[8,[4]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[[1,[16]],[2,[16]]],[[17,[5]]]],[[3,28],20],[[3,4],20],[[],3]],"c":[],"p":[[3,"ArrayVec"],[15,"slice"],[3,"ArrayString"],[15,"str"],[15,"usize"],[8,"Clone"],[3,"IntoIter"],[3,"CapacityError"],[8,"Ord"],[4,"Ordering"],[8,"RangeBounds"],[3,"Drain"],[8,"PartialEq"],[15,"bool"],[8,"IntoIterator"],[15,"u8"],[6,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[4,"Result"],[3,"Utf8Error"],[8,"PartialOrd"],[8,"Hash"],[8,"Hasher"],[4,"Option"],[15,"char"],[8,"FnMut"],[3,"String"],[8,"Copy"],[3,"Arguments"],[3,"TypeId"]]},\
"base64":{"doc":"Configs","t":"RRNNREDNERNNNNRRNRRNLLLLLLLLLLLLLFLFFFLAFFFFLLLLLLLLLLLLLLALLLLLLLLLLLLLADLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BCRYPT","BINHEX","Bcrypt","BinHex","CRYPT","CharacterSet","Config","Crypt","DecodeError","IMAP_MUTF7","ImapMutf7","InvalidByte","InvalidLastSymbol","InvalidLength","STANDARD","STANDARD_NO_PAD","Standard","URL_SAFE","URL_SAFE_NO_PAD","UrlSafe","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode_allow_trailing_bits","decode_config","decode_config_buf","decode_config_slice","description","display","encode","encode_config","encode_config_buf","encode_config_slice","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","pad","read","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","Base64Display","borrow","borrow_mut","fmt","from","into","to_string","try_from","try_into","type_id","with_config","DecoderReader","borrow","borrow_mut","fmt","from","into","new","read","try_from","try_into","type_id","EncoderStringWriter","EncoderWriter","borrow","borrow","borrow_mut","borrow_mut","drop","finish","flush","flush","fmt","from","from","from","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"base64"],[73,"base64::display"],[84,"base64::read"],[95,"base64::write"]],"d":["Bcrypt character set","BinHex character set","The bcrypt character set (uses …","The character set used in BinHex 4.0 files.","As per <code>crypt(3)</code> requirements","Available encoding character sets","Contains configuration parameters for base64 encoding","The <code>crypt(3)</code> character set (uses …","Errors that can occur while decoding.","IMAP modified UTF-7 requirements","The character set used in IMAP-modified UTF-7 (uses <code>+</code> and <code>,</code>…","An invalid byte was found in the input. The offset and …","The last non-padding input symbol’s encoded 6 bits have …","The length of the input is invalid. A typical cause of …","Standard character set with padding.","Standard character set without padding.","The standard character set (uses <code>+</code> and <code>/</code>).","URL-safe character set with padding","URL-safe character set without padding","The URL safe character set (uses <code>-</code> and <code>_</code>).","","","","","","","","","","","","","","Decode from string reference as octets. Returns a Result …","Sets whether to emit errors for nonzero trailing bits.","Decode from string reference as octets. Returns a Result …","Decode from string reference as octets. Writes into the …","Decode the input into the provided output slice.","","Enables base64’d output anywhere you might use a <code>Display</code> …","Encode arbitrary octets as base64. Returns a String. …","Encode arbitrary octets as base64. Returns a String.","Encode arbitrary octets as base64. Writes into the …","Encode arbitrary octets as base64. Writes into the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Config</code>.","Sets whether to pad output with <code>=</code> characters.","Implementations of <code>io::Read</code> to transparently decode base64.","","","","","","","","","","","","","","Implementations of <code>io::Write</code> to transparently handle …","A convenience wrapper for base64’ing bytes into a format …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Create a <code>Base64Display</code> with the provided config.","A <code>Read</code> implementation that decodes base64 data read from …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new decoder that will read from the provided …","Decode input from the wrapped reader.","","","","A <code>Write</code> implementation that base64-encodes data using the …","A <code>Write</code> implementation that base64 encodes data before …","","","","","","Encode all remaining buffered data and write it, including …","Because this is usually treated as OK to call multiple …","","","Returns the argument unchanged.","Create a EncoderStringWriter that will append to the …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Encode all remaining buffered data, including any trailing …","Create a new encoder that will write to the provided …","Create a EncoderStringWriter that will encode into a new …","","","","","","","Encode input and then write to the delegate writer.",""],"i":[0,0,4,4,0,0,0,4,0,0,4,1,1,1,0,0,4,0,0,4,1,4,5,1,4,5,1,1,4,5,1,4,5,0,5,0,0,0,1,0,0,0,0,0,1,1,1,1,4,5,1,4,5,1,4,5,5,5,0,1,4,5,1,1,4,5,1,4,5,1,4,5,0,0,18,18,18,18,18,18,18,18,18,18,0,21,21,21,21,21,21,21,21,21,21,0,0,24,25,24,25,24,24,24,25,24,24,25,25,24,25,25,24,25,24,25,24,25,24,25,24,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[1,1],[4,4],[5,5],[[]],[[]],[[]],[[[8,[[7,[6]]]]],[[10,[[9,[6]],1]]]],[[5,11],5],[[[8,[[7,[6]]]],5],[[10,[[9,[6]],1]]]],[[[8,[[7,[6]]]],5,[9,[6]]],[[10,[1]]]],[[[8,[[7,[6]]]],5,[7,[6]]],[[10,[12,1]]]],[1,13],0,[[[8,[[7,[6]]]]],14],[[[8,[[7,[6]]]],5],14],[[[8,[[7,[6]]]],5,14]],[[[8,[[7,[6]]]],5,[7,[6]]],12],[[1,1],11],[[],11],[[1,15],16],[[1,15],16],[[4,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[4,11],5],[[5,11],5],0,[[]],[[]],[[]],[[],14],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[18,15],[[10,[19]]]],[[]],[[]],[[],14],[[],10],[[],10],[[],17],[[[7,[6]],5],18],0,[[]],[[]],[[[21,[20]],15],16],[[]],[[]],[[20,5],[[21,[20]]]],[[[21,[20]],[7,[6]]],[[22,[12]]]],[[],10],[[],10],[[],17],0,0,[[]],[[]],[[]],[[]],[[[24,[23]]]],[[[24,[23]]],[[22,[23]]]],[[[24,[23]]],22],[[[25,[0]]],22],[[[24,[23]],15],16],[[]],0,[[]],[[]],[[]],0,[[23,5],[[24,[23]]]],[5,[[25,[14]]]],[[],10],[[],10],[[],10],[[],10],[[],17],[[],17],[[[24,[23]],[7,[6]]],[[22,[12]]]],[[[25,[0]],[7,[6]]],[[22,[12]]]]],"c":[],"p":[[4,"DecodeError"],[8,"Error"],[4,"Option"],[4,"CharacterSet"],[3,"Config"],[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Vec"],[4,"Result"],[15,"bool"],[15,"usize"],[15,"str"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Base64Display"],[3,"Error"],[8,"Read"],[3,"DecoderReader"],[6,"Result"],[8,"Write"],[3,"EncoderWriter"],[3,"EncoderStringWriter"]]},\
"bit_set":{"doc":"An implementation of a set using a bit vector as an …","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitSet","Difference","Intersection","Iter","SymmetricDifference","Union","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","default","difference","difference_with","eq","equivalent","extend","fmt","from","from","from","from","from","from","from_bit_vec","from_bytes","from_iter","get_ref","hash","insert","intersect_with","intersection","into","into","into","into","into","into","into_bit_vec","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","new","next","next","next","next","next","partial_cmp","remove","reserve_len","reserve_len_exact","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","symmetric_difference","symmetric_difference_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union_with","with_capacity"],"q":[[0,"bit_set"]],"d":["","","","An iterator for <code>BitSet</code>.","","","","","","","","","","","","","","","Returns the capacity in bits for this bit vector. …","Clears all bits in this set","","","","","","","","","","","","","","","Returns <code>true</code> if this set contains the specified integer.","","Iterator over each usize stored in the <code>self</code> setminus <code>other</code>.","Makes this bit vector the difference with the specified …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>BitSet</code> from the given bit vector.","","","Returns a reference to the underlying bit vector.","","Adds a value to the set. Returns <code>true</code> if the value was not …","Intersects in-place with the specified other bit vector.","Iterator over each usize stored in <code>self</code> intersect <code>other</code>. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this set to return the underlying bit vector.","","","","","","","Returns <code>true</code> if the set has no elements in common with …","Returns whether there are no bits set in this set","Returns <code>true</code> if the set is a subset of another.","Returns <code>true</code> if the set is a superset of another.","Iterator over each usize stored in the <code>BitSet</code>.","Returns the number of set bits in this set.","Creates a new empty <code>BitSet</code>.","","","","","","","Removes a value from the set. Returns <code>true</code> if the value was","Reserves capacity for the given <code>BitSet</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>BitSet</code> to …","Truncates the underlying vector to the least length …","","","","","","Iterator over each usize stored in the symmetric …","Makes this bit vector the symmetric difference with the …","","","","","","","","","","","","","","","","","","","","","","","","","Iterator over each usize stored in <code>self</code> union <code>other</code>. See …","Unions in-place with the specified other bit vector.","Creates a new <code>BitSet</code> with initially no contents, able to …"],"i":[0,0,0,0,0,0,2,5,6,7,8,9,2,5,6,7,8,9,2,2,2,5,6,7,8,9,2,2,5,6,7,8,9,2,2,2,2,2,2,2,2,2,2,5,6,7,8,9,2,2,2,2,2,2,2,2,2,5,6,7,8,9,2,2,5,6,7,8,9,2,2,2,2,2,2,2,5,6,7,8,9,2,2,2,2,2,5,6,7,8,9,2,2,2,5,6,7,8,9,2,5,6,7,8,9,2,5,6,7,8,9,2,5,6,7,8,9,2,2,2],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[5,[4]]],[[5,[4]]]],[[[6,[4]]],[[6,[4]]]],[[[7,[4]]],[[7,[4]]]],[[[8,[4]]],[[8,[4]]]],[[[9,[4]]],[[9,[4]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],10],[[[2,[1]],3],11],[[],[[2,[1]]]],[[[2,[1]],[2,[1]]],[[8,[1]]]],[[[2,[1]],[2,[1]]]],[[[2,[1]],[2,[1]]],11],[[],11],[[[2,[1]],12]],[[[2,[1]],13],14],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[2,[16]]]],[[[18,[17]]],[[2,[16]]]],[12,[[2,[1]]]],[[[2,[1]]],[[15,[1]]]],[[[2,[1]],19]],[[[2,[1]],3],11],[[[2,[1]],[2,[1]]]],[[[2,[1]],[2,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[15,[1]]]],[[[2,[1]]],[[5,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],11],[[[2,[1]]],11],[[[2,[1]],[2,[1]]],11],[[[2,[1]],[2,[1]]],11],[[[2,[1]]],[[5,[1]]]],[[[2,[1]]],3],[[],[[2,[16]]]],[[[5,[1]]],[[20,[3]]]],[[[6,[1]]],[[20,[3]]]],[[[7,[1]]],[[20,[3]]]],[[[8,[1]]],[[20,[3]]]],[[[9,[1]]],[[20,[3]]]],[[[2,[1]],[2,[1]]],[[20,[10]]]],[[[2,[1]],3],11],[[[2,[1]],3]],[[[2,[1]],3]],[[[2,[1]]]],[[[5,[1]]]],[[[6,[1]]]],[[[7,[1]]]],[[[8,[1]]]],[[[9,[1]]]],[[[2,[1]],[2,[1]]],[[9,[1]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[[2,[1]],[2,[1]]],[[6,[1]]]],[[[2,[1]],[2,[1]]]],[3,[[2,[16]]]]],"c":[],"p":[[8,"BitBlock"],[3,"BitSet"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"BitVec"],[15,"u32"],[15,"u8"],[15,"slice"],[8,"Hasher"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"bit_vec":{"doc":"Collections implemented with bit vectors.","t":"IDDDDLLLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLK","n":["BitBlock","BitVec","Blocks","IntoIter","Iter","all","and","any","append","bits","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","capacity","clear","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","cmp","count_ones","default","difference","eq","eq_vec","equivalent","extend","fmt","from","from","from","from","from_byte","from_bytes","from_elem","from_fn","from_iter","get","grow","hash","index","intersect","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","len","nand","negate","new","next","next","next","next_back","next_back","next_back","none","nor","one","or","partial_cmp","pop","push","reserve","reserve_exact","set","set_all","set_len","shrink_to_fit","size_hint","size_hint","split_off","storage","storage_mut","to_bytes","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","with_capacity","xnor","xor","zero"],"q":[[0,"bit_vec"]],"d":["Abstracts over a pile of bits (basically unsigned …","The bitvector type.","An iterator over the blocks of a <code>BitVec</code>.","","An iterator for <code>BitVec</code>.","Returns <code>true</code> if all bits are 1.","Calculates the bitwise <code>and</code> of two bitvectors.","Returns <code>true</code> if any bit is 1.","Moves all bits from <code>other</code> into <code>Self</code>, leaving <code>other</code> empty.","How many bits it has","Iterator over the underlying blocks of data","","","","","","","","","How many bytes it has","Returns the capacity in bits for this bit vector. …","Clears all bits in this vector.","","","","","","","","","Count the number of 1’s in the bitwise repr","","Calculates the difference between two bitvectors.","","Compares a <code>BitVec</code> to a slice of <code>bool</code>s. Both the <code>BitVec</code> and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a byte into this type (lowest-order bits set)","Transforms a byte-vector into a <code>BitVec</code>. Each byte becomes …","Creates a <code>BitVec</code> that holds <code>nbits</code> elements, setting each …","Creates a <code>BitVec</code> of the specified length where the value …","","Retrieves the value at index <code>i</code>, or <code>None</code> if the index is …","Grows the <code>BitVec</code> in-place, adding <code>n</code> copies of <code>value</code> to the …","","","Calculates the intersection of two bitvectors. This acts …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if there are no bits in this vector","Returns an iterator over the elements of the vector in …","Returns the total number of bits in this vector","Calculates the nand of two bitvectors.","Flips all bits.","Creates an empty <code>BitVec</code>.","","","","","","","Returns <code>true</code> if all bits are 0.","Calculates the nor of two bitvectors.","Get <code>1</code>","Calculates the bitwise <code>or</code> of two bitvectors.","","Removes the last bit from the BitVec, and returns it. …","Pushes a <code>bool</code> onto the end.","Reserves capacity for at least <code>additional</code> more bits to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Sets the value of a bit at an index <code>i</code>.","Sets all bits to 1.","Sets the number of bits that this BitVec considers …","Shrinks the capacity of the underlying storage as much as …","","","Splits the <code>BitVec</code> into two at the given bit, retaining the …","Exposes the raw block storage of this BitVec","Exposes the raw block storage of this BitVec","Organises the bits into bytes, such that the first bit in …","","","","Shortens a <code>BitVec</code>, dropping excess elements.","","","","","","","","","","","","","Calculates the union of two bitvectors. This acts like the …","Constructs a new, empty <code>BitVec</code> with the specified capacity.","Calculates the xnor of two bitvectors.","Calculates the xor of two bitvectors.","Get <code>0</code>"],"i":[0,0,0,0,0,2,2,2,2,1,2,2,18,7,5,2,18,7,5,1,2,2,2,7,5,2,2,7,5,2,1,2,2,2,2,2,2,2,2,18,7,5,1,2,2,2,2,2,2,2,2,2,2,18,7,5,2,2,18,7,5,2,2,2,2,2,2,18,7,5,18,7,5,2,2,1,2,2,2,2,2,2,2,2,2,2,7,5,2,2,2,2,2,7,5,2,2,18,7,5,2,18,7,5,2,18,7,5,2,2,2,2,1],"f":[0,0,0,0,0,[[[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[2,[1]]]],[[],4],[[[2,[1]]],[[5,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[[2,[1]]],4],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[7,[6]]],[[7,[6]]]],[[[5,[6]]],[[5,[6]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[]],[[[2,[1]],[2,[1]]],8],[[],4],[[],[[2,[1]]]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[9,[3]]],3],[[],3],[[[2,[1]],10]],[[[2,[1]],11],12],[[]],[[]],[[]],[[]],[13],[[[9,[13]]],[[2,[14]]]],[[4,3],[[2,[14]]]],[[4,15],[[2,[14]]]],[10,[[2,[1]]]],[[[2,[1]],4],[[16,[3]]]],[[[2,[1]],4,3]],[[[2,[1]],17]],[[[2,[1]],4],3],[[[2,[1]],[2,[1]]],3],[[]],[[]],[[]],[[]],[[[2,[1]]],[[7,[1]]]],[[[2,[1]]],[[18,[1]]]],[[]],[[]],[[]],[[[2,[1]]],3],[[[2,[1]]],[[7,[1]]]],[[[2,[1]]],4],[[[2,[1]],[2,[1]]],3],[[[2,[1]]]],[[],[[2,[14]]]],[[[18,[1]]],[[16,[3]]]],[[[7,[1]]],[[16,[3]]]],[[[5,[1]]],[[16,[1]]]],[[[18,[1]]],[[16,[3]]]],[[[7,[1]]],[[16,[3]]]],[[[5,[1]]],[[16,[1]]]],[[[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],[[16,[8]]]],[[[2,[1]]],[[16,[3]]]],[[[2,[1]],3]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4,3]],[[[2,[1]]]],[[[2,[1]],4]],[[[2,[1]]]],[[[7,[1]]]],[[[5,[1]]]],[[[2,[1]],4],[[2,[1]]]],[[[2,[1]]],[[9,[1]]]],[[[2,[1]]],[[19,[1]]]],[[[2,[1]]],[[19,[13]]]],[[]],[[]],[[]],[[[2,[1]],4]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[[2,[1]],[2,[1]]],3],[4,[[2,[14]]]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],[2,[1]]],3],[[]]],"c":[51,108],"p":[[8,"BitBlock"],[3,"BitVec"],[15,"bool"],[15,"usize"],[3,"Blocks"],[8,"Clone"],[3,"Iter"],[4,"Ordering"],[15,"slice"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"u32"],[8,"FnMut"],[4,"Option"],[8,"Hasher"],[3,"IntoIter"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKLFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_string","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","","Write a flags value as text.","","","","Write the value as hex."],"i":[18,0,0,10,18,10,0,0,10,10,0,10,5,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,10,10,10,5,5,0,10,10,10,10,5,5,0,10,10,10,10,10,10,10,10,5,5,5,10,10,5,0,0,6,7,6,7,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,0,0,0,11,11,11,11,11,11,0,11,11,11,19,11,0,11,11,11,20],"f":[0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[4,3],[4,3],[[1,1]],[[1,1]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[],2],[[],2],[[],2],[[],2],[5,2],[5,2],0,[[],6],[[],6],[[],7],[[],7],[5,4],[4,5],0,[[1,1]],[[1,1]],[[1,1,2]],[[1,1,2]],[[]],[[]],[[1,1]],[[1,1]],[[],8],[[],8],[[],9],[[]],[[]],[5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[10]]],3],[[[7,[10]]],3],[7],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[],11],[[11,12],13],[[11,12],13],[[]],[4,[[8,[10,11]]]],[[]],[14,11],[14,11],[4,[[8,[1,11]]]],[[],15],[[10,16],[[8,[17]]]],[[],8],[[],8],[[],9],[16,13]],"c":[],"p":[[8,"Sized"],[15,"bool"],[4,"Option"],[15,"str"],[3,"Flag"],[3,"Iter"],[3,"IterNames"],[4,"Result"],[3,"TypeId"],[8,"Flags"],[3,"ParseError"],[3,"Formatter"],[6,"Result"],[8,"Display"],[3,"String"],[8,"Write"],[3,"Error"],[8,"Bits"],[8,"ParseHex"],[8,"WriteHex"]]},\
"block":{"doc":"A Rust interface for Objective-C blocks.","t":"DIDIDQLLLLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLL","n":["Block","BlockArguments","ConcreteBlock","IntoConcreteBlock","RcBlock","Ret","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call_block","clone","clone","clone_into","clone_into","copy","copy","deref","deref","deref_mut","drop","from","from","from","into","into","into","into_concrete_block","new","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"block"]],"d":["An Objective-C block that takes arguments of <code>A</code> when called …","Types that may be used as the arguments to an Objective-C …","An Objective-C block whose size is known at compile time …","Types that may be converted into a <code>ConcreteBlock</code>.","A reference-counted Objective-C block.","The return type of the resulting <code>ConcreteBlock</code>.","","","","","","","Call self with the given arguments.","Calls the given <code>Block</code> with self as the arguments.","","","","","Constructs an <code>RcBlock</code> by copying the given block.","Copy self onto the heap as an <code>RcBlock</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self to create a <code>ConcreteBlock</code>.","Construct an <code>RcBlock</code> for the given block without copying …","Constructs a <code>ConcreteBlock</code> with the given closure. When …","","","","","","","","","","",""],"i":[0,0,0,0,0,6,2,3,5,2,3,5,2,1,3,5,3,5,3,5,3,5,5,3,2,3,5,2,3,5,6,3,5,3,5,2,3,5,2,3,5,2,3,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],1]],[2],[3,3],[[[5,[4]]],[[5,[4]]]],[[]],[[]],[2,3],[5,3],[3,2],[5,2],[5,2],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[2,3],[[[6,[1]]],[[5,[1,[6,[1]]]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8]],"c":[],"p":[[8,"BlockArguments"],[3,"Block"],[3,"RcBlock"],[8,"Clone"],[3,"ConcreteBlock"],[8,"IntoConcreteBlock"],[4,"Result"],[3,"TypeId"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":"NIYYYCYIYQSSIYNIYEINNIYIYIALLFFFFFFFALLLFLLLFFLLLLLLOOLLLLLLLLLLFFFLLFFFFFLFFLFLLLLLLLLLLLFLLIFFFFFFFLLLLFFFFFFFFFFFLLLLFFFQIENNLLFFFFFLLLLLLLFFLLKFLLFFFFFLFFLFL","n":["AlignmentMismatch","AnyBitPattern","AnyBitPattern","ByteEq","ByteHash","CheckedBitPattern","CheckedBitPattern","Contiguous","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","NoUninit","OutputSliceWouldHaveSlop","Pod","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","TransparentWrapper","Zeroable","Zeroable","ZeroableInOption","allocation","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","clone_into","eq","fill_zeroes","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","write_zeroes","zeroed","zeroed","TransparentWrapperAlloc","cast_arc","cast_box","cast_rc","cast_slice_arc","cast_slice_box","cast_slice_rc","cast_vec","peel_arc","peel_box","peel_rc","peel_vec","pod_collect_to_vec","try_cast_arc","try_cast_box","try_cast_rc","try_cast_slice_arc","try_cast_slice_box","try_cast_slice_rc","try_cast_vec","try_zeroed_box","try_zeroed_slice_box","try_zeroed_vec","wrap_arc","wrap_box","wrap_rc","wrap_vec","zeroed_box","zeroed_slice_box","zeroed_vec","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","clone_into","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","to_owned","to_string","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":[[0,"bytemuck"],[93,"bytemuck::allocation"],[123,"bytemuck::checked"]],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","Derive the <code>AnyBitPattern</code> trait for a struct","Derive the <code>PartialEq</code> and <code>Eq</code> trait for a type","Derive the <code>Hash</code> trait for a type","","Derive the <code>CheckedBitPattern</code> trait for a struct or enum.","A trait indicating that:","Derive the <code>Contiguous</code> trait for an enum","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","Derive the <code>NoUninit</code> trait for a struct or enum","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","Derive the <code>Pod</code> trait for a struct","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Derive the <code>TransparentWrapper</code> trait for a struct","Trait for types that can be safely created with <code>zeroed</code>.","Derive the <code>Zeroable</code> trait for a struct","Trait for types which are Zeroable when wrapped in Option.","Stuff to boost things in the <code>alloc</code> crate.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","Fill all bytes of <code>slice</code> with zeroes (see <code>Zeroable</code>).","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Fill all bytes of <code>target</code> with zeroes (see <code>Zeroable</code>).","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","An extension trait for <code>TransparentWrapper</code> and alloc types.","As <code>try_cast_arc</code>, but unwraps for you.","As <code>try_cast_box</code>, but unwraps for you.","As <code>try_cast_rc</code>, but unwraps for you.","As <code>try_cast_slice_arc</code>, but unwraps for you.","As <code>try_cast_slice_box</code>, but unwraps for you.","As <code>try_cast_slice_rc</code>, but unwraps for you.","As <code>try_cast_vec</code>, but unwraps for you.","Convert an <code>Arc</code> to the wrapper type into an <code>Arc</code> to the …","Convert a box to the wrapper type into a box to the inner …","Convert an <code>Rc</code> to the wrapper type into an <code>Rc</code> to the inner …","Convert a vec of the wrapper type into a vec of the inner …","This “collects” a slice of pod data into a vec of a …","Attempts to cast the content type of a <code>Arc</code>.","Attempts to cast the content type of a <code>Box</code>.","Attempts to cast the content type of a <code>Rc</code>.","Attempts to cast the content type of a <code>Arc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Box&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Rc&lt;[T]&gt;</code>.","Attempts to cast the content type of a <code>Vec</code>.","Allocates a <code>Box&lt;T&gt;</code> with all of the contents being zeroed …","Allocates a <code>Box&lt;[T]&gt;</code> with all contents being zeroed out.","Allocates a <code>Vec&lt;T&gt;</code> of length and capacity exactly equal to …","Convert an <code>Arc</code> to the inner type into an <code>Arc</code> to the …","Convert a box to the inner type into a box to the wrapper …","Convert an <code>Rc</code> to the inner type into an <code>Rc</code> to the wrapper …","Convert a vec of the inner type into a vec of the wrapper …","As <code>try_zeroed_box</code>, but unwraps for you.","As <code>try_zeroed_slice_box</code>, but unwraps for you.","As <code>try_zeroed_vec</code> but unwraps for you","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","","","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[5,0,0,0,0,0,0,0,0,23,23,23,0,0,5,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,0,5,5,5,0,0,23,23,5,5,23,23,0,0,24,24,24,24,24,24,24,24,24,24,0,0,0,5,5,0,0,0,0,0,5,0,0,5,0,5,24,24,24,24,24,24,24,24,24,24,0,7,7,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,0,21,0,0,22,22,22,22,0,0,0,0,0,22,22,22,22,22,22,22,0,0,22,22,21,0,22,22,0,0,0,0,0,22,0,0,22,0,22],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[[0,[1,4]]],[[3,[2]]]],[1,4],[[[0,[1,4]]],[[0,[1,4]]]],[1,4],[[[3,[1]]],[[3,[4]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,4]]]]]],0,[5,5],[[]],[[5,5],6],[[[3,[7]]]],[[5,8],9],[[5,8],9],[[]],[[[3,[2]]],4],[[[3,[2]]],[[0,[1,4]]]],[[],10],[[],10],[[5,11]],[[]],[[]],[[]],0,0,[12,12],[12,12],[[]],[[]],[[]],[[]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[1]]]],[[[3,[[0,[1,4]]]]]],[[[3,[2]]],4],[[]],[[],13],[1,[[14,[4,5]]]],[[[0,[1,4]]],[[14,[[0,[1,4]],5]]]],[1,[[14,[4,5]]]],[[[3,[1]]],[[14,[[3,[4]],5]]]],[[[3,[[0,[1,4]]]]],[[14,[[3,[[0,[1,4]]]],5]]]],[[],14],[[[3,[2]]],[[14,[4,5]]]],[[[3,[2]]],[[14,[[0,[1,4]],5]]]],[[],14],[[[3,[2]]],[[14,[4,5]]]],[[],15],[12,12],[12,12],[[]],[[]],[[]],[[]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[[[3,[12]]],[[3,[12]]]],[7],[[]],[[]],0,[[[16,[[0,[1,4]]]]],[[16,[[0,[1,4]]]]]],[[[17,[1]]],[[17,[4]]]],[[[18,[[0,[1,4]]]]],[[18,[[0,[1,4]]]]]],[[[16,[[3,[[0,[1,4]]]]]]],[[16,[[3,[[0,[1,4]]]]]]]],[[[17,[[3,[1]]]]],[[17,[[3,[4]]]]]],[[[18,[[3,[[0,[1,4]]]]]]],[[18,[[3,[[0,[1,4]]]]]]]],[[[19,[1]]],[[19,[4]]]],[16,16],[17,17],[18,18],[[[19,[12]]],[[19,[12]]]],[[[3,[1]]],[[19,[[0,[1,4]]]]]],[[[16,[[0,[1,4]]]]],[[14,[[16,[[0,[1,4]]]]]]]],[[[17,[1]]],[[14,[[17,[4]]]]]],[[[18,[[0,[1,4]]]]],[[14,[[18,[[0,[1,4]]]]]]]],[[[16,[[3,[[0,[1,4]]]]]]],[[14,[[16,[[3,[[0,[1,4]]]]]]]]]],[[[17,[[3,[1]]]]],[[14,[[17,[[3,[4]]]]]]]],[[[18,[[3,[[0,[1,4]]]]]]],[[14,[[18,[[3,[[0,[1,4]]]]]]]]]],[[[19,[1]]],[[14,[[19,[4]]]]]],[[],[[14,[[17,[7]]]]]],[20,[[14,[[17,[[3,[7]]]]]]]],[20,[[14,[[19,[7]]]]]],[16,16],[17,17],[18,18],[[[19,[12]]],[[19,[12]]]],[[],[[17,[7]]]],[20,[[17,[[3,[7]]]]]],[20,[[19,[7]]]],0,0,0,0,0,[[]],[[]],[1,21],[[[0,[1,4]]],[[0,[1,21]]]],[1,21],[[[3,[1]]],[[3,[21]]]],[[[3,[[0,[1,4]]]]],[[3,[[0,[1,21]]]]]],[22,22],[[]],[[22,22],6],[[22,8],9],[[22,8],9],[5,22],[[]],[[[3,[2]]],21],[[[3,[2]]],[[0,[1,21]]]],[[22,11]],[[]],[[],6],[[[3,[2]]],21],[[]],[[],13],[1,[[14,[21,22]]]],[[[0,[1,4]]],[[14,[[0,[21,1]],22]]]],[1,[[14,[21,22]]]],[[[3,[1]]],[[14,[[3,[21]],22]]]],[[[3,[[0,[1,4]]]]],[[14,[[3,[[0,[21,1]]]],22]]]],[[],14],[[[3,[2]]],[[14,[21,22]]]],[[[3,[2]]],[[14,[[0,[21,1]],22]]]],[[],14],[[[3,[2]]],[[14,[21,22]]]],[[],15]],"c":[],"p":[[8,"NoUninit"],[15,"u8"],[15,"slice"],[8,"AnyBitPattern"],[4,"PodCastError"],[15,"bool"],[8,"Zeroable"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[8,"Sized"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Arc"],[3,"Box"],[3,"Rc"],[3,"Vec"],[15,"usize"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"TransparentWrapperAlloc"]]},\
"bytemuck_derive":{"doc":"Derive macros for bytemuck traits.","t":"YYYYYYYYY","n":["AnyBitPattern","ByteEq","ByteHash","CheckedBitPattern","Contiguous","NoUninit","Pod","TransparentWrapper","Zeroable"],"q":[[0,"bytemuck_derive"]],"d":["Derive the <code>AnyBitPattern</code> trait for a struct","Derive the <code>PartialEq</code> and <code>Eq</code> trait for a type","Derive the <code>Hash</code> trait for a type","Derive the <code>CheckedBitPattern</code> trait for a struct or enum.","Derive the <code>Contiguous</code> trait for an enum","Derive the <code>NoUninit</code> trait for a struct or enum","Derive the <code>Pod</code> trait for a struct","Derive the <code>TransparentWrapper</code> trait for a struct","Derive the <code>Zeroable</code> trait for a struct"],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":"GEIGEGGIILLLLLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLKLLLLLLLKLLLLKLLLLLLLKLLLLKLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLKLLLLKLLLLLKLLLLKLLLLLKLLLLKLLLLKLLLLKLLLL","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,26,27,27,27,27,27,27,26,27,27,26,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,26,27,27,1,2,26,27,27,1,2,27,27,26,27,27,1,2,26,27,27,1,2,1,2,1,2,1,2,1,2,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,26,28,28,26,28,28,26,28,28,26,26,28,28,1,2,26,1,2,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,26,28,28,1,2,26,1,2,28,28,26,28,28,1,2,26,28,28,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[],4],[[],4],[[1,5],6],[[2,5],6],[[]],[[]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[7]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[9]]]],[[[8,[10]]]],[[[8,[11]]]],[[[8,[12]]]],[[[8,[13]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[14]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[15]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[16]]]],[[[8,[17]]]],[[[8,[17]]]],[[[8,[17]]]],[[1,18]],[[2,18]],[[]],[[]],[[1,1],[[19,[3]]]],[[2,2],[[19,[3]]]],[[],[[20,[7]]]],[[],[[20,[7]]]],[[[8,[21]]],7],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[[8,[7]]],20],[[[8,[7]]],20],[[[8,[21]],[8,[7]]]],[[],[[20,[9]]]],[[],[[20,[9]]]],[[[8,[21]]],9],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[[8,[9]]],20],[[[8,[9]]],20],[[[8,[21]],[8,[9]]]],[[],[[20,[10]]]],[[],[[20,[10]]]],[[[8,[21]]],10],[[[8,[10]]],20],[[[8,[10]]],20],[[[8,[21]],[8,[10]]]],[[],[[20,[11]]]],[[],[[20,[11]]]],[[[8,[21]]],11],[[[8,[11]]],20],[[[8,[11]]],20],[[[8,[21]],[8,[11]]]],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[],[[20,[12]]]],[[],[[20,[12]]]],[[[8,[21]]],12],[[[8,[12]]],20],[[[8,[12]]],20],[[[8,[21]],[8,[12]]]],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[],[[20,[13]]]],[[],[[20,[13]]]],[[[8,[21]]],13],[[[8,[13]]],20],[[[8,[13]]],20],[[[8,[21]],[8,[13]]]],[[],[[20,[22]]]],[[],[[20,[22]]]],[[[8,[22]]],20],[[[8,[22]]],20],[23,[[20,[13]]]],[23,[[20,[13]]]],[[[8,[21]],23],13],[23,[[20,[10]]]],[23,[[20,[10]]]],[[[8,[21]],23],10],[[[8,[21]]],14],[[],[[20,[14]]]],[[],[[20,[14]]]],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]]],[[[8,[14]]],20],[[[8,[14]]],20],[[[8,[21]],[8,[14]]]],[[[8,[21]],[8,[14]]]],[[[8,[21]]],15],[[],[[20,[15]]]],[[],[[20,[15]]]],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]]],[[[8,[15]]],20],[[[8,[15]]],20],[[[8,[21]],[8,[15]]]],[[[8,[21]],[8,[15]]]],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[],[[20,[16]]]],[[],[[20,[16]]]],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]]],[[[8,[16]]],20],[[[8,[16]]],20],[[[8,[21]],[8,[16]]]],[[[8,[21]],[8,[16]]]],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[],[[20,[17]]]],[[],[[20,[17]]]],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]]],[[[8,[17]]],20],[[[8,[17]]],20],[[[8,[21]],[8,[17]]]],[[[8,[21]],[8,[17]]]],[[],[[20,[21]]]],[[],[[20,[21]]]],[[[8,[21]],23],17],[23,[[20,[17]]]],[23,[[20,[17]]]],[[[8,[21]],23],17],[[[8,[21]],23],17],[[[8,[21]],23],14],[23,[[20,[14]]]],[23,[[20,[14]]]],[[[8,[21]],23],14],[[[8,[21]],23],14],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[7,20],[7,20],[[[8,[21]],7]],[[[8,[7]],[8,[21]]]],[9,20],[9,20],[[[8,[21]],9]],[[[8,[9]],[8,[21]]]],[10,20],[10,20],[[[8,[21]],10]],[[[8,[10]],[8,[21]]]],[11,20],[11,20],[[[8,[21]],11]],[[[8,[11]],[8,[21]]]],[12,20],[12,20],[[[8,[21]],12]],[12,20],[12,20],[[[8,[21]],12]],[[[8,[12]],[8,[21]]]],[13,20],[13,20],[[[8,[21]],13]],[13,20],[13,20],[[[8,[21]],13]],[[[8,[13]],[8,[21]]]],[22,20],[22,20],[[[8,[22]],[8,[21]]]],[[13,23],20],[[13,23],20],[[[8,[21]],13,23]],[[10,23],20],[[10,23],20],[[[8,[21]],10,23]],[[[8,[21]],14]],[14,20],[14,20],[[[8,[21]],14]],[[[8,[21]],14]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[14]],[8,[21]]]],[[[8,[21]],15]],[15,20],[15,20],[[[8,[21]],15]],[[[8,[21]],15]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[[[8,[15]],[8,[21]]]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[16,20],[16,20],[[[8,[21]],16]],[[[8,[21]],16]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[[[8,[16]],[8,[21]]]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[17,20],[17,20],[[[8,[21]],17]],[[[8,[21]],17]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[[[8,[17]],[8,[21]]]],[21,20],[21,20],[[[8,[21]],17,23]],[[17,23],20],[[17,23],20],[[[8,[21]],17,23]],[[[8,[21]],17,23]],[[[8,[21]],14,23]],[[14,23],20],[[14,23],20],[[[8,[21]],14,23]],[[[8,[21]],14,23]]],"c":[63,64,65,72,73,74],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[15,"slice"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"Hasher"],[4,"Option"],[6,"Result"],[15,"u8"],[15,"i8"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"codespan_reporting":{"doc":"Diagnostic reporting support for the codespan crate.","t":"AAANDNNDENNNENLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLMLLLMLMMLLLLLLLLLLLLLLLLLLLLLLNEQNINNNNDQDDQLLLLLLLLLLLLLLLFLMLLLLLLLLLLLLLLLLLKLLLMKLLFLKLLLLLKLLLLLLLLLLLLLLLLLLLLMMMMMMMDDDENNNDSLLLLLLLLLLLLMLLLLLLLLLLLLLMFMLLLLLLLLLLLLLLMMMMMMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMCLLLLLLLLLLLLLLLLLLLL","n":["diagnostic","files","term","Bug","Diagnostic","Error","Help","Label","LabelStyle","Note","Primary","Secondary","Severity","Warning","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bug","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","file_id","fmt","fmt","fmt","fmt","from","from","from","from","hash","help","into","into","into","into","labels","message","message","new","new","note","notes","partial_cmp","partial_cmp","primary","range","secondary","severity","style","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warning","with_code","with_labels","with_message","with_message","with_notes","ColumnTooLarge","Error","FileId","FileMissing","Files","IndexTooLarge","InvalidCharBoundary","Io","LineTooLarge","Location","Name","SimpleFile","SimpleFiles","Source","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","column_index","column_number","column_number","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","into","into","into","into","line_index","line_index","line_index","line_number","line_number","line_range","line_range","line_range","line_starts","location","name","name","name","name","new","new","source","source","source","source","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","given","given","given","given","max","max","max","Chars","ColorArg","Config","DisplayStyle","Medium","Rich","Short","Styles","VARIANTS","ascii","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_drawing","chars","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","display_style","emit","end_context_lines","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","header","header_bug","header_error","header_help","header_message","header_note","header_warning","into","into","into","into","into","into","label","line_number","multi_bottom","multi_bottom_left","multi_left","multi_primary_caret_end","multi_primary_caret_start","multi_secondary_caret_end","multi_secondary_caret_start","multi_top","multi_top_left","note_bullet","note_bullet","pointer_left","primary_label_bug","primary_label_error","primary_label_help","primary_label_note","primary_label_warning","secondary_label","single_primary_caret","single_secondary_caret","snippet_start","source_border","source_border_left","source_border_left_break","start_context_lines","styles","tab_width","termcolor","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"codespan_reporting"],[3,"codespan_reporting::diagnostic"],[92,"codespan_reporting::files"],[178,"codespan_reporting::files::Error"],[185,"codespan_reporting::term"]],"d":["Diagnostic data structures.","Source file support for diagnostic reporting.","Terminal back-end for emitting diagnostics.","An unexpected bug.","Represents a diagnostic message that can provide …","An error.","A help message.","A label describing an underlined region of code associated …","","A note.","Labels that describe the primary cause of a diagnostic.","Labels that provide additional context for a diagnostic.","A severity level for diagnostic messages.","A warning.","","","","","","","","","Create a new diagnostic with a severity of <code>Severity::Bug</code>.","","","","","","","","","An optional code that identifies this diagnostic.","","","","","","","","","Create a new diagnostic with a severity of <code>Severity::Error</code>.","The file that we are labelling.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new diagnostic with a severity of <code>Severity::Help</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Source labels that describe the cause of the diagnostic. …","An optional message to provide some additional information …","The main message associated with this diagnostic.","Create a new label.","Create a new diagnostic.","Create a new diagnostic with a severity of <code>Severity::Note</code>.","Notes that are associated with the primary cause of the …","","","Create a new label with a style of <code>LabelStyle::Primary</code>.","The range in bytes we are going to include in the final …","Create a new label with a style of <code>LabelStyle::Secondary</code>.","The overall severity of the diagnostic","The style of the label.","","","","","","","","","","","","","","","","","Create a new diagnostic with a severity of …","Set the error code of the diagnostic.","Add some labels to the diagnostic.","Add a message to the diagnostic.","Set the message of the diagnostic.","Add some notes to the diagnostic.","The file is present and contains the specified line index, …","An enum representing an error that happened while looking …","A unique identifier for files in the file provider. This …","A required file is not in the file database.","A minimal interface for accessing source files when …","The file is present, but does not contain the specified …","The given index is contained in the file, but is not a …","There was a error while doing IO.","The file is present, but does not contain the specified …","A user-facing location in a source file.","The user-facing name of a file, to be displayed in …","A file database that contains a single source file.","A file database that can store multiple source files.","The source code of a file.","Add a file to the database, returning the handle that can …","","","","","","","","","","","","","","","The column index at the given byte index in the source …","The user-facing column number at the given line index and …","The user-facing column number.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the file corresponding to the given id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The index of the line at the given byte index. If the byte …","","","The user-facing line number at the given line index. It is …","The user-facing line number.","The byte range of line in the source of the file.","","","Return the starting byte index of each line in the source …","Convenience method for returning line and column number at …","The user-facing name of a file.","Return the name of the file.","","","Create a new source file.","Create a new files database.","The source code of a file.","","","Return the source of the file.","","","","","","","","","","","","","","","","","","","","","","","","","Characters to use when rendering the diagnostic.","A command line argument that configures the coloring of …","Configures how a diagnostic is rendered.","The display style to use when rendering diagnostics.","Output a condensed diagnostic, with a line number, …","Output a richly formatted diagnostic, with source code …","Output a short diagnostic, with a line number, severity, …","Styles to use when rendering the diagnostic.","Allowed values the argument.","A character set that only uses ASCII characters.","","","","","","","","","","","A character set that uses Unicode box drawing characters.","Characters to use when rendering the diagnostic.","","","","","","","","","","","","","","The display style to use when rendering diagnostics. …","Emit a diagnostic using the given writer, context, config, …","The minimum number of lines to be shown before the line on …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The style used to mark a header at a given severity.","The style to use when rendering bug headers. Defaults to …","The style to use when rendering error headers. Defaults to …","The style to use when rendering help headers. Defaults to …","The style to use when the main diagnostic message. …","The style to use when rendering note headers. Defaults to …","The style to use when rendering warning headers. Defaults …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","The style used to mark a primary or secondary label at a …","The style to use when rendering the line numbers. Defaults …","The character to use when marking the bottom of a …","The character to use for the bottom-left corner of a …","The character to use for the left of a multi-line label. …","The character to use for marking the end of a multi-line …","The character to use for marking the start of a multi-line …","The character to use for marking the end of a multi-line …","The character to use for marking the start of a multi-line …","The character to use for the top of a multi-line label. …","The character to use for the top-left corner of a …","The style to use when rendering the note bullets. Defaults …","The character to use for the note bullet. Defaults to: <code>&#39;=&#39;</code>.","The character to use for the left of a pointer underneath …","The style to use when rendering bug labels. Defaults to …","The style to use when rendering error labels. Defaults to …","The style to use when rendering help labels. Defaults to …","The style to use when rendering note labels. Defaults to …","The style to use when rendering warning labels. Defaults …","The style to use when rendering secondary labels. Defaults …","The character to use for marking a single-line primary …","The character to use for marking a single-line secondary …","The characters to use for the top-left border of the …","The style to use when rendering the source code borders. …","The character to use for the left border of the source. …","The character to use for the left border break of the …","The minimum number of lines to be shown after the line on …","Styles to use when rendering the diagnostic.","Column width of tabs. Defaults to: <code>4</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,2,0,2,2,0,0,2,3,3,0,2,2,3,5,1,2,3,5,1,1,2,3,5,1,2,3,5,1,1,2,3,5,1,2,3,5,1,1,5,2,3,5,1,2,3,5,1,2,1,2,3,5,1,1,5,1,5,1,1,1,2,3,5,5,5,1,5,2,3,5,1,2,3,5,1,2,3,5,1,2,3,5,1,1,1,1,5,1,1,27,0,37,27,0,27,27,27,27,0,37,0,0,37,24,27,25,26,24,27,25,26,24,25,26,24,25,26,24,0,37,25,25,25,27,27,25,26,24,27,27,25,26,24,24,27,25,26,24,37,26,24,37,25,37,26,24,0,37,37,26,26,24,26,24,37,27,26,26,24,25,26,24,27,27,25,26,24,27,25,26,24,27,25,26,24,40,41,42,43,40,41,42,0,0,0,0,33,33,33,0,35,31,32,33,34,31,35,32,33,34,31,35,31,32,32,33,34,31,35,32,33,34,31,35,32,34,31,32,0,32,35,35,32,33,34,31,35,32,33,34,31,35,35,34,34,34,34,34,34,34,32,33,34,31,35,35,34,34,31,31,31,31,31,31,31,31,31,34,31,31,34,34,34,34,34,34,31,31,31,34,31,31,32,32,32,0,32,33,34,31,35,32,33,34,31,35,32,33,34,31,35,32,33,34,31,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[2,2],[3,3],[[[5,[4]]],[[5,[4]]]],[[[1,[4]]],[[1,[4]]]],[[]],[[]],[[]],[[]],0,[[2,2],6],[[3,3],6],[[[5,[7]],[5,[7]]],6],[[[1,[7]],[1,[7]]],6],[[],6],[[],6],[[],6],[[],6],[[],1],0,[[2,8],9],[[3,8],9],[[[5,[10]],8],9],[[[1,[10]],8],9],[[]],[[]],[[]],[[]],[[2,11]],[[],1],[[]],[[]],[[]],[[]],0,0,0,[[3,[14,[[13,[12]]]]],5],[2,1],[[],1],0,[[2,2],[[16,[15]]]],[[3,3],[[16,[15]]]],[[[14,[[13,[12]]]]],5],0,[[[14,[[13,[12]]]]],5],0,0,[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],1],[[1,[14,[19]]],1],[[1,[20,[5]]],1],[[5,[14,[19]]],5],[[1,[14,[19]]],1],[[1,[20,[19]]],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[24,[21,[23,[22]]]],21,[23,[22]]],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[[[26,[4,4]]],[[26,[4,4]]]],[[[24,[4,4]]],[[24,[4,4]]]],[[]],[[]],[[]],[[22,[13,[12]],12],12],[[12,12],[[17,[12,27]]]],0,[[25,25],6],[[],6],[[27,8],9],[[27,8],9],[[25,8],9],[[[26,[10,10]],8],9],[[[24,[10,10]],8],9],[28,27],[[]],[[]],[[]],[[]],[[[24,[21,[23,[22]]]],12],[[17,[[26,[21,[23,[22]]]],27]]]],[[]],[[]],[[]],[[]],[12,[[17,[12,27]]]],[[[26,[[0,[21,4]],[23,[22]]]],12],[[17,[12,27]]]],[[[24,[[0,[21,4]],[23,[22]]]],12,12],[[17,[12,27]]]],[12,[[17,[12,27]]]],0,[12,[[17,[[13,[12]],27]]]],[[[26,[[0,[21,4]],[23,[22]]]],12],[[17,[[13,[12]],27]]]],[[[24,[[0,[21,4]],[23,[22]]]],12,12],[[17,[[13,[12]],27]]]],[22,29],[12,[[17,[25,27]]]],[[],[[17,[27]]]],[[[26,[21,[23,[22]]]]],21],[[[26,[[0,[21,4]],[23,[22]]]]],[[17,[[0,[21,4]],27]]]],[[[24,[[0,[21,4]],[23,[22]]]],12],[[17,[[0,[21,4]],27]]]],[[21,[23,[22]]],[[26,[21,[23,[22]]]]]],[[],[[24,[21,[23,[22]]]]]],[[],[[17,[27]]]],[27,[[16,[30]]]],[[[26,[[0,[21,4]],[23,[22]]]]],[[17,[22,27]]]],[[[26,[21,[23,[22]]]]],[[23,[22]]]],[[[24,[[0,[21,4]],[23,[22]]]],12],[[17,[22,27]]]],[[]],[[]],[[]],[[],19],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],0,[32,32],[33,33],[34,34],[31,31],[35,35],[[]],[[]],[[]],[[]],[[]],[[],32],[[],34],[[],31],0,[[36,32,37,1],[[17,[27]]]],0,[[35,35],6],[[],6],[[32,8],9],[[33,8],9],[[34,8],9],[[31,8],9],[[35,8],9],[[]],[[]],[[]],[[]],[[]],[22,[[17,[35,22]]]],[[34,2],38],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[35,39],[[]],[[34,2,3],38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18]],"c":[],"p":[[3,"Diagnostic"],[4,"Severity"],[4,"LabelStyle"],[8,"Clone"],[3,"Label"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Hasher"],[15,"usize"],[3,"Range"],[8,"Into"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"String"],[3,"Vec"],[8,"Display"],[15,"str"],[8,"AsRef"],[3,"SimpleFiles"],[3,"Location"],[3,"SimpleFile"],[4,"Error"],[3,"Error"],[8,"Iterator"],[8,"Error"],[3,"Chars"],[3,"Config"],[4,"DisplayStyle"],[3,"Styles"],[3,"ColorArg"],[8,"WriteColor"],[8,"Files"],[3,"ColorSpec"],[4,"ColorChoice"],[13,"IndexTooLarge"],[13,"LineTooLarge"],[13,"ColumnTooLarge"],[13,"InvalidCharBoundary"]]},\
"color_quant":{"doc":"Color quantization library","t":"DLLLLLLLLLLLLLL","n":["NeuQuant","borrow","borrow_mut","color_map_rgb","color_map_rgba","from","index_of","init","into","lookup","map_pixel","new","try_from","try_into","type_id"],"q":[[0,"color_quant"]],"d":["","","","Returns the RGBA color map calculated from the sample.","Returns the RGBA color map calculated from the sample.","Returns the argument unchanged.","Finds the best-matching index in the color map.","Initializes the neuronal network and trains it with the …","Calls <code>U::from(self)</code>.","Lookup pixel values for color at <code>idx</code> in the colormap.","Maps the rgba-pixel in-place to the best-matching color in …","Creates a new neuronal network and trains it with the …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,[[3,[2]]]],[1,[[3,[2]]]],[[]],[[1,[4,[2]]],5],[[1,[4,[2]]]],[[]],[[1,5],[[7,[[6,[2]]]]]],[[1,[4,[2]]]],[[8,5,[4,[2]]],1],[[],9],[[],9],[[],10]],"c":[],"p":[[3,"NeuQuant"],[15,"u8"],[3,"Vec"],[15,"slice"],[15,"usize"],[15,"array"],[4,"Option"],[15,"i32"],[4,"Result"],[3,"TypeId"]]},\
"core_foundation":{"doc":"This crate provides wrappers around the underlying …","t":"IAAAAAAAAOAAAOOOAAAAAAAAADFFGFFDFGFFFFGFFFFFFFFFDGGFFFGFFGGGDLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLHLLLMMLLLLLLLLLLLLLLLLLLLMLLDFFFFFGFFDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDFGDGFFGFFFFGFGGGGFEFFFFFGGIGGDFFFDGGNIINDDNGQGIIIMLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKMLLLLLLLLLLLHHHHHHHHMMGLMMMMLLKLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMKLLKLLDFGLLLLLLLLLLLLLLLLHHLLLLLLLLLLDFFFFFFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFFFFFFFFFFFFFFGGFFFGDLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHLLLLLLLLLLLLLDFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFDFFFFFGGDLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLLLLLLLLLDFGFFGFFFGFFFFGDGGFFFGFDDGDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLHHLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLDFFFFGDLLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLLLLLLLLDGDFFFFFFFFFGGDLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLRRLMMLLLLLLLLLLLLLLLLLMLLGGDFFGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFGDFFFFFGGDELLLLLLLLLLLLLLLLLLLLLLLLLLLHHRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLDFFGGGILLLLLLLFFLLLLLLLLLLLRRRRRRLLLLLLLLLLDGFFFFFFFFFFFFFFGDGDFFFFFFFFGGFFFFFEDDDFFFFFFGFFDGDFFFFFFFFFFGFFFNNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLLLLLLLLLLLLLRRRRRHHRRRRRRLMMMMMMLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLDGFDFGFFGFFFFFFGGGGDLLLLLLLLLLLLMLLMLLLLLLLLMLLLHLMMLLLLLLLLLLLLLLLMLLDGFFFFGGFFFFFGGDLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLDFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGFFFFDLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHRHHHHHHHHHHHHHHHHHHRHHHHHRLLLLLLLLLLLLLLDDFFFFGDLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ConcreteCFType","array","attributed_string","base","boolean","bundle","characterset","data","date","declare_TCFType","dictionary","error","filedescriptor","impl_CFComparison","impl_CFTypeDescription","impl_TCFType","mach_port","number","propertylist","runloop","set","string","timezone","url","uuid","CFArray","CFArrayAppendArray","CFArrayAppendValue","CFArrayApplierFunction","CFArrayApplyFunction","CFArrayBSearchValues","CFArrayCallBacks","CFArrayContainsValue","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayCreateMutable","CFArrayCreateMutableCopy","CFArrayEqualCallBack","CFArrayExchangeValuesAtIndices","CFArrayGetCount","CFArrayGetCountOfValue","CFArrayGetFirstIndexOfValue","CFArrayGetLastIndexOfValue","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayInsertValueAtIndex","CFArrayIterator","CFArrayRef","CFArrayReleaseCallBack","CFArrayRemoveAllValues","CFArrayRemoveValueAtIndex","CFArrayReplaceValues","CFArrayRetainCallBack","CFArraySetValueAtIndex","CFArraySortValues","CFComparatorFunction","CFIndex","CFMutableArrayRef","__CFArray","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","equivalent","fmt","from","from","from","from","from_CFTypes","from_copyable","from_mut_void","from_void","get","get_all_values","get_unchecked","get_values","into","into","into","into","into_iter","into_iter","into_untyped","iter","kCFTypeArrayCallBacks","len","len","next","release","retain","to_owned","to_owned","to_untyped","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFAttributedString","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedString","CFMutableAttributedStringRef","__CFAttributedString","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","char_len","char_len","clone","clone","clone_into","clone_into","default","drop","drop","eq","eq","equivalent","equivalent","from","from","from","from_mut_void","from_mut_void","from_void","from_void","into","into","into","new","new","replace_str","set_attribute","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","Boolean","CFAllocator","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFIndexConvertible","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFType","CFTypeID","CFTypeRef","EqualTo","FromMutVoid","FromVoid","GreaterThan","ItemMutRef","ItemRef","LessThan","OSStatus","Ref","SInt32","TCFType","TCFTypeRef","ToVoid","allocate","as_CFType","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_void_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","copyDescription","deallocate","deref","deref","deref_mut","downcast","downcast_into","drop","drop","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void_ptr","info","init","instance_of","into","into","into","into","into","into","into","into","into_CFType","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","new","preferredSize","reallocate","release","retain","retain_count","show","to_CFIndex","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFBoolean","CFBooleanGetTypeID","CFBooleanRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","equivalent","false_value","fmt","from","from","from_mut_void","from_void","into","kCFBooleanFalse","kCFBooleanTrue","to_owned","to_void","to_void","true_value","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBundle","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bundle_resources_url","bundle_url","bundle_with_identifier","clone","clone_into","drop","eq","equivalent","executable_url","from","from","from_mut_void","from_void","function_pointer_for_name","info_dictionary","into","into","main_bundle","new","path","private_frameworks_url","resources_path","shared_support_url","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFCharacterSet","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFData","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","deref","drop","eq","equivalent","fmt","from","from","from_arc","from_buffer","from_mut_void","from_void","into","into","len","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDate","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","abs_time","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","new","now","partial_cmp","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFDictionary","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionary","CFMutableDictionaryRef","__CFDictionary","add","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","contains_key","copyDescription","copyDescription","copy_with_capacity","default","drop","drop","eq","eq","equal","equal","equivalent","equivalent","find","find","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFType_pairs","from_mut_void","from_mut_void","from_void","from_void","get","get","get_keys_and_values","get_keys_and_values","hash","into","into","into","into","into","into_untyped","into_untyped","is_empty","is_empty","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","len","len","new","release","release","remove","remove_all","replace","retain","retain","set","to_immutable","to_mutable","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","with_capacity","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","CFError","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","description","description","domain","drop","eq","equivalent","fmt","fmt","from","from","from_mut_void","from_void","into","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFFileDescriptor","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","as_CFTypeRef","as_concrete_TypeRef","as_raw_fd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","copyDescription","disable_callbacks","drop","enable_callbacks","eq","equivalent","from","from","from","from_mut_void","from_void","info","into","into","into","invalidate","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","new","release","retain","to_owned","to_owned","to_run_loop_source","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","valid","version","wrap_under_create_rule","wrap_under_get_rule","CFAllocatorRef","CFIndex","CFMachPort","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_runloop_source","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumber","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","equivalent","fmt","from","from","from","from","from","from","from","from_mut_void","from_void","into","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","partial_cmp","to_f32","to_f64","to_i32","to_i64","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFPropertyList","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","CFPropertyListSubClass","as_CFType","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","create_data","create_with_data","downcast","downcast_into","drop","eq","equivalent","fmt","from","instance_of","into","into_CFPropertyList","into_CFType","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","retain_count","show","to_CFPropertyList","to_owned","try_from","try_into","type_id","type_of","wrap_under_create_rule","wrap_under_get_rule","CFRunLoop","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopMode","CFRunLoopObserver","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopRunResult","CFRunLoopSource","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimer","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","Finished","HandledSource","Stopped","TimedOut","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","add_observer","add_source","add_timer","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains_observer","contains_source","contains_timer","copyDescription","copyDescription","copyDescription","copyDescription","current_mode","drop","drop","drop","drop","eq","eq","eq","eq","eq","equal","equal","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_file_descriptor","from_mut_void","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void","getPort","get_current","get_main","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","new","perform","perform","release","release","release","release","remove_observer","remove_source","remove_timer","retain","retain","retain","retain","run_current","run_in_mode","schedule","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFSet","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","equivalent","fmt","from","from","from","from_mut_void","from_slice","from_void","hash","into","into","into","kCFTypeSetCallBacks","len","release","retain","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFString","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","char_len","clone","clone_into","drop","eq","eq","eq","equivalent","fmt","fmt","from","from","from","from_mut_void","from_static_string","from_str","from_void","into","into","kCFStringEncodingUTF8","new","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFTimeZone","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","name","new","seconds_from_gmt","system","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFURL","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","absolute","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","equivalent","fmt","from","from","from_file_system_path","from_mut_void","from_path","from_void","get_file_system_path","get_string","into","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","to_owned","to_path","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFUUID","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone","clone_into","clone_into","default","default","drop","eq","equivalent","fmt","from","from","from","from_mut_void","from_void","into","into","into","new","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule"],"q":[[0,"core_foundation"],[25,"core_foundation::array"],[129,"core_foundation::attributed_string"],[201,"core_foundation::base"],[392,"core_foundation::boolean"],[423,"core_foundation::bundle"],[479,"core_foundation::characterset"],[547,"core_foundation::data"],[592,"core_foundation::date"],[641,"core_foundation::dictionary"],[786,"core_foundation::error"],[834,"core_foundation::filedescriptor"],[904,"core_foundation::mach_port"],[945,"core_foundation::number"],[1026,"core_foundation::propertylist"],[1069,"core_foundation::runloop"],[1362,"core_foundation::set"],[1432,"core_foundation::string"],[1489,"core_foundation::timezone"],[1534,"core_foundation::url"],[1655,"core_foundation::uuid"]],"d":["","Heterogeneous immutable arrays.","","","A Boolean type.","Core Foundation Bundle Type","A set of Unicode compliant characters.","Core Foundation byte buffers.","Core Foundation date objects.","Declare a Rust type that wraps an underlying …","Dictionaries of key-value pairs.","Core Foundation errors.","","","Implement <code>std::fmt::Debug</code> for the given type.","Provide an implementation of the <code>TCFType</code> trait for the Rust","","Immutable numbers.","Core Foundation property lists","","An immutable bag of elements.","Immutable strings.","Core Foundation time zone objects.","A URL type for Core Foundation.","Core Foundation UUID objects.","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the same array, but with the type reset to void …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Superclass of all Core Foundation objects.","","","","A trait describing how to convert from the stored *mut …","A trait describing how to convert from the stored *const …","","A reference to a mutable element inside a container","A reference to an element inside a container","","","The reference type wrapped inside this type.","","All Core Foundation types implement this trait. The …","Trait for all types which are Core Foundation reference …","A trait describing how to convert from the stored *const …","","Returns the object as a wrapped <code>CFType</code>. The reference …","Returns the object as a raw <code>CFTypeRef</code>. The reference count …","","","Returns the object as its concrete TypeRef.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to downcast the <code>CFType</code> to a subclass. Checking if the …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","","","","","","","","Formats the value using <code>CFCopyDescription</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the object as a wrapped <code>CFType</code>. Consumes self and …","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Always use this method to construct a <code>CFIndex</code> value. It …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type ID for this class.","","","","","","","","","","Returns the type ID of this object.","","Returns an instance of the object, wrapping the underlying …","","","Returns an instance of the object, wrapping the underlying …","","","A Boolean type.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A Bundle type.","","","","","","","","","","","","","","","","","","","","Bundle’s resources location","Bundle’s own location","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Bundle’s own location","","Bundle’s resources location","","","","","","","","","","","","","","","An immutable set of Unicde characters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A byte buffer.","","","","","","","","","","","","","","","Returns a pointer to the underlying bytes in this data. …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a CFData referencing <code>buffer</code> without creating a copy","Creates a CFData around a copy <code>buffer</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this byte buffer.","","","","","","","","","","","","","","","","A date.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the key-value pair to the dictionary if no such key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new mutable dictionary with the key-value pairs …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Panics","Panics","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the same dictionary, but with the types reset to …","Returns the same dictionary, but with the types reset to …","","","","","","","","","","Removes the value of the key from the dictionary.","","Replaces the value of the key in the dictionary.","","","Sets the value of the key in the dictionary.","Returns a <code>CFDictionary</code> pointing to the same underlying …","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error value.","","","","","","","","","","","","","","","Returns the code identifying this type of error.","Returns a human-presentable description of the error.","","Returns a string identifying the domain with which this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A CFPropertyList struct. This is superclass to <code>CFData</code>, …","","","","","","Trait for all subclasses of <code>CFPropertyList</code>.","","","","","","","","","","Try to downcast the <code>CFPropertyList</code> to a subclass. Checking …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","","Returns the argument unchanged.","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Equal to <code>to_CFPropertyList</code>, but consumes self and avoids …","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Create an instance of the superclass type <code>CFPropertyList</code> …","","","","","Returns the type ID of this object. Will be one of CFData, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable bag of elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new set from a list of <code>CFType</code> instances.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the number of elements in the CFSet","","","","","","","","","","","","","","","","","","","","","An immutable string in one of a variety of encodings.","","","","","","","","","","","","","","","","","","","","","","Returns the number of characters in the string.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Like <code>CFString::new</code>, but references a string that can be …","See also CFString::new for a variant of this which does …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>CFString</code> instance from a Rust string.","","","","","","","","","","","","","","","A time zone.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The timezone database ID that identifies the time zone. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A UUID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,1,8,24,6,1,8,24,6,8,6,8,6,6,8,8,6,8,8,1,8,24,6,8,8,8,8,8,8,8,8,1,8,24,6,8,24,8,8,0,8,24,24,6,6,8,6,8,10,8,8,1,8,24,6,1,8,24,6,1,8,8,24,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,31,32,31,32,30,31,32,30,31,32,31,32,31,32,31,32,32,31,32,31,32,31,32,30,31,32,31,32,31,32,30,31,32,31,32,32,32,31,32,33,34,31,31,32,32,30,31,32,30,31,32,30,31,31,32,32,31,32,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,41,0,0,41,0,14,0,0,0,0,37,14,14,38,39,14,38,39,142,18,17,38,39,41,2,37,18,17,38,39,41,2,37,38,39,41,2,37,38,39,41,2,37,37,37,18,17,17,38,38,38,39,18,17,38,39,41,39,18,17,38,41,18,17,38,39,41,2,37,143,38,39,19,38,39,142,37,2,14,18,17,38,39,41,41,2,37,14,0,0,0,0,0,0,0,0,2,2,0,39,37,37,37,37,14,14,144,38,39,41,2,37,75,9,38,38,39,39,18,17,38,39,41,2,37,18,17,38,39,41,2,37,14,18,17,38,38,39,39,41,2,37,14,37,14,38,39,14,38,39,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,50,52,50,52,52,52,52,52,52,52,52,52,52,50,52,52,52,52,52,50,52,52,52,52,52,52,52,52,53,52,52,50,52,50,52,50,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,57,60,57,60,60,60,60,60,60,60,57,60,60,60,57,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,60,60,57,60,57,60,57,60,60,60,60,0,0,0,0,0,0,0,0,0,62,62,58,62,58,62,62,62,62,62,62,62,62,62,58,62,62,62,62,62,58,62,62,62,63,62,62,58,62,58,62,58,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,70,70,70,69,70,69,70,70,70,70,70,70,70,70,69,70,70,70,69,70,0,0,70,70,70,70,72,70,70,69,70,69,70,69,70,70,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,55,76,55,76,29,55,76,73,74,29,55,76,73,74,55,76,73,74,55,76,73,74,55,76,73,74,76,76,55,76,55,76,73,74,55,76,55,76,55,76,29,55,76,76,73,74,55,76,55,76,55,76,55,76,55,76,73,29,55,76,73,74,55,76,55,76,0,0,55,76,76,73,74,76,76,76,73,74,76,76,55,55,76,73,74,55,76,77,78,55,55,76,76,29,55,76,73,74,29,55,76,73,74,29,55,55,76,76,73,74,73,74,76,55,76,55,76,0,0,0,0,0,0,0,80,80,79,80,79,80,80,80,80,80,80,80,80,80,80,80,80,79,80,80,80,79,80,0,0,0,0,80,80,81,80,80,79,80,79,80,79,80,80,80,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,88,88,86,85,88,86,85,88,85,88,85,88,88,85,88,88,88,88,88,86,85,88,88,88,85,86,85,88,88,0,0,88,85,85,85,88,88,89,88,88,86,85,88,86,85,88,86,85,88,88,88,85,88,88,0,0,0,0,0,0,0,0,95,95,94,95,94,95,95,95,95,95,95,95,95,94,95,95,95,94,95,95,40,96,95,95,94,95,94,95,94,95,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,97,98,100,97,98,100,100,100,100,100,100,100,100,97,98,100,100,100,100,100,100,100,97,98,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,100,100,100,100,49,101,100,100,97,98,100,97,98,100,97,98,100,100,100,100,0,0,0,0,0,0,0,104,104,104,104,104,104,104,0,0,104,104,104,104,104,104,104,104,104,108,104,0,0,0,0,0,0,104,104,108,104,104,104,104,104,104,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,123,0,0,0,0,115,115,115,115,118,93,116,115,118,93,116,109,87,110,113,145,112,114,111,115,123,118,93,116,109,87,110,113,145,112,114,111,115,123,118,93,116,113,115,123,118,93,116,115,123,118,93,116,115,115,115,113,145,112,114,115,115,118,93,116,115,123,118,93,116,113,145,115,118,93,116,115,123,109,87,110,113,145,112,114,111,115,123,118,93,116,93,115,118,93,116,115,118,93,116,145,115,115,113,145,113,145,112,114,109,87,110,113,145,112,114,111,115,123,118,93,116,0,0,0,0,0,0,0,0,0,0,0,0,0,118,113,145,113,145,112,114,115,115,115,113,145,112,114,115,115,113,115,115,123,118,93,116,119,121,122,120,115,115,118,118,93,93,116,116,109,87,110,113,145,112,114,111,115,123,118,93,116,109,87,110,113,145,112,114,111,115,123,118,93,116,109,87,110,113,145,112,114,111,115,115,123,118,118,93,93,116,116,113,145,112,114,115,118,93,116,115,118,93,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,129,129,127,128,129,127,128,129,128,129,128,128,129,129,128,129,129,129,127,128,129,129,129,128,129,127,128,0,129,128,128,129,128,129,129,130,129,127,128,129,127,128,129,129,127,128,128,129,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,28,35,28,35,35,35,35,35,35,35,35,35,35,35,28,35,35,35,35,35,35,28,35,0,35,35,35,36,35,35,28,35,28,35,28,35,35,35,35,0,0,0,0,0,0,0,0,0,133,133,132,133,132,133,133,133,133,133,133,133,133,132,133,133,133,132,133,133,133,133,133,133,134,133,133,132,133,132,133,132,133,133,133,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,51,54,51,54,54,54,54,54,54,54,51,54,54,54,54,54,54,54,51,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,135,54,54,51,54,51,54,51,54,54,54,54,0,0,0,0,0,0,0,0,140,140,138,139,140,138,139,140,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,139,140,139,140,140,140,140,140,138,139,140,140,140,138,139,140,140,139,140,141,140,140,138,139,140,138,139,140,138,139,140,140,140,140],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1,2]],[[1,3]],0,[[1,2,3]],[[1,2,3,3],4],0,[[1,2,3],5],0,[[3,3,4,6],1],[[3,1],1],[[3,4,6],1],[[3,4,1],1],0,[[1,4,4]],[1,4],[[1,2,3],4],[[1,2,3],4],[[1,2,3],4],[[],7],[[1,4],3],[[1,2,3]],[[1,4,3]],0,0,0,[1],[[1,4]],[[1,2,3,4]],0,[[1,4,3]],[[1,2,3]],0,0,0,0,[8,9],[8,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[6,6],[[]],[[]],0,[8],[[8,8],11],0,[[],11],[[8,12],13],[[]],[[]],[[]],[[]],[[[15,[14]]],[[8,[14]]]],[[[15,[16]]],[[8,[16]]]],[3,17],[3,18],[[[8,[19]],20],[[21,[[18,[19]]]]]],[8,[[23,[22]]]],[[[8,[19]],20],[[18,[19]]]],[[8,2],[[23,[22]]]],[[]],[[]],[[]],[[]],[[[8,[19]]],[[24,[19]]]],[[]],[8,8],[8,24],0,[8,20],[[[24,[19]]],7],[[[24,[19]]],[[21,[[18,[19]]]]]],0,0,[[]],[[]],[8,8],[10,22],[8,22],[8,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[[],26],[[],26],0,[10,8],[10,8],0,[[3,28,29],30],[[3,4],30],[[3,4,30],30],[30,4],[[],7],0,[[30,2,28]],[[30,2,28,3]],0,0,0,[31,9],[32,9],[31,33],[32,34],[[]],[[]],[[]],[[]],[[]],[[]],[31,20],[32,20],[31,31],[32,32],[[]],[[]],[[],32],[31],[32],[[31,31],11],[[32,32],11],[[],11],[[],11],[[]],[[]],[[]],[3,17],[3,17],[3,18],[3,18],[[]],[[]],[[]],[35,31],[[],32],[[32,35,2]],[[32,2,36,14]],[[]],[[]],[33,22],[34,22],[31,22],[31,22],[32,22],[32,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[[],27],[[],26],[33,31],[34,32],[33,31],[34,32],0,0,[[3,4,7],3],0,0,0,[[3,37],3],[[3,3]],0,[[3,37]],[[],3],[[3,4,7],4],[[],7],0,[[3,3,4,7],3],0,0,0,0,[3],0,[3,28],[[3,3],5],[3,4],[3,7],[3,7],0,0,0,0,0,0,[3],[3,3],[3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],9],[38,9],[39,9],[[]],[38,9],[39,40],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,38],[39,39],[41,41],[2,2],[37,37],[[]],[[]],[[]],[[]],[[]],0,0,[18],[17],[17],[38,[[21,[42]]]],[38,[[21,[42]]]],[38],[39],[[[18,[43]],[18,[43]]],11],[[[17,[43]],[17,[43]]],11],[[38,38],11],[[39,39],11],[[41,41],11],[[],11],[[[18,[44]],12],[[25,[45]]]],[[[17,[44]],12],[[25,[45]]]],[[38,12],13],[[41,12],[[25,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[17,[46]]]],[3,17],[3,17],[22,[[18,[46]]]],[3,18],[3,18],[3],0,[[4,4],2],[[],11],[[]],[[]],[[]],[[]],[[]],[41,47],[[]],[[]],[46,38],0,0,0,0,0,0,0,0,0,0,0,[37,39],0,0,0,0,[[],20],[[]],[[],20],[[]],[[]],[[]],[[]],[[]],[[],22],[9,22],[38,22],[38,22],[39,22],[39,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],27],[[],26],[[],26],[[],26],[[],27],[[],27],[[],26],[[],26],[[],26],[[],26],[[],27],0,[[]],[9,38],[40,39],[[]],[9,38],[40,39],0,[[],7],0,[48,9],[48,49],[[]],[[]],[48,48],[[]],[48],[[48,48],11],[[],11],[[],48],[[48,12],13],[11,48],[[]],[3,17],[3,18],[[]],0,0,[[]],[48,22],[48,22],[[],48],[[],25],[[],25],[[],26],[[],27],[49,48],[49,48],0,[50,51],[50,51],[50,51],[50,51],[50,51],[[3,51],50],[28,50],[[50,28],3],[50,29],[[],50],[[],7],0,0,[52,9],[52,53],[[]],[[]],[[]],[[]],[52,[[21,[54]]]],[52,[[21,[54]]]],[35,[[21,[52]]]],[52,52],[[]],[52],[[52,52],11],[[],11],[52,[[21,[54]]]],[[]],[[]],[3,17],[3,18],[[52,35],22],[52,[[55,[35,38]]]],[[]],[[]],[[],52],[54,[[21,[52]]]],[52,[[21,[56]]]],[52,[[21,[54]]]],[52,[[21,[56]]]],[52,[[21,[54]]]],[[]],[53,22],[52,22],[52,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[53,52],[53,52],0,[[57,2]],[[57,28]],[[3,57],58],[[3,57],57],[3,57],[[3,57],57],[[3,58],57],[[3,2],57],[[3,28],57],[4,57],[[],7],[[57,57]],[57],[[57,59],5],0,0,[[57,2]],[[57,28]],[[57,57]],0,0,[60,9],[60,61],[[]],[[]],[[]],[[]],[60,60],[[]],[60],[[60,60],11],[[],11],[[60,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[61,22],[60,22],[60,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[61,60],[61,60],0,[[3,5,4],58],[[3,5,4,3],58],[58,5],[[58,2,5]],[58,4],[[],7],0,0,[62,9],[62,63],[[]],[[]],[[]],[[]],[62,[[15,[5]]]],[62,62],[[]],[62,[[15,[5]]]],[62],[[62,62],11],[[],11],[[62,12],13],[[]],[[]],[[[67,[[0,[[64,[[15,[5]]]],65,66]]]]],62],[[[15,[5]]],62],[3,17],[3,18],[[]],[[]],[62,20],[[]],[63,22],[62,22],[62,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[63,62],[63,62],0,[[],68],0,[[69,69,3],41],[[3,68],69],[69,68],[[69,69],68],[[],7],0,0,0,[70,71],[70,9],[70,72],[[]],[[]],[[]],[[]],[70,70],[[]],[[70,70],47],[70],[[70,70],11],[[],11],[[70,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,[71,70],[[],70],[[70,70],[[21,[47]]]],[[]],[72,22],[70,22],[70,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[72,70],[72,70],0,[[29,3,3]],0,[[29,3]],[[29,3],5],0,[[3,3,3,4,73,74],29],[[3,4,73,74],29],[[3,4,29],29],0,[29,4],[[29,3,3]],[[],7],[[29,3,3],5],0,0,0,0,[29],[[29,3]],[[29,3,3]],0,[[29,3,3]],0,0,0,0,[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[55,9],[76,9],[55,77],[76,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[76,76],[73,73],[74,74],[[]],[[]],[[]],[[]],[[[55,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]],11],[[76,22],11],0,0,[[76,4],76],[[],76],[55],[76],[[55,55],11],[[76,76],11],0,0,[[],11],[[],11],[[[55,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[21,[[18,[19]]]]]],[[[76,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[21,[[18,[19]]]]]],[[55,12],13],[[76,12],13],[[]],[[]],[[]],[55,76],[[]],[[]],[15,[[55,[14,14]]]],[15,[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]]]],[3,17],[3,17],[3,18],[3,18],[[[55,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[18,[19]]]],[[[76,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[18,[19]]]],[55],[76],0,[[]],[[]],[[]],[[]],[[]],[55,55],[76,76],[55,11],[76,11],0,0,[55,7],[76,7],[[],76],0,0,[[[76,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[76],[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],0,0,[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[76,55],[55,76],[[]],[[]],[[]],[[]],[55,55],[76,76],[77,22],[78,22],[55,22],[55,22],[76,22],[76,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[[],26],[[],27],[[],26],[[],26],0,0,[4,76],[77,55],[78,76],[77,55],[78,76],0,[79,28],[79,4],[79,28],[[],7],0,0,[80,9],[80,81],[[]],[[]],[[]],[[]],[80,80],[[]],[80,20],[80,35],[80,82],[80,35],[80],[[80,80],11],[[],11],[[80,12],13],[[80,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,0,0,[[]],[[],83],[81,22],[80,22],[80,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[81,80],[81,80],0,0,0,[[3,84,5,85],86],[[3,86,4],87],[[86,7]],[[86,7]],[[86,85]],[86,84],[[],7],[86],[86,5],0,0,0,[88,9],[88,89],[88,90],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[88,88],[[]],[[]],[88,85],0,[[88,91]],[88],[[88,91]],[[88,88],11],[[],11],[[]],[[]],[[]],[3,17],[3,18],0,[[]],[[]],[[]],[88],0,0,[[90,11,92,[21,[85]]],[[21,[88]]]],0,0,[[]],[[]],[[88,20],[[21,[93]]]],[89,22],[88,22],[88,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],27],[88,11],0,[89,88],[89,88],0,0,0,[[3,94,4],87],[[],7],0,0,0,[95,9],[95,96],[[]],[[]],[[]],[[]],[95,95],[[]],[[95,20],[[25,[93]]]],[95],[[95,95],11],[[],11],[[95,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],[[]],[40,22],[96,22],[95,22],[95,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[96,95],[96,95],[[],7],[97,11],0,0,[[98,98,3],41],[[3,99,3],98],[98,99],[[],7],[[98,99,3],11],0,0,0,0,[100,9],[100,101],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[[]],[[100,100],47],[100],[[100,100],11],[[],11],[[100,12],13],[[]],[[]],[102,100],[[]],[84,100],[68,100],[103,100],[3,17],[3,18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,100],[[21,[47]]]],[100,[[21,[103]]]],[100,[[21,[68]]]],[100,[[21,[84]]]],[100,[[21,[102]]]],[[]],[49,22],[101,22],[100,22],[100,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[[],26],[101,100],[101,100],0,[[3,3,4,7,79],58],[[3,58,7,4,79],3],0,0,0,0,[104,38],[104,9],[104,105],[[]],[[]],[104,104],[[]],[[22,106],[[25,[62,80]]]],[[62,107],[[25,[80]]]],[104,[[21,[108]]]],[104,[[21,[108]]]],[104],[[104,104],11],[[],11],[[104,12],13],[[]],[104,11],[[]],[46,104],[104,38],0,0,0,0,0,0,[104,20],[104],[[],104],[[]],[[],25],[[],25],[[],26],[104,27],[105,104],[105,104],0,0,[[109,28]],[[109,110,28]],[[109,87,28]],[[109,111,28]],[[109,110,28],5],[[109,87,28],5],[[109,111,28],5],[109,1],[109,28],[[],109],[[],109],[[109,28],68],[[],7],[109,5],0,0,0,0,[[3,7,5,4,112],110],[110,5],[110,7],[[110,112]],[110,4],[[],7],[110],[110,5],0,0,[[109,110,28]],[[109,87,28]],[[109,111,28]],[[]],[[28,68,5],84],0,0,0,0,[[3,4,113],87],[[87,113]],[87,4],[[],7],[87],[87,5],0,[87],[109],0,0,0,[[3,68,68,7,4,114],111],[111,5],[[111,114]],[111,68],[111,68],[111,4],[111,68],[[],7],[111],[111,5],0,[[111,68]],[[111,68]],[109],0,0,0,0,0,0,0,0,[[115,116,117]],[[115,93,117]],[[115,118,117]],[115,9],[118,9],[93,9],[116,9],[115,119],[118,120],[93,121],[116,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[115,115],[123,123],[118,118],[93,93],[116,116],[[]],[[]],[[]],[[]],[[]],[[115,116,117],11],[[115,93,117],11],[[115,118,117],11],0,0,0,0,[115,[[21,[83]]]],[115],[118],[93],[116],[[115,115],11],[[123,123],11],[[118,118],11],[[93,93],11],[[116,116],11],0,0,[[],11],[[],11],[[],11],[[],11],[[115,12],13],[[123,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[88,20],[[21,[93]]]],[3,17],[3,17],[3,17],[3,17],[3,18],[3,18],[3,18],[3,18],0,[[],115],[[],115],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[71,124,91,20,125,114],118],0,0,0,0,0,0,[[115,116,117]],[[115,93,117]],[[115,118,117]],0,0,0,0,[[]],[[36,126,11],123],0,[115],[[]],[[]],[[]],[[]],[[]],[119,22],[121,22],[122,22],[120,22],[115,22],[115,22],[118,22],[118,22],[93,22],[93,22],[116,22],[116,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],26],[[],26],[[],27],[[],26],[[],26],[[],27],[[],27],[[],26],0,0,0,0,[119,115],[120,118],[121,93],[122,116],[119,115],[120,118],[121,93],[122,116],0,0,[[127,3]],0,[[127,3],5],0,[[3,3,4,128],127],[[3,127],127],0,[127,4],[[127,3],4],[[],7],[[127,3],3],[[127,3,3],5],[[127,3]],0,0,0,0,0,[129,9],[129,130],[[]],[[]],[[]],[[]],[[]],[[]],[129,129],[128,128],[[]],[[]],0,[129],[[129,129],11],0,[[],11],[[129,12],13],[[]],[[]],[[]],[3,17],[[[15,[14]]],[[129,[14]]]],[3,18],0,[[]],[[]],[[]],0,[129,7],0,0,[[]],[[]],[129,22],[129,22],[130,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[[],26],0,[130,129],[130,129],0,0,[[3,5,4,99,5],28],[[3,5,4,99,5,3],28],[[3,131,99],28],[[3,59,4,3],28],0,0,[[28,2,99,5,5,5,4,4],4],[[28,131,4,99],5],[[28,99],131],[28,4],[[],7],0,0,0,[35,9],[35,36],[[]],[[]],[[]],[[]],[35,20],[35,35],[[]],[35],[[35,35],11],[[35,83],11],[[35,82],11],[[],11],[[35,12],13],[[35,12],13],[[]],[82,35],[[]],[3,17],[82,35],[82,[[25,[35]]]],[3,18],[[]],[[]],0,[82,35],[[]],[[],83],[36,22],[35,22],[35,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[36,35],[36,35],0,[[],132],[[],132],[[3,68],132],[132,28],[[132,68],68],[[],7],0,0,[133,9],[133,134],[[]],[[]],[[]],[[]],[133,133],[[]],[[],133],[133],[[133,133],11],[[],11],[[133,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],[133,35],[124,133],[[133,70],124],[[],133],[[]],[134,22],[133,22],[133,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[134,133],[134,133],0,0,0,0,[51,5],[51],[51,51],[[51,4],28],[[51,28],28],[51,28],[51,28],[51,28],[[51,28],28],[51,28],[51,28],[51,28],[[51,28],28],[51,28],[51,28],[[51,5],28],[51,28],[[3,5,4,99,51,5],51],[[3,51,7,1,51,79],58],[[3,58],58],[[3,51,79],58],[[3,58,7,51,1,5,79],51],[[3,51,79],51],[[3,5,4,5],51],[[3,1,58],29],[[3,28,58],3],[[3,5,4,99,51],51],[[3,28,4,5],51],[[3,28,4,5,51],51],[[51,5,4],4],[[51,5,5,4],5],[51,84],[51,28],[[],7],[51,5],0,0,[[51,28,3,79],5],[51,5],[51],[[58,51,7,79],5],0,[54,54],[54,9],[54,135],[[]],[[]],[[]],[[]],[54,54],[[]],[54],[[54,54],11],[[],11],[[54,12],13],[[]],[[]],[[35,136,11],54],[3,17],[[[64,[137]],11],[[21,[54]]]],[3,18],[[54,136],35],[54,35],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[54,[[21,[56]]]],[135,22],[54,22],[54,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[135,54],[135,54],0,0,[3,138],[[3,139],138],[[],7],[138,139],0,0,[140,9],[140,141],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,139],[140,140],[[]],[[]],[[],139],[[],140],[140],[[140,140],11],[[],11],[[140,12],13],[[]],[[]],[[]],[3,17],[3,18],[[]],[[]],[[]],[[],140],[[]],[[]],[141,22],[140,22],[140,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],27],[141,140],[141,140]],"c":[],"p":[[3,"__CFArray"],[3,"CFRange"],[4,"c_void"],[15,"isize"],[15,"u8"],[3,"CFArrayCallBacks"],[15,"usize"],[3,"CFArray"],[6,"CFTypeRef"],[6,"CFArrayRef"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"TCFType"],[15,"slice"],[8,"Copy"],[3,"ItemMutRef"],[3,"ItemRef"],[8,"FromVoid"],[6,"CFIndex"],[4,"Option"],[6,"c_void"],[3,"Vec"],[3,"CFArrayIterator"],[4,"Result"],[3,"TypeId"],[6,"CFTypeID"],[3,"__CFString"],[3,"__CFDictionary"],[3,"__CFAttributedString"],[3,"CFAttributedString"],[3,"CFMutableAttributedString"],[6,"CFAttributedStringRef"],[6,"CFMutableAttributedStringRef"],[3,"CFString"],[6,"CFStringRef"],[3,"CFAllocatorContext"],[3,"CFType"],[3,"CFAllocator"],[6,"CFAllocatorRef"],[4,"CFComparisonResult"],[8,"ConcreteCFType"],[8,"PartialEq"],[8,"Debug"],[3,"Error"],[8,"Sized"],[4,"Ordering"],[3,"CFBoolean"],[6,"CFBooleanRef"],[3,"__CFBundle"],[3,"__CFURL"],[3,"CFBundle"],[6,"CFBundleRef"],[3,"CFURL"],[3,"CFDictionary"],[3,"PathBuf"],[3,"__CFCharacterSet"],[3,"__CFData"],[15,"u16"],[3,"CFCharacterSet"],[6,"CFCharacterSetRef"],[3,"CFData"],[6,"CFDataRef"],[8,"AsRef"],[8,"Sync"],[8,"Send"],[3,"Arc"],[15,"f64"],[3,"__CFDate"],[3,"CFDate"],[6,"CFAbsoluteTime"],[6,"CFDateRef"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[8,"ToVoid"],[3,"CFMutableDictionary"],[6,"CFDictionaryRef"],[6,"CFMutableDictionaryRef"],[3,"__CFError"],[3,"CFError"],[6,"CFErrorRef"],[15,"str"],[3,"String"],[15,"i32"],[3,"CFFileDescriptorContext"],[3,"__CFFileDescriptor"],[3,"__CFRunLoopSource"],[3,"CFFileDescriptor"],[6,"CFFileDescriptorRef"],[6,"RawFd"],[6,"CFOptionFlags"],[6,"CFFileDescriptorCallBack"],[3,"CFRunLoopSource"],[3,"__CFMachPort"],[3,"CFMachPort"],[6,"CFMachPortRef"],[3,"__CFBoolean"],[4,"__CFNumber"],[15,"u32"],[3,"CFNumber"],[6,"CFNumberRef"],[15,"i64"],[15,"f32"],[3,"CFPropertyList"],[6,"CFPropertyListRef"],[6,"CFPropertyListFormat"],[6,"CFPropertyListMutabilityOptions"],[8,"CFPropertyListSubClass"],[3,"__CFRunLoop"],[3,"__CFRunLoopObserver"],[3,"__CFRunLoopTimer"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopTimerContext"],[3,"CFRunLoop"],[3,"CFRunLoopObserver"],[6,"CFRunLoopMode"],[3,"CFRunLoopTimer"],[6,"CFRunLoopRef"],[6,"CFRunLoopTimerRef"],[6,"CFRunLoopSourceRef"],[6,"CFRunLoopObserverRef"],[4,"CFRunLoopRunResult"],[6,"CFTimeInterval"],[6,"CFRunLoopTimerCallBack"],[3,"Duration"],[3,"__CFSet"],[3,"CFSetCallBacks"],[3,"CFSet"],[6,"CFSetRef"],[15,"i8"],[3,"__CFTimeZone"],[3,"CFTimeZone"],[6,"CFTimeZoneRef"],[6,"CFURLRef"],[6,"CFURLPathStyle"],[3,"Path"],[3,"__CFUUID"],[3,"CFUUIDBytes"],[3,"CFUUID"],[6,"CFUUIDRef"],[8,"TCFTypeRef"],[8,"FromMutVoid"],[8,"CFIndexConvertible"],[3,"CFRunLoopSourceContext1"]]},\
"core_foundation_sys":{"doc":"","t":"AAAAAAAAAAAAAAAAAAAAFFGFFDFGFFFFGFFFFFFFFFGGFFFGFFGGDLLLLLLMMLLLLHMMLLLLLLLMFFFFFGFFGDLLLLLLLGFGDGFFGFFFFGFGGGGFEFFFFFGGGGDFFFGGNNNGGIMKLLLLLLLLLLLLMMLLLLLKMLLLLLHHHHHHHHMMGMMMMLLLLLLLLLLLLMFFFFFFFFFFFGDLLLLLLLFFFFFFFFFFFFFFGGFFFGDLLLLHHHHHHHHHHHHHHHLLLFFFFFFGDLLLLLLLGFFFFFFGGDLLLLHHLLLFGFFGFFFGFFFFGDGGFFFGFDGDLLLLLLLLLLMMMMLLLMLLLHHMMMMLLLLLLLLLLLMMFFFFGDLLLLHHHHLLLGDFFFFFFFFFGGDLLLLLLMLLMLLRRMMLLLLLLLMCCFFGCDLLLLLLLGDFFFFFFFFGFFGFFFDLLLLLLMLLLMLLMMLLLLLLLMFFGFFFFFGGDELLLLLLLLHHRRRRRRRRRRRRRRRRRLLLLLLFFGGGRRRRRRGFFFFFFFFFFFFFFGDFFFFFFFFGGFFFFFDDFFFFFFGFFGDFFFFFFFFFFGFFFDDDDLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLMMMMMMMLLLLLLLLRRRRRHHRRRRRRMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMGFDFGFFGFFFFFFGGGGDLLLLLLMMLLMLLHMMLLLLLLLMGFFFFGGFFFFFGGDLLLLHLLLFFFFFFGDLLLLLLLGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGFFFFDLLLLHHHHHHHHHHHHRHHHHHHHHHHHHHHHHHHRHHHHHRLLLDFFFFGDLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLL","n":["array","attributed_string","base","bundle","characterset","data","date","dictionary","error","filedescriptor","mach_port","messageport","number","propertylist","runloop","set","string","timezone","url","uuid","CFArrayAppendArray","CFArrayAppendValue","CFArrayApplierFunction","CFArrayApplyFunction","CFArrayBSearchValues","CFArrayCallBacks","CFArrayContainsValue","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayCreateMutable","CFArrayCreateMutableCopy","CFArrayEqualCallBack","CFArrayExchangeValuesAtIndices","CFArrayGetCount","CFArrayGetCountOfValue","CFArrayGetFirstIndexOfValue","CFArrayGetLastIndexOfValue","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayInsertValueAtIndex","CFArrayRef","CFArrayReleaseCallBack","CFArrayRemoveAllValues","CFArrayRemoveValueAtIndex","CFArrayReplaceValues","CFArrayRetainCallBack","CFArraySetValueAtIndex","CFArraySortValues","CFComparatorFunction","CFMutableArrayRef","__CFArray","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","into","into","kCFTypeArrayCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedStringRef","__CFAttributedString","borrow","borrow_mut","from","into","try_from","try_into","type_id","Boolean","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFTypeID","CFTypeRef","EqualTo","GreaterThan","LessThan","OSStatus","SInt32","TCFTypeRef","allocate","as_void_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","copyDescription","deallocate","eq","fmt","from","from","from","from_void_ptr","info","init","into","into","into","into","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","preferredSize","reallocate","release","retain","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","borrow","borrow_mut","from","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","try_from","try_into","type_id","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","borrow","borrow_mut","from","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","try_from","try_into","type_id","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionaryRef","__CFDictionary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","copyDescription","equal","equal","from","from","from","hash","into","into","into","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","release","release","retain","retain","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","borrow","borrow_mut","from","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","try_from","try_into","type_id","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","from","from","info","into","into","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAllocatorRef","CFIndex","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFMessagePortCallBack","CFMessagePortContext","CFMessagePortCreateLocal","CFMessagePortCreateRemote","CFMessagePortCreateRunLoopSource","CFMessagePortGetContext","CFMessagePortGetInvalidationCallBack","CFMessagePortGetName","CFMessagePortGetTypeID","CFMessagePortInvalidate","CFMessagePortInvalidationCallBack","CFMessagePortIsRemote","CFMessagePortIsValid","CFMessagePortRef","CFMessagePortSendRequest","CFMessagePortSetInvalidationCallBack","CFMessagePortSetName","__CFMessagePort","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","fmt","from","from","info","into","into","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","try_from","try_from","try_into","try_into","type_id","type_id","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","copyDescription","copyDescription","copyDescription","copyDescription","equal","equal","from","from","from","from","from","from","from","from","getPort","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","perform","perform","release","release","release","release","retain","retain","retain","retain","schedule","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","hash","into","into","kCFTypeSetCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","borrow","borrow_mut","from","into","kCFStringEncodingUTF8","try_from","try_into","type_id","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","borrow","borrow_mut","from","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","try_from","try_into","type_id","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","borrow","borrow","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone_into","default","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"core_foundation_sys"],[20,"core_foundation_sys::array"],[76,"core_foundation_sys::attributed_string"],[93,"core_foundation_sys::base"],[190,"core_foundation_sys::bundle"],[210,"core_foundation_sys::characterset"],[253,"core_foundation_sys::data"],[268,"core_foundation_sys::date"],[287,"core_foundation_sys::dictionary"],[352,"core_foundation_sys::error"],[369,"core_foundation_sys::filedescriptor"],[407,"core_foundation_sys::mach_port"],[421,"core_foundation_sys::messageport"],[462,"core_foundation_sys::number"],[507,"core_foundation_sys::propertylist"],[518,"core_foundation_sys::runloop"],[679,"core_foundation_sys::set"],[722,"core_foundation_sys::string"],[745,"core_foundation_sys::timezone"],[760,"core_foundation_sys::url"],[850,"core_foundation_sys::uuid"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for all types which are Core Foundation reference …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,19,1,1,1,1,1,19,1,19,1,0,1,1,1,19,1,19,1,19,1,1,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,7,21,5,6,7,5,6,7,5,6,7,5,6,7,7,7,5,5,5,6,7,21,7,6,5,5,6,7,0,0,0,0,0,0,0,0,6,6,0,7,7,7,7,5,6,7,5,6,7,5,6,7,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,13,14,26,13,14,13,14,13,14,13,14,13,14,26,13,14,13,26,13,14,0,0,13,14,13,14,13,14,26,13,14,26,13,14,26,13,14,13,14,0,0,0,0,0,0,27,27,27,27,0,0,0,0,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,15,28,15,15,15,15,28,15,15,28,15,0,0,15,15,15,28,15,28,15,28,15,15,0,0,0,0,0,0,0,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,16,30,16,16,16,16,16,30,16,16,30,16,16,16,16,30,16,30,16,30,16,16,0,0,0,0,0,0,0,0,0,0,0,0,31,32,31,32,31,32,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,32,31,32,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,34,35,36,37,38,39,40,33,34,35,36,37,38,39,40,36,36,37,38,39,36,37,33,34,35,36,37,38,39,40,37,36,37,36,37,38,39,33,34,35,36,37,38,39,40,0,0,0,0,0,0,0,0,0,0,0,0,0,36,37,36,37,38,39,36,37,38,39,36,33,34,35,36,37,38,39,40,33,34,35,36,37,38,39,40,33,34,35,36,37,38,39,40,36,37,38,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,17,41,17,17,17,17,17,41,17,17,41,17,0,17,17,17,41,17,41,17,41,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,42,42,0,42,42,42,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,0,0,0,0,0,0,0,45,18,45,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,45,18,45,18,18,45,18,45,18,45,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[6,6],[7,7],[[]],[[]],[[]],0,0,[[5,5],8],[[5,9],10],[[]],[[]],[[]],[4],0,[[11,11],6],[[]],[5,12],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[14,14],[[]],[[]],0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[[]],0,[[]],[[]],0,[[]],[[]],0,0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[[]],0,[[16,9],10],[[]],[[]],0,[[]],[[]],0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[17,17],[[]],0,0,[[]],[[]],0,[[]],[[]],0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,18],[[]],[[],18],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3]],"c":[],"p":[[3,"CFArrayCallBacks"],[4,"Result"],[3,"TypeId"],[6,"c_void"],[4,"CFComparisonResult"],[3,"CFRange"],[3,"CFAllocatorContext"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"CFIndex"],[4,"Ordering"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFFileDescriptorContext"],[3,"CFMessagePortContext"],[3,"CFSetCallBacks"],[3,"CFUUIDBytes"],[3,"__CFArray"],[3,"__CFAttributedString"],[8,"TCFTypeRef"],[3,"__CFBundle"],[3,"__CFCharacterSet"],[3,"__CFData"],[3,"__CFDate"],[3,"__CFDictionary"],[3,"__CFError"],[3,"__CFFileDescriptor"],[3,"__CFMachPort"],[3,"__CFMessagePort"],[3,"__CFBoolean"],[4,"__CFNumber"],[3,"__CFRunLoop"],[3,"__CFRunLoopSource"],[3,"__CFRunLoopObserver"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"__CFRunLoopTimer"],[3,"__CFSet"],[3,"__CFString"],[3,"__CFTimeZone"],[3,"__CFURL"],[3,"__CFUUID"]]},\
"core_graphics":{"doc":"","t":"AAAAAAAAAAAAAAAAGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDCLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLLLEDDENNNNNENNNENNNENNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGDGGGGGGILLLLLLLLLLLLLLLLLLLKKLLLLLLLLLDFFGDFGGFGFFFFFFFEGDFGFFFFFFFFFFFFFFDFFFFFFFFDFFFFFFFFFFFFFGFFFDDHHDFGGFFFGNNNRRRRRRRRLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLHRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMNSDGSSSSSSSSSSDGDDGEEEGEGEGSSNSSNSSSSSSSSSDSSSSSSSSSSSSSSSSSSSSSSNSNSNSSSDNNSSNNNNNSSSSSSSSSSSNNSNNNSSSSSSSSSNNNNSSSSSSSSSSDNNSSSSSSSSSSSSSSSSSSSSSSSSSNNNNNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDRRRRMLLLMLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLMMMDDSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNENNNNNNNNNNNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDDEDNNCLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLGEGEGEGEGEGEGEGEGEGEGEGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGFFFFFGGFFFFFRHHRRRHRRRRRRHHRRRRRRHHHHHRRRHHH","n":["base","color","color_space","context","data_provider","display","event","event_source","font","geometry","gradient","image","path","private","sys","window","CGError","CGFloat","CGGlyph","boolean_t","kCGBitmapByteOrder16Big","kCGBitmapByteOrder16Host","kCGBitmapByteOrder16Little","kCGBitmapByteOrder32Big","kCGBitmapByteOrder32Host","kCGBitmapByteOrder32Little","kCGBitmapByteOrderDefault","kCGErrorCannotComplete","kCGErrorFailure","kCGErrorIllegalArgument","kCGErrorInvalidConnection","kCGErrorInvalidContext","kCGErrorInvalidOperation","kCGErrorNoneAvailable","kCGErrorNotImplemented","kCGErrorRangeCheck","kCGErrorSuccess","kCGErrorTypeCheck","kCGImageAlphaFirst","kCGImageAlphaLast","kCGImageAlphaNone","kCGImageAlphaNoneSkipFirst","kCGImageAlphaNoneSkipLast","kCGImageAlphaPremultipliedFirst","kCGImageAlphaPremultipliedLast","kCGRenderingIntentAbsoluteColorimetric","kCGRenderingIntentDefault","kCGRenderingIntentPerceptual","kCGRenderingIntentRelativeColorimetric","kCGRenderingIntentSaturation","CGColor","SysCGColorRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","equivalent","from","from_mut_void","from_void","into","rgb","to_owned","to_void","to_void","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CGColorSpace","CGColorSpaceRef","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_device_gray","create_device_rgb","create_with_name","deref","deref_mut","drop","from","from","into","into","kCGColorSpaceAdobeRGB1998","kCGColorSpaceGenericCMYK","kCGColorSpaceGenericGray","kCGColorSpaceGenericGrayGamma2_2","kCGColorSpaceGenericRGB","kCGColorSpaceGenericRGBLinear","kCGColorSpaceSRGB","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGBlendMode","CGContext","CGContextRef","CGInterpolationQuality","CGInterpolationQualityDefault","CGInterpolationQualityHigh","CGInterpolationQualityLow","CGInterpolationQualityMedium","CGInterpolationQualityNone","CGLineCap","CGLineCapButt","CGLineCapRound","CGLineCapSquare","CGLineJoin","CGLineJoinBevel","CGLineJoinMiter","CGLineJoinRound","CGPathDrawingMode","CGPathEOFill","CGPathEOFillStroke","CGPathFill","CGPathFillStroke","CGPathStroke","CGTextClip","CGTextDrawingMode","CGTextFill","CGTextFillClip","CGTextFillStroke","CGTextFillStrokeClip","CGTextInvisible","CGTextStroke","CGTextStrokeClip","Clear","Color","ColorBurn","ColorDodge","Copy","Darken","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","Difference","Exclusion","HardLight","Hue","Lighten","Luminosity","Multiply","Normal","Overlay","PlusDarker","PlusLighter","Saturation","Screen","SoftLight","SourceAtop","SourceIn","SourceOut","Xor","add_curve_to_point","add_line_to_point","add_path","add_quad_curve_to_point","as_ref","begin_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clear_rect","clip","clip_bounding_box","clip_to_mask","clip_to_rect","clip_to_rects","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_path","concat_ctm","create_bitmap_context","create_image","data","deref","deref_mut","draw_image","draw_linear_gradient","draw_path","draw_radial_gradient","drop","eo_clip","eo_fill_path","fill_ellipse_in_rect","fill_path","fill_rect","fill_rects","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_existing_context_ptr","get_ctm","get_interpolation_quality","height","into","into","into","into","into","into","into","into","move_to_point","replace_path_with_stroked_path","restore","rotate","save","scale","set_allows_antialiasing","set_allows_font_smoothing","set_allows_font_subpixel_positioning","set_allows_font_subpixel_quantization","set_blend_mode","set_fill_color","set_font","set_font_size","set_font_smoothing_style","set_gray_fill_color","set_interpolation_quality","set_line_cap","set_line_dash","set_line_join","set_line_width","set_miter_limit","set_rgb_fill_color","set_rgb_stroke_color","set_shadow","set_shadow_with_color","set_should_antialias","set_should_smooth_fonts","set_should_subpixel_position_fonts","set_should_subpixel_quantize_fonts","set_text_drawing_mode","set_text_matrix","set_text_position","show_glyphs_at_positions","stroke_ellipse_in_rect","stroke_line_segments","stroke_path","stroke_rect","stroke_rect_with_width","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","CGDataProvider","CGDataProviderGetBytePointerCallback","CGDataProviderGetBytesAtOffsetCallback","CGDataProviderGetBytesAtPositionCallback","CGDataProviderGetBytesCallback","CGDataProviderRef","CGDataProviderReleaseBytePointerCallback","CGDataProviderReleaseDataCallback","CGDataProviderReleaseInfoCallback","CGDataProviderRewindCallback","CGDataProviderSkipBytesCallback","CGDataProviderSkipForwardCallback","CustomData","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_data","deref","deref_mut","drop","from","from","from_buffer","from_custom_data","from_slice","into","into","len","ptr","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CFArray","CFArrayGetCount","CFArrayGetValueAtIndex","CFArrayRef","CFDictionary","CFDictionaryGetValueIfPresent","CFDictionaryRef","CFIndex","CFRelease","CFTypeRef","CGAssociateMouseAndMouseCursorPosition","CGBeginDisplayConfiguration","CGCancelDisplayConfiguration","CGCompleteDisplayConfiguration","CGConfigureDisplayMirrorOfDisplay","CGConfigureDisplayOrigin","CGConfigureDisplayWithDisplayMode","CGConfigureOption","CGDirectDisplayID","CGDisplay","CGDisplayBounds","CGDisplayConfigRef","CGDisplayCopyAllDisplayModes","CGDisplayCopyDisplayMode","CGDisplayCreateImage","CGDisplayHideCursor","CGDisplayIsActive","CGDisplayIsAlwaysInMirrorSet","CGDisplayIsAsleep","CGDisplayIsBuiltin","CGDisplayIsInHWMirrorSet","CGDisplayIsInMirrorSet","CGDisplayIsMain","CGDisplayIsOnline","CGDisplayIsStereo","CGDisplayMirrorsDisplay","CGDisplayMode","CGDisplayModeCopyPixelEncoding","CGDisplayModeGetHeight","CGDisplayModeGetIODisplayModeID","CGDisplayModeGetIOFlags","CGDisplayModeGetPixelHeight","CGDisplayModeGetPixelWidth","CGDisplayModeGetRefreshRate","CGDisplayModeGetWidth","CGDisplayModeRef","CGDisplayModeRelease","CGDisplayModelNumber","CGDisplayMoveCursorToPoint","CGDisplayPixelsHigh","CGDisplayPixelsWide","CGDisplayPrimaryDisplay","CGDisplayRotation","CGDisplayScreenSize","CGDisplaySerialNumber","CGDisplayShowCursor","CGDisplayUnitNumber","CGDisplayUsesOpenGLAcceleration","CGDisplayVendorNumber","CGError","CGGetActiveDisplayList","CGGetDisplaysWithRect","CGMainDisplayID","CGPoint","CGRect","CGRectInfinite","CGRectNull","CGSize","CGWarpMouseCursorPosition","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","ConfigureForAppOnly","ConfigureForSession","ConfigurePermanently","IO16BitDirectPixels","IO1BitIndexedPixels","IO2BitIndexedPixels","IO32BitDirectPixels","IO4BitIndexedPixels","IO8BitIndexedPixels","IO8BitOverlayPixels","IOYUV422Pixels","active_display_count","active_displays","all_display_modes","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_ref","associate_mouse_and_mouse_cursor_position","begin_configuration","bit_depth","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","cancel_configuration","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complete_configuration","configure_display_mirror_of_display","configure_display_origin","configure_display_with_display_mode","contains_key","deref","deref_mut","display_mode","drop","drop","drop","eq","eq","equivalent","equivalent","find","fmt","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFTypes","from_copyable","from_mut_void","from_mut_void","from_void","from_void","get","get","get_all_values","get_keys_and_values","get_unchecked","get_values","height","height","hide_cursor","id","image","into","into","into","into","into","into","into_iter","into_untyped","into_untyped","io_flags","is_active","is_always_in_mirror_set","is_asleep","is_builtin","is_empty","is_in_hw_mirror_set","is_in_mirror_set","is_main","is_online","is_stereo","iter","kCGDisplayShowDuplicateLowResolutionModes","kCGNullDirectDisplayID","kCGNullWindowID","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowListExcludeDesktopElements","kCGWindowListOptionAll","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kDisplayModeAcceleratorBackedFlag","kDisplayModeAlwaysShowFlag","kDisplayModeBuiltInFlag","kDisplayModeDefaultFlag","kDisplayModeInterlacedFlag","kDisplayModeNativeFlag","kDisplayModeNeverShowFlag","kDisplayModeNotGraphicsQualityFlag","kDisplayModeNotPresetFlag","kDisplayModeNotResizeFlag","kDisplayModeRequiresPanFlag","kDisplayModeSafeFlag","kDisplayModeSafetyFlags","kDisplayModeSimulscanFlag","kDisplayModeStretchedFlag","kDisplayModeTelevisionFlag","kDisplayModeValidFlag","kDisplayModeValidForAirPlayFlag","kDisplayModeValidForHiResFlag","kDisplayModeValidForMirroringFlag","kDisplayModeValidateAgainstDisplay","kIO16BitFloatPixels","kIO30BitDirectPixels","kIO32BitFloatPixels","kIO64BitDirectPixels","len","len","main","mirrors_display","mode_id","model_number","move_cursor_to_point","new","null_display","origin","pixel_encoding","pixel_height","pixel_width","pixels_high","pixels_wide","primary_display","refresh_rate","rotation","screen_size","screenshot","screenshot_from_windows","serial_number","show_cursor","size","to_mutable","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_number","uses_open_gl_acceleration","vendor_number","warp_mouse_cursor_position","width","width","window_list_info","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","x","y","AnnotatedSession","CAPS_LOCK","CGEvent","CGEventField","CGEventFlagAlphaShift","CGEventFlagAlternate","CGEventFlagCommand","CGEventFlagControl","CGEventFlagHelp","CGEventFlagNonCoalesced","CGEventFlagNull","CGEventFlagNumericPad","CGEventFlagSecondaryFn","CGEventFlagShift","CGEventFlags","CGEventMask","CGEventRef","CGEventTap","CGEventTapCallBackFn","CGEventTapLocation","CGEventTapOptions","CGEventTapPlacement","CGEventTapProxy","CGEventType","CGKeyCode","CGMouseButton","CGScrollEventUnit","COMMAND","CONTROL","Center","DELETE","DOWN_ARROW","Default","END","ESCAPE","EVENT_SOURCE_GROUP_ID","EVENT_SOURCE_STATE_ID","EVENT_SOURCE_UNIX_PROCESS_ID","EVENT_SOURCE_USER_DATA","EVENT_SOURCE_USER_ID","EVENT_TARGET_PROCESS_SERIAL_NUMBER","EVENT_TARGET_UNIX_PROCESS_ID","EventField","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F3","F4","F5","F6","F7","F8","F9","FORWARD_DELETE","FUNCTION","FlagsChanged","HELP","HID","HOME","HeadInsertEventTap","KEYBOARD_EVENT_AUTOREPEAT","KEYBOARD_EVENT_KEYBOARD_TYPE","KEYBOARD_EVENT_KEYCODE","KeyCode","KeyDown","KeyUp","LEFT_ARROW","LINE","Left","LeftMouseDown","LeftMouseDragged","LeftMouseUp","ListenOnly","MOUSE_EVENT_BUTTON_NUMBER","MOUSE_EVENT_CLICK_STATE","MOUSE_EVENT_DELTA_X","MOUSE_EVENT_DELTA_Y","MOUSE_EVENT_INSTANT_MOUSER","MOUSE_EVENT_NUMBER","MOUSE_EVENT_PRESSURE","MOUSE_EVENT_SUB_TYPE","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT","MUTE","MouseMoved","Null","OPTION","OtherMouseDown","OtherMouseDragged","OtherMouseUp","PAGE_DOWN","PAGE_UP","PIXEL","RETURN","RIGHT_ARROW","RIGHT_COMMAND","RIGHT_CONTROL","RIGHT_OPTION","RIGHT_SHIFT","Right","RightMouseDown","RightMouseDragged","RightMouseUp","SCROLL_WHEEL_EVENT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_INSTANT_MOUSER","SCROLL_WHEEL_EVENT_IS_CONTINUOUS","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2","SHIFT","SPACE","ScrollEventUnit","ScrollWheel","Session","TAB","TABLET_EVENT_DEVICE_ID","TABLET_EVENT_POINT_BUTTONS","TABLET_EVENT_POINT_PRESSURE","TABLET_EVENT_POINT_X","TABLET_EVENT_POINT_Y","TABLET_EVENT_POINT_Z","TABLET_EVENT_ROTATION","TABLET_EVENT_TANGENTIAL_PRESSURE","TABLET_EVENT_TILT_X","TABLET_EVENT_TILT_Y","TABLET_EVENT_VENDOR_1","TABLET_EVENT_VENDOR_2","TABLET_EVENT_VENDOR_3","TABLET_PROXIMITY_EVENT_CAPABILITY_MASK","TABLET_PROXIMITY_EVENT_DEVICE_ID","TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY","TABLET_PROXIMITY_EVENT_POINTER_ID","TABLET_PROXIMITY_EVENT_POINTER_TYPE","TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID","TABLET_PROXIMITY_EVENT_TABLET_ID","TABLET_PROXIMITY_EVENT_VENDOR_ID","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE","TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID","TabletPointer","TabletProximity","TailAppendEventTap","TapDisabledByTimeout","TapDisabledByUserInput","UP_ARROW","VOLUME_DOWN","VOLUME_UP","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_ref","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","deref","deref_mut","difference","drop","empty","enable","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_double_value_field","get_flags","get_integer_value_field","get_type","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","mach_port","new","new","new_keyboard_event","new_mouse_event","not","partial_cmp","post","remove","set","set_double_value_field","set_flags","set_integer_value_field","set_string","set_string_from_utf16_unchecked","set_type","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","CGEventSource","CGEventSourceRef","CGEventSourceStateID","CombinedSessionState","HIDSystemState","Private","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref_mut","drop","fmt","from","from","from","into","into","into","new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CGFont","CGFontRef","CGGlyph","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_table_for_tag","copy_table_tags","copy_variation_axes","copy_variations","create_copy_from_variations","deref","deref_mut","drop","from","from","from_data_provider","from_name","get_glyph_advances","get_glyph_b_boxes","get_units_per_em","into","into","postscript_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y","CGGradient","CGGradientDrawingOptions","CGGradientDrawsAfterEndLocation","CGGradientDrawsBeforeStartLocation","CGGradientRef","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","create_with_color_components","create_with_colors","deref","deref_mut","difference","drop","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","CGImage","CGImageAlphaFirst","CGImageAlphaInfo","CGImageAlphaLast","CGImageAlphaNone","CGImageAlphaNoneSkipFirst","CGImageAlphaNoneSkipLast","CGImageAlphaOnly","CGImageAlphaPremultipliedFirst","CGImageAlphaPremultipliedLast","CGImageByteOrder16Big","CGImageByteOrder16Little","CGImageByteOrder32Big","CGImageByteOrder32Little","CGImageByteOrderInfo","CGImageByteOrderMask","CGImageRef","as_ref","bits_per_component","bits_per_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clone","clone_into","color_space","cropped","data","deref","deref_mut","drop","from","from","from","from","height","into","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width","AddCurveToPoint","AddLineToPoint","AddQuadCurveToPoint","CGPath","CGPathElement","CGPathElementRef","CGPathElementType","CGPathRef","CloseSubpath","MoveToPoint","SysCGPathRef","apply","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","drop","element_type","eq","fmt","fmt","from","from","from","from","from","from_rect","into","into","into","into","into","points","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","CGSRegion","CGSSurface","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","from_ids","from_rect","from_rects","id","into","into","set_shape","try_from","try_from","try_into","try_into","type_id","type_id","CGColorRef","CGColorSpace","CGColorSpaceRef","CGContext","CGContextRef","CGDataProvider","CGDataProviderRef","CGDisplayMode","CGDisplayModeRef","CGEvent","CGEventRef","CGEventSource","CGEventSourceRef","CGEventTap","CGEventTapRef","CGFont","CGFontRef","CGGradient","CGGradientRef","CGImage","CGImageRef","CGPath","CGPathRef","__CGColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CGWindowBackingType","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreate","CGWindowListCreateDescriptionFromArray","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","CGWindowSharingType","copy_window_info","create_description_from_array","create_image","create_image_from_array","create_window_list","kCGNullWindowID","kCGWindowAlpha","kCGWindowBackingLocationVideoMemory","kCGWindowBackingStoreBuffered","kCGWindowBackingStoreNonretained","kCGWindowBackingStoreRetained","kCGWindowBounds","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowIsOnscreen","kCGWindowLayer","kCGWindowListOptionAll","kCGWindowListOptionExcludeDesktopElements","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kCGWindowMemoryUsage","kCGWindowName","kCGWindowNumber","kCGWindowOwnerName","kCGWindowOwnerPID","kCGWindowSharingNone","kCGWindowSharingReadOnly","kCGWindowSharingReadWrite","kCGWindowSharingState","kCGWindowStoreType","kCGWindowWorkspace"],"q":[[0,"core_graphics"],[16,"core_graphics::base"],[50,"core_graphics::color"],[75,"core_graphics::color_space"],[111,"core_graphics::context"],[330,"core_graphics::data_provider"],[373,"core_graphics::display"],[670,"core_graphics::event"],[1005,"core_graphics::event_source"],[1047,"core_graphics::font"],[1085,"core_graphics::geometry"],[1166,"core_graphics::gradient"],[1246,"core_graphics::image"],[1310,"core_graphics::path"],[1377,"core_graphics::private"],[1399,"core_graphics::sys"],[1508,"core_graphics::window"]],"d":["","","","","","","","","","","","","","Evil private APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>CGContext</code> instance from an existing <code>CGContextRef</code> …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encapsulates custom data that can be wrapped.","","","","","","","","","Creates a copy of the data from the underlying …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a data provider from the given reference-counted …","Creates a data provider from the given raw pointer, …","Creates a data prvider from a given slice. The data …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this custom data. This value must …","Returns a pointer to the start of the custom data. This …","","","","","","","","","","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides count of displays that are active (or drawable).","Provides a list of displays that are active (or drawable).","Returns all display modes for the specified display id.","","","","","","Connects or disconnects the mouse and cursor while an …","Begins a new set of display configuration changes.","Returns the number of bits per pixel of the specified …","","","","","","","","","","","","","","","Returns the bounds of a display in the global display …","Cancels a set of display configuration changes.","","","","","","","","","","","Completes a set of display configuration changes.","Changes the configuration of a mirroring set.","Configures the origin of a display in the global display …","Configures the display mode of a display.","","","","Returns information about a display’s current …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","Panics","","","","","Returns the height of the specified display mode.","","Hides the mouse cursor, and increments the hide cursor …","","Returns an image containing the contents of the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the same array, but with the type reset to void …","Returns the same dictionary, but with the types reset to …","Returns the I/O Kit flags of the specified display mode.","Returns a Boolean value indicating whether a display is …","Returns a boolean indicating whether a display is always …","Returns a boolean indicating whether a display is sleeping …","Returns a boolean indicating whether a display is …","","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is the main …","Returns a boolean indicating whether a display is …","Returns a boolean indicating whether a display is running …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the the main display.","For a secondary display in a mirroring set, returns the …","","Returns the model number of a display monitor.","Moves the mouse cursor to a specified point relative to …","","A value that will never correspond to actual hardware.","","Returns the pixel encoding of the specified display mode.","Returns the pixel height of the specified display mode.","Returns the pixel width of the specified display mode.","Returns the display height in pixel units.","Returns the display width in pixel units.","Returns the primary display in a hardware mirroring set.","","Returns the rotation angle of a display in degrees.","Returns the width and height of a display in millimeters.","Returns a composite image based on a dynamically generated …","Returns a composite image of the specified windows.","Returns the serial number of a display monitor.","Decrements the hide cursor count, and shows the mouse …","","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the logical unit number of a display.","Returns a boolean indicating whether Quartz is using …","Returns the vendor number of the specified display’s …","Moves the mouse cursor without generating events.","Returns the width of the specified display mode.","","Generates and returns information about the selected …","","","","","","","","","","","","","","","","","","","","","Flags for events","","","","","Possible tapping points for events.","","","","Constants that specify the different types of input events.","","","","","","","","","","","","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source state …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event target …","Key to access a field that contains the event target Unix …","Constants used as keys to access specialized fields in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field, non-zero when this is an …","Key to access an integer field that contains the keyboard …","Key to access an integer field that contains the virtual …","Key codes for keys that are independent of keyboard layout.","","","","","","","","","","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the …","Key to access an integer field that contains the vertical …","Key to access an integer field. The value is non-zero if …","Key to access an integer field that contains the mouse …","Key to access a double field that contains the mouse …","Key to access an integer field that encodes the mouse …","Added in 10.5; made public in 10.7.","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field that contains scrolling …","Key to access an integer field that contains scrolling …","Key to access a field that contains scrolling data. The …","Key to access a field that contains scrolling data. The …","Key to access an integer field that indicates whether the …","Key to access an integer field that indicates whether a …","Key to access an integer field that contains pixel-based …","Key to access an integer field that contains pixel-based …","","","","","","","Key to access an integer field that contains the …","Key to access an integer field that contains the tablet …","Key to access a double field that contains the tablet pen …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access a double field that contains the tablet pen …","Key to access a double field that contains the tangential …","Key to access a double field that contains the horizontal …","Key to access a double field that contains the vertical …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains the device …","Key to access an integer field that contains the …","Key to access an integer field that indicates whether the …","Key to access an integer field that contains the …","Key to access an integer field that contains the pointer …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Possible source states of an event source.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a cropped image. If the <code>rect</code> specifies a rectangle …","Returns the raw image bytes wrapped in <code>CFData</code>. Note, the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","This should always be memory-safe; the window server …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,13,13,13,14,13,14,13,13,13,13,13,13,13,13,13,14,13,14,0,0,0,0,0,0,0,13,14,13,14,13,14,13,13,14,0,0,0,0,28,28,28,28,28,0,25,25,25,0,26,26,26,0,27,27,27,27,27,41,0,41,41,41,41,41,41,41,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,17,17,17,17,19,17,41,24,25,26,27,28,19,19,17,41,24,25,26,27,28,19,17,17,17,17,17,17,17,17,24,25,26,27,28,19,24,25,26,27,28,19,17,17,19,17,19,19,19,17,17,17,17,19,17,17,17,17,17,17,17,24,25,26,27,28,41,24,25,26,27,28,19,17,19,17,17,17,41,24,25,26,27,28,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,24,25,26,27,28,19,17,17,41,24,25,26,27,28,19,17,41,24,25,26,27,28,19,17,41,24,25,26,27,28,19,19,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,43,43,43,44,43,44,43,43,44,43,43,43,43,44,43,43,43,43,44,50,50,43,44,43,44,43,44,43,43,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,0,0,0,0,0,0,0,0,64,64,60,61,62,61,62,60,64,64,60,0,61,62,66,64,60,60,63,61,62,66,64,60,63,64,64,61,62,66,64,60,61,62,66,64,60,64,64,64,64,62,60,60,64,61,62,60,61,62,61,62,62,61,62,64,61,62,66,64,60,63,62,61,61,61,62,61,62,61,62,61,62,61,61,60,40,64,64,64,61,62,66,64,60,63,61,61,62,60,64,64,64,64,62,64,64,64,64,64,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,64,64,60,64,64,64,64,21,60,60,60,64,64,64,60,64,64,64,64,64,64,21,62,61,62,66,64,60,63,61,62,61,61,62,62,61,62,66,64,60,63,61,62,66,64,60,63,61,61,62,62,66,64,60,63,64,64,64,64,60,40,64,61,62,61,62,33,33,87,120,0,0,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,86,120,120,89,120,120,121,121,121,121,121,121,121,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,85,120,87,120,88,121,121,121,0,85,85,120,122,86,85,85,85,89,121,121,121,121,121,121,121,121,121,121,120,85,85,120,85,85,85,120,120,122,120,120,120,120,120,120,86,85,85,85,121,121,121,121,121,121,121,121,120,120,0,85,87,120,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,85,85,88,85,85,120,120,120,82,83,82,82,82,82,82,82,82,120,122,121,91,82,85,86,87,88,89,83,83,84,120,122,121,91,82,85,86,87,88,89,83,84,91,82,85,86,87,88,89,83,82,85,86,87,88,89,83,82,82,82,83,83,82,83,82,91,82,82,82,82,82,82,82,82,85,86,87,88,89,120,122,121,91,82,85,86,87,88,89,83,84,82,82,82,82,83,83,83,83,82,82,82,82,120,122,121,91,82,85,86,87,88,89,83,84,82,82,83,91,91,83,83,83,82,82,83,82,82,83,83,83,83,83,83,82,82,82,82,85,86,87,88,89,83,84,82,120,122,121,91,82,85,86,87,88,89,83,84,120,122,121,91,82,85,86,87,88,89,83,84,120,122,121,91,82,85,86,87,88,89,83,83,84,82,0,0,0,102,102,102,97,102,97,97,101,102,97,101,102,97,102,97,97,97,97,102,102,97,101,102,97,101,97,102,97,101,102,97,101,102,97,101,102,97,97,101,0,0,0,38,38,38,103,38,103,38,38,38,38,38,38,38,38,38,38,38,103,38,38,38,38,38,38,103,38,38,103,38,103,38,103,38,38,103,0,0,0,0,0,0,0,0,29,40,33,21,29,40,33,21,29,40,33,21,29,29,40,33,21,29,40,33,21,29,21,29,40,33,21,29,40,33,21,29,40,33,21,29,21,40,21,40,33,21,29,29,21,21,40,33,21,29,21,21,40,33,21,29,40,33,21,29,40,33,21,29,29,29,40,33,21,29,40,33,33,0,0,34,34,0,34,32,34,34,34,34,34,34,34,34,32,32,107,34,32,107,34,32,34,32,34,34,34,32,32,32,32,34,32,34,34,34,34,34,34,34,34,34,34,32,107,34,34,34,34,34,34,34,34,34,32,107,34,34,34,34,34,34,34,34,34,34,32,107,34,34,32,107,34,32,107,34,32,107,34,0,123,0,123,123,123,123,123,123,123,124,124,124,124,0,124,0,22,108,108,123,124,22,22,108,123,124,22,108,108,22,22,108,108,108,22,22,22,123,124,22,108,108,123,124,22,108,22,22,108,123,124,22,108,123,124,22,108,123,124,22,22,108,108,111,111,111,0,0,0,0,0,111,111,0,109,109,112,113,109,109,18,111,112,113,109,18,111,109,111,109,111,112,109,109,109,113,111,113,111,112,113,109,18,111,109,112,113,109,18,111,113,109,18,111,112,113,109,18,111,112,113,109,18,111,112,113,109,109,18,111,0,0,114,116,114,116,114,114,116,116,114,114,116,114,116,116,114,116,114,116,114,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,126,127,128,129,130,37,131,132,133,134,135,125,126,127,128,129,130,37,131,132,133,134,135,125,126,127,128,129,130,37,131,132,133,134,135,125,126,127,128,129,130,37,131,132,133,134,135,3,125,126,127,128,129,130,37,131,132,133,134,135,125,126,127,128,129,130,37,131,132,133,134,135,125,126,127,128,129,130,37,131,132,133,134,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[[]],[[]],[1,1],[[]],[1],[[1,1],4],[[],4],[[]],[5,6],[5,7],[[]],[[8,8,8,8],1],[[]],[1,9],[1,9],[[],10],[[],10],[[],11],[[],12],[3,1],[3,1],0,0,[13,14],[[]],[13,14],[[]],[[]],[[]],[13,13],[[]],[[],13],[[],13],[15,[[16,[13]]]],[13,14],[13,14],[13],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[14,13],[[],10],[[],10],[[],10],[[],10],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,8,8,8,8,8,8]],[[17,8,8]],[[17,18]],[[17,8,8,8,8]],[19,17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,20],[[17,21]],[17],[17,21],[[17,21,22]],[[17,21]],[[17,[23,[21]]]],[24,24],[25,25],[26,26],[27,27],[28,28],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[17,29]],[[[16,[9]],20,20,20,20,13,30],19],[17,[[16,[22]]]],[19,[[23,[31]]]],[19,17],[19,17],[[17,21,22]],[[17,32,33,33,34]],[[17,27]],[[17,32,33,8,33,8,34]],[19],[17],[17],[[17,21]],[17],[[17,21]],[[17,[23,[21]]]],[17],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,19],[17,29],[17,28],[17,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,8,8]],[17],[17],[[17,8]],[17],[[17,8,8]],[[17,4]],[[17,4]],[[17,4]],[[17,4]],[[17,24]],[[17,1]],[[17,38]],[[17,8]],[[17,39]],[[17,8,8]],[[17,28]],[[17,25]],[[17,8,[23,[8]]]],[[17,26]],[[17,8]],[[17,8]],[[17,8,8,8,8]],[[17,8,8,8,8]],[[17,40,8]],[[17,40,8,1]],[[17,4]],[[17,4]],[[17,4]],[[17,4]],[[17,41]],[[17,29]],[[17,8,8]],[[17,[23,[42]],[23,[33]]]],[[17,21]],[[17,[23,[33]]]],[17],[[17,21]],[[17,21,8]],[[]],[[]],[[]],[[]],[[]],[[]],[17,19],[[17,8,8]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],11],[[],12],[17,20],0,0,0,0,0,0,0,0,0,0,0,0,0,[43,44],[[]],[43,44],[[]],[[]],[[]],[43,43],[[]],[44,45],[43,44],[43,44],[43],[[]],[[]],[[[49,[[0,[[46,[[23,[31]]]],47,48]]]]],43],[[[51,[[51,[50]]]]],43],[[[23,[31]]],43],[[]],[[]],[[],52],[[],31],[[]],[44,43],[[],10],[[],10],[[],10],[[],10],[[],12],[[],11],[[],12],0,[53,54],[[53,54],5],0,0,[[55,5,5],31],0,0,[5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[10,[30,56]]]],[[],[[10,[[58,[57]],56]]]],[[57,59],[[16,[[58,[60]]]]]],[61,5],[62,5],[61,53],[62,55],[60,63],[4,[[10,[56]]]],[64,[[10,[65,56]]]],[60,52],0,[[]],[[]],[[]],[[]],[60,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,21],[[64,65],[[10,[56]]]],[[[61,[5]]],[[61,[5]]]],[[[62,[5,5]]],[[62,[5,5]]]],[66,66],[64,64],[60,60],[[]],[[]],[[]],[[]],[[]],[[64,65,66],[[10,[56]]]],[[64,65,64],[[10,[56]]]],[[64,65,39,39],[[10,[56]]]],[[64,65,60],[[10,[56]]]],[[[62,[[67,[[67,[[67,[67]]]]]]]],[67,[[67,[[67,[[67,[67]]]]]]]]],4],[60,63],[60,63],[64,[[16,[60]]]],[61],[62],[60],[[[61,[5]],[61,[5]]],4],[[[62,[5,5]],[62,[5,5]]],4],[[],4],[[],4],[[[62,[[67,[[67,[[67,[67]]]]]],68]],[67,[[67,[[67,[[67,[67]]]]]]]]],[[16,[[7,[68]]]]]],[[61,35],[[10,[69]]]],[[62,35],[[10,[69]]]],[[64,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[62,[70,70]]]],[[[23,[70]]],[[61,[70]]]],[[[23,[71]]],[[61,[71]]]],[5,6],[5,6],[5,7],[5,7],[[[61,[68]],54],[[16,[[7,[68]]]]]],[[[62,[[67,[[67,[[67,[67]]]]]],68]],[67,[[67,[[67,[[67,[67]]]]]]]]],[[7,[68]]]],[61,[[58,[5,72]]]],[62],[[[61,[68]],54],[[7,[68]]]],[[61,73],[[58,[5,72]]]],[60,74],0,[64,[[10,[56]]]],0,[64,[[16,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[68]]],[[75,[68]]]],[61,[[61,[5]]]],[62,[[62,[5,5]]]],[60,30],[64,4],[64,4],[64,4],[64,4],[62,4],[64,4],[64,4],[64,4],[64,4],[64,4],[61,75],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,54],[62,52],[[],64],[64,57],[60,39],[64,30],[[64,33],[[10,[56]]]],[57,64],[[],64],0,[60,76],[60,74],[60,74],[64,74],[64,74],[64,57],[60,77],[64,77],[64,40],[[21,78,79,80],[[16,[22]]]],[[21,61,80],[[16,[22]]]],[64,30],[64,[[10,[56]]]],0,[62,81],[[]],[[]],[[]],[[]],[[]],[63,60],[61,[[61,[5]]]],[62,[[62,[5,5]]]],[[[61,[5]]],5],[[[61,[5]]],5],[[[62,[5,5]]],5],[[[62,[5,5]]],5],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],52],[[],12],[[],52],[[],12],[[],12],[[],12],[[],12],[[],12],[64,30],[64,4],[64,30],[33,[[10,[56]]]],[60,74],0,[[78,[16,[79]]],[[16,[61]]]],[53,61],[55,62],[53,61],[55,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],82],[83,84],[[82,82],82],[[82,82]],[[82,82],82],[[82,82]],[82,74],[[82,82],82],[[82,82]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[82,82],[85,85],[86,86],[87,87],[88,88],[89,89],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,82],90],[82,82],[[82,82],4],[83,84],[83,84],[[82,82],82],[83],[[],82],[91],[[82,82],4],[[],4],[[82,92]],[[82,35],36],[[82,35],36],[[82,35],36],[[82,35],36],[[82,35],36],[[85,35],36],[[86,35],36],[[87,35],36],[[88,35],36],[[89,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,[[16,[82]]]],[74,82],[74,82],[92,82],[[83,93],77],[83,82],[[83,93],94],[83,85],[[82,95]],[[82,82]],[[82,82],82],[[82,82],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,4],[82,4],[83,33],0,[[87,88,89,[58,[85]],96],[[10,[91]]]],[97,[[10,[83]]]],[[97,98,4],[[10,[83]]]],[[97,85,33,86],[[10,[83]]]],[82,82],[[82,82],[[16,[90]]]],[[83,87]],[[82,82]],[[82,82,4]],[[83,93,77]],[[83,82]],[[83,93,94]],[[83,99]],[[83,[23,[100]]]],[[83,85]],[[82,82],82],[[82,82]],[[82,82],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,83],[[82,82]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],11],[[],12],[[],12],[[82,82],82],0,0,0,0,0,0,[97,101],[[]],[[]],[97,101],[[]],[[]],[[]],[[]],[102,102],[97,97],[[]],[[]],[97,101],[97,101],[97],[[102,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[102,[[10,[97]]]],[[]],[[]],[101,97],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],11],[[],12],0,0,0,[38,103],[38,103],[[]],[[]],[[]],[[]],[38,38],[[]],[[38,30],[[16,[45]]]],[38,[[61,[30]]]],[38,[[16,[[61,[[62,[76,104]]]]]]]],[38,[[16,[[62,[76,105]]]]]],[[38,[62,[76,105]]],[[10,[38]]]],[38,103],[38,103],[38],[[]],[[]],[43,[[10,[38]]]],[76,[[10,[38]]]],[[38,[23,[42]],[23,[106]]],4],[[38,[23,[42]],[23,[21]]],4],[38,106],[[]],[[]],[38,76],[[]],[103,38],[[],10],[[],10],[[],10],[[],10],[[],12],[[],11],[[],12],0,0,0,0,0,0,0,0,0,[[40,29],40],[[33,29],33],[[21,29],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[40,40],[33,33],[21,21],[29,29],[[]],[[]],[[]],[[]],[[21,33],4],0,[[],40],[[],33],[[],21],[[],29],[[40,35],[[10,[69]]]],[[33,35],[[10,[69]]]],[[21,35],[[10,[69]]]],[[29,35],[[10,[69]]]],[[]],[[]],[[]],[[]],[[[62,[5,5]]],[[16,[21]]]],0,[[21,40],21],[[]],[[]],[[]],[[]],[29,29],[21,4],[[21,21],4],[[77,77],40],[[77,77],33],[[33,40],21],[[77,77,77,77,77,77],29],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,[[],34],[32,107],[[34,34],34],[[34,34]],[[34,34],34],[[34,34]],[34,30],[[34,34],34],[[34,34]],[[]],[32,107],[[]],[[]],[[]],[[]],[[]],[34,34],[32,32],[[]],[[]],[[34,34],90],[34,34],[[34,34],4],[[13,[23,[8]],[23,[8]],52],32],[[13,[61,[1]],[23,[8]]],32],[32,107],[32,107],[[34,34],34],[32],[[],34],[[34,34],4],[[],4],[[34,92]],[[34,35],36],[[34,35],36],[[34,35],36],[[34,35],36],[[34,35],36],[[]],[[]],[[]],[30,[[16,[34]]]],[30,34],[30,34],[92,34],[[34,95]],[[34,34]],[[34,34],34],[[34,34],4],[[]],[[]],[[]],[34,4],[34,4],[34,34],[[34,34],[[16,[90]]]],[[34,34]],[[34,34,4]],[[34,34],34],[[34,34]],[[34,34],34],[[]],[[]],[107,32],[[34,34]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[34,34],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,108],[108,20],[108,20],[[]],[[]],[22,108],[[]],[[]],[[]],[[]],[[]],[[]],[108,20],[22,22],[[]],[108,13],[[108,21],[[16,[22]]]],[108,45],[22,108],[22,108],[22],[[]],[[]],[[]],[[]],[108,20],[[]],[[]],[[]],[[]],[[20,20,20,20,20,13,30,43,4,30],22],[[]],[108,22],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],11],[[],12],[[],12],[108,20],0,0,0,0,0,0,0,0,0,0,0,[[109,110]],[109,18],[[]],[[]],[[]],[109,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,109],[111,111],[[]],[[]],[112,113],[109,18],[109,18],[109],0,[[111,111],4],[[113,35],[[10,[69]]]],[[111,35],36],[[]],[[]],[[]],[[]],[[]],[[21,[16,[29]]],109],[[]],[[]],[[]],[[]],[[]],[113,[[23,[33]]]],[[]],[18,109],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],11],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[114],[[]],[[]],[[115,106,115],116],[21,114],[[[23,[21]]],114],[116,115],[[]],[[]],[[116,114]],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[117,118],[[16,[61]]]],[[[61,[118]]],[[16,[[61,[[62,[76,104]]]]]]]],[[21,117,118,119],[[16,[22]]]],[[21,61,119],[[16,[22]]]],[[117,118],[[16,[[61,[118]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"CGColor"],[6,"CFTypeRef"],[6,"CGColorRef"],[15,"bool"],[4,"c_void"],[3,"ItemMutRef"],[3,"ItemRef"],[6,"CGFloat"],[6,"c_void"],[4,"Result"],[6,"CFTypeID"],[3,"TypeId"],[3,"CGColorSpace"],[3,"CGColorSpaceRef"],[6,"CFStringRef"],[4,"Option"],[3,"CGContextRef"],[3,"CGPathRef"],[3,"CGContext"],[6,"size_t"],[3,"CGRect"],[3,"CGImage"],[15,"slice"],[4,"CGBlendMode"],[4,"CGLineCap"],[4,"CGLineJoin"],[4,"CGPathDrawingMode"],[4,"CGInterpolationQuality"],[3,"CGAffineTransform"],[15,"u32"],[15,"u8"],[3,"CGGradient"],[3,"CGPoint"],[3,"CGGradientDrawingOptions"],[3,"Formatter"],[6,"Result"],[4,"CGContext"],[3,"CGFont"],[15,"i32"],[3,"CGSize"],[4,"CGTextDrawingMode"],[6,"CGGlyph"],[3,"CGDataProvider"],[3,"CGDataProviderRef"],[3,"CFData"],[8,"AsRef"],[8,"Sync"],[8,"Send"],[3,"Arc"],[8,"CustomData"],[3,"Box"],[15,"usize"],[3,"__CFArray"],[15,"isize"],[3,"__CFDictionary"],[6,"CGError"],[6,"CGDirectDisplayID"],[3,"Vec"],[6,"CFDictionaryRef"],[3,"CGDisplayMode"],[3,"CFArray"],[3,"CFDictionary"],[3,"CGDisplayModeRef"],[3,"CGDisplay"],[6,"CGDisplayConfigRef"],[4,"CGConfigureOption"],[8,"ToVoid"],[8,"FromVoid"],[3,"Error"],[8,"TCFType"],[8,"Copy"],[3,"Global"],[3,"CFRange"],[15,"u64"],[3,"CFArrayIterator"],[3,"CFString"],[15,"f64"],[6,"CGWindowListOption"],[6,"CGWindowID"],[6,"CGWindowImageOption"],[3,"CFMutableDictionary"],[3,"CGEventFlags"],[3,"CGEvent"],[3,"CGEventRef"],[4,"CGEventType"],[4,"CGMouseButton"],[4,"CGEventTapLocation"],[4,"CGEventTapPlacement"],[4,"CGEventTapOptions"],[4,"Ordering"],[3,"CGEventTap"],[8,"IntoIterator"],[6,"CGEventField"],[15,"i64"],[8,"Hasher"],[8,"Fn"],[3,"CGEventSource"],[6,"CGKeyCode"],[15,"str"],[15,"u16"],[3,"CGEventSourceRef"],[4,"CGEventSourceStateID"],[3,"CGFontRef"],[3,"CFType"],[3,"CFNumber"],[6,"c_int"],[3,"CGGradientRef"],[3,"CGImageRef"],[3,"CGPath"],[8,"FnMut"],[4,"CGPathElementType"],[3,"CGPathElementRef"],[3,"CGPathElement"],[3,"CGSRegion"],[6,"c_uint"],[3,"CGSSurface"],[6,"CGWindowListOption"],[6,"CGWindowID"],[6,"CGWindowImageOption"],[3,"KeyCode"],[3,"EventField"],[3,"ScrollEventUnit"],[4,"CGImageAlphaInfo"],[4,"CGImageByteOrderInfo"],[4,"CGImage"],[3,"__CGColor"],[4,"CGColorSpace"],[4,"CGPath"],[4,"CGDataProvider"],[4,"CGFont"],[4,"CGGradient"],[4,"CGEventTap"],[4,"CGEvent"],[4,"CGEventSource"],[4,"CGDisplayMode"]]},\
"core_graphics_types":{"doc":"","t":"AAGGGGRRRRRRRRRRRDDDDRRRRMLLLMLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLMMM","n":["base","geometry","CGError","CGFloat","CGGlyph","boolean_t","kCGErrorCannotComplete","kCGErrorFailure","kCGErrorIllegalArgument","kCGErrorInvalidConnection","kCGErrorInvalidContext","kCGErrorInvalidOperation","kCGErrorNoneAvailable","kCGErrorNotImplemented","kCGErrorRangeCheck","kCGErrorSuccess","kCGErrorTypeCheck","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y"],"q":[[0,"core_graphics_types"],[2,"core_graphics_types::base"],[17,"core_graphics_types::geometry"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,4,2,1,3,4,2,1,3,4,2,2,1,3,4,2,1,3,4,2,4,2,1,3,4,2,1,3,4,2,1,3,4,2,4,1,4,1,3,4,2,2,4,4,1,3,4,2,4,4,1,3,4,2,1,3,4,2,1,3,4,2,2,2,1,3,4,2,1,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[3,2],3],[[4,2],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[3,3],[4,4],[2,2],[[]],[[]],[[]],[[]],[[4,3],5],0,[[],1],[[],3],[[],4],[[],2],[[1,6],7],[[3,6],7],[[4,6],7],[[2,6],7],[[]],[[]],[[]],[[]],[8,[[9,[4]]]],0,[[4,1],4],[[]],[[]],[[]],[[]],[2,2],[4,5],[[4,4],5],[[10,10],1],[[10,10],3],[[3,1],4],[[10,10,10,10,10,10],2],0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],12],[[],12],[[],12],[[],12],0,0,0],"c":[],"p":[[3,"CGSize"],[3,"CGAffineTransform"],[3,"CGPoint"],[3,"CGRect"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"CFDictionary"],[4,"Option"],[6,"CGFloat"],[4,"Result"],[3,"TypeId"]]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":"DLLLLLLLLLLFLLLLLLLLLLL","n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":[[0,"crc32fast"]],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","Returns the argument unchanged.","Computes the CRC32 hash of a byte slice.","Calls <code>U::from(self)</code>.","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,1]],[[],1],[1,2],[1,3],[[1,4],5],[[]],[[[7,[6]]],2],[[]],[[],1],[2,1],[[2,3],1],[1],[[]],[[],8],[[],8],[[],9],[[1,[7,[6]]]],[[1,[7,[6]]]]],"c":[],"p":[[3,"Hasher"],[15,"u32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Result"],[3,"TypeId"]]},\
"csscolorparser":{"doc":"Overview","t":"DNNNNNNNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLLL","n":["Color","InvalidFunction","InvalidHex","InvalidHsl","InvalidHsv","InvalidHwb","InvalidRgb","InvalidUnknown","ParseColorError","a","b","borrow","borrow","borrow_mut","borrow_mut","clamp","clone","clone","clone_into","clone_into","cmp","default","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_hsl","from_hsla","from_hsv","from_hsva","from_html","from_hwb","from_hwba","from_linear_rgb","from_linear_rgb_u8","from_linear_rgba","from_linear_rgba8","from_linear_rgba_u8","from_oklab","from_oklaba","from_rgb","from_rgb_u8","from_rgba","from_rgba8","from_rgba_u8","from_str","g","hash","interpolate_hsv","interpolate_linear_rgb","interpolate_oklab","interpolate_rgb","into","into","name","new","parse","partial_cmp","partial_cmp","r","rgba","rgba_u8","to_array","to_hex_string","to_hsla","to_hsva","to_hwba","to_linear_rgba","to_linear_rgba_u8","to_oklaba","to_owned","to_owned","to_rgb_string","to_rgba16","to_rgba8","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"csscolorparser"]],"d":["The color","","","","","","","","","Alpha","Blue","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Arguments:","Arguments:","Arguments:","Arguments:","Create color from CSS color string.","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","Arguments:","","Green","","Blend this color with the other one, in the HSV …","Blend this color with the other one, in the linear RGB …","Blend this color with the other one, in the Oklab …","Blend this color with the other one, in the RGB …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Arguments:","Parse CSS color string","","","Red","Returns: <code>(r, g, b, a)</code>","Returns: <code>(r, g, b, a)</code>","","Get the RGB hexadecimal color string.","Returns: <code>(h, s, l, a)</code>","Returns: <code>(h, s, v, a)</code>","Returns: <code>(h, w, b, a)</code>","Returns: <code>(r, g, b, a)</code>","Returns: <code>(r, g, b, a)</code>","Returns: <code>(l, a, b, alpha)</code>","","","Get the CSS <code>rgb()</code> format string.","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,0,1,1,1,2,1,2,1,1,2,1,2,2,1,1,2,2,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,1,2,1,2,1,2],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[1,1],[2,2],[[]],[[]],[[2,2],3],[[],1],[[1,1],4],[[2,2],4],[[],4],[[1,5],6],[[1,5],6],[[2,5],6],[[2,5],6],[[[8,[7]]],1],[[[8,[7]]],1],[[]],[[],1],[[],1],[[[8,[9]]],1],[[[8,[10]]],1],[[[8,[9]]],1],[[],1],[[],1],[[[8,[10]]],1],[[]],[[7,7,7],1],[[7,7,7,7],1],[[7,7,7],1],[[7,7,7,7],1],[[[12,[11]]],[[13,[1,2]]]],[[7,7,7],1],[[7,7,7,7],1],[[7,7,7],1],[[10,10,10],1],[[7,7,7,7],1],[[10,10,10,10],1],[[10,10,10,10],1],[[7,7,7],1],[[7,7,7,7],1],[[7,7,7],1],[[10,10,10],1],[[7,7,7,7],1],[[10,10,10,10],1],[[10,10,10,10],1],[11,[[13,[1]]]],0,[[2,14]],[[1,1,7],1],[[1,1,7],1],[[1,1,7],1],[[1,1,7],1],[[]],[[]],[1,[[15,[11]]]],[[7,7,7,7],1],[11,[[13,[1,2]]]],[[1,1],[[15,[3]]]],[[2,2],[[15,[3]]]],0,[1],[1],[1,[[8,[7]]]],[1,16],[1],[1],[1],[1],[1],[1],[[]],[[]],[1,16],[1,[[8,[17]]]],[1,[[8,[10]]]],[[],16],[[],16],[11,[[13,[1]]]],[[],13],[[],13],[[],13],[[],13],[[],18],[[],18]],"c":[41,43,46,48,49,52,53,55,56,57,59,75,76],"p":[[3,"Color"],[4,"ParseColorError"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f64"],[15,"array"],[15,"f32"],[15,"u8"],[15,"str"],[8,"AsRef"],[4,"Result"],[8,"Hasher"],[4,"Option"],[3,"String"],[15,"u16"],[3,"TypeId"]]},\
"data_encoding":{"doc":"Efficient and customizable data-encoding functions like …","t":"RRRRRRRRRRREDEDDRRRRNNNNDDNNDDMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLMMMMLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["BASE32","BASE32HEX","BASE32HEX_NOPAD","BASE32_DNSCURVE","BASE32_DNSSEC","BASE32_NOPAD","BASE64","BASE64URL","BASE64URL_NOPAD","BASE64_MIME","BASE64_NOPAD","BitOrder","DecodeError","DecodeKind","DecodePartial","Encoding","HEXLOWER","HEXLOWER_PERMISSIVE","HEXUPPER","HEXUPPER_PERMISSIVE","LeastSignificantFirst","Length","MostSignificantFirst","Padding","Specification","SpecificationError","Symbol","Trailing","Translate","Wrap","bit_order","bit_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_trailing_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode_len","decode_mut","default","description","encode","encode_append","encode_len","encode_mut","encoding","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","ignore","into","into","into","into","into","into","into","into","into","is_canonical","kind","new","padding","position","read","separator","specification","symbols","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","wrap","written"],"q":[[0,"data_encoding"]],"d":["Padded base32 encoding","Padded base32hex encoding","Unpadded base32hex encoding","DNSCurve base32 encoding","DNSSEC base32 encoding","Unpadded base32 encoding","Padded base64 encoding","Padded base64url encoding","Unpadded base64url encoding","MIME base64 encoding","Unpadded base64 encoding","Order in which bits are read from a byte","Decoding error","Decoding error kind","Decoding error with partial result","Base-conversion encoding","Lowercase hexadecimal encoding","Lowercase hexadecimal encoding with case-insensitive …","Uppercase hexadecimal encoding","Uppercase hexadecimal encoding with case-insensitive …","Least significant bit first","Invalid length","Most significant bit first","Invalid padding length","Base-conversion specification","Specification error","Invalid symbol","Non-zero trailing bits","How to translate characters when decoding","How to wrap the output when encoding","Bit-order","Returns the bit-width","","","","","","","","","","","","","","","","","","","Check trailing bits","","","","","","","","","","","","","","","","","","","Returns decoded <code>input</code>","Returns the decoded length of an input of length <code>len</code>","Decodes <code>input</code> in <code>output</code>","","","Returns encoded <code>input</code>","Appends the encoding of <code>input</code> to <code>output</code>","Returns the encoded length of an input of length <code>len</code>","Encodes <code>input</code> in <code>output</code>","Returns the specified encoding","","","","","","","","","","","Decoding error","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Characters to translate from","Characters to ignore when decoding","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the encoding is canonical","Error kind","Returns a default specification","Padding","Error position","Number of bytes read from input","Wrapping characters","Returns the encoding specification","Symbols","Characters to translate to","","","","","","","","","","","","","How to translate characters when decoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapping width","How to wrap the output when encoding","Number of bytes written to output"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,6,3,0,0,3,3,0,0,9,1,3,4,5,6,1,7,8,9,10,3,4,5,6,1,7,8,9,10,9,3,4,5,6,1,7,8,9,10,3,4,5,6,1,7,8,9,10,1,1,1,9,10,1,1,1,1,9,3,4,5,6,1,3,4,5,6,1,5,3,3,4,4,5,6,1,7,8,9,10,10,3,4,5,6,1,7,8,9,10,7,9,3,4,5,6,1,7,8,9,10,1,4,9,9,4,5,8,1,9,7,3,4,5,6,1,7,8,9,10,3,4,10,9,3,4,5,6,1,7,8,9,10,3,4,5,6,1,7,8,9,10,3,4,5,6,1,7,8,9,10,8,9,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,3],[4,4],[5,5],[6,6],[1,1],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[12,[11]]],[[14,[[13,[11]],4]]]],[[1,2],[[14,[2,4]]]],[[1,[12,[11]],[12,[11]]],[[14,[2,5]]]],[[],9],[10,15],[[1,[12,[11]]],16],[[1,[12,[11]],16]],[[1,2],2],[[1,[12,[11]],[12,[11]]]],[9,[[14,[1,10]]]],[[3,3],17],[[4,4],17],[[5,5],17],[[6,6],17],[[1,1],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[3,18],19],[[3,18],19],[[4,18],19],[[4,18],19],[[5,18],19],[[6,18],19],[[1,18],19],[[7,18],19],[[8,18],19],[[9,18],19],[[10,18],19],[[10,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,17],0,[[],9],0,0,0,0,[1,9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0],"c":[],"p":[[3,"Encoding"],[15,"usize"],[4,"DecodeKind"],[3,"DecodeError"],[3,"DecodePartial"],[4,"BitOrder"],[3,"Translate"],[3,"Wrap"],[3,"Specification"],[3,"SpecificationError"],[15,"u8"],[15,"slice"],[3,"Vec"],[4,"Result"],[15,"str"],[3,"String"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"ddsfile":{"doc":"The main entry point for this library is the <code>Dds</code> type.","t":"NSNSNNNNSNNNNNNNNNNSSSSNENNNNNNNNNNSNNNSNNNSNNSNNSNSNNSNNNNNNNNNSSSSSSSSSNSDDNNNNNEESSNSNSNSNSNSIDEESNNNDNNSNSNSSNNSDDDNNNNNSSSSDSNNDDNNNNNNSSDDNNSNNNNNNSSNNSNNNSNSNNNNNNSNNNNNNNNNNSSNNNNNNNNSNNNNNSNNNNNNNNNNNNNNSSNNNNNNNNNNNNSNNSSNNNNSNNNNNNSSNNNNNNNNNNSNNSLMLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKLLLKLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMMLLLLLLLLLLLLLLLMLMLLLLLLLLLKLLMMMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLL","n":["A16B16G16R16","A16B16G16R16","A16B16G16R16F","A16B16G16R16F","A1R5G5B5","A2B10G10R10","A2R10G10B10","A32B32G32R32F","A32B32G32R32F","A4L4","A4R4G4B4","A8","A8B8G8R8","A8L8","A8P8","A8R3G3B2","A8R8G8B8","A8_UNorm","AI44","ALPHA","ALPHA_PIXELS","ATI1","ATI2","AYUV","AlphaMode","B4G4R4A4_UNorm","B5G5R5A1_UNorm","B5G6R5_UNorm","B8G8R8A8_Typeless","B8G8R8A8_UNorm","B8G8R8A8_UNorm_sRGB","B8G8R8X8_Typeless","B8G8R8X8_UNorm","B8G8R8X8_UNorm_sRGB","BC1_Typeless","BC1_UNORM","BC1_UNorm","BC1_UNorm_sRGB","BC2_Typeless","BC2_UNORM","BC2_UNorm","BC2_UNorm_sRGB","BC3_Typeless","BC3_UNORM","BC3_UNorm","BC3_UNorm_sRGB","BC4_SNORM","BC4_SNorm","BC4_Typeless","BC4_UNORM","BC4_UNorm","BC5_SNORM","BC5_SNorm","BC5_Typeless","BC5_UNORM","BC5_UNorm","BC6H_SF16","BC6H_Typeless","BC6H_UF16","BC7_Typeless","BC7_UNorm","BC7_UNorm_sRGB","BadMagicNumber","Buffer","CAPS","COMPLEX","CUBEMAP","CUBEMAP_NEGATIVEX","CUBEMAP_NEGATIVEY","CUBEMAP_NEGATIVEZ","CUBEMAP_POSITIVEX","CUBEMAP_POSITIVEY","CUBEMAP_POSITIVEZ","CXV8U8","CXV8U8","Caps","Caps2","Custom","D16_UNorm","D24_UNorm_S8_UInt","D32_Float","D32_Float_S8X24_UInt","D3D10ResourceDimension","D3DFormat","DEPTH","DX10","DXT1","DXT1","DXT2","DXT2","DXT3","DXT3","DXT4","DXT4","DXT5","DXT5","DataFormat","Dds","DxgiFormat","Error","FOURCC","Fmt","Force_UInt","Format_420_Opaque","FourCC","G16R16","G16R16F","G16R16F","G32R32F","G32R32F","G8R8_G8B8","G8R8_G8B8","G8R8_G8B8_UNORM","G8R8_G8B8_UNorm","General","HEIGHT","Header","Header10","HeaderFlags","IA44","InvalidField","Io","L16","L8","LINEARSIZE","LUMINANCE","MIPMAP","MIPMAPCOUNT","MiscFlag","NONE","NV11","NV12","NewD3dParams","NewDxgiParams","Opaque","OutOfBounds","P010","P016","P208","P8","PITCH","PIXELFORMAT","PixelFormat","PixelFormatFlags","PreMultiplied","Q16W16V16U16","Q16W16V16U16","R10G10B10A2_Typeless","R10G10B10A2_UInt","R10G10B10A2_UNorm","R10G10B10_XR_Bias_A2_UNorm","R11G11B10_Float","R16F","R16F","R16G16B16A16_FLOAT","R16G16B16A16_Float","R16G16B16A16_SInt","R16G16B16A16_SNORM","R16G16B16A16_SNorm","R16G16B16A16_Typeless","R16G16B16A16_UInt","R16G16B16A16_UNORM","R16G16B16A16_UNorm","R16G16_FLOAT","R16G16_Float","R16G16_SInt","R16G16_SNorm","R16G16_Typeless","R16G16_UInt","R16G16_UNorm","R16_FLOAT","R16_Float","R16_SInt","R16_SNorm","R16_Typeless","R16_UInt","R16_UNorm","R1_UNorm","R24G8_Typeless","R24_UNorm_X8_Typeless","R32F","R32F","R32G32B32A32_FLOAT","R32G32B32A32_Float","R32G32B32A32_SInt","R32G32B32A32_Typeless","R32G32B32A32_UInt","R32G32B32_Float","R32G32B32_SInt","R32G32B32_Typeless","R32G32B32_UInt","R32G32_FLOAT","R32G32_Float","R32G32_SInt","R32G32_Typeless","R32G32_UInt","R32G8X24_Typeless","R32_FLOAT","R32_Float","R32_Float_X8X24_Typeless","R32_SInt","R32_Typeless","R32_UInt","R5G6B5","R8G8B8","R8G8B8A8_SInt","R8G8B8A8_SNorm","R8G8B8A8_Typeless","R8G8B8A8_UInt","R8G8B8A8_UNorm","R8G8B8A8_UNorm_sRGB","R8G8_B8G8","R8G8_B8G8","R8G8_B8G8_UNORM","R8G8_B8G8_UNorm","R8G8_SInt","R8G8_SNorm","R8G8_Typeless","R8G8_UInt","R8G8_UNorm","R8_SInt","R8_SNorm","R8_Typeless","R8_UInt","R8_UNorm","R9G9B9E5_SharedExp","RGB","ShortFile","Straight","TEXTURE","TEXTURECUBE","Texture1D","Texture2D","Texture3D","UYVY","UYVY","Unknown","Unknown","Unknown","UnsupportedFormat","V208","V408","VOLUME","WIDTH","X1R5G5B5","X24_Typeless_G8_UInt","X32_Typeless_G8X24_UInt","X4R4G4B4","X8B8G8R8","X8R8G8B8","Y210","Y216","Y410","Y416","YUV","YUY2","YUY2","YUY2","a_bit_mask","a_bit_mask","all","all","all","all","all","alpha_mode","alpha_mode","array_layers","array_size","b_bit_mask","b_bit_mask","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caps","caps2","caps2","caps2","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","data","default","default","default","depth","depth","depth","difference","difference","difference","difference","difference","dxgi_format","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","fourcc","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_i64","from_i64","from_i64","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_u64","from_u64","g_bit_mask","g_bit_mask","get_array_stride","get_bits_per_pixel","get_bits_per_pixel","get_bits_per_pixel","get_bits_per_pixel","get_block_size","get_block_size","get_block_size","get_d3d_format","get_data","get_depth","get_dxgi_format","get_format","get_fourcc","get_fourcc","get_fourcc","get_height","get_main_texture_size","get_min_mipmap_size_in_bytes","get_minimum_mipmap_size_in_bytes","get_minimum_mipmap_size_in_bytes","get_mut_data","get_num_array_layers","get_num_mipmap_levels","get_pitch","get_pitch","get_pitch","get_pitch","get_pitch_height","get_pitch_height","get_pitch_height","get_width","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header10","height","height","height","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_cubemap","is_empty","is_empty","is_empty","is_empty","is_empty","linear_size","mip_map_count","mipmap_levels","mipmap_levels","misc_flag","new","new_d3d","new_d3d","new_dxgi","new_dxgi","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pitch","r_bit_mask","r_bit_mask","read","read","read","read","remove","remove","remove","remove","remove","requires_extension","requires_extension","requires_extension","resource_dimension","resource_dimension","rgb_bit_count","set","set","set","set","set","size","source","spf","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_pixel_format","try_from_pixel_format","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","width","width","width","write","write","write","write"],"q":[[0,"ddsfile"]],"d":["","","","","","","","","","","","","","","","","","","","Alpha channel only uncomressed data (used in older DDS …","Texture contains alpha data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Required in every DDS file","Optional; Must be used on any file that contains more than …","Required for a cube map","Required when these surfaces are stored in a cubemap","Required when these surfaces are stored in a cubemap","Required when these surfaces are stored in a cubemap","Required when these surfaces are stored in a cubemap","Required when these surfaces are stored in a cubemap","Required when these surfaces are stored in a cubemap","","","","","","","","","","","","Required in a depth texture","","","","","","","","","","","","","This is the main DirectDraw Surface file structure","","","Texture contains compressed RGB data.","","","","","","","","","","","","","","","Required in every DDS file","","","","","","","","","Required when pitch is provided for a compressed texture","Single channel color uncompressed data (used in older DDS …","Optional; should be used for a mipmap","Required in a mipmapped texture","","","","","Parameters for Dds::new_d3d()","Parameters for Dds::new_dxgi()","","","","","","","Required when pitch is provided for an uncompressed texture","Required in every DDS file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Texture contains uncompressed RGB data.","","","Required","2D Texture is a cube-map texture","","","","","","","","","","","","Required for a volume texture","Required in every DDS file","","","","","","","","","","","YUV uncompressed data (used in older DDS files)","","","","This gets the bitmask for the alpha channel pixels","Alpha mask for reading alpha data. Valid of flags includes …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","This is called misc_flags2 in the official documentation","","","This gets the bitmask for the blue channel pixels","Blue (or V) mask for reading color data. For instance, …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the complexity of the surfaces stored.","","","Additional detail about the surfaces stored","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","Depth of a volume texture (in pixels)","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Values which indicate what type of data is in the surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Codes for specifying compressed or custom formats.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","This gets the bitmask for the green channel pixels","Green (or U) mask for reading color data. For instance, …","","This gets the number of bits required to store a single …","","","","This gets a block compression format’s block size, and …","","","Attempt to get the format of this DDS, presuming it is a …","This gets a reference to the data at the given <code>array_layer</code> …","","Attempt to get the format of this DDS, presuming it is a …","Get the format of the DDS as a trait (type-erasure)","Get the fourcc code for this format, if known","","","","","","This gets the minimum mipmap size in bytes. Even if they …","This gets the minimum mipmap size in bytes. Even if they …","This gets a reference to the data at the given <code>array_layer</code> …","","","This gets the number of bytes required to store one row of …","","","","This gets the height of each row of data. Normally it is …","This gets the height of each row of data. Normally it is …","","","","","","","","","","","","","","","","Surface height (in pixels)","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The total number of bytes in a top level texture for a …","Number of mipmap levels","","","","","Create a new DirectDraw Surface with a D3DFormat","","Create a new DirectDraw Surface with a DxgiFormat","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","The pitch or number of bytes per scan line in an …","This gets the bitmask for the red channel pixels","Red (or Y) mask for reading color data. For instance, …","Read a DDS file","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Returns true if the DX10 extention is required to use this …","","","","","Number of bits in an RGB (possibly including alpha) …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Size of this structure in bytes; set to 32","","The pixel format","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","This attempts to use <code>PixelFormat</code> data (e.g. from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Surface width (in pixels)","Write to a DDS file","","",""],"i":[1,10,1,10,1,1,1,1,10,1,1,1,1,1,11,1,1,11,11,4,4,10,10,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,10,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,22,13,5,6,7,7,7,7,7,7,7,1,10,0,0,15,11,11,11,11,0,0,5,10,1,10,1,10,1,10,1,10,1,10,0,0,0,0,4,22,11,11,0,1,1,10,1,10,1,10,10,11,22,5,0,0,0,11,22,22,1,1,5,4,6,5,0,10,11,11,0,0,15,22,11,11,11,11,5,5,0,0,15,1,10,11,11,11,11,11,1,10,10,11,11,10,11,11,11,10,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,1,10,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,1,1,11,11,11,11,11,11,1,10,10,11,11,11,11,11,11,11,11,11,11,11,11,4,22,15,6,8,13,13,13,1,10,11,13,15,22,11,11,7,5,1,11,11,1,1,1,11,11,11,11,4,1,11,10,1,9,4,5,6,7,8,36,14,36,14,1,9,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,12,35,36,12,9,4,10,1,11,12,5,6,7,13,14,8,15,9,4,10,1,11,12,5,6,7,13,14,8,15,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,19,9,12,14,35,36,12,4,5,6,7,8,14,4,5,6,7,8,4,10,1,11,5,6,7,13,8,15,4,1,11,5,6,7,13,8,15,4,5,6,7,8,9,19,22,22,9,4,4,4,4,4,10,1,11,12,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,13,14,8,8,8,8,8,15,35,36,9,19,35,36,22,22,22,22,22,9,9,9,4,10,1,11,12,5,6,7,13,14,8,15,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,11,13,15,4,5,6,7,8,11,13,15,1,9,19,32,19,1,11,32,1,11,19,19,19,19,19,32,1,11,19,19,19,32,32,19,19,19,32,19,1,11,32,32,19,19,4,1,11,5,6,7,13,8,15,19,19,35,36,12,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,4,5,6,7,8,36,4,5,6,7,8,12,12,35,36,14,14,19,12,19,12,4,5,6,7,8,4,5,6,7,8,12,1,9,19,9,12,14,4,5,6,7,8,32,1,11,36,14,9,4,5,6,7,8,9,22,12,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,9,4,10,1,11,12,5,6,7,13,14,8,15,22,4,5,6,7,8,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,1,11,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,19,35,36,22,9,4,10,1,11,12,5,6,7,13,14,8,15,4,5,6,7,8,35,36,12,19,9,12,14],"fc":[],"p":[[4,"D3DFormat"],[15,"u32"],[4,"Option"],[3,"PixelFormatFlags"],[3,"HeaderFlags"],[3,"Caps"],[3,"Caps2"],[3,"MiscFlag"],[3,"PixelFormat"],[3,"FourCC"],[4,"DxgiFormat"],[3,"Header"],[4,"D3D10ResourceDimension"],[3,"Header10"],[4,"AlphaMode"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"Dds"],[3,"Formatter"],[6,"Result"],[4,"Error"],[15,"str"],[3,"Error"],[3,"Error"],[3,"String"],[15,"i64"],[15,"u64"],[4,"Result"],[15,"u8"],[15,"slice"],[8,"DataFormat"],[3,"Box"],[8,"Hasher"],[3,"NewD3dParams"],[3,"NewDxgiParams"],[8,"Read"],[8,"Error"],[3,"TypeId"],[8,"Write"]]},\
"dispatch":{"doc":"Rust wrapper for Apple’s Grand Central Dispatch (GCD).","t":"NNNDDNNDDEEDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHRRRRRRRLLFFFFFGFFFFFFFFGFFDGFGGFFGFFFFFGFFFFFFFGLLLLL","n":["Background","Concurrent","Default","Group","GroupGuard","High","Low","Once","Queue","QueueAttribute","QueuePriority","Semaphore","SemaphoreGuard","Serial","SuspendGuard","WaitTimeout","access","access_timeout","apply","barrier_async","barrier_sync","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","drop","drop","drop","drop","drop","drop","enter","eq","eq","exec_after","exec_async","exec_async","exec_sync","ffi","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from","from","global","hash","hash","into","into","into","into","into","into","into","into","into","into","is_empty","label","leave","main","map","new","new","notify","resume","signal","signal","suspend","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait","wait_timeout","wait_timeout","with_target_queue","DISPATCH_QUEUE_CONCURRENT","DISPATCH_QUEUE_PRIORITY_BACKGROUND","DISPATCH_QUEUE_PRIORITY_DEFAULT","DISPATCH_QUEUE_PRIORITY_HIGH","DISPATCH_QUEUE_PRIORITY_LOW","DISPATCH_QUEUE_SERIAL","DISPATCH_TIME_FOREVER","DISPATCH_TIME_NOW","borrow","borrow_mut","dispatch_after_f","dispatch_apply_f","dispatch_async_f","dispatch_barrier_async_f","dispatch_barrier_sync_f","dispatch_function_t","dispatch_get_context","dispatch_get_global_queue","dispatch_get_main_queue","dispatch_group_async_f","dispatch_group_create","dispatch_group_enter","dispatch_group_leave","dispatch_group_notify_f","dispatch_group_t","dispatch_group_wait","dispatch_main","dispatch_object_s","dispatch_object_t","dispatch_once_f","dispatch_once_t","dispatch_queue_attr_t","dispatch_queue_create","dispatch_queue_get_label","dispatch_queue_t","dispatch_release","dispatch_resume","dispatch_retain","dispatch_semaphore_create","dispatch_semaphore_signal","dispatch_semaphore_t","dispatch_semaphore_wait","dispatch_set_context","dispatch_set_finalizer_f","dispatch_set_target_queue","dispatch_suspend","dispatch_sync_f","dispatch_time","dispatch_time_t","from","into","try_from","try_into","type_id"],"q":[[0,"dispatch"],[165,"dispatch::ffi"]],"d":["The queue is scheduled for execution after all high …","The queue executes blocks concurrently.","The queue is scheduled for execution after all high …","A Grand Central Dispatch group.","An RAII guard which will leave a <code>Group</code> when dropped.","The queue is scheduled for execution before any default …","The queue is scheduled for execution after all default …","A predicate used to execute a closure only once for the …","A Grand Central Dispatch queue.","The type of a dispatch queue.","The priority of a global concurrent queue.","A counting semaphore.","An RAII guard which will signal a <code>Semaphore</code> when dropped.","The queue executes blocks serially in FIFO order.","An RAII guard which will resume a suspended <code>Queue</code> when …","An error indicating a wait timed out.","Wait to access a resource protected by self. This …","Wait until the specified timeout to access a resource …","Submits a closure to be executed on self the given number …","Submits a closure to be executed on self as a barrier and …","Submits a closure to be executed on self as a barrier and …","","","","","","","","","","","","","","","","","","","","","Executes a closure once, ensuring that no other closure …","","","","","","","","","","","","","","","","","Creates a new dispatch <code>Group</code>.","Creates a new dispatch <code>Queue</code>.","","","","","","","Indicates that a closure has entered self, and increments …","","","After the specified delay, submits a closure for …","Submits a closure asynchronously to the given <code>Queue</code> and …","Submits a closure for asynchronous execution on self and …","Submits a closure for execution on self and waits until it …","Raw foreign function interface for libdispatch.","","","","","","","","","","","","Submits a closure to be executed on self for each element …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a system-defined global concurrent <code>Queue</code> with the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether self is currently empty.","Returns the label that was specified for self.","Drops self, leaving the <code>Group</code>.","Returns the serial dispatch <code>Queue</code> associated with the …","Submits a closure to be executed on self for each element …","Creates a new <code>Once</code>.","Creates a new <code>Semaphore</code> with an initial value.","Schedules a closure to be submitted to the given <code>Queue</code> …","Drops self, allowing the suspended <code>Queue</code> to resume.","Signal (increment) self.","Drops self, signaling the <code>Semaphore</code>.","Suspends the invocation of blocks on self and returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits synchronously for all tasks associated with self to …","Wait for (decrement) self.","Waits for all tasks associated with self to complete …","Wait for (decrement) self until the specified timeout has …","Creates a new dispatch <code>Queue</code> with the given target queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[16,15,16,0,0,16,16,0,0,0,0,0,0,15,0,0,1,1,6,6,6,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,12,13,14,15,16,6,17,1,4,13,14,15,16,6,17,1,4,13,6,13,14,6,17,1,2,13,15,16,6,13,6,6,0,13,14,15,16,6,17,12,1,2,4,4,6,13,14,15,16,6,17,12,1,2,4,6,15,16,13,14,15,16,6,17,12,1,2,4,13,6,14,6,6,12,1,13,17,1,2,6,13,14,15,16,6,17,1,4,4,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,13,1,13,1,6,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[1,3],[[5,[2,4]]]],[[6,7,[0,[8,9]]]],[[6,[0,[10,11]]]],[[6,[0,[10,11]]],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,11]],[13,13],[14,14],[15,15],[16,16],[6,6],[17,17],[1,1],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[18,15],6],[13],[14],[6],[17],[1],[2],[13,14],[[15,15],19],[[16,16],19],[[6,3,[0,[10,11]]]],[[13,6,[0,[10,11]]]],[[6,[0,[10,11]]]],[[6,[0,[10,11]]],10],0,[[13,20],21],[[14,20],21],[[15,20],21],[[16,20],21],[[6,20],21],[[17,20],21],[[12,20],21],[[1,20],21],[[2,20],21],[[4,20],21],[[4,20],21],[[6,[22,[10]],[0,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,6],[[15,23]],[[16,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,19],[6,18],[14],[[],6],[[6,[24,[10]],[0,[8,9]]],[[24,[10]]]],[[],12],[25,1],[[13,6,[0,[10,11]]]],[17],[1,19],[2],[6,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[13],[1],[[13,3],[[5,[4]]]],[[1,3],[[5,[4]]]],[[18,15,6],6],0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],5],[[],5],[[],27]],"c":[],"p":[[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"Duration"],[3,"WaitTimeout"],[4,"Result"],[3,"Queue"],[15,"usize"],[8,"Sync"],[8,"Fn"],[8,"Send"],[8,"FnOnce"],[3,"Once"],[3,"Group"],[3,"GroupGuard"],[4,"QueueAttribute"],[4,"QueuePriority"],[3,"SuspendGuard"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"slice"],[8,"Hasher"],[3,"Vec"],[15,"u32"],[3,"String"],[3,"TypeId"],[6,"dispatch_queue_t"],[3,"dispatch_object_s"]]},\
"enum_primitive":{"doc":"This crate exports a macro <code>enum_from_primitive!</code> that wraps …","t":"INENLLLLLLLLLLLLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FromPrimitive","None","Option","Some","and","and_then","as_deref","as_deref_mut","as_mut","as_mut_slice","as_pin_mut","as_pin_ref","as_ref","as_slice","borrow","borrow_mut","branch","clone","clone_from","clone_into","cloned","cloned","cmp","copied","copied","default","enum_from_primitive","enum_from_primitive_impl","enum_from_primitive_impl_ty","eq","equivalent","expect","filter","flatten","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_iter","from_output","from_residual","from_residual","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","get_or_insert","get_or_insert_default","get_or_insert_with","hash","insert","inspect","into","into_iter","into_iter","into_iter","is_none","is_some","is_some_and","iter","iter_mut","map","map_or","map_or_else","ok_or","ok_or_else","or","or_else","partial_cmp","product","replace","sum","take","take_if","to_owned","transpose","try_from","try_into","type_id","unwrap","unwrap_or","unwrap_or_default","unwrap_or_else","unwrap_unchecked","unzip","xor","zip","zip_with"],"q":[[0,"enum_primitive"]],"d":["A generic trait for converting a number to a value.","No value.","The <code>Option</code> type. See the module level documentation for …","Some value of type <code>T</code>.","Returns <code>None</code> if the option is <code>None</code>, otherwise returns <code>optb</code>.","Returns <code>None</code> if the option is <code>None</code>, otherwise calls <code>f</code> with …","Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to …","Converts from <code>Option&lt;T&gt;</code> (or <code>&amp;mut Option&lt;T&gt;</code>) to …","Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>.","Returns a mutable slice of the contained value, if any. If …","Converts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.","Converts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.","Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.","Returns a slice of the contained value, if any. If this is …","","","","","","","Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the …","Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by cloning the contents …","","Maps an <code>Option&lt;&amp;mut T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the …","Maps an <code>Option&lt;&amp;T&gt;</code> to an <code>Option&lt;T&gt;</code> by copying the contents …","Returns <code>None</code>.","Wrap this macro around an <code>enum</code> declaration to get an …","Helper macro for internal use by <code>enum_from_primitive!</code>.","Helper macro for internal use by <code>enum_from_primitive!</code>.","","","Returns the contained <code>Some</code> value, consuming the <code>self</code> value.","Returns <code>None</code> if the option is <code>None</code>, otherwise calls …","Converts from <code>Option&lt;Option&lt;T&gt;&gt;</code> to <code>Option&lt;T&gt;</code>.","","Converts from <code>&amp;mut Option&lt;T&gt;</code> to <code>Option&lt;&amp;mut T&gt;</code>","Converts from <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>.","Moves <code>val</code> into a new <code>Some</code>.","Returns the argument unchanged.","","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Takes each element in the <code>Iterator</code>: if it is <code>None</code>, no …","","","","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Inserts <code>value</code> into the option if it is <code>None</code>, then returns …","Inserts the default value into the option if it is <code>None</code>, …","Inserts a value computed from <code>f</code> into the option if it is …","","Inserts <code>value</code> into the option, then returns a mutable …","Calls the provided closure with a reference to the …","Calls <code>U::from(self)</code>.","","","Returns a consuming iterator over the possibly contained …","Returns <code>true</code> if the option is a <code>None</code> value.","Returns <code>true</code> if the option is a <code>Some</code> value.","Returns <code>true</code> if the option is a <code>Some</code> and the value inside …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps an <code>Option&lt;T&gt;</code> to <code>Option&lt;U&gt;</code> by applying a function to a …","Returns the provided default result (if none), or applies …","Computes a default function result (if none), or applies a …","Transforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …","Transforms the <code>Option&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping …","Returns the option if it contains a value, otherwise …","Returns the option if it contains a value, otherwise calls …","","Takes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …","Replaces the actual value in the option by the value given …","Takes each element in the <code>Iterator</code>: if it is a <code>None</code>, no …","Takes the value out of the option, leaving a <code>None</code> in its …","Takes the value out of the option, but only if the …","","Transposes an <code>Option</code> of a <code>Result</code> into a <code>Result</code> of an <code>Option</code>…","","","","Returns the contained <code>Some</code> value, consuming the <code>self</code> value.","Returns the contained <code>Some</code> value or a provided default.","Returns the contained <code>Some</code> value or a default.","Returns the contained <code>Some</code> value or computes it from a …","Returns the contained <code>Some</code> value, consuming the <code>self</code> value,","Unzips an option containing a tuple of two options.","Returns <code>Some</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Some</code>, …","Zips <code>self</code> with another <code>Option</code>.","Zips <code>self</code> and another <code>Option</code> with function <code>f</code>."],"i":[0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,49,49,49,49,49,49,49,49,1,1,1,1,49,49,49,49,49,49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[1,1],1],[[1,2],1],[[[1,[3]]],1],[[[1,[4]]],1],[1,1],[1,5],[[[6,[1]]],[[1,[6]]]],[[[6,[1]]],[[1,[6]]]],[1,1],[1,5],[[]],[[]],[1,7],[[[1,[8]]],[[1,[8]]]],[[[1,[8]],[1,[8]]]],[[]],[[[1,[8]]],[[1,[8]]]],[[[1,[8]]],[[1,[8]]]],[[[1,[9]],[1,[9]]],10],[[[1,[11]]],[[1,[11]]]],[[[1,[11]]],[[1,[11]]]],[[],1],0,0,0,[[[1,[[12,[[12,[[12,[12]]]]]]]],[1,[[12,[[12,[[12,[12]]]]]]]]],13],[[],13],[[1,14]],[[1,2],1],[[[1,[1]]],1],[[[1,[15]],16],[[18,[17]]]],[1,1],[1,1],[[],1],[[]],[19],[20,1],[21,1],[22,1],[23,1],[24,1],[25,1],[26,1],[27,1],[28,[[1,[29]]]],[[],1],[30,1],[[[1,[31]]],1],[32,1],[33,1],[34,1],[35,1],[36,1],[37,1],[1],[[[1,[38]]],38],[[1,2]],[[[1,[39]],40]],[1],[[1,2],1],[[]],[1,41],[1,42],[1,43],[1,13],[1,13],[[1,2],13],[1,41],[1,42],[[1,2],1],[[1,2]],[[1,2,2]],[1,18],[[1,2],18],[[1,1],1],[[1,2],1],[[[1,[[44,[[44,[[44,[44]]]]]]]],[1,[[44,[[44,[[44,[44]]]]]]]]],[[1,[10]]]],[45,[[1,[46]]]],[1,1],[45,[[1,[47]]]],[1,1],[[1,2],1],[[]],[[[1,[18]]],[[18,[1]]]],[[],18],[[],18],[[],48],[1],[1],[[[1,[38]]],38],[[1,2]],[1],[1],[[1,1],1],[[1,1],1],[[1,1,2],1]],"c":[],"p":[[4,"Option"],[8,"FnOnce"],[8,"Deref"],[8,"DerefMut"],[15,"slice"],[3,"Pin"],[4,"ControlFlow"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"Copy"],[8,"PartialEq"],[15,"bool"],[15,"str"],[8,"Debug"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"never"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[8,"IntoIterator"],[8,"FromIterator"],[3,"Yeet"],[4,"Infallible"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Default"],[8,"Hash"],[8,"Hasher"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"PartialOrd"],[8,"Iterator"],[8,"Product"],[8,"Sum"],[3,"TypeId"],[8,"FromPrimitive"]],"a":{"flatmap":[5]}},\
"env_logger":{"doc":"A simple logger that can be configured via environment …","t":"DRRDDCCCLLLLLLLFLLLLLLALLLLLLLALLLLLLLLLLLLLLLLLLLLFLLFLFLLLLLLLLLLLLLLLLFLFLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNENDNNNNNNNNNNNNDDEDENENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Builder","DEFAULT_FILTER_ENV","DEFAULT_WRITE_STYLE_ENV","Env","Logger","Target","TimestampPrecision","WriteStyle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","default","default","default_filter_or","default_format","default_write_style_or","enabled","filter","filter","filter","filter","filter_level","filter_module","filter_or","flush","fmt","fmt","fmt","fmt","format","format_indent","format_level","format_module_path","format_suffix","format_target","format_timestamp","format_timestamp_micros","format_timestamp_millis","format_timestamp_nanos","format_timestamp_secs","from","from","from","from","from_default_env","from_default_env","from_env","from_env","from_env","init","init","init_from_env","into","into","into","is_test","log","matches","new","new","parse_default_env","parse_env","parse_filters","parse_write_style","target","try_from","try_from","try_from","try_init","try_init","try_init_from_env","try_into","try_into","try_into","type_id","type_id","type_id","write_style","write_style","write_style_or","Builder","Filter","borrow","borrow","borrow_mut","borrow_mut","build","default","enabled","filter","filter","filter_level","filter_module","fmt","fmt","from","from","from_env","into","into","matches","new","parse","try_from","try_from","try_into","try_into","type_id","type_id","Always","Ansi256","Auto","Black","Blue","Color","Cyan","Formatter","Green","Magenta","Micros","Millis","Nanos","Never","Pipe","Red","Rgb","Seconds","Stderr","Stdout","Style","StyledValue","Target","Timestamp","TimestampPrecision","White","WriteStyle","Yellow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default_level_style","default_styled_level","eq","eq","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into","set_bg","set_bold","set_color","set_dimmed","set_intense","style","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_seconds","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","write"],"q":[[0,"env_logger"],[85,"env_logger::filter"],[114,"env_logger::fmt"]],"d":["<code>Builder</code> acts as builder for initializing a <code>Logger</code>.","The default name for the environment variable to read …","The default name for the environment variable to read …","Set of environment variables to configure from.","The env logger.","","","","","","","","","","Build an env logger.","Create a new builder with the default environment …","","","Use the default environment variable to read the filter …","Use the default format.","Use the default environment variable to read the style …","","Filtering for log records.","Returns the maximum <code>LevelFilter</code> that this env logger …","Specify an environment variable to read the filter from.","Adds filters to the logger.","Adds a directive to the filter for all modules.","Adds a directive to the filter for a specific module.","Specify an environment variable to read the filter from.","","Formatting for log records.","","","","Sets the format function for formatting the log output.","Configures the amount of spaces to use to indent multiline …","Whether or not to write the level in the default format.","Whether or not to write the module path in the default …","Configures the end of line suffix.","Whether or not to write the target in the default format.","Configures if timestamp should be included and in what …","Configures the timestamp to use microsecond precision.","Configures the timestamp to use millisecond precision.","Configures the timestamp to use nanosecond precision.","Configures the timestamp to use second precision.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates the logger from the environment using default …","Initializes the log builder from the environment using …","Create a builder from the given environment variables.","Creates the logger from the environment.","Initializes the log builder from the environment.","Initializes the global logger with an env logger.","Initializes the global logger with the built env logger.","Initializes the global logger with an env logger from the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets whether or not the logger will be used in unit tests.","","Checks if this record matches the configured filter.","Get a default set of environment variables.","Initializes the log builder with defaults.","Applies the configuration from the environment using …","Applies the configuration from the environment.","Parses the directives string in the same form as the …","Parses whether or not to write styles in the same form as …","Sets the target for the log output.","","","","Attempts to initialize the global logger with an env …","Initializes the global logger with the built env logger.","Attempts to initialize the global logger with an env …","","","","","","","Specify an environment variable to read the style from.","Sets whether or not styles will be written.","Specify an environment variable to read the style from.","A builder for a log filter.","A log filter.","","","","","Build a log filter.","","Determines if a log message with the specified metadata …","Returns the maximum <code>LevelFilter</code> that this filter instance …","Adds a directive to the filter.","Adds a directive to the filter for all modules.","Adds a directive to the filter for a specific module.","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the filter builder from an environment.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if this record matches the configured filter.","Initializes the filter builder with defaults.","Parses the directives string.","","","","","","","Try very hard to print styles.","","Try to print styles, but don’t force the issue.","","","The set of available colors for the terminal …","","A formatter to write logs into.","","","Microsecond precision (6 decimal digits)","Millisecond precision (3 decimal digits)","Nanosecond precision (9 decimal digits)","Never print styles.","Logs will be sent to a custom pipe.","","","Full second precision (0 decimal digits)","Logs will be sent to standard error.","Logs will be sent to standard output.","A set of styles to apply to the terminal output.","A value that can be printed using the given styles.","Log target, either <code>stdout</code>, <code>stderr</code> or a custom pipe.","An RFC3339 formatted timestamp.","Formatting precision of timestamps.","","Whether or not to print styles to the target.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default <code>Style</code> for the given level.","Get a printable <code>Style</code> for the given level.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the background color.","Set the text weight.","Set the text color.","Set whether the text is dimmed.","Set the text intensity.","Begin a new <code>Style</code>.","Get a <code>Timestamp</code> for the current date and time in UTC.","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","Get a <code>Timestamp</code> for the current date and time in UTC with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap a value in the style.",""],"i":[0,0,0,0,0,0,0,0,2,3,1,2,3,1,1,0,3,1,3,1,3,2,0,2,3,1,1,1,3,2,0,2,3,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,1,2,1,0,2,1,0,1,0,2,3,1,1,2,2,3,1,1,1,1,1,1,2,3,1,0,1,0,2,3,1,2,3,1,3,1,3,0,0,25,24,25,24,24,24,25,25,24,24,24,25,24,25,24,24,25,24,25,24,24,25,24,25,24,25,24,23,27,23,27,27,0,27,0,27,27,17,17,17,23,19,27,27,17,19,19,0,0,0,0,0,27,0,27,32,30,19,28,26,27,23,17,32,30,19,28,26,27,23,17,26,27,23,17,26,27,23,17,19,23,17,28,28,27,23,27,23,28,32,32,30,30,30,30,30,30,30,30,30,19,28,26,27,23,17,32,30,19,28,26,27,23,17,23,32,30,19,28,26,27,23,17,26,26,26,26,26,28,28,28,28,28,28,26,27,23,17,32,30,32,30,19,28,26,27,23,17,32,30,19,28,26,27,23,17,32,30,19,28,26,27,23,17,26,28],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[],1],[[],3],[[],1],[[3,[6,[[5,[4]]]]],3],[1,1],[[3,[6,[[5,[4]]]]],3],[[2,7],8],0,[2,9],[[3,[6,[[5,[4]]]]],3],[[1,[10,[4]],9],1],[[1,9],1],[[1,4,9],1],[[3,[6,[[5,[4]]]],[6,[[5,[4]]]]],3],[2],0,[[2,11],12],[[3,11],12],[[1,11],12],[[1,[0,[13,14,15]]],1],[[1,[10,[16]]],1],[[1,8],1],[[1,8],1],[[1,4],1],[[1,8],1],[[1,[10,[17]]],1],[1,1],[1,1],[1,1],[1,1],[[]],[[[6,[[5,[4]]]]],3],[[]],[[]],[[],2],[[],1],[[[6,[3]]],1],[[[6,[3]]],2],[[[6,[3]]],1],[[]],[1],[[[6,[3]]]],[[]],[[]],[[]],[[1,8],1],[[2,18]],[[2,18],8],[[],3],[[],1],[1,1],[[1,[6,[3]]],1],[[1,4],1],[[1,4],1],[[1,19],1],[[],20],[[],20],[[],20],[[],[[20,[21]]]],[1,[[20,[21]]]],[[[6,[3]]],[[20,[21]]]],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[3,[6,[[5,[4]]]]],3],[[1,23],1],[[3,[6,[[5,[4]]]],[6,[[5,[4]]]]],3],0,0,[[]],[[]],[[]],[[]],[24,25],[[],24],[[25,7],8],[25,9],[[24,[10,[4]],9],24],[[24,9],24],[[24,4,9],24],[[25,11],12],[[24,11],12],[[]],[[]],[4,24],[[]],[[]],[[25,18],8],[[],24],[[24,4],24],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[23,23],[17,17],[[]],[[]],[[]],[[]],[[],19],[[],23],[[],17],[[28,29],26],[[28,29],[[30,[29]]]],[[27,27],8],[[23,23],8],[[],8],[[],8],[28,31],[[32,11],12],[[32,11],12],[[[30,[33]],11],12],[[[30,[34]],11],12],[[[30,[35]],11],12],[[[30,[36]],11],12],[[[30,[37]],11],12],[[[30,[38]],11],12],[[[30,[39]],11],12],[[[30,[40]],11],12],[[[30,[41]],11],12],[[19,11],12],[[28,11],12],[[26,11],12],[[27,11],12],[[23,11],12],[[17,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],26],[[26,8],26],[[26,27],26],[[26,8],26],[[26,8],26],[28,26],[28,32],[28,32],[28,32],[28,32],[28,32],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[26,30],[[28,[45,[44]]],[[31,[16]]]]],"c":[51],"p":[[3,"Builder"],[3,"Logger"],[3,"Env"],[15,"str"],[4,"Cow"],[8,"Into"],[3,"Metadata"],[15,"bool"],[4,"LevelFilter"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Fn"],[8,"Sync"],[8,"Send"],[15,"usize"],[4,"TimestampPrecision"],[3,"Record"],[4,"Target"],[4,"Result"],[3,"SetLoggerError"],[3,"TypeId"],[4,"WriteStyle"],[3,"Builder"],[3,"Filter"],[3,"Style"],[4,"Color"],[3,"Formatter"],[4,"Level"],[3,"StyledValue"],[6,"Result"],[3,"Timestamp"],[8,"Display"],[8,"LowerHex"],[8,"UpperHex"],[8,"Octal"],[8,"Binary"],[8,"UpperExp"],[8,"LowerExp"],[8,"Debug"],[8,"Pointer"],[8,"Hasher"],[3,"String"],[15,"u8"],[15,"slice"]]},\
"equivalent":{"doc":"<code>Equivalent</code> and <code>Comparable</code> are traits for key comparison in …","t":"IIKK","n":["Comparable","Equivalent","compare","equivalent"],"q":[[0,"equivalent"]],"d":["Key ordering trait.","Key equivalence trait.","Compare self to <code>key</code> and return their ordering.","Compare self to <code>key</code> and return <code>true</code> if they are equal."],"i":[0,0,3,4],"f":[0,0,[[],1],[[],2]],"c":[],"p":[[4,"Ordering"],[15,"bool"],[8,"Comparable"],[8,"Equivalent"]]},\
"errno":{"doc":"Cross-platform interface to the <code>errno</code> variable.","t":"DLLLLLLLLFLLLLLLFLLLLL","n":["Errno","borrow","borrow_mut","clone","clone_into","cmp","description","eq","equivalent","errno","fmt","fmt","from","hash","into","partial_cmp","set_errno","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"errno"]],"d":["Wraps a platform-specific error code.","","","","","","","","","Returns the platform-specific value of <code>errno</code>.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Sets the platform-specific value of <code>errno</code>.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,1],2],[1,3],[[1,1],4],[[],4],[[],1],[[1,5],6],[[1,5],6],[[]],[[1,7]],[[]],[[1,1],[[8,[2]]]],[1],[[]],[[],9],[[],10],[[],10],[[],11]],"c":[],"p":[[3,"Errno"],[4,"Ordering"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"euclid":{"doc":"A collection of strongly typed math tools for computer …","t":"DDDDDDDDDDDDDDDDDDDDDIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLALLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMLLLLLLLLLLLLLLFFLLLLLLLLLLLMLLMKFLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLMLLLMMLLLLLLLLLMMMMMMMMMLLLLLLLLLLLMMMMMMMMMLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLIKLKFFGGGGGGGGGGGGGGGGGGGGIIIIIKKKKK","n":["Angle","BoolVector2D","BoolVector3D","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Trig","UnknownUnit","Vector2D","Vector3D","abs","abs","abs","abs","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_size","add_size","all","all","and","and","angle","angle_from_x_axis","angle_to","angle_to","angle_to","any","any","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_epsilon","approx_eq","approx_eq","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approx_eq_eps","approxeq","approxord","area","area","area","around_axis","around_x","around_y","around_z","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","box3d","bvec2","bvec3","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","center","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","component_div","component_div","component_mul","component_mul","contains","contains","contains","contains","contains","contains_box","contains_box","contains_rect","cos","cross","cross","decompose_reversed","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","degrees","degrees_to_radians","depth","depth","determinant","determinant","distance_to","distance_to","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","dot","dot","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","equal","equal","equal","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","euler","extend","extend","fast_atan2","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frac_pi_2","frac_pi_3","frac_pi_4","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle_and_length","from_array","from_array","from_arrays","from_arrays","from_length_all_same","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_lengths","from_origin_and_size","from_points","from_points","from_points","from_rotation","from_scale","from_size","from_size","from_size","from_translation","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_untyped","from_vectors_inner","from_vectors_outer","get","get","get","get_angle","greater_than","greater_than","greater_than","greater_than","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","horizontal","i","identity","identity","identity","identity","identity","identity","identity","identity","inflate","inflate","inflate","inner_box","inner_rect","intersection","intersection","intersection","intersection_unchecked","intersection_unchecked","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_2d","is_backface_visible","is_empty","is_empty","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_identity","is_identity","is_identity","is_invertible","is_invertible","is_negative","is_negative","is_normalized","is_positive","is_positive","is_zero","j","k","left","length","length","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lower_than","lower_than","lower_than","lower_than","m11","m11","m12","m12","m13","m14","m21","m21","m22","m22","m23","m24","m31","m31","m32","m32","m33","m34","m41","m42","m43","m44","max","max","max","max","max","max","max","max","max","max","max","max_x","max_y","min","min","min","min","min","min","min","min","min","min","min","min_x","min_y","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_s","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_2d","new_all_same","new_from_reversed","none","none","norm","normalize","normalize","normalize","not","not","not_equal","not_equal","not_equal","not_equal","num","one","one","one","or","or","origin","origin","origin","ortho","outer_box","outer_rect","outer_transformed_box","outer_transformed_box2d","outer_transformed_box3d","outer_transformed_rect","outer_transformed_rect","partial_cmp","partial_cmp","partial_cmp","partial_cmp","perspective","pi","point2","point3","positive","pre_rotate","pre_rotate","pre_scale","pre_scale","pre_translate","pre_translate","project_onto_vector","project_onto_vector","project_to_2d","quaternion","r","radians","radians","radians","radians_to_degrees","rect","reflect","reflect","rem_euclid","rem_euclid","right","robust_normalize","robust_normalize","rotation","rotation","rotation","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","saturating_add","saturating_sub","scale","scale","scale","scale","scale","select_point","select_point","select_size","select_size","select_vector","select_vector","set_size","signed","sin","sin_cos","size","size","size","size2","size3","skew","slerp","splat","splat","splat","splat","splat","splat","splat","splat","square_length","square_length","square_norm","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","tan","then","then","then","then","then","then_rotate","then_rotate","then_scale","then_scale","then_translate","then_translate","to_2d","to_2d","to_2d","to_3d","to_3d","to_3d","to_3d","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array_4d","to_array_4d","to_array_transposed","to_array_transposed","to_arrays","to_arrays","to_arrays_transposed","to_box2d","to_degrees","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i32","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_non_empty","to_non_empty","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_point","to_point2d","to_point3d","to_rect","to_size","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_transform","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple","to_tuple_4d","to_tuple_4d","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u32","to_u64","to_u64","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_untyped","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_usize","to_vector","to_vector","to_vector","to_vector","to_vector","to_vector","top","transform_box","transform_box2d","transform_box2d","transform_box3d","transform_box3d","transform_point","transform_point","transform_point","transform_point","transform_point2d","transform_point2d","transform_point2d","transform_point2d_homogeneous","transform_point3d","transform_point3d","transform_point3d","transform_point3d","transform_point3d_homogeneous","transform_rect","transform_rect","transform_rect","transform_size","transform_size","transform_size","transform_vector","transform_vector","transform_vector","transform_vector2d","transform_vector2d","transform_vector3d","transform_vector3d","translate","translate","translate","translation","translation","translation","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","unit_quaternion","vec2","vec3","vector_part","vertical","volume","volume","w","width","width","width","width","width","with_destination","with_destination","with_length","with_max_length","with_max_length","with_min_length","with_min_length","with_source","with_source","x","x","x","x","x","x","x","x","x","x_range","x_range","x_range","xy","xy","xy","xy_area","xz","xz","xz","xz_area","y","y","y","y","y","y","y","y","y","y_range","y_range","y_range","yx","yx","yz","yz","yz","yz_area","z","z","z","z","z","z_range","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","ApproxEq","approx_epsilon","approx_eq","approx_eq_eps","max","min","Box2D","Box3D","HomogeneousVector","Length","Point2D","Point3D","Rect","RigidTransform3D","Rotation2D","Rotation3D","Scale","SideOffsets2D","Size2D","Size3D","Transform2D","Transform3D","Translation2D","Translation3D","Vector2D","Vector3D","Ceil","Floor","One","Round","Zero","ceil","floor","one","round","zero"],"q":[[0,"euclid"],[1365,"euclid::approxeq"],[1369,"euclid::approxord"],[1371,"euclid::default"],[1391,"euclid::num"]],"d":["An angle in radians","A 2d vector of booleans, useful for component-wise logic …","A 3d vector of booleans, useful for component-wise logic …","A 2d axis aligned rectangle represented by its minimum and …","An axis aligned 3D box represented by its minimum and …","Homogeneous vector in 3D space.","A one-dimensional distance, with value represented by <code>T</code> …","A 2d Point tagged with a unit.","A 3d Point tagged with a unit.","A 2d Rectangle optionally tagged with a unit.","A rigid transformation. All lengths are preserved under …","A transform that can represent rotations in 2d, …","A transform that can represent rotations in 3d, …","A scaling factor between two different units of …","A group of 2D side offsets, which correspond to …","A 2d size tagged with a unit.","A 3d size tagged with a unit.","A 2d transform represented by a column-major 3 by 3 …","A 3d transform stored as a column-major 4 by 4 matrix.","A 2d transformation from a space to another that can only …","A 3d transformation from a space to another that can only …","Trait for basic trigonometry functions, so they can be …","The default unit.","A 2d Vector tagged with a unit.","A 3d Vector tagged with a unit.","Computes the absolute value of each component.","Computes the absolute value of each component.","Computes the vector with absolute values of each component.","Computes the vector with absolute values of each component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>true</code> and <code>false</code> …","Returns new vector with by-component AND operation applied.","Returns new vector with by-component AND operation applied.","Angle in radians","Returns the signed angle between this vector and the x …","Returns the signed angle between this vector and another …","Returns the positive angle between this vector and another …","Returns the shortest signed angle between two angles.","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","Returns <code>true</code> if any component are <code>true</code> and <code>false</code> otherwise.","","","","","","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","","","","Returns true is this transform is approximately equal to …","Returns true is this transform is approximately equal to …","","Returns true is this transform is approximately equal to …","","","","","Utilities for testing approximate ordering - especially …","","","Returns result of multiplication of both components","Creates a rotation around a given axis.","Creates a rotation around the x axis.","Creates a rotation around the y axis.","Creates a rotation around the z axis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for …","Shorthand for <code>BoolVector2D { x, y }</code>.","Shorthand for <code>BoolVector3D { x, y, z }</code>.","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another, …","Cast from one numeric representation to another.","Cast the unit","Cast the unit","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit, preserving the numeric value.","Cast the unit, preserving the numeric value.","Cast the unit","Cast the unit","Cast the unit.","Cast the unit.","","See Point2D::ceil()","Rounds each component to the smallest integer equal or …","See Point3D::ceil()","Rounds each component to the smallest integer equal or …","Rounds each component to the smallest integer equal or …","See <code>Size2D::ceil()</code>.","See <code>Size3D::ceil()</code>.","Rounds each component to the smallest integer equal or …","Rounds each component to the smallest integer equal or …","See <code>Vector2D::ceil()</code>","Rounds each component to the smallest integer equal or …","See <code>Vector3D::ceil()</code>","","","","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the point each component of which clamped by …","Returns the size each component of which clamped by …","Returns the size each component of which clamped by …","Returns the vector each component of which is clamped by …","Returns the vector each component of which is clamped by …","Return this vector with minimum and maximum lengths …","Return this vector with minimum and maximum lengths …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the component-wise division of the two vectors.","Returns the component-wise division of the two vectors.","Returns the component-wise multiplication of the two …","Returns the component-wise multiplication of the two …","Returns <code>true</code> if this box contains the point. Points are …","Returns <code>true</code> if this box3d contains the point. Points are …","Returns true if this rectangle contains the point. Points …","","","Returns <code>true</code> if this box contains the interior of the …","Returns <code>true</code> if this box3d contains the interior of the …","Returns true if this rectangle contains the interior of …","","Returns the norm of the cross product [self.x, self.y, 0] …","Cross product.","Decompose this into a translation and an rotation to be …","A set of aliases for all types, tagged with the default …","","","","","","","","","","","Returns the identity transform.","Returns the identity transform.","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>z</code> axis.","Computes and returns the determinant of this transform.","Compute the determinant of the transform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates Euclidean division, the matching method for …","Calculates Euclidean division, the matching method for …","Dot product.","Dot product.","","","","","","","","","","","","","","","","","","","","","","","","","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","Returns vector with results of “equal” operation on …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a rotation from Euler angles.","Create a 3d point from this one, using the specified z …","Create a 3d vector from this one, using the specified z …","","See Point2D::floor()","Rounds each component to the biggest integer equal or …","Rounds each component to the biggest integer equal or …","See Point3D::floor()","Rounds each component to the biggest integer equal or …","See <code>Size2D::floor()</code>.","See <code>Size3D::floor()</code>.","Rounds each component to the biggest integer equal or …","Rounds each component to the biggest integer equal or …","See <code>Vector2D::floor()</code>","Rounds each component to the biggest integer equal or …","See <code>Vector3D::floor()</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructor taking angle and length","Create a transform providing its components via an array …","Create a transform providing its components via an array …","Equivalent to <code>from_array</code> with elements packed two at a time","Equivalent to <code>from_array</code> with elements packed four at a …","Constructor setting the same value to all sides, taking a …","Constructor taking properly Lengths instead of scalar …","Constructor taking properly Lengths instead of scalar …","Constructor taking a typed Length for each side.","Constructor taking scalar strongly typed lengths.","Constructor taking scalar strongly typed lengths.","Constructor taking properly  Lengths instead of scalar …","Constructor taking properly  Lengths instead of scalar …","Constructor.","Returns the smallest box containing all of the provided …","Returns the smallest box containing all of the provided …","Returns the smallest rectangle defined by the …","","Convenience function to create a scale transform from a …","Creates a Box2D of the given size, at offset zero.","Creates a Box3D of the given size, at offset zero.","Creates a rect of the given size, at offset zero.","","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Tag a unit-less value with units.","Tag a unitless value with units.","Tag a unitless value with units.","Construct side offsets from min and a max vector offsets.","Construct side offsets from min and a max vector offsets.","Unpack the underlying value from the wrapper.","Returns the underlying scalar scale factor.","","Returns self.angle as a strongly typed <code>Angle&lt;T&gt;</code>.","Returns vector with results of “greater then” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","Returns vector with results of “greater than” …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The extent of the element in the <code>U</code> units along the <code>y</code> axis …","The extent of the element in the <code>U</code> units along the <code>y</code> axis.","","Component multiplied by the imaginary number <code>i</code>.","Creates the identity rotation.","Creates the identity rotation.","Creates an identity scale (1.0).","Create an identity matrix:","Creates an identity matrix:","Creates no-op translation (both <code>x</code> and <code>y</code> is <code>zero()</code>).","Creates no-op translation (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Construct an identity transform","Inflates the box by the specified sizes on each side …","Inflates the box by the specified sizes on each side …","","Calculate the size and position of an inner box.","Calculate the size and position of an inner rectangle.","Computes the intersection of two boxes, returning <code>None</code> if …","","","Computes the intersection of two boxes without check …","","Returns <code>true</code> if the two boxes intersect.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inverse of this rotation.","Returns the inverse of this rotation.","The inverse Scale (1.0 / self).","Returns the inverse transform if possible.","Returns the inverse transform if possible.","Return the inverse transformation.","Return the inverse transformation.","Inverts the transformation","Returns <code>true</code> if this transform can be represented with a …","Check whether shapes on the XY plane with Z pointing …","Returns true if the size is zero, negative or NaN.","Returns true if the size is zero, negative or NaN.","","Returns <code>true</code> if any component of size is zero, negative, …","Returns <code>true</code> if any component of size is zero, negative or …","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if all members are finite.","Returns true if the angle is a finite number.","Returns <code>true</code> if this scale has no effect.","Check if translation does nothing (both x and y is <code>zero()</code>).","Check if translation does nothing (<code>x</code>, <code>y</code> and <code>z</code> is <code>zero()</code>).","Returns whether it is possible to compute the inverse …","Returns whether it is possible to compute the inverse …","Returns true if the box has a negative area.","Returns true if the box has a negative volume.","Returns <code>true</code> if norm of this quaternion is (approximately) …","Returns <code>true</code> if both components is positive and <code>false</code> any …","Returns <code>true</code> if all components is positive and <code>false</code> any …","Returns <code>true</code> if all side offsets are zero.","Component multiplied by the imaginary number <code>j</code>.","Component multiplied by the imaginary number <code>k</code>.","","Returns the vector length.","Returns the vector length.","Linearly interpolate between this box and another box.","Linearly interpolate between this box3d and another box3d.","Linearly interpolate between this length and another …","Linearly interpolate between this point and another point.","Linearly interpolate between this point and another point.","Linearly interpolate between this rectangle and another …","Basic Linear interpolation between this rotation and …","Linearly interpolate each component between this size and …","Linearly interpolate between this size and another size.","Linearly interpolate each component between this vector …","Linearly interpolate each component between this vector …","Linear interpolation between two angles, using the …","Returns vector with results of “lower then” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","Returns vector with results of “lower than” operation …","","","","","","","","","","","","","","","","","","","","","","","Returns maximum between this length and another length.","","","","","Returns the size each component of which are maximum of …","Returns the size each component of which are maximum of …","Returns the vector each component of which are maximum of …","Returns the vector each component of which are maximum of …","","","","","Returns minimum between this length and another length.","","","","","Returns the size each component of which are minimum of …","Returns the size each component of which are minimum of …","Returns the vector each component of which are minimum of …","Returns the vector each component of which are minimum of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies all of the transform’s component by a scalar …","","","","","","","","","","Constructor.","Constructor.","Constructor taking scalar values directly.","Associate a value with a unit of measure.","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Constructor.","Creates a rotation from an angle in radians.","","Constructor taking a scalar for each side.","Constructor taking scalar values.","Constructor taking scalar values.","Create a transform specifying its components in using the …","Create a transform specifying all of it’s component as a …","","","Constructor taking scalar values directly.","Constructor taking scalar values directly.","Construct a new rigid transformation, where the <code>rotation</code> …","Create a transform representing a 2d transformation from …","Constructor setting the same value to all sides, taking a …","Construct a new rigid transformation, where the <code>translation</code>…","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Returns <code>true</code> if all components are <code>false</code> and <code>false</code> …","Computes the norm of this quaternion.","Returns a unit quaternion from this one.","Returns the vector with length of one unit.","Returns the vector with length of one unit","Returns new vector with results of negation operation on …","Returns new vector with results of negation operation on …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","Returns vector with results of “not equal” operation …","A one-dimensional length, tagged with its units.","","Constructor, setting all components to one.","Constructor, setting all components to one.","Returns new vector with by-component OR operation applied.","Returns new vector with by-component OR operation applied.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","","Create an orthogonal projection transform.","Calculate the b and position of an outer box.","Calculate the size and position of an outer rectangle.","Returns a box that encompasses the result of transforming …","Returns a 2d box that encompasses the result of …","Returns a 3d box that encompasses the result of …","Returns a rectangle that encompasses the result of …","Returns a rectangle that encompasses the result of …","","","","","Create a simple perspective transform, projecting to the …","","Shorthand for <code>Point2D::new(x, y)</code>.","Shorthand for <code>Point3D::new(x, y)</code>.","Returns this angle in the [0..2*PI[ range.","Applies a rotation before self’s transformation and …","Returns a transform with a rotation applied before self’…","Applies a scale before self’s transformation and returns …","Returns a transform with a scale applied before self’s …","Applies a translation before self’s transformation and …","Returns a transform with a translation applied before self…","Returns this vector projected onto another one.","Returns this vector projected onto another one.","Returns a projection of this transform in 2d space.","Creates a rotation around from a quaternion representation.","The real part.","Creates a rotation from an angle in radians.","","","","Shorthand for …","Returns a reflection vector using an incident ray and a …","Returns a reflection vector using an incident ray and a …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","","Return the normalized vector even if the length is larger …","Return the normalized vector even if the length is larger …","Returns a rotation transform.","Create a 3d rotation transform from an angle / axis. The …","","Return a box with edges rounded to integer coordinates, …","Return a box3d with edges rounded to integer coordinates, …","See Point2D::round()","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See Point3D::round()","Return a rectangle with edges rounded to integer …","Rounds each component to the nearest integer value.","See <code>Size2D::round()</code>.","See <code>Size3D::round()</code>.","Rounds each component to the nearest integer value.","Rounds each component to the nearest integer value.","See <code>Vector2D::round()</code>","Rounds each component to the nearest integer value.","See <code>Vector3D::round()</code>","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","Return a box with faces/edges rounded to integer …","Return a box3d with faces/edges rounded to integer …","Return a rectangle with edges rounded to integer …","","","","","","Create a 2d scale transform:","Create a 3d scale transform:","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns point, each component of which or from <code>a</code>, or from <code>b</code>…","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns size, each component of which or from <code>a</code>, or from <code>b</code> …","Returns vector, each component of which or from <code>a</code>, or from …","Returns vector, each component of which or from <code>a</code>, or from …","Change the size of the box by adjusting the max endpoint …","Returns this angle in the ]-PI..PI] range.","","Returns (sin(self), cos(self)).","","","","Shorthand for <code>Size2D::new(w, h)</code>.","Shorthand for <code>Size3D::new(w, h, d)</code>.","Create a 2d skew transform.","Spherical linear interpolation between this rotation and …","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Constructor setting all components to the same value.","","","Constructor setting all components to the same value.","Constructor setting all components to the same value.","Returns the vector’s length squared.","Returns the vector’s length squared.","Computes the squared norm of this quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a rotation representing the other rotation …","Returns a rotation representing this rotation followed by …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two matrices such that …","Returns the multiplication of the two transforms such that …","Applies a rotation after self’s transformation and …","Returns a transform with a rotation applied after self’s …","Applies a scale after self’s transformation and returns …","Returns a transform with a scale applied after self’s …","Applies a translation after self’s transformation and …","Returns a transform with a translation applied after self…","Convert into a 2d point.","Create a 2D transform picking the relevant terms from this …","Convert into a 2d vector.","Convert into a 3d point with z-coordinate equals to zero.","Creates a 3d rotation (around the z axis) from this 2d …","Create a 3D transform from the current transform","Convert into a 3d vector with <code>z</code> coordinate equals to …","Cast into an array with x and y.","Cast into an array with x, y and z.","Return this size as an array of two elements (width, then …","Return this size as an array of three elements (width, …","Returns an array containing this transform’s terms.","Returns an array containing this transform’s terms.","Cast into an array with x and y.","Cast into an array with x, y and z.","Cast into an array with x and y.","Cast into an array with x, y and z.","","Cast into an array with x, y, z and 0.","Returns an array containing this transform’s terms …","Returns an array containing this transform’s terms …","Equivalent to <code>to_array</code> with elements packed two at a time …","Equivalent to <code>to_array</code> with elements packed four at a time …","Equivalent to <code>to_array_transposed</code> with elements packed …","","","Cast into an <code>f32</code> box.","Cast into an <code>f32</code> box3d.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> point.","Cast into an <code>f32</code> rectangle.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> size.","Cast into an <code>f32</code> vector.","Cast into an <code>f32</code> vector.","Cast angle to <code>f32</code>.","Cast into an <code>f64</code> box.","Cast into an <code>f64</code> box3d.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> point.","Cast into an <code>f64</code> rectangle.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> size.","Cast into an <code>f64</code> vector.","Cast into an <code>f64</code> vector.","Cast angle <code>f64</code>.","Cast into an <code>i32</code> box, truncating decimals if any.","Cast into an <code>i32</code> box3d, truncating decimals if any.","Cast into an i32 point, truncating decimals if any.","Cast into an <code>i32</code> point, truncating decimals if any.","Cast into an <code>i32</code> rectangle, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an <code>i32</code> size, truncating decimals if any.","Cast into an i32 vector, truncating decimals if any.","Cast into an <code>i32</code> vector, truncating decimals if any.","Cast into an <code>i64</code> box, truncating decimals if any.","Cast into an <code>i64</code> box3d, truncating decimals if any.","Cast into an i64 point, truncating decimals if any.","Cast into an <code>i64</code> point, truncating decimals if any.","Cast into an <code>i64</code> rectangle, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an <code>i64</code> size, truncating decimals if any.","Cast into an i64 vector, truncating decimals if any.","Cast into an <code>i64</code> vector, truncating decimals if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast this vector into a point.","Cast this vector into a point.","Convert into Cartesian 2D point.","Convert into Cartesian 3D point.","","Cast this vector into a size.","Returns the matrix representation of this rotation.","Returns the matrix representation of this rotation.","Returns the matrix representation of this translation.","Returns the matrix representation of this translation.","Creates translation by this vector in vector units.","Creates translation by this vector in vector units","","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Return this size as a tuple of two elements (width, then …","Return this size as an array of three elements (width, …","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","Cast into a tuple with x and y.","Cast into a tuple with x, y and z.","","Cast into a tuple with x, y, z and 0.","Cast into an <code>u32</code> box, truncating decimals if any.","Cast into an <code>u32</code> box3d, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> point, truncating decimals if any.","Cast into an <code>u32</code> rectangle, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> size, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u32</code> vector, truncating decimals if any.","Cast into an <code>u64</code> rectangle, truncating decimals if any.","Cast into an <code>u64</code> size, truncating decimals if any.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Drop the units, preserving only the numeric value.","Cast into an <code>usize</code> box, truncating decimals if any.","Cast into an <code>usize</code> box3d, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> point, truncating decimals if any.","Cast into an <code>usize</code> rectangle, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>uint</code> size, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast into an <code>usize</code> vector, truncating decimals if any.","Cast this point into a vector.","Cast this point into a vector.","Return this size as a vector with width and height.","Return this size as a vector with width, height and depth.","Cast into a 2D vector.","Cast into a 3D vector.","","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 2D box and cast its unit.","Returns the given box transformed by this scale.","Translate a 3D box and cast its unit.","Returns the given 2d point transformed by this rotation.","Returns the given point transformed by this scale.","Returns the given point transformed by this transform.","Translate a point and cast its unit.","Returns the given 2d point transformed by this rotation …","Returns the given 2d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given 3d point transformed by this rotation.","Returns the given point transformed by this scale.","Returns the given 3d point transformed by this transform, …","Translate a point and cast its unit.","Returns the homogeneous vector corresponding to the …","Returns the given rect transformed by this scale.","Translate a rectangle and cast its unit.","Translate a rectangle and cast its unit.","Returns the given size transformed by this scale.","No-op, just cast the unit.","No-op, just cast the unit.","Returns the given 2d vector transformed by this rotation.","Returns the given vector transformed by this scale.","Returns the given vector transformed by this matrix.","Returns the given 2d vector transformed by this rotation …","Returns the given 2d vector transformed by this matrix.","Returns the given 3d vector transformed by this rotation.","Returns the given 3d vector transformed by this matrix.","Returns the same box, translated by a vector.","Returns the same box3d, translated by a vector.","Returns the same rectangle, translated by a vector.","Create a 2d translation transform:","Create a 3d translation transform:","","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another, …","Fallible cast from one numeric representation to another.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector with length of one unit.","Returns the vector with length of one unit.","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the union of two boxes.","Computes the union of two boxes.","","Creates a rotation around from a quaternion representation …","Convenience constructor.","Convenience constructor.","Returns the vector part (i, j, k) of this quaternion.","","","Returns result of multiplication of all components","","","","","The extent of the element in the <code>U</code> units along the <code>x</code> axis …","The extent of the element in the <code>U</code> units along the <code>x</code> axis.","Returns the same transform with a different destination …","Returns the same transform with a different destination …","Return this vector scaled to fit the provided length.","Return this vector capped to a maximum length.","Return this vector capped to a maximum length.","Return this vector with a minimum length applied.","Return this vector with a minimum length applied.","Returns the same transform with a different source unit.","Returns the same transform with a different source unit.","","","","","","The <code>x</code> (traditionally, horizontal) coordinate.","The <code>x</code> (traditionally, horizontal) coordinate.","","","","","","Returns a 2d point using this point’s x and y coordinates","Returns a 2d vector using this vector’s x and y …","Returns a 2d vector using this vector’s x and y …","","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s x and z …","","","","","","","The <code>y</code> (traditionally, vertical) coordinate.","The <code>y</code> (traditionally, vertical) coordinate.","","","","","","Swap x and y.","Swap x and y.","Returns a 2d point using this point’s x and z coordinates","Returns a 2d vector using this vector’s x and z …","Returns a 2d vector using this vector’s y and z …","","","","","The <code>z</code> (traditionally, depth) coordinate.","","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","","The same as <code>origin()</code>.","The same as <code>origin()</code>.","","Constructor, setting all sides to zero.","Constructor, setting all sides to zero.","","The same as <code>Zero::zero()</code> but available without importing …","The same as <code>Zero::zero()</code> but available without importing …","","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","Constructor, setting all components to zero.","","Trait for testing approximate equality","Default epsilon value","Returns <code>true</code> is this object is approximately equal to the …","Returns <code>true</code> is this object is approximately equal to the …","","","","","","","","","","","","","","","","","","","","","","","Defines the smallest integer equal or greater than the …","Defines the biggest integer equal or lower than the …","","Defines the nearest integer value to the original value.","","Rounds to the smallest integer equal or greater than the …","Rounds to the biggest integer equal or lower than the …","","Rounds to the nearest integer value.",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,7,7,9,9,10,10,11,12,2,2,3,3,13,14,4,4,5,5,15,15,7,9,9,10,10,12,2,3,13,14,4,5,15,9,10,17,19,17,19,37,4,4,5,15,17,19,7,9,10,31,29,30,4,5,15,29,30,7,9,10,31,29,29,30,30,4,5,15,0,0,32,33,2,31,31,31,31,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,12,0,0,0,32,34,7,9,10,33,11,2,3,29,30,4,5,15,32,34,7,9,10,33,37,31,2,3,4,5,38,9,9,10,10,2,2,3,3,4,4,5,5,32,34,33,9,10,11,2,3,4,5,4,5,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,7,11,44,4,5,4,5,32,34,33,2,3,32,34,33,20,4,5,38,0,32,34,7,9,10,33,11,12,2,3,29,30,13,14,4,5,15,44,15,20,34,3,29,30,9,10,32,32,34,34,7,7,7,9,9,10,10,33,33,12,12,2,2,3,3,4,4,5,5,15,15,32,32,34,34,7,9,9,10,10,33,33,12,12,2,2,3,3,4,4,5,5,15,9,10,4,5,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,2,3,4,5,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,31,9,4,20,9,9,10,10,2,2,3,3,4,4,5,5,32,34,43,7,9,10,33,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,15,15,15,32,32,34,34,43,43,43,43,43,7,9,9,9,10,10,10,33,33,37,31,11,12,2,2,2,2,3,3,3,3,29,30,13,13,14,14,4,4,4,4,5,5,5,15,38,38,38,17,19,44,4,29,30,29,30,12,9,10,12,2,3,4,5,32,32,34,33,38,30,32,34,33,38,32,34,9,10,33,37,31,2,3,29,30,13,14,4,5,38,12,12,7,11,15,37,2,3,4,5,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,32,34,33,2,3,12,31,37,31,11,29,30,13,14,38,32,34,33,32,33,32,34,33,32,34,32,34,33,32,34,43,7,9,9,9,10,10,10,33,37,31,11,12,2,2,2,3,3,3,29,30,13,13,13,14,14,14,4,4,4,5,5,5,15,38,17,19,44,37,31,11,29,30,13,14,38,30,30,32,34,33,2,3,32,34,9,10,33,2,3,4,5,15,11,13,14,29,30,32,34,31,2,3,12,31,31,12,4,5,32,34,7,9,10,33,31,2,3,4,5,15,2,3,4,5,29,30,29,30,30,30,29,30,29,30,30,30,29,30,29,30,30,30,30,30,30,30,7,9,10,33,11,2,3,4,5,32,34,33,33,7,9,10,33,11,2,3,4,5,32,34,33,33,32,32,34,34,7,7,9,9,10,10,33,33,11,12,12,2,2,3,3,4,4,5,5,15,32,32,34,34,7,9,9,10,10,33,33,12,12,2,2,3,3,4,4,5,5,15,30,7,9,10,12,2,3,4,5,15,32,34,43,7,9,10,33,37,11,12,2,3,29,30,13,14,4,5,38,30,12,38,17,19,31,31,4,5,17,19,2,3,4,5,0,11,4,5,17,19,9,10,33,30,32,33,29,30,30,29,30,7,11,15,44,30,15,0,0,15,29,30,29,30,29,30,4,5,30,31,31,37,15,15,20,0,4,5,9,10,12,4,5,29,30,38,32,34,9,9,10,10,33,2,2,3,3,4,4,5,5,32,34,33,32,34,33,7,7,32,34,33,29,30,17,19,17,19,17,19,32,15,20,15,32,34,33,0,0,30,31,9,10,2,3,13,14,4,5,4,5,31,7,9,9,9,10,10,10,11,12,2,3,13,14,4,5,15,7,9,9,10,10,12,2,3,13,14,4,5,15,7,7,2,2,3,3,4,4,5,5,15,15,20,37,31,29,30,38,29,30,29,30,29,30,10,30,5,9,37,29,4,9,10,2,3,29,30,13,14,4,5,10,5,29,30,29,30,30,33,15,32,34,9,10,33,2,3,4,5,15,32,34,9,10,33,2,3,4,5,15,32,34,9,10,33,2,3,4,5,32,34,9,10,33,2,3,4,5,32,34,33,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,4,5,43,43,32,4,37,31,13,14,4,5,38,9,10,2,3,13,14,4,5,10,5,32,34,9,10,33,2,3,4,5,33,2,32,34,9,10,33,37,31,2,3,29,30,13,14,4,5,38,32,34,9,10,33,2,3,4,5,9,10,2,3,13,14,12,13,11,14,11,14,37,11,29,13,31,30,14,30,31,11,30,14,30,11,13,14,11,13,14,37,11,29,31,30,31,30,32,34,33,29,30,38,32,34,7,9,10,33,11,2,3,29,30,4,5,15,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,4,5,15,32,34,43,7,9,10,33,37,31,11,12,2,3,29,30,13,14,4,5,15,38,17,19,44,32,34,33,31,0,0,31,12,34,3,43,32,34,33,2,3,29,30,4,4,5,4,5,29,30,43,9,10,13,14,4,5,17,19,32,34,33,10,5,19,34,10,5,19,34,43,9,10,13,14,4,5,17,19,32,34,33,9,4,10,5,19,34,43,10,14,5,19,34,32,34,7,9,9,10,10,33,12,2,2,3,3,4,4,5,5,15,0,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,52,40,64,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[7,[6]],[7,[6]]]],[[[7,[[0,[6,8]]]],[7,[[0,[6,8]]]]]],[[[9,[6]],[2,[6]]]],[[[9,[6]],[4,[6]]]],[[[10,[6]],[3,[6]]]],[[[10,[6]],[5,[6]]]],[[[11,[6]],[11,[6]]]],[[[12,[[6,[[6,[[6,[6]]]]]]]],[12,[[6,[[6,[[6,[6]]]]]]]]],[[12,[[6,[[6,[[6,[6]]]]]]]]]],[[[2,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[2,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[2,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[2,[6]],[2,[6]]]],[[[3,[6]],[3,[6]]]],[[[3,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[3,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[3,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[13,[6]],[13,[6]]]],[[[14,[6]],[14,[6]]]],[[[4,[[0,[6,8]]]],[4,[[0,[6,8]]]]]],[[[4,[6]],[4,[6]]]],[[[5,[6]],[5,[6]]]],[[[5,[[0,[6,8]]]],[5,[[0,[6,8]]]]]],[[[15,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[15,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[15,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[15,[[6,[[6,[[6,[6]]]]]]]],[15,[[6,[[6,[[6,[6]]]]]]]]],[[15,[[6,[[6,[[6,[6]]]]]]]]]],[[[7,[16]],[7,[16]]]],[[[9,[16]],[2,[16]]]],[[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[4,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[10,[16]],[3,[16]]]],[[[10,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[5,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[12,[[16,[[16,[[16,[16]]]]]]]],[12,[[16,[[16,[[16,[16]]]]]]]]]],[[[2,[16]],[2,[16]]]],[[[3,[16]],[3,[16]]]],[[[13,[16]],[13,[16]]]],[[[14,[16]],[14,[16]]]],[[[4,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[4,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[5,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[5,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[15,[[16,[[16,[[16,[16]]]]]]]],[15,[[16,[[16,[[16,[16]]]]]]]]]],[[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[2,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[10,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[3,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[10,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[17,18],[19,18],[[17,17],17],[[19,19],19],0,[[[4,[20,8]]],[[15,[20,8]]]],[[[4,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]]]]]],[4,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]]]]]]],[[15,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]],[6,[[0,[21,20]],[0,[8,[22,[[0,[21,20]],[0,[8,22,6]]]],[6,[[0,[21,20]],[0,[8,22,6]]]]]]]]]]]]]]]]]],[[[5,[20,23]],[5,[20,23]]],[[15,[20,23]]]],[[[15,[[0,[24,22,21,6,25,26,8]]]],[15,[[0,[24,22,21,6,25,26,8]]]]],[[15,[[0,[24,22,21,6,25,26,8]]]]]],[17,18],[19,18],[[],[[27,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[9,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[10,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,27]]]]]]]]]]]]]]]]]]]],[[],[[27,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[27,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[4,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[5,[[27,[[27,[[27,[27]]]]]]]]]],[[],[[27,[[27,[[27,[[27,[27]]]]]]]]]],[[[29,[[27,[[27,[[27,[27]]]]]]]],[29,[[27,[[27,[[27,[27]]]]]]]]],18],[[[30,[[27,[[27,[[27,[27]]]]]]]],[30,[[27,[[27,[[27,[27]]]]]]]]],18],[[[7,[[27,[[27,[[27,[27]]]]]]]],[7,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],[[[9,[[27,[[27,[[27,[27]]]]]]]],[9,[[27,[[27,[[27,[27]]]]]]]],[9,[[27,[[27,[[27,[27]]]]]]]]],18],[[[10,[[27,[[27,[[27,[27]]]]]]]],[10,[[27,[[27,[[27,[27]]]]]]]],[10,[[27,[[27,[[27,[27]]]]]]]]],18],[[[31,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,27]]]]]]]]]]]]]]]],[31,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,27]]]]]]]]]]]]]]]],[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,[27,[[0,[8,28,27]]]]]]]]]]]]]]]]]]],18],[[[29,[[27,[[27,[[27,[27]]]]]]]],[29,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],[[[29,[[27,[[27,[[27,[27]]]]]]]],[29,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],[[[30,[[27,[[27,[[27,[27]]]]]]]],[30,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],[[[30,[[27,[[27,[[27,[27]]]]]]]],[30,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],[[[4,[[27,[[27,[[27,[27]]]]]]]],[4,[[27,[[27,[[27,[27]]]]]]]],[4,[[27,[[27,[[27,[27]]]]]]]]],18],[[[5,[[27,[[27,[[27,[27]]]]]]]],[5,[[27,[[27,[[27,[27]]]]]]]],[5,[[27,[[27,[[27,[27]]]]]]]]],18],[[[15,[[27,[[27,[[27,[27]]]]]]]],[15,[[27,[[27,[[27,[27]]]]]]]],[27,[[27,[[27,[[27,[27]]]]]]]]],18],0,0,[[[32,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]]]]],[[[2,[22,8]]]],[[[5,[23]],[15,[23]]],[[31,[23]]]],[[[15,[23]]],[[31,[23]]]],[[[15,[23]]],[[31,[23]]]],[[[15,[23]]],[[31,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[8,8,8,8,8,8],[[34,[8]]]],[[18,18],17],[[18,18,18],19],[[[32,[[0,[35,8]]]]],[[32,[35]]]],[[[34,[[0,[35,8]]]]],[[34,[35]]]],[[[7,[[0,[35,36]]]]],[[7,[35]]]],[[[9,[[0,[35,8]]]]],[[9,[35]]]],[[[10,[[0,[35,8]]]]],[[10,[35]]]],[[[33,[[0,[35,8]]]]],[[33,[35]]]],[[[11,[35]]],[[11,[35]]]],[[[2,[[0,[35,8]]]]],[[2,[35]]]],[[[3,[[0,[35,8]]]]],[[3,[35]]]],[[[29,[[0,[35,8]]]]],[[29,[35]]]],[[[30,[[0,[35,8]]]]],[[30,[35]]]],[[[4,[[0,[35,8]]]]],[[4,[35]]]],[[[5,[[0,[35,8]]]]],[[5,[35]]]],[[[15,[[0,[35,8]]]]],[[15,[35]]]],[[[32,[8]]],[[32,[8]]]],[[[34,[8]]],[[34,[8]]]],[[[7,[36]]],[[7,[36]]]],[[[9,[8]]],[[9,[8]]]],[[[10,[8]]],[[10,[8]]]],[[[33,[8]]],[[33,[8]]]],[[[37,[8]]],[[37,[8]]]],[[[31,[8]]],[[31,[8]]]],[[[2,[8]]],[[2,[8]]]],[[[3,[8]]],[[3,[8]]]],[[[4,[8]]],[[4,[8]]]],[[[5,[8]]],[[5,[8]]]],[[[38,[8]]],[[38,[8]]]],[[[9,[39]]],[[9,[39]]]],[[[9,[39,8]]],[[9,[39,8]]]],[[[10,[39]]],[[10,[39]]]],[[[10,[39,8]]],[[10,[39,8]]]],[[[2,[39,8]]],[[2,[39,8]]]],[[[2,[39]]],[[2,[39]]]],[[[3,[39]]],[[3,[39]]]],[[[3,[39,8]]],[[3,[39,8]]]],[[[4,[39,8]]],[[4,[39,8]]]],[[[4,[39]]],[[4,[39]]]],[[[5,[39,8]]],[[5,[39,8]]]],[[[5,[39]]],[[5,[39]]]],[[[32,[[0,[8,40,6,41]]]]],[[9,[[0,[8,40,6,41]]]]]],[[[34,[[0,[8,40,6,41]]]]],[[10,[[0,[8,40,6,41]]]]]],[[[33,[[0,[8,40,6,41]]]]],[[9,[[0,[8,40,6,41]]]]]],[[[9,[8,42]],[9,[8,42]],[9,[8,42]]],[[9,[8,42]]]],[[[10,[8,42]],[10,[8,42]],[10,[8,42]]],[[10,[8,42]]]],[[[11,[8,42]],[11,[8,42]],[11,[8,42]]],[[11,[8,42]]]],[[[2,[8,42]],[2,[8,42]],[2,[8,42]]],[[2,[8,42]]]],[[[3,[8,42]],[3,[8,42]],[3,[8,42]]],[[3,[8,42]]]],[[[4,[8,42]],[4,[8,42]],[4,[8,42]]],[[4,[8,42]]]],[[[5,[8,42]],[5,[8,42]],[5,[8,42]]],[[5,[8,42]]]],[[[4,[23]],23,23],[[4,[23]]]],[[[5,[23]],23,23],[[5,[23]]]],[[[32,[36]]],[[32,[36]]]],[[[34,[36]]],[[34,[36]]]],[[[43,[36]]],[[43,[36]]]],[[[7,[36]]],[[7,[36]]]],[[[9,[36]]],[[9,[36]]]],[[[10,[36]]],[[10,[36]]]],[[[33,[36]]],[[33,[36]]]],[[[37,[36]]],[[37,[36]]]],[[[31,[36]]],[[31,[36]]]],[[[11,[36]]],[[11,[36]]]],[[[12,[36]]],[[12,[36]]]],[[[2,[36]]],[[2,[36]]]],[[[3,[36]]],[[3,[36]]]],[[[29,[36]]],[[29,[36]]]],[[[30,[36]]],[[30,[36]]]],[[[13,[36]]],[[13,[36]]]],[[[14,[36]]],[[14,[36]]]],[[[4,[36]]],[[4,[36]]]],[[[5,[36]]],[[5,[36]]]],[[[15,[36]]],[[15,[36]]]],[[[38,[36]]],[[38,[36]]]],[17,17],[19,19],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[45]],[7,[45]]],46],[[[11,[45]],[11,[45]]],46],[[44,44],46],[[[4,[41]],[4,[41]]],[[4,[41]]]],[[[5,[41,8]],[5,[41,8]]],[[5,[41,8]]]],[[[4,[22]],[4,[22]]],[[4,[22]]]],[[[5,[22,8]],[5,[22,8]]],[[5,[22,8]]]],[[[32,[42]],[9,[42]]],18],[[[34,[42]],[10,[42]]],18],[[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6]]]]]]]]]]]]]]]],[9,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6]]]]]]]]]]]]]]]]],18],[[[2,[42]],[2,[42]]],18],[[[3,[42]],[3,[42]]],18],[[[32,[42]],[32,[42]]],18],[[[34,[42]],[34,[42]]],18],[[[33,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6]]]]]]]]]]]]]]]],[33,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6]]]]]]]]]]]]]]]]],18],[[]],[[[4,[[0,[21,22]]]],[4,[[0,[21,22]]]]],[[0,[21,22]]]],[[[5,[[0,[21,22]],8]],[5,[[0,[21,22]],8]]],[[5,[[0,[21,22]],8]]]],[[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],0,[[],[[32,[48]]]],[[],[[34,[48]]]],[[],[[7,[48]]]],[[],[[9,[48]]]],[[],[[10,[48]]]],[[],[[33,[48]]]],[[],[[11,[48]]]],[[],[[12,[48]]]],[[],[[2,[48]]]],[[],[[3,[48]]]],[[],[[29,[[0,[47,40]]]]]],[[],[[30,[[0,[47,40]]]]]],[[],[[13,[47]]]],[[],[[14,[47]]]],[[],[[4,[48]]]],[[],[[5,[48]]]],[[],[[15,[48]]]],[[],44],[20,[[15,[20]]]],[[]],[[[34,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]]]],0,[[[29,[[0,[8,21,22,41,49,47,40]]]]],[[0,[8,21,22,41,49,47,40]]]],[[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[[[9,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]],[9,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]]],[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]]]]]],[[[10,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]],[10,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]]],[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,[21,[[0,[23,21]]]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[32,[[0,[8,41]]]],[0,[8,41]]]],[[[34,[[0,[8,41]]]],[0,[8,41]]]],[[[34,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[7,[41]],[7,[41]]]],[[[7,[41]],[11,[41]]]],[[[7,[41]],41]],[[[9,[[0,[8,41]]]],[0,[8,41]]]],[[[9,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[10,[[0,[8,41]]]],[0,[8,41]]]],[[[10,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[33,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[33,[[0,[8,41]]]],[0,[8,41]]]],[[[12,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[12,[[0,[8,41]]]],[0,[8,41]]]],[[[2,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[2,[[0,[8,41]]]],[0,[8,41]]]],[[[3,[[0,[8,41]]]],[0,[8,41]]]],[[[3,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[4,[[0,[8,41]]]],[0,[8,41]]]],[[[4,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[5,[[0,[8,41]]]],[11,[[0,[8,41]]]]]],[[[5,[[0,[8,41]]]],[0,[8,41]]]],[[[15,[[41,[[41,[[41,[41]]]]]]]],[15,[[41,[[41,[[41,[41]]]]]]]]],[[41,[[41,[[41,[[41,[41]]]]]]]]]],[[[15,[[41,[[41,[[41,[41]]]]]]]],[41,[[41,[[41,[[41,[41]]]]]]]]],[[15,[[41,[[41,[[41,[41]]]]]]]]]],[[[32,[[0,[8,50]]]],[0,[8,50]]]],[[[32,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[34,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[34,[[0,[8,50]]]],[0,[8,50]]]],[[[7,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]],[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]]]]]],[[[9,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[9,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]],[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]]]]]],[[[10,[[0,[8,50]]]],[0,[8,50]]]],[[[10,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[33,[[0,[8,50]]]],[0,[8,50]]]],[[[33,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[12,[[0,[8,50]]]],[0,[8,50]]]],[[[12,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[2,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[2,[[0,[8,50]]]],[0,[8,50]]]],[[[3,[[0,[8,50]]]],[0,[8,50]]]],[[[3,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[4,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[4,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]],[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]]]]]],[[[5,[[0,[8,50]]]],[11,[[0,[8,50]]]]]],[[[5,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]],[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41]]]]]]]]]]]]]]]]]]]],[[[15,[[50,[[50,[[50,[50]]]]]]]],[50,[[50,[[50,[[50,[50]]]]]]]]]],[[[9,[51]],[2,[51]]],[[9,[51]]]],[[[10,[51]],[3,[51]]],[[10,[51]]]],[[[4,[[0,[6,22]]]],[4,[[0,[6,22]]]]],[[0,[6,22]]]],[[[5,[[0,[6,22]]]],[5,[[0,[6,22]]]]],[[0,[6,22]]]],[[[32,[49]],[32,[49]]],18],[[[34,[49]],[34,[49]]],18],[[[43,[49]],[43,[49]]],18],[[[7,[49]],[7,[49]]],18],[[[9,[49]],[9,[49]]],18],[[[10,[49]],[10,[49]]],18],[[[33,[49]],[33,[49]]],18],[[[37,[49]],[37,[49]]],18],[[[31,[49]],[31,[49]]],18],[[[11,[49]],[11,[49]]],18],[[[12,[49]],[12,[49]]],18],[[[2,[49]],[2,[49]]],18],[[[3,[49]],[3,[49]]],18],[[[29,[49]],[29,[49]]],18],[[[30,[49]],[30,[49]]],18],[[[13,[49]],[13,[49]]],18],[[[14,[49]],[14,[49]]],18],[[[4,[49]],[4,[49]]],18],[[[5,[49]],[5,[49]]],18],[[[15,[49]],[15,[49]]],18],[[[38,[49,49,49]],[38,[49,49,49]]],18],[[17,17],18],[[19,19],18],[[44,44],18],[[[2,[49]],[2,[49]]],17],[[[3,[49]],[3,[49]]],19],[[[4,[49]],[4,[49]]],17],[[[5,[49]],[5,[49]]],19],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[15,[23]],[15,[23]],[15,[23]]],[[31,[23]]]],[[[9,[8]],8],[[10,[8]]]],[[[4,[8]],8],[[5,[8]]]],[[]],[[[9,[52]]],[[9,[52]]]],[[[9,[52,8]]],[[9,[52,8]]]],[[[10,[52,8]]],[[10,[52,8]]]],[[[10,[52]]],[[10,[52]]]],[[[2,[52,8]]],[[2,[52,8]]]],[[[2,[52]]],[[2,[52]]]],[[[3,[52]]],[[3,[52]]]],[[[3,[52,8]]],[[3,[52,8]]]],[[[4,[52,8]]],[[4,[52,8]]]],[[[4,[52]]],[[4,[52]]]],[[[5,[52,8]]],[[5,[52,8]]]],[[[5,[52]]],[[5,[52]]]],[[[32,[53]],54],55],[[[34,[53]],54],55],[[[43,[53]],54],55],[[[7,[53]],54],55],[[[9,[53]],54],55],[[[10,[53]],54],55],[[[33,[53]],54],55],[[[31,[53]],54],55],[[[11,[53]],54],55],[[[12,[53]],54],55],[[[2,[53]],54],55],[[[3,[53]],54],55],[[[29,[[0,[8,53,49,40,47]]]],54],55],[[[30,[[0,[8,53,49,40,47]]]],54],55],[[[13,[53]],54],55],[[[14,[53]],54],55],[[[4,[53]],54],55],[[[5,[53]],54],55],[[[15,[53]],54],55],[[[38,[53,53,53]],54],55],[[17,54],55],[[19,54],55],[[44,54],55],[[],[[15,[[0,[26,6]]]]]],[[],[[15,[[0,[26,6]]]]]],[[],[[15,[[0,[26,6]]]]]],[[[2,[[0,[8,47,42]]]]],[[32,[[0,[8,47,42]]]]]],[[]],[[[3,[[0,[8,47,42]]]]],[[34,[[0,[8,47,42]]]]]],[[]],[[[9,[[0,[47,40]]]]],[[43,[[0,[47,40]]]]]],[[]],[[[5,[47]]],[[43,[47]]]],[[[4,[47]]],[[43,[47]]]],[[[10,[40]]],[[43,[40]]]],[[]],[[],9],[56,9],[[]],[56,10],[[]],[[],10],[[[2,[47]]],[[33,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[4,2],[[],2],[56,2],[[],3],[5,3],[[]],[56,3],[[]],[[]],[4,13],[[]],[5,14],[[]],[56,4],[2,4],[[]],[[],4],[[]],[[],5],[56,5],[[]],[[[5,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[31,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[[15,[[0,[20,22,8]]]],[0,[20,22,8]]],[[4,[[0,[20,22,8]]]]]],[[[56,[8]]],[[29,[8]]]],[[[56,[8]]],[[30,[8]]]],[[[56,[[56,[8]]]]],[[29,[8]]]],[[[56,[[56,[8]]]]],[[30,[8]]]],[[[7,[8]]],[[12,[8]]]],[[7,7],9],[[7,7,7],10],[[7,7,7,7],12],[[7,7],2],[[7,7,7],3],[[7,7],4],[[7,7,7],5],[[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[2,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[57,[[32,[[0,[8,47,42]]]]]],[57,[[34,[[0,[8,47,42]]]]]],[57,[[33,[[0,[8,47,42,[21,[[0,[8,47,42,[21,[[0,[8,47,42,[21,[[0,[8,47,42,21]]]]]]]]]]]]]]]]]],[[[31,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[11,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]],[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]]],[[[2,[47]]],[[32,[47]]]],[[[3,[47]]],[[34,[47]]]],[[[2,[47]]],[[33,[47]]]],[[[5,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[32,[8,44]]],[[32,[8]]]],[[[34,[8,44]]],[[34,[8]]]],[[[9,[44]]],9],[[[10,[44]]],10],[[[33,[8,44]]],[[33,[8]]]],[[[37,[8,44,44]]],[[37,[8]]]],[[[31,[8,44,44]]],[[31,[8]]]],[[[2,[44]]],2],[[[3,[44]]],3],[[[29,[8,44,44]]],[[29,[8]]]],[[[30,[8,44,44]]],[[30,[8]]]],[[[13,[8,44,44]]],[[13,[8]]]],[[[14,[8,44,44]]],[[14,[8]]]],[[[4,[44]]],4],[[[5,[44]]],5],[[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]],44,44]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[4,[28]],[4,[28]]],[[12,[28]]]],[[[4,[28]],[4,[28]]],[[12,[28]]]],[[[7,[36]]],36],[11],[15],[[[37,[8]]],[[15,[8]]]],[[[2,[42]],[2,[42]]],17],[[[3,[42]],[3,[42]]],19],[[[4,[42]],[4,[42]]],17],[[[5,[42]],[5,[42]]],19],[[[32,[58]],59]],[[[34,[58]],59]],[[[43,[58]],59]],[[[7,[58]],59]],[[[9,[58]],59]],[[[10,[58]],59]],[[[33,[58]],59]],[[[37,[58]],59]],[[[31,[58]],59]],[[[11,[58]],59]],[[[12,[58]],59]],[[[2,[58]],59]],[[[3,[58]],59]],[[[29,[58]],59]],[[[30,[58]],59]],[[[13,[58]],59]],[[[14,[58]],59]],[[[4,[58]],59]],[[[5,[58]],59]],[[[15,[58]],59]],[[[38,[58,58,58]],59]],[[17,59]],[[19,59]],[[44,59]],[[[32,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],0,0,[[[12,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],0,[[],[[37,[60]]]],[[],[[31,[[0,[60,25]]]]]],[[],[[11,[40]]]],[[],[[29,[[0,[47,40]]]]]],[[],[[30,[[0,[47,40]]]]]],[[],[[13,[47]]]],[[],[[14,[47]]]],[[],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]]],[[34,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]]],[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[12,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]]]]]],[12,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]]]]]]],[[33,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]],[21,[[0,[8,47,42,[6,[[0,[8,47,42,6,21]]]],[21,[[0,[8,47,42,6,21]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,42]]]],[32,[[0,[8,42]]]]],[[61,[[32,[[0,[8,42]]]]]]]],[[[34,[[0,[8,42]]]],[34,[[0,[8,42]]]]],[[61,[[34,[[0,[8,42]]]]]]]],[[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]]]]]],[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]]]]]]],[[61,[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21]]]],[21,[[0,[8,42,6,21]]]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,42]]]],[32,[[0,[8,42]]]]],[[32,[[0,[8,42]]]]]],[[[34,[[0,[8,42]]]],[34,[[0,[8,42]]]]],[[34,[[0,[8,42]]]]]],[[[32,[42]],[32,[42]]],18],[[[34,[42]],[34,[42]]],18],[[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6]]]]]]]]]]]]]]]],[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6]]]]]]]]]]]]]]]]],18],[[]],[[]],[[]],[[]],[9],[9,56],[[]],[10],[10,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2,56],[3,56],[[]],[3],[[]],[[]],[13,4],[[]],[[[13,[[0,[47,40]]]]],[[29,[[0,[47,40]]]]]],[[]],[14,5],[[[14,[[0,[47,40]]]]],[[30,[[0,[47,40]]]]]],[4,56],[[]],[4],[5],[5,56],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[23]]],[[37,[23]]]],[[[31,[23]]],[[31,[23]]]],[[[11,[[0,[40,41]]]]],11],[[[29,[[0,[8,21,22,41,49,47,40]]]]],[[61,[[29,[[0,[8,21,22,41,49,47,40]]]]]]]],[[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]],[[61,[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]]]]],[[[13,[28,8]]],13],[[[14,[28,8]]],14],[[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[30,[[0,[47,40,49]]]]],18],[[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]],18],[[[32,[42]]],18],[[[34,[42]]],18],[[[33,[[0,[8,47,42]]]]],18],[[[2,[47,42]]],18],[[[3,[47,42]]],18],[[[32,[62]]],18],[[[34,[62]]],18],[[[9,[62]]],18],[[[10,[62]]],18],[[[33,[62]]],18],[[[2,[62]]],18],[[[3,[62]]],18],[[[4,[62]]],18],[[[5,[62]]],18],[[[15,[62]]],18],[[[11,[[0,[49,40]]]]],18],[[[13,[[0,[47,49]]]]],18],[[[14,[[0,[47,49]]]]],18],[[[29,[[0,[8,21,22,41,49,47,40]]]]],18],[[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]],18],[[[32,[42]]],18],[[[34,[42]]],18],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]]],18],[[[2,[1]]],18],[[[3,[1]]],18],[[[12,[[0,[47,49]]]]],18],0,0,0,[[[4,[23]]],23],[[[5,[23]]],23],[[[32,[[0,[8,40,6,21,22]]]],[32,[[0,[8,40,6,21,22]]]],[0,[8,40,6,21,22]]],[[32,[[0,[8,40,6,21,22]]]]]],[[[34,[[0,[8,40,6,21,22]]]],[34,[[0,[8,40,6,21,22]]]],[0,[8,40,6,21,22]]],[[34,[[0,[8,40,6,21,22]]]]]],[[[7,[[0,[40,21,22,6]],36]],[7,[[0,[40,21,22,6]],36]],[0,[40,21,22,6]],36],[[7,[[0,[40,21,22,6]],36]]]],[[[9,[[0,[40,21,22,6]],8]],[9,[[0,[40,21,22,6]],8]],[0,[40,21,22,6]],8],[[9,[[0,[40,21,22,6]],8]]]],[[[10,[[0,[40,21,22,6]],8]],[10,[[0,[40,21,22,6]],8]],[0,[40,21,22,6]],8],[[10,[[0,[40,21,22,6]],8]]]],[[[33,[[0,[8,40,6,21,22]]]],[33,[[0,[8,40,6,21,22]]]],[0,[8,40,6,21,22]]],[[33,[[0,[8,40,6,21,22]]]]]],[[[31,[23]],[31,[23]],23],[[31,[23]]]],[[[2,[[0,[40,21,22,6]],8]],[2,[[0,[40,21,22,6]],8]],[0,[40,21,22,6]],8],[[2,[[0,[40,21,22,6]],8]]]],[[[3,[[0,[40,21,22,6]],8]],[3,[[0,[40,21,22,6]],8]],[0,[40,21,22,6]],8],[[3,[[0,[40,21,22,6]],8]]]],[[[4,[[0,[8,40,6,21,22]]]],[4,[[0,[8,40,6,21,22]]]],[0,[8,40,6,21,22]]],[[4,[[0,[8,40,6,21,22]]]]]],[[[5,[[0,[8,40,6,21,22]]]],[5,[[0,[8,40,6,21,22]]]],[0,[8,40,6,21,22]]],[[5,[[0,[8,40,6,21,22]]]]]],[[[15,[[0,[24,22,21,6,25,26,8]]]],[15,[[0,[24,22,21,6,25,26,8]]]],[0,[24,22,21,6,25,26,8]]],[[15,[[0,[24,22,21,6,25,26,8]]]]]],[[[2,[42]],[2,[42]]],17],[[[3,[42]],[3,[42]]],19],[[[4,[42]],[4,[42]]],17],[[[5,[42]],[5,[42]]],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[7,[42]],[7,[42]]],[[7,[42]]]],[[[9,[42]],[9,[42]]],[[9,[42]]]],[[[10,[42]],[10,[42]]],[[10,[42]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[11,[42]],[11,[42]]],[[11,[42]]]],[[[2,[42]],[2,[42]]],[[2,[42]]]],[[[3,[42]],[3,[42]]],[[3,[42]]]],[[[4,[42]],[4,[42]]],[[4,[42]]]],[[[5,[42]],[5,[42]]],[[5,[42]]]],0,0,[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],[[[7,[42]],[7,[42]]],[[7,[42]]]],[[[9,[42]],[9,[42]]],[[9,[42]]]],[[[10,[42]],[10,[42]]],[[10,[42]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[9,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[11,[42]],[11,[42]]],[[11,[42]]]],[[[2,[42]],[2,[42]]],[[2,[42]]]],[[[3,[42]],[3,[42]]],[[3,[42]]]],[[[4,[42]],[4,[42]]],[[4,[42]]]],[[[5,[42]],[5,[42]]],[[5,[42]]]],0,0,[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],[[[32,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[32,[[0,[8,22]]]],[0,[8,22]]]],[[[34,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[34,[[0,[8,22]]]],[0,[8,22]]]],[[[7,[22]],[11,[22]]]],[[[7,[22]],22]],[[[9,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[9,[[0,[8,22]]]],[0,[8,22]]]],[[[10,[[0,[8,22]]]],[0,[8,22]]]],[[[10,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[33,[[0,[8,22]]]],[0,[8,22]]]],[[[33,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[11,[22]],[11,[22]]]],[[[12,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[12,[[0,[8,22]]]],[0,[8,22]]]],[[[2,[[0,[8,22]]]],[0,[8,22]]]],[[[2,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[3,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[3,[[0,[8,22]]]],[0,[8,22]]]],[[[4,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[4,[[0,[8,22]]]],[0,[8,22]]]],[[[5,[[0,[8,22]]]],[0,[8,22]]]],[[[5,[[0,[8,22]]]],[11,[[0,[8,22]]]]]],[[[15,[[22,[[22,[[22,[22]]]]]]]],[22,[[22,[[22,[[22,[22]]]]]]]]],[[15,[[22,[[22,[[22,[22]]]]]]]]]],[[[32,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[32,[[0,[8,63]]]],[0,[8,63]]]],[[[34,[[0,[8,63]]]],[0,[8,63]]]],[[[34,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[7,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]],[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]]]]],[[[9,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[9,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]],[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]]]]],[[[10,[[0,[8,63]]]],[0,[8,63]]]],[[[10,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[33,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[33,[[0,[8,63]]]],[0,[8,63]]]],[[[12,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[12,[[0,[8,63]]]],[0,[8,63]]]],[[[2,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[2,[[0,[8,63]]]],[0,[8,63]]]],[[[3,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[3,[[0,[8,63]]]],[0,[8,63]]]],[[[4,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[4,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]],[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]]]]],[[[5,[[0,[8,63]]]],[11,[[0,[8,63]]]]]],[[[5,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]],[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22]]]]]]]]]]]]]]]]]]]],[[[15,[[63,[[63,[[63,[63]]]]]]]],[63,[[63,[[63,[[63,[63]]]]]]]]]],[[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]],[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]]],[[[7,[28]]]],[[[9,[28]]]],[[[10,[28]]]],[[[12,[28]]],[[12,[28]]]],[[[2,[28]]]],[[[3,[28]]]],[[[4,[28]]]],[[[5,[28]]]],[[[15,[28]]],[[15,[28]]]],[[9,9],32],[[10,10],34],[[],43],[[],7],[[],9],[[],10],[[9,2],33],[15,37],[[],11],[[],12],[[],2],[[],3],[[],29],[[],30],[[],13],[[],14],[[],4],[[],5],[[31,5],38],[[[0,[47,40]],[0,[47,40]],[0,[47,40]],[0,[47,40]],[0,[47,40]],[0,[47,40]]],[[30,[[0,[47,40]]]]]],[8,[[12,[8]]]],[[[5,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]],[31,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[17,18],[19,18],[[[31,[23]]],23],[[[31,[23]]],[[31,[23]]]],[[[4,[23]]],[[4,[23]]]],[[[5,[23]]],[[5,[23]]]],[17,17],[19,19],[[[2,[49]],[2,[49]]],17],[[[3,[49]],[3,[49]]],19],[[[4,[49]],[4,[49]]],17],[[[5,[49]],[5,[49]]],19],0,[[],[[11,[40]]]],[[],[[4,[40]]]],[[],[[5,[40]]]],[[17,17],17],[[19,19],19],[[],[[9,[47]]]],[[],[[10,[47]]]],0,[[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]],[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]],[[30,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[21,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[22,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],[41,[[0,[8,[6,[[0,[8,6,21,22,41,28,42,40,47]]]],[21,[[0,[8,6,21,22,41,28,42,40,47]]]],[22,[[0,[8,6,21,22,41,28,42,40,47]]]],[41,[[0,[8,6,21,22,41,28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]],28,42,40,47]]]]]],[[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[12,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]],[12,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]],[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]],[21,[[0,[8,[6,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]],[21,[[0,[8,[6,[[0,[8,6,21]]]],[21,[[0,[8,6,21]]]]]]]]]]]]]]]]]],[[[29,[[0,[21,47,42]],[0,[8,6,22]]]],[32,[[0,[21,47,42]],[0,[8,6,22]]]]],[[32,[[0,[21,47,42]],[0,[8,6,22]]]]]],[[[30,[[0,[21,41,47,42]],[0,[8,6,22]]]],[32,[[0,[21,41,47,42]],[0,[8,6,22]]]]],[[61,[[32,[[0,[21,41,47,42]],[0,[8,6,22]]]]]]]],[[[30,[[0,[21,41,47,42]],[0,[8,6,22]]]],[34,[[0,[21,41,47,42]],[0,[8,6,22]]]]],[[61,[[34,[[0,[21,41,47,42]],[0,[8,6,22]]]]]]]],[[[29,[[0,[21,47,42]],[0,[8,6,22]]]],[33,[[0,[21,47,42]],[0,[8,6,22]]]]],[[33,[[0,[21,47,42]],[0,[8,6,22]]]]]],[[[30,[[0,[21,41,47,42]],[0,[8,6,22]]]],[33,[[0,[21,41,47,42]],[0,[8,6,22]]]]],[[61,[[33,[[0,[21,41,47,42]],[0,[8,6,22]]]]]]]],[[[7,[42]],[7,[42]]],[[61,[46]]]],[[[11,[42]],[11,[42]]],[[61,[46]]]],[[[15,[42]],[15,[42]]],[[61,[46]]]],[[44,44],[[61,[46]]]],[[[0,[28,41]],[0,[47,40]]],[[30,[[0,[28,41]],[0,[47,40]]]]]],[[],[[15,[[0,[26,6]]]]]],[[],9],[[],10],[[[15,[[0,[24,21,6,60,26,42,8]]]]],[[15,[[0,[24,21,6,60,26,42,8]]]]]],[[[29,[[0,[8,6,21,22,47,20]]]],[15,[[0,[8,6,21,22,47,20]]]]],[[29,[[0,[8,6,21,22,47,20]]]]]],[[[30,[[0,[8,6,21,22,41,47,40,20]]]],[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[15,[[0,[8,6,21,22,41,47,40,20]]]]],[[30,[[0,[8,6,21,22,41,47,40,20]]]]]],[[[29,[[0,[8,22]]]],[0,[8,22]],[0,[8,22]]],[[29,[[0,[8,22]]]]]],[[[30,[[0,[8,6,22]],[0,[47,40]]]],[0,[8,6,22]],[0,[47,40]],[0,[8,6,22]],[0,[47,40]],[0,[8,6,22]],[0,[47,40]]],[[30,[[0,[8,6,22]],[0,[47,40]]]]]],[[[29,[[0,[8,6,22]],[0,[47,40]]]],[4,[[0,[8,6,22]],[0,[47,40]]]]],[[29,[[0,[8,6,22]],[0,[47,40]]]]]],[[[30,[[0,[8,6,22]],[0,[47,40]]]],[5,[[0,[8,6,22]],[0,[47,40]]]]],[[30,[[0,[8,6,22]],[0,[47,40]]]]]],[[[4,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]],[4,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]]],[[4,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]]]],[[[5,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]],[5,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]]],[[5,[[0,[[21,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[41,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]],[6,[[0,[[21,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[41,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]],[0,[8,[22,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]],[6,[[0,[[21,[[0,[21,41]],[0,[8,22,6]]]],[41,[[0,[21,41]],[0,[8,22,6]]]]]],[0,[8,[22,[[0,[21,41]],[0,[8,22,6]]]],[6,[[0,[21,41]],[0,[8,22,6]]]]]]]]]]]]]]]]]],[[[30,[[0,[8,22,41,47,40,49]]]]],[[30,[[0,[8,22,41,47,40,49]]]]]],[[],31],0,[[],37],[[],15],0,[[]],[[],33],[[[4,[[0,[8,40,6,21,22]]]],[4,[[0,[8,40,6,21,22]]]]],[[4,[[0,[8,40,6,21,22]]]]]],[[[5,[[0,[8,40,6,21,22]]]],[5,[[0,[8,40,6,21,22]]]]],[[5,[[0,[8,40,6,21,22]]]]]],[[[9,[51]],[2,[51]]],[[9,[51]]]],[[[10,[51]],[3,[51]]],[[10,[51]]]],0,[[[4,[62]]],[[4,[62]]]],[[[5,[62]]],[[5,[62]]]],[[[15,[[0,[8,6,21,22,47,20]]]]],[[29,[[0,[8,6,21,22,47,20]]]]]],[[[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[15,[[0,[8,6,21,22,41,47,40,20]]]]],[[30,[[0,[8,6,21,22,41,47,40,20]]]]]],0,[[[32,[64]]],[[32,[64]]]],[[[34,[64]]],[[34,[64]]]],[[[9,[64]]],[[9,[64]]]],[[[9,[64,8]]],[[9,[64,8]]]],[[[10,[64,8]]],[[10,[64,8]]]],[[[10,[64]]],[[10,[64]]]],[[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]],[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]]],[[[2,[64,8]]],[[2,[64,8]]]],[[[2,[64]]],[[2,[64]]]],[[[3,[64]]],[[3,[64]]]],[[[3,[64,8]]],[[3,[64,8]]]],[[[4,[64,8]]],[[4,[64,8]]]],[[[4,[64]]],[[4,[64]]]],[[[5,[64,8]]],[[5,[64,8]]]],[[[5,[64]]],[[5,[64]]]],[[[32,[[0,[52,39]]]]],[[32,[[0,[52,39]]]]]],[[[34,[[0,[52,39]]]]],[[34,[[0,[52,39]]]]]],[[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]],[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]]],[[[32,[[0,[52,39]]]]],[[32,[[0,[52,39]]]]]],[[[34,[[0,[52,39]]]]],[[34,[[0,[52,39]]]]]],[[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]],[[33,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]],[21,[[0,[52,39,64,[6,[[0,[52,39,64,6,21]]]],[21,[[0,[52,39,64,6,21]]]]]]]]]]]]]]]]]],[[[7,[65]],[7,[65]]],[[7,[65]]]],[[[7,[65]],[7,[65]]],[[7,[65]]]],[[[32,[[22,[8]],8]],8,8],[[32,[[22,[8]],8]]]],[[[34,[[22,[8]],8]],8,8,8],[[34,[[22,[8]],8]]]],[[[33,[[0,[8,[22,[8]]]]]],8,8],[[33,[[0,[8,[22,[8]]]]]]]],[[47,47],[[29,[47]]]],[[[0,[47,40]],[0,[47,40]],[0,[47,40]]],[[30,[[0,[47,40]]]]]],[[17,9,9],9],[[19,10,10],10],[[17,2,2],2],[[19,3,3],3],[[17,4,4],4],[[19,5,5],5],[[[32,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]],[2,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[15,[[0,[24,21,6,60,26,42,8]]]]],[[15,[[0,[24,21,6,60,26,42,8]]]]]],[[]],[[[15,[23]]]],[[[32,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[2,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[3,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],0,[[],2],[[],3],[[[15,[20,[0,[47,40]]]],[15,[20,[0,[47,40]]]]],[[30,[20,[0,[47,40]]]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[27,[[27,[[27,[[27,[27,23]],23]],23]],23]],23],[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[36,[[9,[36]]]],[36,[[10,[36]]]],[36,[[2,[36]]]],[36,[[3,[36]]]],[36,[[13,[36]]]],[36,[[14,[36]]]],[36,[[4,[36]]]],[36,[[5,[36]]]],[[[4,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]]]]]],[[[5,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]],[6,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]],[6,[[0,[8,[22,[[0,[8,22,6]]]],[6,[[0,[8,22,6]]]]]]]]]]]]]]]]]]]],[[[31,[23]]],23],[[[7,[21]],[7,[21]]]],[[[9,[21]],[2,[21]]]],[[[9,[21]],[9,[21]]]],[[[9,[21]],[4,[21]]]],[[[10,[21]],[3,[21]]]],[[[10,[21]],[5,[21]]]],[[[10,[21]],[10,[21]]]],[[[11,[21]],[11,[21]]]],[[[12,[[21,[[21,[[21,[21]]]]]]]],[12,[[21,[[21,[[21,[21]]]]]]]]],[[12,[[21,[[21,[[21,[21]]]]]]]]]],[[[2,[21]],[2,[21]]]],[[[3,[21]],[3,[21]]]],[[[13,[21]],[13,[21]]]],[[[14,[21]],[14,[21]]]],[[[4,[21]],[4,[21]]]],[[[5,[21]],[5,[21]]]],[[[15,[[21,[[21,[[21,[21]]]]]]]],[15,[[21,[[21,[[21,[21]]]]]]]]]],[[[7,[66]],[7,[66]]]],[[[9,[66]],[2,[66]]]],[[[9,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]],[4,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[10,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]],[5,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[10,[66]],[3,[66]]]],[[[12,[[66,[[66,[[66,[66]]]]]]]],[12,[[66,[[66,[[66,[66]]]]]]]]]],[[[2,[66]],[2,[66]]]],[[[3,[66]],[3,[66]]]],[[[13,[66]],[13,[66]]]],[[[14,[66]],[14,[66]]]],[[[4,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]],[4,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[5,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]],[5,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[15,[[66,[[66,[[66,[66]]]]]]]],[15,[[66,[[66,[[66,[66]]]]]]]]]],[67,[[7,[[0,[6,8,47]]]]]],[67,[[7,[[0,[6,47]]]]]],[67,[[2,[[0,[6,8,47]]]]]],[67,[[2,[[0,[6,47]]]]]],[67,[[3,[[0,[6,47]]]]]],[67,[[3,[[0,[6,8,47]]]]]],[67,[[4,[[0,[6,8,47]]]]]],[67,[[4,[[0,[6,47]]]]]],[67,[[5,[[0,[6,47]]]]]],[67,[[5,[[0,[6,8,47]]]]]],[67,[[15,[[0,[6,60]]]]]],[67,[[15,[[0,[6,8,60]]]]]],[[]],[[[37,[23]],[37,[23]]],[[37,[23]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[31,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[29,[[0,[8,6,22]]]],[29,[[0,[8,6,22]]]]],[[29,[[0,[8,6,22]]]]]],[[[30,[[0,[8,6,22]]]],[30,[[0,[8,6,22]]]]],[[30,[[0,[8,6,22]]]]]],[[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]],[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]]],[[[29,[[0,[8,6,21,22,47,20]]]],[15,[[0,[8,6,21,22,47,20]]]]],[[29,[[0,[8,6,21,22,47,20]]]]]],[[[30,[[0,[8,6,21,22,41,47,40,20]]]],[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[0,[8,6,21,22,41,47,40,20]],[15,[[0,[8,6,21,22,41,47,40,20]]]]],[[30,[[0,[8,6,21,22,41,47,40,20]]]]]],[[[29,[[0,[8,6,22,47]]]],[0,[8,6,22,47]],[0,[8,6,22,47]]],[[29,[[0,[8,6,22,47]]]]]],[[[30,[[0,[8,6,22]],[0,[47,40]]]],[0,[8,6,22]],[0,[47,40]],[0,[8,6,22]],[0,[47,40]],[0,[8,6,22]],[0,[47,40]]],[[30,[[0,[8,6,22]],[0,[47,40]]]]]],[[[29,[[0,[8,6,22]],[0,[47,40]]]],[4,[[0,[8,6,22]],[0,[47,40]]]]],[[29,[[0,[8,6,22]],[0,[47,40]]]]]],[[[30,[[0,[8,6,22]],[0,[47,40]]]],[5,[[0,[8,6,22]],[0,[47,40]]]]],[[30,[[0,[8,6,22]],[0,[47,40]]]]]],[[[10,[8]]],[[9,[8]]]],[[[30,[8]]],[[29,[8]]]],[[[5,[8]]],[[4,[8]]]],[[[9,[47,8]]],[[10,[47,8]]]],[[[37,[23]]],[[31,[23]]]],[[[29,[[0,[47,40]],8]]],[[30,[[0,[47,40]],8]]]],[[[4,[47,8]]],[[5,[47,8]]]],[[[9,[8]]],[[56,[8]]]],[[[10,[8]]],[[56,[8]]]],[[[2,[8]]],[[56,[8]]]],[[[3,[8]]],[[56,[8]]]],[[[29,[8]]],[[56,[8]]]],[[[30,[8]]],[[56,[8]]]],[[[13,[8]]],[[56,[8]]]],[[[14,[8]]],[[56,[8]]]],[[[4,[8]]],[[56,[8]]]],[[[5,[8]]],[[56,[8]]]],[[[10,[40,8]]],[[56,[40,8]]]],[[[5,[47,8]]],[[56,[47,8]]]],[[[29,[8]]],[[56,[8]]]],[[[30,[8]]],[[56,[8]]]],[[[29,[8]]],[[56,[[56,[8]]]]]],[[[30,[8]]],[[56,[[56,[8]]]]]],[[[30,[8]]],[[56,[[56,[8]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[15,[20]]],20],[[[32,[[0,[35,8]]]]],[[32,[68]]]],[[[34,[[0,[35,8]]]]],[[34,[68]]]],[[[9,[[0,[35,8]]]]],[[9,[68]]]],[[[10,[[0,[35,8]]]]],[[10,[68]]]],[[[33,[[0,[35,8]]]]],[[33,[68]]]],[[[2,[[0,[35,8]]]]],[[2,[68]]]],[[[3,[[0,[35,8]]]]],[[3,[68]]]],[[[4,[[0,[35,8]]]]],[[4,[68]]]],[[[5,[[0,[35,8]]]]],[[5,[68]]]],[[[15,[[0,[35,8]]]]],[[15,[68]]]],[[[32,[[0,[35,8]]]]],[[32,[69]]]],[[[34,[[0,[35,8]]]]],[[34,[69]]]],[[[9,[[0,[35,8]]]]],[[9,[69]]]],[[[10,[[0,[35,8]]]]],[[10,[69]]]],[[[33,[[0,[35,8]]]]],[[33,[69]]]],[[[2,[[0,[35,8]]]]],[[2,[69]]]],[[[3,[[0,[35,8]]]]],[[3,[69]]]],[[[4,[[0,[35,8]]]]],[[4,[69]]]],[[[5,[[0,[35,8]]]]],[[5,[69]]]],[[[15,[[0,[35,8]]]]],[[15,[69]]]],[[[32,[[0,[35,8]]]]],[[32,[70]]]],[[[34,[[0,[35,8]]]]],[[34,[70]]]],[[[9,[[0,[35,8]]]]],[[9,[70]]]],[[[10,[[0,[35,8]]]]],[[10,[70]]]],[[[33,[[0,[35,8]]]]],[[33,[70]]]],[[[2,[[0,[35,8]]]]],[[2,[70]]]],[[[3,[[0,[35,8]]]]],[[3,[70]]]],[[[4,[[0,[35,8]]]]],[[4,[70]]]],[[[5,[[0,[35,8]]]]],[[5,[70]]]],[[[32,[[0,[35,8]]]]],[[32,[71]]]],[[[34,[[0,[35,8]]]]],[[34,[71]]]],[[[9,[[0,[35,8]]]]],[[9,[71]]]],[[[10,[[0,[35,8]]]]],[[10,[71]]]],[[[33,[[0,[35,8]]]]],[[33,[71]]]],[[[2,[[0,[35,8]]]]],[[2,[71]]]],[[[3,[[0,[35,8]]]]],[[3,[71]]]],[[[4,[[0,[35,8]]]]],[[4,[71]]]],[[[5,[[0,[35,8]]]]],[[5,[71]]]],[[[32,[[0,[8,42]]]]],[[61,[[32,[[0,[8,42]]]]]]]],[[[34,[[0,[8,42]]]]],[[61,[[34,[[0,[8,42]]]]]]]],[[[33,[[0,[8,47,42]]]]],[[61,[[33,[[0,[8,47,42]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[8]]],[[9,[8]]]],[[[5,[8]]],[[10,[8]]]],[[[43,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41,47,42]]]],47,42]]]],47,42]]]],47,42]]]]],[[61,[[9,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41,47,42]]]],47,42]]]],47,42]]]],47,42]]]]]]]],[[[43,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41,47,42]]]],47,42]]]],47,42]]]],47,42]]]]],[[61,[[10,[[0,[8,[41,[[0,[8,[41,[[0,[8,[41,[[0,[8,41,47,42]]]],47,42]]]],47,42]]]],47,42]]]]]]]],[[[32,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[33,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]],[[[4,[8]]],[[2,[8]]]],[[[37,[[0,[8,6,21,22,60,20]]]]],[[29,[[0,[8,6,21,22,60,20]]]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[30,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[13,[[0,[47,40]],8]]],[[29,[[0,[47,40]],8]]]],[[[14,[[0,[47,40]],8]]],[[30,[[0,[47,40]],8]]]],[[[4,[[0,[47,40]],8]]],[[29,[[0,[47,40]],8]]]],[[[5,[[0,[47,40]],8]]],[[30,[[0,[47,40]],8]]]],[[[38,[20,[0,[23,[27,[20,[0,[23,[27,[20,[0,[23,[27,[20,[0,[23,27]]]]]]]]]]]]]]]]],[[30,[20,[0,[23,[27,[20,[0,[23,[27,[20,[0,[23,[27,[20,[0,[23,27]]]]]]]]]]]]]]]]]],[[[9,[8]]]],[[[10,[8]]]],[[[2,[8]]]],[[[3,[8]]]],[[[13,[8]]]],[[[14,[8]]]],[[[4,[8]]]],[[[5,[8]]]],[[[10,[40,8]]]],[[[5,[47,8]]]],[[[32,[[0,[35,8]]]]],[[32,[72]]]],[[[34,[[0,[35,8]]]]],[[34,[72]]]],[[[9,[[0,[35,8]]]]],[[9,[72]]]],[[[10,[[0,[35,8]]]]],[[10,[72]]]],[[[33,[[0,[35,8]]]]],[[33,[72]]]],[[[2,[[0,[35,8]]]]],[[2,[72]]]],[[[3,[[0,[35,8]]]]],[[3,[72]]]],[[[4,[[0,[35,8]]]]],[[4,[72]]]],[[[5,[[0,[35,8]]]]],[[5,[72]]]],[[[33,[[0,[35,8]]]]],[[33,[73]]]],[[[2,[[0,[35,8]]]]],[[2,[73]]]],[[[32,[8]]],[[32,[8,44]]]],[[[34,[8]]],[[34,[8,44]]]],[[[9,[8]]],[[9,[8,44]]]],[[[10,[8]]],[[10,[8,44]]]],[[[33,[8]]],[[33,[8,44]]]],[[[37,[8]]],[[37,[8,44,44]]]],[[[31,[8]]],[[31,[8,44,44]]]],[[[2,[8]]],[[2,[8,44]]]],[[[3,[8]]],[[3,[8,44]]]],[[[29,[8]]],[[29,[8,44,44]]]],[[[30,[8]]],[[30,[8,44,44]]]],[[[13,[8]]],[[13,[8,44,44]]]],[[[14,[8]]],[[14,[8,44,44]]]],[[[4,[8]]],[[4,[8,44]]]],[[[5,[8]]],[[5,[8,44]]]],[[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]]]]],[[38,[[0,[23,[27,[[0,[23,[27,[[0,[23,[27,[[0,[23,27]]]]]]]]]]]]]],44,44]]]],[[[32,[[0,[35,8]]]]],[[32,[74]]]],[[[34,[[0,[35,8]]]]],[[34,[74]]]],[[[9,[[0,[35,8]]]]],[[9,[74]]]],[[[10,[[0,[35,8]]]]],[[10,[74]]]],[[[33,[[0,[35,8]]]]],[[33,[74]]]],[[[2,[[0,[35,8]]]]],[[2,[74]]]],[[[3,[[0,[35,8]]]]],[[3,[74]]]],[[[4,[[0,[35,8]]]]],[[4,[74]]]],[[[5,[[0,[35,8]]]]],[[5,[74]]]],[[[9,[8]]],[[4,[8]]]],[[[10,[8]]],[[5,[8]]]],[[[2,[8]]],[[4,[8]]]],[[[3,[8]]],[[5,[8]]]],[[[13,[8]]],[[4,[8]]]],[[[14,[8]]],[[5,[8]]]],0,[[[13,[6,8]],[32,[6,8]]],32],[[[11,[[0,[8,22]]]],[32,[[0,[8,22]]]]],32],[[[14,[6,8]],[32,[6,8]]],32],[[[11,[[0,[8,22]]]],[34,[[0,[8,22]]]]],34],[[[14,[6,8]],[34,[6,8]]],34],[[[37,[23]],[9,[23]]],[[9,[23]]]],[[[11,[[0,[8,22]]]],[9,[[0,[8,22]]]]],9],[[[29,[[0,[8,6,22]]]],[9,[[0,[8,6,22]]]]],[[9,[[0,[8,6,22]]]]]],[[[13,[6,8]],[9,[6,8]]],9],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[9,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[9,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[30,[[0,[41,47,42]],[0,[8,6,22]]]],[9,[[0,[41,47,42]],[0,[8,6,22]]]]],[[61,[[9,[[0,[41,47,42]],[0,[8,6,22]]]]]]]],[[[14,[6,8]],[9,[6,8]]],9],[[[30,[[0,[8,6,22]]]],[9,[[0,[8,6,22]]]]],[[43,[[0,[8,6,22]]]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[10,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[10,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[11,[[0,[8,22]]]],[10,[[0,[8,22]]]]],10],[[[30,[[0,[41,47,42]],[0,[8,6,22]]]],[10,[[0,[41,47,42]],[0,[8,6,22]]]]],[[61,[[10,[[0,[41,47,42]],[0,[8,6,22]]]]]]]],[[[14,[6,8]],[10,[6,8]]],10],[[[30,[[0,[8,6,22]]]],[10,[[0,[8,6,22]]]]],[[43,[[0,[8,6,22]]]]]],[[[11,[[0,[8,22]]]],[33,[[0,[8,22]]]]],33],[[[13,[6,8]],[33,[6,8]]],33],[[[14,[6,8]],[33,[6,8]]],[[33,[6,8]]]],[[[11,[[0,[8,22]]]],[2,[[0,[8,22]]]]],2],[[13,2],2],[[14,2],2],[[[37,[23]],[4,[23]]],[[4,[23]]]],[[[11,[[0,[8,22]]]],[4,[[0,[8,22]]]]],4],[[[29,[[0,[8,6,22]]]],[4,[[0,[8,6,22]]]]],[[4,[[0,[8,6,22]]]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[4,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[4,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[30,[[0,[8,6,22]]]],[4,[[0,[8,6,22]]]]],[[4,[[0,[8,6,22]]]]]],[[[31,[[27,[[27,[[27,[27,23]],23]],23]],23]],[5,[[27,[[27,[[27,[27,23]],23]],23]],23]]],[[5,[[27,[[27,[[27,[27,23]],23]],23]],23]]]],[[[30,[[0,[8,6,22]]]],[5,[[0,[8,6,22]]]]],[[5,[[0,[8,6,22]]]]]],[[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[4,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[32,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[5,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[34,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]],[4,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[0,[47,40]],[0,[47,40]]],[[29,[[0,[47,40]]]]]],[[[0,[47,40]],[0,[47,40]],[0,[47,40]]],[[30,[[0,[47,40]]]]]],0,[[[32,[[0,[35,8]]]]],[[61,[[32,[35]]]]]],[[[34,[[0,[35,8]]]]],[[61,[[34,[35]]]]]],[[[7,[[0,[35,36]]]]],[[61,[[7,[35]]]]]],[[[9,[[0,[35,8]]]]],[[61,[[9,[35]]]]]],[[[10,[[0,[35,8]]]]],[[61,[[10,[35]]]]]],[[[33,[[0,[35,8]]]]],[[61,[[33,[35]]]]]],[[[11,[35]]],[[61,[[11,[35]]]]]],[[[2,[[0,[35,8]]]]],[[61,[[2,[35]]]]]],[[[3,[[0,[35,8]]]]],[[61,[[3,[35]]]]]],[[[29,[[0,[35,8]]]]],[[61,[[29,[35]]]]]],[[[30,[[0,[35,8]]]]],[[61,[[30,[35]]]]]],[[[4,[[0,[35,8]]]]],[[61,[[4,[35]]]]]],[[[5,[[0,[35,8]]]]],[[61,[[5,[35]]]]]],[[[15,[[0,[35,8]]]]],[[61,[[15,[35]]]]]],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[[4,[23]]],[[61,[[4,[23]]]]]],[[[5,[23]]],[[61,[[5,[23]]]]]],[[],[[15,[[0,[26,6]]]]]],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[[32,[[0,[8,42]]]],[32,[[0,[8,42]]]]],[[32,[[0,[8,42]]]]]],[[[34,[[0,[8,42]]]],[34,[[0,[8,42]]]]],[[34,[[0,[8,42]]]]]],[[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],47]]]],[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],47]]]]],[[33,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],[21,[[0,[8,42,[6,[[0,[8,42,6,21,47]]]],[21,[[0,[8,42,6,21,47]]]],47]]]],47]]]],47]]]]]],[[23,23,23,23],[[31,[23]]]],[[],4],[[],5],[[[31,[8]]],[[5,[8,44]]]],[[[12,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]]]]],[[[3,[22,8]]],[22,8]],0,[[[32,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]]]],[[[34,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]],[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,[21,[[0,[8,21]]]]]]]]]]]]]]]]]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]]]],0,0,[[[29,[8]]],[[29,[8]]]],[[[30,[8]]],[[30,[8]]]],[[[4,[23]],23],[[4,[23]]]],[[[4,[23]],23],[[4,[23]]]],[[[5,[23]],23],[[5,[23]]]],[[[4,[23]],23],[[4,[23]]]],[[[5,[23]],23],[[5,[23]]]],[[[29,[8]]],[[29,[8]]]],[[[30,[8]]],[[30,[8]]]],0,0,0,0,0,0,0,0,0,[[[32,[8]]],[[77,[8]]]],[[[34,[8]]],[[77,[8]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[77,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[10,[8]]],[[9,[8]]]],[[[5,[8]]],[[4,[8]]]],[19,17],[[[34,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]]]]],[[[10,[8]]],[[9,[8]]]],[[[5,[8]]],[[4,[8]]]],[19,17],[[[34,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]]]]],0,0,0,0,0,0,0,0,0,[[[32,[8]]],[[77,[8]]]],[[[34,[8]]],[[77,[8]]]],[[[33,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]],[[77,[[0,[8,[6,[[0,[8,[6,[[0,[8,[6,[[0,[8,6]]]]]]]]]]]]]]]]]],[[[9,[8]]],[[9,[8]]]],[[[4,[8]]],[[4,[8]]]],[[[10,[8]]],[[9,[8]]]],[[[5,[8]]],[[4,[8]]]],[19,17],[[[34,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]],[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]],[21,[[0,[8,[22,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]],[21,[[0,[8,[22,[[0,[8,22,21]]]],[21,[[0,[8,22,21]]]]]]]]]]]]]]]]]]]],0,0,0,0,0,[[[34,[8]]],[[77,[8]]]],[[],[[32,[47]]]],[[],[[34,[47]]]],[[],[[7,[47]]]],[[],[[9,[47]]]],[[],[[9,[47]]]],[[],[[10,[47]]]],[[],[[10,[47]]]],[[],[[33,[47]]]],[[],[[12,[47]]]],[[],[[2,[47]]]],[[],[[2,[47]]]],[[],[[3,[47]]]],[[],[[3,[47]]]],[[],[[4,[47]]]],[[],[[4,[47]]]],[[],[[5,[47]]]],[[],[[5,[47]]]],[[],[[15,[60]]]],0,[[]],[[],18],[[],18],[[42,42],42],[[42,42],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Signed"],[3,"Size2D"],[3,"Size3D"],[3,"Vector2D"],[3,"Vector3D"],[8,"Add"],[3,"Length"],[8,"Copy"],[3,"Point2D"],[3,"Point3D"],[3,"Scale"],[3,"SideOffsets2D"],[3,"Translation2D"],[3,"Translation3D"],[3,"Angle"],[8,"AddAssign"],[3,"BoolVector2D"],[15,"bool"],[3,"BoolVector3D"],[8,"Trig"],[8,"Sub"],[8,"Mul"],[8,"Real"],[8,"Rem"],[8,"One"],[8,"FloatConst"],[8,"ApproxEq"],[8,"Neg"],[3,"Transform2D"],[3,"Transform3D"],[3,"Rotation3D"],[3,"Box2D"],[3,"Rect"],[3,"Box3D"],[8,"NumCast"],[8,"Clone"],[3,"Rotation2D"],[3,"RigidTransform3D"],[8,"Ceil"],[8,"One"],[8,"Div"],[8,"PartialOrd"],[3,"HomogeneousVector"],[3,"UnknownUnit"],[8,"Ord"],[4,"Ordering"],[8,"Zero"],[8,"Default"],[8,"PartialEq"],[8,"DivAssign"],[8,"Euclid"],[8,"Floor"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[8,"IntoIterator"],[8,"Hash"],[8,"Hasher"],[8,"Zero"],[4,"Option"],[8,"Float"],[8,"MulAssign"],[8,"Round"],[8,"Saturating"],[8,"SubAssign"],[8,"Iterator"],[15,"f32"],[15,"f64"],[15,"i32"],[15,"i64"],[15,"u32"],[15,"u64"],[15,"usize"],[4,"Result"],[3,"TypeId"],[3,"Range"]]},\
"fdeflate":{"doc":"A fast deflate implementation.","t":"NNNNDEDNNNNNNNNNNNDNLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BadCodeLengthHuffmanTree","BadDistanceHuffmanTree","BadLiteralLengthHuffmanTree","BadZlibHeader","Compressor","DecompressionError","Decompressor","DistanceTooFarBack","ExtraInput","InputStartsWithRun","InsufficientInput","InvalidBlockType","InvalidCodeLengthRepeat","InvalidDistanceCode","InvalidHdist","InvalidHlit","InvalidLiteralLengthCode","InvalidUncompressedBlockLength","StoredOnlyCompressor","WrongChecksum","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compress_to_vec","compressed_size","decompress_to_vec","finish","finish","fmt","from","from","from","from","ignore_adler32","into","into","into","into","is_done","new","new","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_data","write_data"],"q":[[0,"fdeflate"]],"d":["The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The stream doesn’t specify a valid huffman tree.","The zlib header is corrupt.","Compressor that produces fdeflate compressed streams.","An error encountered while decompressing a deflate stream.","Decompressor for arbitrary zlib streams.","The stream contains a back-reference that is too far back.","Extra input data.","The stream contains contains back-reference as the first …","All input was consumed, but the end of the stream hasn’t …","A block header specifies an invalid block type.","Attempted to repeat a previous code before reading any …","The stream contains a distance code that was not allowed …","Too many distance codes were specified.","Too many literals were specified.","The stream contains a literal/length code that was not …","An uncompressed block’s NLEN value is invalid.","Compressor that only writes the stored blocks.","The deflate stream checksum is incorrect.","","","","","","","","","Compresses the given data.","Return the number of bytes that will be written to the …","Decompress the given data.","Write the remainder of the stream and return the inner …","Finish writing the final block and return the underlying …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ignore the checksum at the end of the stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the decompressor has finished …","Create a new Compressor.","Creates a new <code>StoredOnlyCompressor</code> that writes to the …","Create a new decompressor.","Decompresses a chunk of data.","","","","","","","","","","","","","Write data to the compressor.","Writes the given data to the underlying writer."],"i":[5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,5,8,11,14,5,8,11,14,5,0,11,0,8,11,5,8,11,14,5,14,8,11,14,5,14,8,11,14,14,8,11,14,5,8,11,14,5,8,11,14,5,8,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[3,[1]]]],[4,4],[[[2,[1]]],[[6,[[3,[1]],5]]]],[[[8,[7]]],[[9,[7]]]],[[[11,[[0,[7,10]]]]],[[9,[[0,[7,10]]]]]],[[5,12],13],[[]],[[]],[[]],[[]],[14],[[]],[[]],[[]],[[]],[14,15],[7,[[9,[[8,[7]]]]]],[[[0,[7,10]]],[[9,[[11,[[0,[7,10]]]]]]]],[[],14],[[14,[2,[1]],[2,[1]],4,15],[[6,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],16],[[],16],[[],16],[[],16],[[[8,[7]],[2,[1]]],9],[[[11,[[0,[7,10]]]],[2,[1]]],9]],"c":[],"p":[[15,"u8"],[15,"slice"],[3,"Vec"],[15,"usize"],[4,"DecompressionError"],[4,"Result"],[8,"Write"],[3,"Compressor"],[6,"Result"],[8,"Seek"],[3,"StoredOnlyCompressor"],[3,"Formatter"],[6,"Result"],[3,"Decompressor"],[15,"bool"],[3,"TypeId"]]},\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","t":"NDDDDDDDDNNEENDDNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BufError","Compress","CompressError","Compression","Crc","CrcReader","CrcWriter","Decompress","DecompressError","Finish","Finish","FlushCompress","FlushDecompress","Full","GzBuilder","GzHeader","None","None","Ok","Partial","Status","StreamEnd","Sync","Sync","amount","best","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf_read","bufread","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","combine","comment","comment","compress","compress_vec","consume","crc","crc","decompress","decompress_vec","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extra","extra","fast","filename","filename","fill_buf","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","level","message","message","mtime","mtime","mtime_as_datetime","needs_dictionary","new","new","new","new","new","new","new","none","operating_system","operating_system","read","read","read","reset","reset","reset","reset","reset","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_in","total_in","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","new_with_compress","new_with_decompress","read","read","read","read","read","read","read","reset","reset","reset","reset","reset_data","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","new_with_buf","new_with_buf","new_with_compress","new_with_decompress","new_with_decompress_and_buf","read","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write","DeflateDecoder","DeflateEncoder","GzDecoder","GzEncoder","MultiGzDecoder","ZlibDecoder","ZlibEncoder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","finish","finish","finish","finish","finish","finish","finish","flush","flush","flush","flush","flush","flush","flush","flush_finish","flush_finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","header","header","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_compress","new_with_decompress","read","read","read","read","read","read","reset","reset","reset","reset","total_in","total_in","total_in","total_in","total_out","total_out","total_out","total_out","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_finish","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write"],"q":[[0,"flate2"],[221,"flate2::bufread"],[348,"flate2::read"],[479,"flate2::write"]],"d":["Indicates that forward progress is not possible due to …","Raw in-memory compression stream for blocks of data.","Error returned when a compression object is used …","When compressing data, the compression level can be …","The CRC calculated by a <code>CrcReader</code>.","A wrapper around a <code>Read</code> that calculates the CRC.","A wrapper around a <code>Write</code> that calculates the CRC.","Raw in-memory decompression stream for blocks of data.","Error returned when a decompression object finds that the …","Pending input is processed and pending output is flushed.","Pending input is processed and pending output is flushed.","Values which indicate the form of flushing to be used when …","Values which indicate the form of flushing to be used when …","All output is flushed as with <code>Flush::Sync</code> and the …","A builder structure to create a new gzip Encoder.","A structure representing the header of a gzip stream.","A typical parameter for passing to …","A typical parameter for passing to …","Indicates success.","All pending output is flushed to the output buffer, but …","Possible status results of compressing some data or …","Indicates that all input has been consumed and all output …","All pending output is flushed to the output buffer and the …","All pending output is flushed to the output buffer and the …","The number of bytes that have been used to calculate the …","Optimize for the size of data being encoded.","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume this builder, creating a reader encoder in the …","Types which operate over <code>BufRead</code> streams, both encoders …","","","","","","","","","","","Combine the CRC with the CRC for the subsequent block of …","Returns the <code>comment</code> field of this gzip stream’s header, …","Configure the <code>comment</code> field in the gzip header.","Compresses the input data into the output, consuming only …","Compresses the input data into the extra space of the …","","Get the Crc for this <code>CrcReader</code>.","Get the Crc for this <code>CrcWriter</code>.","Decompresses the input data into the output, consuming …","Decompresses the input data into the extra space in the …","","","","","","","","","","","","","","Returns the <code>extra</code> field of this gzip stream’s header, if …","Configure the <code>extra</code> field in the gzip header.","Optimize for the best speed of encoding.","Returns the <code>filename</code> field of this gzip stream’s header, …","Configure the <code>filename</code> field in the gzip header.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the reader that is wrapped by …","Get a mutable reference to the writer that is wrapped by …","Get the reader that is wrapped by this <code>CrcReader</code> by …","Get the writer that is wrapped by this <code>CrcWriter</code> by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the reader that is wrapped by this <code>CrcReader</code>.","Get the writer that is wrapped by this <code>CrcWriter</code>.","Returns an integer representing the compression level, …","Retrieve the implementation’s message about why the …","Retrieve the implementation’s message about why the …","This gives the most recent modification time of the …","Configure the <code>mtime</code> field in the gzip header.","Returns the most recent modification time represented by a …","Indicates whether decompression failed due to requiring a …","Create a new CRC.","Create a new <code>CrcReader</code>.","Create a new <code>CrcWriter</code>.","Create a new blank builder with no header by default.","Creates a new object ready for compressing data that it’…","Creates a new object ready for decompressing data that it…","Creates a new description of the compression level with an …","No compression is to be performed, this may actually …","Returns the <code>operating_system</code> field of this gzip stream’s …","Configure the <code>operating_system</code> field in the gzip header.","Types which operate over <code>Read</code> streams, both encoders and …","","Consume this builder, creating a reader encoder in the …","Reset the CRC.","Reset the Crc in this <code>CrcReader</code>.","Reset the Crc in this <code>CrcWriter</code>.","Quickly resets this compressor without having to …","Performs the equivalent of replacing this decompression …","Returns the current crc32 checksum.","","","","","","","","Returns the total number of input bytes which have been …","Returns the total number of input bytes which have been …","Returns the total number of output bytes which have been …","Returns the total number of output bytes which have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the CRC with the bytes in <code>data</code>.","Types which operate over <code>Write</code> streams, both encoders and …","","Consume this builder, creating a writer encoder in the …","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file that may …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder with the given <code>compression</code> settings …","Creates a new decoder which will decompress data read from …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this decoder’s data","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file that may …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying reader.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream.","Acquires a mutable reference to the underlying stream","Acquires a mutable reference to the underlying stream","Acquires a reference to the underlying reader","Acquires a reference to the underlying stream","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying reader.","Acquires a reference to the underlying stream","Acquires a reference to the underlying stream","Returns the header associated with this stream, if it was …","Returns the current header associated with this stream, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Returns the underlying stream, consuming this encoder","Consumes this decoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Consumes this encoder, returning the underlying reader.","Consumes this decoder, returning the underlying reader.","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Creates a new encoder which will use the given compression …","Creates a new decoder from the given reader, immediately …","Creates a new decoder from the given reader, immediately …","Creates a new encoder which will read uncompressed data …","Creates a new decoder which will decompress data read from …","Same as <code>new</code>, but the intermediate buffer for data is …","Creates a new decoder which will decompress data read from …","Creates a new encoder with the given <code>compression</code> settings …","Creates a new decoder which will decompress data read from …","Creates a new decoder which will decompress data read from …","","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been read into this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A DEFLATE decoder, or decompressor.","A DEFLATE encoder, or compressor.","A decoder for a single member of a gzip file.","A gzip streaming encoder","A gzip streaming decoder that decodes a gzip file with …","A ZLIB decoder, or decompressor.","A ZLIB encoder, or compressor.","","","","","","","","","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Finish encoding this stream, returning the underlying …","Consumes this decoder, flushing the output stream.","Consumes this decoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Consumes this encoder, flushing the output stream.","Consumes this encoder, flushing the output stream.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Acquires a reference to the underlying writer.","Returns the header associated with this stream.","Returns the header associated with the current member.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will use the given compression …","Creates a new decoder which will write uncompressed data …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","Creates a new encoder which will write compressed data to …","Creates a new decoder which will write uncompressed data …","","","","","","","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Resets the state of this encoder entirely, swapping out …","Resets the state of this decoder entirely, swapping out …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that have been written to this …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Returns the number of bytes that the compressor has …","Returns the number of bytes that the decompressor has …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","Attempt to finish this output stream, writing out final …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,0,0,0,0,0,0,0,0,8,9,0,0,8,0,0,8,9,10,8,0,10,8,9,1,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,4,0,7,8,9,10,3,7,8,9,10,3,1,7,4,16,16,19,19,21,22,22,1,7,4,3,7,8,9,10,3,8,9,10,3,7,4,3,7,4,19,21,1,19,21,7,4,16,22,8,9,23,23,17,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,19,21,1,19,21,7,4,16,22,8,9,23,17,10,3,19,21,3,23,17,7,4,7,23,1,19,21,4,16,22,3,3,7,4,0,19,4,1,19,21,16,22,1,7,8,9,10,3,23,17,16,22,16,22,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,19,21,7,4,16,22,8,9,23,17,10,3,1,0,21,4,0,0,0,0,0,0,0,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,40,43,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,41,42,38,39,6,40,43,41,42,38,39,41,42,39,38,39,41,42,38,39,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,43,41,42,38,39,6,40,41,42,0,0,0,0,0,0,0,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,46,47,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,45,49,48,49,49,44,45,33,46,47,48,49,44,45,48,49,44,45,48,49,44,45,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,44,45,33,46,47,48,49,0,0,0,0,0,0,0,50,51,37,52,53,54,55,50,51,37,52,53,54,55,37,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,54,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,52,53,50,51,37,52,53,54,55,50,51,37,52,53,54,55,54,55,50,51,37,52,54,55,50,51,54,55,50,51,54,55,50,51,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55,50,51,37,52,53,54,55],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5,3],[[6,[5]]]],0,[7,7],[8,8],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[1,1]],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[16,[12,[11]],[12,[11]],8],[[18,[10,17]]]],[[16,[12,[11]],[14,[11]],8],[[18,[10,17]]]],[[[19,[5]],20]],[19,1],[21,1],[[22,[12,[11]],[12,[11]],9],[[18,[10,23]]]],[[22,[12,[11]],[14,[11]],9],[[18,[10,23]]]],[[],1],[[],7],[[],4],[[],3],[[7,7],24],[[8,8],24],[[9,9],24],[[10,10],24],[[3,3],24],[[],24],[[],24],[[],24],[[],24],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[],3],[7,[[13,[[12,[11]]]]]],[[4,[15,[[14,[11]]]]],4],[[[19,[5]]],[[25,[[12,[11]]]]]],[[[21,[26]]],25],[[1,27],28],[[[19,[29]],27],28],[[[21,[29]],27],28],[[7,27],28],[[4,27],28],[[16,27],28],[[22,27],28],[[8,27],28],[[9,27],28],[[23,27],28],[[23,27],28],[[17,27],28],[[17,27],28],[[10,27],28],[[3,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[19],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[21],[3,2],[23,[[13,[30]]]],[17,[[13,[30]]]],[7,2],[[4,2],4],[7,[[13,[31]]]],[23,[[13,[2]]]],[[],1],[32,[[19,[32]]]],[26,[[21,[26]]]],[[],4],[[3,24],16],[24,22],[2,3],[[],3],[7,11],[[4,11],4],0,[[[19,[32]],[12,[11]]],[[25,[20]]]],[[4,32,3],[[33,[32]]]],[1],[19],[21],[16],[[22,24]],[1,2],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[16,35],[22,35],[16,35],[22,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[1,[12,[11]]]],0,[[[21,[26]],[12,[11]]],[[25,[20]]]],[[4,26,3],[[37,[26]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[[0,[5,26]]]]],25],[[[39,[[0,[5,26]]]]],25],[[[6,[[0,[5,26]]]]],25],[[[40,[[0,[5,26]]]]],25],[[[41,[[0,[5,26]]]]],25],[[[42,[[0,[5,26]]]]],25],[[[38,[29]],27],28],[[[39,[29]],27],28],[[[6,[29]],27],28],[[[40,[29]],27],28],[[[43,[29]],27],28],[[[41,[29]],27],28],[[[42,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38],[39],[6],[40],[43],[41],[42],[38],[39],[6],[40],[43],[41],[42],[40,[[13,[7]]]],[43,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38],[39],[6],[40],[43],[41],[42],[[5,3],[[38,[5]]]],[5,[[39,[5]]]],[[5,3],[[6,[5]]]],[5,[[40,[5]]]],[5,[[43,[5]]]],[[5,3],[[41,[5]]]],[5,[[42,[5]]]],[[5,16],[[41,[5]]]],[[5,22],[[42,[5]]]],[[[38,[5]],[12,[11]]],[[25,[20]]]],[[[39,[5]],[12,[11]]],[[25,[20]]]],[[[6,[5]],[12,[11]]],[[25,[20]]]],[[[40,[5]],[12,[11]]],[[25,[20]]]],[[[43,[5]],[12,[11]]],[[25,[20]]]],[[[41,[5]],[12,[11]]],[[25,[20]]]],[[[42,[5]],[12,[11]]],[[25,[20]]]],[38],[39],[41],[42],[39],[38,35],[39,35],[41,35],[42,35],[38,35],[39,35],[41,35],[42,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[38,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[39,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[6,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[40,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[41,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],[[[42,[[0,[5,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[[0,[32,26]]]]],25],[[[45,[[0,[32,26]]]]],25],[[[33,[[0,[32,26]]]]],25],[[[46,[[0,[32,26]]]]],25],[[[47,[[0,[32,26]]]]],25],[[[48,[[0,[32,26]]]]],25],[[[49,[[0,[32,26]]]]],25],[[[44,[29]],27],28],[[[45,[29]],27],28],[[[33,[29]],27],28],[[[46,[29]],27],28],[[[47,[29]],27],28],[[[48,[29]],27],28],[[[49,[29]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44],[45],[33],[46],[47],[48],[49],[44],[45],[33],[46],[47],[48],[49],[46,[[13,[7]]]],[47,[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44],[45],[33],[46],[47],[48],[49],[[32,3],[[44,[32]]]],[32,[[45,[32]]]],[[32,3],[[33,[32]]]],[32,[[46,[32]]]],[32,[[47,[32]]]],[[32,3],[[48,[32]]]],[32,[[49,[32]]]],[[32,[14,[11]]],[[45,[32]]]],[[32,[14,[11]]],[[49,[32]]]],[[32,16],[[48,[32]]]],[[32,22],[[49,[32]]]],[[32,[14,[11]],22],[[49,[32]]]],[[[44,[32]],[12,[11]]],[[25,[20]]]],[[[45,[32]],[12,[11]]],[[25,[20]]]],[[[33,[32]],[12,[11]]],[[25,[20]]]],[[[46,[32]],[12,[11]]],[[25,[20]]]],[[[47,[32]],[12,[11]]],[[25,[20]]]],[[[48,[32]],[12,[11]]],[[25,[20]]]],[[[49,[32]],[12,[11]]],[[25,[20]]]],[44],[45],[48],[49],[44,35],[45,35],[48,35],[49,35],[44,35],[45,35],[48,35],[49,35],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[44,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[45,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[33,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[46,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[47,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[48,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[49,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[26]]]],[[[50,[26]]],[[25,[26]]]],[[[51,[26]]],[[25,[26]]]],[[[37,[26]]],[[25,[26]]]],[[[52,[26]]],[[25,[26]]]],[[[53,[26]]],[[25,[26]]]],[[[54,[26]]],[[25,[26]]]],[[[55,[26]]],[[25,[26]]]],[[[50,[26]]],25],[[[51,[26]]],25],[[[37,[26]]],25],[[[52,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[[50,[26]]],[[25,[26]]]],[[[54,[26]]],[[25,[26]]]],[[[50,[[0,[29,26]]]],27],28],[[[51,[[0,[29,26]]]],27],28],[[[37,[[0,[29,26]]]],27],28],[[[52,[[0,[29,26]]]],27],28],[[[53,[[0,[29,26]]]],27],28],[[[54,[[0,[29,26]]]],27],28],[[[55,[[0,[29,26]]]],27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[26]]],26],[[[51,[26]]],26],[[[37,[26]]],26],[[[52,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[50,[26]]],26],[[[51,[26]]],26],[[[37,[26]]],26],[[[52,[26]]],26],[[[53,[26]]],26],[[[54,[26]]],26],[[[55,[26]]],26],[[[52,[26]]],[[13,[7]]]],[[[53,[26]]],[[13,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,3],[[50,[26]]]],[26,[[51,[26]]]],[[26,3],[[37,[26]]]],[26,[[52,[26]]]],[26,[[53,[26]]]],[[26,3],[[54,[26]]]],[26,[[55,[26]]]],[[26,16],[[54,[26]]]],[[26,22],[[55,[26]]]],[[[50,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[51,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[37,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[52,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[54,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[55,[[0,[32,26]]]],[12,[11]]],[[25,[20]]]],[[[50,[26]],26],[[25,[26]]]],[[[51,[26]],26],[[25,[26]]]],[[[54,[26]],26],[[25,[26]]]],[[[55,[26]],26],[[25,[26]]]],[[[50,[26]]],35],[[[51,[26]]],35],[[[54,[26]]],35],[[[55,[26]]],35],[[[50,[26]]],35],[[[51,[26]]],35],[[[54,[26]]],35],[[[55,[26]]],35],[[[50,[26]]],25],[[[51,[26]]],25],[[[37,[26]]],25],[[[52,[26]]],25],[[[53,[26]]],25],[[[54,[26]]],25],[[[55,[26]]],25],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[50,[26]],[12,[11]]],[[25,[20]]]],[[[51,[26]],[12,[11]]],[[25,[20]]]],[[[37,[26]],[12,[11]]],[[25,[20]]]],[[[52,[26]],[12,[11]]],[[25,[20]]]],[[[53,[26]],[12,[11]]],[[25,[20]]]],[[[54,[26]],[12,[11]]],[[25,[20]]]],[[[55,[26]],[12,[11]]],[[25,[20]]]]],"c":[],"p":[[3,"Crc"],[15,"u32"],[3,"Compression"],[3,"GzBuilder"],[8,"BufRead"],[3,"GzEncoder"],[3,"GzHeader"],[4,"FlushCompress"],[4,"FlushDecompress"],[4,"Status"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Vec"],[8,"Into"],[3,"Compress"],[3,"CompressError"],[4,"Result"],[3,"CrcReader"],[15,"usize"],[3,"CrcWriter"],[3,"Decompress"],[3,"DecompressError"],[15,"bool"],[6,"Result"],[8,"Write"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"str"],[3,"SystemTime"],[8,"Read"],[3,"GzEncoder"],[3,"String"],[15,"u64"],[3,"TypeId"],[3,"GzEncoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"MultiGzDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]},\
"float_next_after":{"doc":"","t":"IK","n":["NextAfter","next_after"],"q":[[0,"float_next_after"]],"d":["Returns the next representable float value in the …",""],"i":[0,1],"f":[0,[[]]],"c":[],"p":[[8,"NextAfter"]]},\
"flume":{"doc":"Flume","t":"NNNNNDNNDDDEECDEDNNDEEDALLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Disconnected","Disconnected","Disconnected","Disconnected","Disconnected","Drain","Empty","Full","IntoIter","Iter","Receiver","RecvError","RecvTimeoutError","Selector","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryRecvError","TrySendError","WeakSender","async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","downgrade","drain","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_recv_async","into_send_async","into_sink","into_stream","is_disconnected","is_disconnected","is_empty","is_empty","is_full","is_full","iter","len","len","len","next","next","next","next","receiver_count","receiver_count","recv","recv_async","recv_deadline","recv_timeout","same_channel","same_channel","select","send","send_async","send_deadline","send_timeout","sender_count","sender_count","sink","stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","upgrade","RecvFut","RecvStream","SendFut","SendSink","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","clone","clone","clone_into","clone_into","drop","drop","from","from","from","from","into","into","into","into","into_future","into_future","is_disconnected","is_disconnected","is_disconnected","is_disconnected","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_full","is_terminated","is_terminated","is_terminated","len","len","len","len","poll","poll","poll_close","poll_flush","poll_next","poll_ready","same_channel","same_channel","sender","start_send","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","SelectError","Selector","Timeout","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","fmt","fmt","from","from","into","into","new","recv","send","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","wait","wait_deadline","wait_timeout"],"q":[[0,"flume"],[232,"flume::async"],[310,"flume::select"]],"d":["All channel receivers were dropped and so the message has …","All channel receivers were dropped and so the message has …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","An fixed-sized iterator over the msgs drained from a …","The channel was empty when the receive was attempted.","The channel the message is sent on has a finite capacity …","An owned iterator over the msgs received from a channel.","An iterator over the msgs received from a channel.","The receiving end of a channel.","An error that may be emitted when attempting to wait for a …","An error that may be emitted when attempting to wait for a …","","An error that may be emitted when attempting to send a …","An error that may be emitted when sending a value into a …","A transmitting end of a channel.","A timeout occurred when attempting to send the message.","A timeout occurred when attempting to receive a message.","An non-blocking iterator over the msgs received from a …","An error that may be emitted when attempting to fetch a …","An error that may be emitted when attempting to send a …","A sender that does not prevent the channel from being …","Futures and other types that allow asynchronous …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a channel with a maximum capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","Clone this sender. <code>Sender</code> acts as a handle to the ending a …","Clone this receiver. <code>Receiver</code> acts as a handle to the …","","","","","","","","","","","","","","","Creates a <code>WeakSender</code> that does not keep the channel open.","Take all msgs currently sitting in the channel and produce …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","","Creates a self-owned but semantically equivalent …","","","","","Convert this receiver into a future that asynchronously …","Convert this sender into a future that asynchronously …","Convert this sender into a sink that allows asynchronously …","Convert this receiver into a stream that allows …","Returns true if all receivers for this channel have been …","Returns true if all senders for this channel have been …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Create a blocking iterator over the values received on the …","Returns the number of messages in the channel","Returns the number of messages in the channel.","","","","","","Get the number of receivers that currently exist.","Get the number of receivers that currently exist, …","Wait for an incoming value from the channel associated …","Asynchronously receive a value from the channel, returning …","Wait for an incoming value from the channel associated …","Wait for an incoming value from the channel associated …","Returns whether the senders are belong to the same channel.","Returns whether the receivers are belong to the same …","Types that permit waiting upon multiple blocking …","Send a value into the channel, returning an error if all …","Asynchronously send a value into the channel, returning an …","Send a value into the channel, returning an error if all …","Send a value into the channel, returning an error if all …","Get the number of senders that currently exist, including …","Get the number of senders that currently exist.","Create an asynchronous sink that uses this sender to …","Create an asynchronous stream that uses this receiver to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over the values received on the …","Attempt to fetch an incoming value from the channel …","Attempt to send a value into the channel. If the channel …","","","","","","","","","","","","","","Create a channel with no maximum capacity.","Tries to upgrade the <code>WeakSender</code> to a <code>Sender</code>, in order to …","A future which allows asynchronously receiving a message.","A stream which allows asynchronously receiving messages.","A future that sends a value into a channel.","A sink that allows sending values into a channel.","","","","","","","","","See <code>Sender::capacity</code>.","See <code>Sender::capacity</code>.","See <code>Receiver::capacity</code>.","See <code>Receiver::capacity</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","See <code>Sender::is_disconnected</code>.","See <code>Sender::is_disconnected</code>.","See <code>Receiver::is_disconnected</code>.","See <code>Receiver::is_disconnected</code>.","See <code>Sender::is_empty</code>.","See <code>Sender::is_empty</code>.","See <code>Receiver::is_empty</code>.","See <code>Receiver::is_empty</code>.","See <code>Sender::is_full</code>.","See <code>Sender::is_full</code>.","See <code>Receiver::is_full</code>.","See <code>Receiver::is_full</code>.","","","","See <code>Sender::len</code>.","See <code>Sender::len</code>.","See <code>Receiver::len</code>.","See <code>Receiver::len</code>.","","","","","","","Returns whether the SendSinks are belong to the same …","Returns whether the SendSinks are belong to the same …","Returns a clone of a sending half of the channel of this …","","","","","","","","","","","","","","","","","","","An error that may be emitted when attempting to wait for a …","A type used to wait upon multiple blocking operations at …","A timeout occurred when waiting on a <code>Selector</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new selector.","Add a receive operation to the selector.","Add a send operation to the selector that sends the …","","","","","","","","","Wait until one of the events associated with this <code>Selector</code> …","Wait until one of the events associated with this <code>Selector</code> …","Wait until one of the events associated with this <code>Selector</code> …"],"i":[7,8,9,10,11,0,10,7,0,0,0,0,0,0,0,0,0,8,11,0,0,0,0,0,2,12,4,23,24,25,6,7,8,9,10,11,13,2,12,4,23,24,25,6,7,8,9,10,11,13,0,2,4,2,4,6,7,8,9,10,11,2,4,6,7,8,9,10,11,2,4,2,4,6,7,8,9,10,11,6,7,8,9,10,11,2,4,6,6,7,7,8,8,9,9,10,10,11,11,13,2,12,4,23,24,25,6,7,7,8,8,9,10,10,11,11,13,2,12,4,23,24,25,6,7,8,9,10,11,13,6,7,8,4,4,23,24,25,13,4,2,2,4,2,4,2,4,2,4,4,2,4,13,23,24,25,13,2,4,4,4,4,4,2,4,0,2,2,2,2,2,4,2,4,2,4,6,7,8,9,10,11,6,7,8,9,10,11,2,12,4,23,24,25,6,7,8,9,10,11,13,2,12,4,23,24,25,6,7,8,9,10,11,13,4,4,2,2,12,4,23,24,25,6,7,8,9,10,11,13,0,12,0,0,0,0,20,21,19,22,20,21,19,22,20,21,19,22,21,22,21,22,20,19,20,21,19,22,20,21,19,22,20,19,20,21,19,22,20,21,19,22,20,21,19,22,20,19,22,20,21,19,22,20,19,21,21,22,21,21,22,21,21,21,22,20,21,19,22,20,21,19,22,20,19,22,20,21,19,22,0,0,34,35,34,35,34,34,34,35,34,34,35,34,34,35,34,35,34,35,35,35,34,34,35,34,35,34,35,34,35,35,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2,[[3,[1]]]],[4,[[3,[1]]]],[2,2],[4,4],[[[6,[5]]],[[6,[5]]]],[[[7,[5]]],[[7,[5]]]],[[[8,[5]]],[[8,[5]]]],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,12],[4,13],[2],[4],[[[6,[14]],[6,[14]]],15],[[[7,[14]],[7,[14]]],15],[[[8,[14]],[8,[14]]],15],[[9,9],15],[[10,10],15],[[11,11],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[2,16],17],[[4,16],17],[[6,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[8,16],17],[[8,16],17],[[9,16],17],[[9,16],17],[[10,16],17],[[10,16],17],[[11,16],17],[[11,16],17],[[[13,[18]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,7],[[]],[6,8],[[]],[[]],[[]],[9,10],[[]],[9,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[7],[8],[4],[4],[[]],[[]],[[]],[[]],[4,19],[2,20],[2,21],[4,22],[2,15],[4,15],[2,15],[4,15],[2,15],[4,15],[4,23],[2,1],[4,1],[13,1],[23,3],[24,3],[25,3],[13,3],[2,1],[4,1],[4,[[26,[9]]]],[4,19],[[4,27],[[26,[11]]]],[[4,28],[[26,[11]]]],[[2,2],15],[[4,4],15],0,[2,[[26,[6]]]],[2,20],[[2,27],[[26,[8]]]],[[2,28],[[26,[8]]]],[2,1],[4,1],[2,21],[4,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[4,24],[4,[[26,[10]]]],[2,[[26,[7]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]],[12,[[3,[2]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,[[3,[1]]]],[21,[[3,[1]]]],[19,[[3,[1]]]],[22,[[3,[1]]]],[21,21],[22,22],[[]],[[]],[20],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,15],[21,15],[19,15],[22,15],[20,15],[21,15],[19,15],[22,15],[20,15],[21,15],[19,15],[22,15],[20,15],[19,15],[22,15],[20,1],[21,1],[19,1],[22,1],[[[31,[20]],32],33],[[[31,[19]],32],33],[[[31,[21]],32],[[33,[26]]]],[[[31,[21]],32],[[33,[26]]]],[[[31,[22]],32],[[33,[3]]]],[[[31,[21]],32],[[33,[26]]]],[[21,21],15],[[22,22],15],[21,2],[[[31,[21]]],26],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[31,32],33],[[31,32],33],[[31,32],[[33,[[3,[26]]]]]],[[],30],[[],30],[[],30],[[],30],0,0,0,[[]],[[]],[[]],[[]],[34,34],[[]],[[],35],[[34,34],15],[[],15],[[35,16],17],[[34,16],17],[[34,16],17],[[]],[[]],[[]],[[]],[[],35],[[35,4,36],35],[[35,2,36],35],[[]],[[],29],[[],26],[[],26],[[],26],[[],26],[[],30],[[],30],[35],[[35,27],[[26,[34]]]],[[35,28],[[26,[34]]]]],"c":[],"p":[[15,"usize"],[3,"Sender"],[4,"Option"],[3,"Receiver"],[8,"Clone"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"WeakSender"],[3,"Drain"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"RecvFut"],[3,"SendFut"],[3,"SendSink"],[3,"RecvStream"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[4,"Result"],[3,"Instant"],[3,"Duration"],[3,"String"],[3,"TypeId"],[3,"Pin"],[3,"Context"],[4,"Poll"],[4,"SelectError"],[3,"Selector"],[8,"FnMut"]]},\
"foreign_types":{"doc":"A framework for Rust wrappers over C APIs.","t":"QQIIDQKLLLOLKLLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","foreign_type","from","from_ptr","from_ptr","from_ptr_mut","into","into_ptr","try_from","try_into","type_id"],"q":[[0,"foreign_types"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","A macro to easily define wrappers for foreign types.","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","Consumes the wrapper and returns the raw pointer.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,0,5,3,4,4,5,3,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"foreign_types_macros":{"doc":"","t":"O","n":["foreign_type_impl"],"q":[[0,"foreign_types_macros"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"foreign_types_shared":{"doc":"Internal crate used by foreign-types","t":"QQIIDQKLLLLKLLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","from","from_ptr","from_ptr","from_ptr_mut","into","into_ptr","try_from","try_into","type_id"],"q":[[0,"foreign_types_shared"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","Consumes the wrapper and returns the raw pointer.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,5,3,4,4,5,3,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","t":"CCCCCCAOAAQICQIKKQIQQIIKKLKCCCCC","n":["FusedFuture","FusedStream","Future","Stream","TryFuture","TryStream","future","ready","stream","task","Error","FusedFuture","Future","Ok","TryFuture","is_terminated","try_poll","Error","FusedStream","Item","Ok","Stream","TryStream","is_terminated","poll_next","size_hint","try_poll_next","Context","Poll","RawWaker","RawWakerVTable","Waker"],"q":[[0,"futures_core"],[10,"futures_core::future"],[17,"futures_core::stream"],[27,"futures_core::task"]],"d":["","","","","","","Futures.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Task notification.","The type of failures yielded by this future","A future which tracks whether or not the underlying future …","","The type of successful values yielded by this future","A convenience for futures that return <code>Result</code> values that …","Returns <code>true</code> if the underlying future should no longer be …","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","The type of failures yielded by this future","A stream which tracks whether or not the underlying stream …","Values yielded by the stream.","The type of successful values yielded by this future","A stream of values produced asynchronously.","A convenience for streams that return <code>Result</code> values that …","Returns <code>true</code> if the stream should no longer be polled.","Attempt to pull out the next value of this stream, …","Returns the bounds on the remaining length of the stream.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,7,0,0,7,0,8,7,9,0,10,9,0,0,11,10,10,9,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,3],[[5,[4]]]],0,0,0,0,0,0,[[],1],[[2,3],[[5,[6]]]],[[]],[[2,3],[[5,[[6,[4]]]]]],0,0,0,0,0],"c":[],"p":[[15,"bool"],[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[4,"Option"],[8,"TryFuture"],[8,"FusedFuture"],[8,"TryStream"],[8,"Stream"],[8,"FusedStream"]]},\
"futures_sink":{"doc":"Asynchronous sinks","t":"QIKKKK","n":["Error","Sink","poll_close","poll_flush","poll_ready","start_send"],"q":[[0,"futures_sink"]],"d":["The type of value produced by the sink when an error …","A <code>Sink</code> is a value into which other values can be sent, …","Flush any remaining output and close this sink, if …","Flush any remaining output from this sink.","Attempts to prepare the <code>Sink</code> to receive a value.","Begin the process of sending a value to the sink. Each …"],"i":[5,0,5,5,5,5],"f":[0,0,[[1,2],[[4,[3]]]],[[1,2],[[4,[3]]]],[[1,2],[[4,[3]]]],[1,3]],"c":[],"p":[[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[8,"Sink"]]},\
"fxhash":{"doc":"Fx Hash","t":"GGGDDDLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FxBuildHasher","FxHashMap","FxHashSet","FxHasher","FxHasher32","FxHasher64","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","finish","finish","finish","fmt","fmt","fmt","from","from","from","hash","hash32","hash64","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize"],"q":[[0,"fxhash"]],"d":["A builder for default Fx hashers.","A <code>HashMap</code> using a default Fx hasher.","A <code>HashSet</code> using a default Fx hasher.","This hashing algorithm was extracted from the Rustc …","This hashing algorithm was extracted from the Rustc …","This hashing algorithm was extracted from the Rustc …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A convenience function for when you need a quick usize …","A convenience function for when you need a quick 32-bit …","A convenience function for when you need a quick 64-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[],1],[[],2],[[],3],[1,4],[2,4],[3,4],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[[[0,[7,8]]],9],[[[0,[7,8]]],10],[[[0,[7,8]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[1,[14,[13]]]],[[2,[14,[13]]]],[[3,[14,[13]]]],[[1,15]],[[2,15]],[[3,15]],[[1,10]],[[2,10]],[[3,10]],[[1,4]],[[2,4]],[[3,4]],[[1,13]],[[2,13]],[[3,13]],[[1,9]],[[2,9]],[[3,9]]],"c":[],"p":[[3,"FxHasher"],[3,"FxHasher64"],[3,"FxHasher32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"Sized"],[15,"usize"],[15,"u32"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[15,"u16"]]},\
"getrandom":{"doc":"Interface to the operating system’s random number …","t":"SSDSSSSSSSSSSSSLLLLLLLLLLLFFLLLLLLL","n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_ES_MODULE","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","clone_into","code","eq","equivalent","fmt","fmt","from","from","getrandom","getrandom_uninit","into","raw_os_error","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"getrandom"]],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to iOS <code>SecRandomCopyBytes</code> failed.","Node.js does not have the <code>crypto</code> CommonJS module.","Called from an ES module on Node.js. This is unsupported, …","Calling Node.js function <code>crypto.randomFillSync</code> failed.","RDRAND instruction unsupported on this target.","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The environment does not support the Web Crypto API.","Calling Web Crypto API <code>crypto.getRandomValues</code> failed.","Call to Windows <code>RtlGenRandom</code> failed.","","","","","Extract the bare error code.","","","","","","Returns the argument unchanged.","Fill <code>dest</code> with random bytes from the system’s preferred …","Version of the <code>getrandom</code> function which fills <code>dest</code> with …","Calls <code>U::from(self)</code>.","Extract the raw OS error code (if this error came from the …","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[1,2],[[1,1],3],[[],3],[[1,4],5],[[1,4],5],[2,1],[[]],[[[7,[6]]],[[8,[1]]]],[[[7,[[9,[6]]]]],[[8,[[7,[6]],1]]]],[[]],[1,[[11,[10]]]],[[]],[[],12],[[],8],[[],8],[[],13]],"c":[],"p":[[3,"Error"],[3,"NonZeroU32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Result"],[19,"MaybeUninit"],[15,"i32"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"glam":{"doc":"glam","t":"ECCCNNNNNNALLLLLLLAALLLAALALLLLAADDDDDSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMSSSSDDSSSSSSSSSSSSSSSSSSSDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDDDDSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDDDDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQIQQIQQIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKSSSSSSSSSSSSDDDSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSDDDSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["EulerRot","Vec2Swizzles","Vec3Swizzles","Vec4Swizzles","XYZ","XZY","YXZ","YZX","ZXY","ZYX","bool","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","f32","f64","fmt","from","hash","i32","i64","into","swizzles","to_owned","try_from","try_into","type_id","u32","u64","BVec2","BVec3","BVec3A","BVec4","BVec4A","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","TRUE","all","all","all","all","all","any","any","any","any","any","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","new","new","new","new","new","not","not","not","not","not","set","set","set","set","set","splat","splat","splat","splat","splat","test","test","test","test","test","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","w","w","x","x","x","x","x","y","y","y","y","y","z","z","z","z","AXES","AXES","AXES","AXES","Affine2","Affine3A","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","INFINITY","MAX","MAX","MAX","MAX","MIN","MIN","MIN","MIN","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","ONE","ONE","ONE","ONE","Quat","Vec2","Vec3","Vec3A","Vec4","W","X","X","X","X","Y","Y","Y","Y","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","angle_between","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec3","as_dvec3","as_dvec4","as_f64","as_i64vec2","as_i64vec3","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec3","as_uvec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","conjugate","copysign","copysign","copysign","copysign","cross","cross","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref_mut","deref_mut","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","div_euclid","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","exp","exp","extend","extend","extend","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_quat","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_xyzw","index","index","index","index","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix3","max","max","max","max","max_element","max_element","max_element","max_element","min","min","min","min","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","recip","recip","recip","recip","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rem_euclid","rotate","round","round","round","round","row","row","row","row","select","select","select","select","signum","signum","signum","signum","slerp","splat","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_angle_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","transpose","transpose","transpose","transpose","trunc","trunc","trunc","trunc","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec2","vec3","vec3a","vec4","w","w","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxzw","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xy","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzx","xzxw","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzyw","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzzw","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxzw","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yy","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyzw","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzx","yzxw","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzyw","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzzw","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","z","z","z","z","z_axis","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxx","zxxw","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxyw","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxzw","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zy","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyx","zyxw","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyyw","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyzw","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzx","zzxw","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzyw","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzzw","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","AXES","AXES","AXES","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","MAX","MAX","MAX","MIN","MIN","MIN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat4","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","as_f32","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","conjugate","copysign","copysign","copysign","cross","default","default","default","default","default","default","default","default","default","deref","deref","deref_mut","deref_mut","determinant","determinant","determinant","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dquat","dvec2","dvec3","dvec4","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","exp","extend","extend","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_vec4","from_xyzw","index","index","index","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","matrix2","matrix3","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec4","neg","neg","neg","neg","neg","neg","neg","new","new","new","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","recip","recip","recip","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rotate","round","round","round","row","row","row","select","select","select","signum","signum","signum","slerp","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_angle_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point3","transform_point3","transform_vector2","transform_vector2","transform_vector3","transform_vector3","translation","translation","transpose","transpose","transpose","trunc","trunc","trunc","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","w","w","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","y","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","z","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","IVec2","IVec3","IVec4","MAX","MAX","MAX","MIN","MIN","MIN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","ivec2","ivec3","ivec4","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","new","new","new","not","not","not","perp","perp_dot","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rotate","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","I64Vec2","I64Vec3","I64Vec4","MAX","MAX","MAX","MIN","MIN","MIN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_euclid","div_euclid","div_euclid","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","i64vec2","i64vec3","i64vec4","index","index","index","index_mut","index_mut","index_mut","into","into","into","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","new","new","new","not","not","not","perp","perp_dot","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","rem_euclid","rotate","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","MAX","MAX","MAX","MIN","MIN","MIN","ONE","ONE","ONE","UVec2","UVec3","UVec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","not","not","not","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uvec2","uvec3","uvec4","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","MAX","MAX","MAX","MIN","MIN","MIN","ONE","ONE","ONE","U64Vec2","U64Vec3","U64Vec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","not","not","not","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_sub","saturating_sub","saturating_sub","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64vec2","u64vec3","u64vec4","w","wrapping_add","wrapping_add","wrapping_add","wrapping_div","wrapping_div","wrapping_div","wrapping_mul","wrapping_mul","wrapping_mul","wrapping_sub","wrapping_sub","wrapping_sub","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz"],"q":[[0,"glam"],[33,"glam::bool"],[219,"glam::f32"],[1885,"glam::f64"],[3207,"glam::i32"],[4112,"glam::i64"],[5014,"glam::swizzles"],[5507,"glam::u32"],[6376,"glam::u64"]],"d":["Rotation Helper  Euler rotation sequences.","","","","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","<code>bool</code> vector mask types. ","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","Returns the argument unchanged.","","<code>i32</code> vector types. ","<code>i64</code> vector types. ","Calls <code>U::from(self)</code>.","Traits adding swizzle methods to all vector types. ","","","","","<code>u32</code> vector types. ","<code>u64</code> vector types. ","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>u32</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>u32</code> vector mask.","All false.","All false.","All false.","All false.","All false.","All true.","All true.","All true.","All true.","All true.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","","","","","","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","All ones.","A quaternion representing an rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","Returns any unit vector that is orthogonal to the given …","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","Extracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","Adds two quaternions.","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","Extracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","","","","","","","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Returns the element-wise quotient of [Euclidean division] …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns the element-wise remainder of Euclidean division …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating addition of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating division of <code>self</code>…","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating multiplication …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Returns a vector containing the saturating subtraction of …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","","","","","","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping addition of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping division of <code>self</code> …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping multiplication of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Returns a vector containing the wrapping subtraction of …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …if":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],1],[[1,1],2],[[],2],0,0,[[1,3],4],[[]],[[1,5]],0,0,[[]],0,[[]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,2],[9,2],[10,2],[11,2],[12,2],[8,2],[9,2],[10,2],[11,2],[12,2],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[8,13],[9,13],[10,13],[11,13],[12,13],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[],8],[[],9],[[],10],[[],11],[[],12],[[8,8],2],[[9,9],2],[[10,10],2],[[11,11],2],[[12,12],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[8,3],4],[[8,3],4],[[9,3],4],[[9,3],4],[[10,3],4],[[10,3],4],[[11,3],4],[[11,3],4],[[12,3],4],[[12,3],4],[[]],[[]],[[]],[[]],[[]],[[8,5]],[[9,5]],[[10,5]],[[11,5]],[[12,5]],[[]],[[]],[[]],[[]],[[]],[[2,2],8],[[2,2,2],9],[[2,2,2,2],10],[[2,2,2],11],[[2,2,2,2],12],[8,8],[9,9],[10,10],[11,11],[12,12],[[8,14,2]],[[9,14,2]],[[10,14,2]],[[11,14,2]],[[12,14,2]],[2,8],[2,9],[2,10],[2,11],[2,12],[[8,14],2],[[9,14],2],[[10,14],2],[[11,14],2],[[12,14],2],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],[17,17],[18,18],[19,19],[[20,20,21],2],[[22,22,21],2],[[23,23,21],2],[[16,16,21],2],[[17,17,21],2],[[24,24,21],2],[[25,25,21],2],[[26,26,21],2],[[27,27,21],2],[[18,18,21],2],[[19,19,21],2],[[23,23]],[[16,21],16],[[16,16],16],[[17,17],17],[[17,21],17],[[24,24]],[[25,25]],[[26,26]],[[27,27],27],[[18,21],18],[[18,18],18],[[19,21],19],[[19,19],19],[[23,23]],[[16,21]],[[16,16]],[[17,21]],[[17,17]],[[24,24]],[[25,25]],[[26,26]],[[18,21]],[[18,18]],[[19,19]],[[19,21]],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[[16,16],21],[[17,17],21],[[27,27],21],[[18,18],21],[17,17],[18,18],[17],[18],[17,17],[18,18],[24,28],[23,29],[25,29],[26,30],[16,31],[17,32],[18,32],[19,33],[27,34],[16,35],[17,36],[18,36],[19,37],[16,38],[17,39],[18,39],[19,40],[23,[[41,[21]]]],[16,[[41,[21]]]],[17,[[41,[21]]]],[24,[[41,[21]]]],[26,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[23,[[41,[21]]]],[16,[[41,[21]]]],[17,[[41,[21]]]],[24,[[41,[21]]]],[26,[[41,[21]]]],[27,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[16,42],[17,43],[18,43],[19,44],[16,45],[17,46],[18,46],[19,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,16],[17,17],[18,18],[19,19],[[16,16,16],16],[[17,17,17],17],[[18,18,18],18],[[19,19,19],19],[[16,21,21],16],[[17,21,21],17],[[18,21,21],18],[[19,21,21],19],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[20,20],[22,22],[23,23],[16,16],[17,17],[24,24],[25,25],[26,26],[27,27],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[16,16],8],[[17,17],9],[[18,18],11],[[19,19],10],[[23,14],17],[[24,14],16],[[25,14],18],[[26,14],19],[[23,14],17],[[24,14],16],[[25,14],18],[[26,14],19],[27,27],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[17,17],17],[[18,18],18],[[],20],[[],22],[[],23],[[],16],[[],17],[[],24],[[],25],[[],26],[[],27],[[],18],[[],19],[20],[22],[20],[22],[23,21],[24,21],[25,21],[26,21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[27,21],27],[[18,18],18],[[18,21],18],[[19,21],19],[[19,19],19],[[16,16]],[[16,21]],[[17,17]],[[17,21]],[[18,18]],[[18,21]],[[19,19]],[[19,21]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],21],[[17,17],21],[[27,27],21],[[18,18],21],[[19,19],21],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],2],[[22,22],2],[[23,23],2],[[16,16],2],[[17,17],2],[[24,24],2],[[25,25],2],[[26,26],2],[[27,27],2],[[18,18],2],[[19,19],2],[16,16],[17,17],[18,18],[19,19],[[16,21],17],[[17,21],19],[[18,21],19],[16,16],[17,17],[18,18],[19,19],[[20,3],4],[[20,3],4],[[22,3],4],[[22,3],4],[[23,3],4],[[23,3],4],[[16,3],4],[[16,3],4],[[17,3],4],[[17,3],4],[[24,3],4],[[24,3],4],[[25,3],4],[[25,3],4],[[26,3],4],[[26,3],4],[[27,3],4],[[27,3],4],[[18,3],4],[[18,3],4],[[19,3],4],[[19,3],4],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[[48,[21]]],23],[20,23],[25,23],[[[49,[21]]],23],[[]],[[[41,[21]]],16],[[],16],[[[50,[21]]],16],[[]],[[[51,[21]]],16],[18,17],[[[52,[21]]],17],[[[53,[21]]],17],[[],17],[[],17],[[]],[[[41,[21]]],17],[[]],[[[54,[21]]],24],[[[55,[21]]],24],[[]],[20,25],[[[48,[21]]],25],[[[49,[21]]],25],[23,25],[[[56,[21]]],26],[22,26],[[]],[[[57,[21]]],26],[[]],[[[58,[21]]],27],[[],18],[[[41,[21]]],18],[19,18],[[],18],[[]],[17,18],[[[52,[21]]],18],[[[53,[21]]],18],[27,19],[[[59,[21]]],19],[[],19],[[],19],[[],19],[[]],[[],19],[[],19],[[],19],[[],19],[[[41,[21]]],19],[22,27],[21,20],[21,23],[21,16],[21,24],[21,25],[[21,16],20],[[[41,[21]]],16],[[[41,[21]]],17],[[[41,[21]]],27],[[[41,[21]]],18],[[[41,[21]]],19],[[17,21],22],[[17,21],23],[[17,21],25],[[17,21],26],[[17,21],27],[[16,16,16],20],[[18,18,18,18],22],[[17,17,17],23],[[16,16],24],[[18,18,18],25],[[19,19,19,19],26],[[[41,[21]]],20],[[[41,[21]]],22],[[[41,[21]]],23],[[[41,[21]]],24],[[[41,[21]]],25],[[[41,[21]]],26],[[[41,[[41,[21]]]]],20],[[[41,[[41,[21]]]]],22],[[[41,[[41,[21]]]]],23],[[[41,[[41,[21]]]]],24],[[[41,[[41,[21]]]]],25],[[[41,[[41,[21]]]]],26],[[[60,[21]]],20],[[[60,[21]]],22],[[[60,[21]]],23],[[[60,[21]]],24],[[[60,[21]]],25],[[[60,[21]]],26],[17,23],[16,24],[17,25],[19,26],[[1,21,21,21],23],[[1,21,21,21],25],[[1,21,21,21],26],[[1,21,21,21],27],[24,20],[24,23],[24,25],[[24,16],20],[23,20],[23,22],[23,24],[23,26],[23,27],[[23,17],22],[25,20],[25,24],[25,26],[25,27],[26,22],[26,23],[26,25],[26,27],[27,22],[27,23],[27,25],[27,26],[[17,17],27],[[16,16],27],[[17,17],27],[[27,17],22],[[27,17],26],[21,22],[21,23],[21,25],[21,26],[21,27],[21,22],[21,23],[21,25],[21,26],[21,27],[21,22],[21,23],[21,25],[21,26],[21,27],[16,20],[17,22],[16,23],[16,25],[17,26],[[16,21],24],[[16,21,16],20],[[16,21,16],23],[[16,21,16],25],[[17,27,17],22],[[17,27,17],26],[17,27],[[[60,[21]]],16],[[[60,[21]]],17],[[[60,[21]]],27],[[[60,[21]]],18],[[[60,[21]]],19],[16,20],[17,22],[16,23],[16,25],[17,26],[19,27],[[21,21,21,21],27],[[16,14]],[[17,14]],[[18,14]],[[19,14]],[[16,14]],[[17,14]],[[18,14]],[[19,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[20,2],[22,2],[23,2],[16,2],[17,2],[24,2],[25,2],[26,2],[27,2],[18,2],[19,2],[20,2],[22,2],[23,2],[16,2],[17,2],[24,2],[25,2],[26,2],[27,2],[18,2],[19,2],[16,8],[17,9],[18,11],[19,10],[27,2],[16,13],[17,13],[18,13],[19,13],[16,2],[17,2],[27,2],[18,2],[19,2],[16,21],[17,21],[27,21],[18,21],[19,21],[16,21],[17,21],[27,21],[18,21],[19,21],[16,21],[17,21],[27,21],[18,21],[19,21],[[16,16,21],16],[[17,17,21],17],[[27,27,21],27],[[18,18,21],18],[[19,19,21],19],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[16,16],24],[[17,17,17],23],[[18,18,18],25],[[19,19,19,19],26],0,0,[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[16,21],[17,21],[18,21],[19,21],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[16,21],[17,21],[18,21],[19,21],[[20,20]],[[20,25]],[[20,23]],[[22,26]],[[22,22]],[[23,17]],[[23,23]],[[23,20]],[[23,21]],[[23,18],18],[[16,21],16],[[16,16],16],[[17,21],17],[[17,17],17],[[24,16]],[[24,21]],[[24,24]],[[25,18]],[[25,17],17],[[25,21]],[[25,25]],[[25,20]],[[26,26]],[[26,21]],[[26,22]],[[26,19]],[[27,18]],[[27,27],27],[[27,17]],[[27,21],27],[[18,18],18],[[18,21],18],[[19,21],19],[[19,19],19],[[16,16,16],16],[[17,17,17],17],[[18,18,18],18],[[19,19,19],19],[[20,20]],[[22,22]],[[23,23]],[[23,21]],[[16,21]],[[16,16]],[[17,17]],[[17,21]],[[24,24]],[[24,21]],[[25,25]],[[25,21]],[[26,26]],[[26,21]],[[27,27]],[[18,21]],[[18,18]],[[19,21]],[[19,19]],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[[27,27],27],[[23,21],23],[[24,21],24],[[25,21],25],[[26,21],26],[[24,16],16],[[23,17],17],[[25,17],17],[[27,17],17],[[23,18],18],[[25,18],18],[[27,18],18],[[26,19],19],[23],[16,16],[17,17],[24],[25],[26],[27,27],[18,18],[19,19],[[21,21],16],[[21,21,21],17],[[21,21,21],18],[[21,21,21,21],19],[16,16],[17,17],[27,27],[18,18],[19,19],[16,16],[17,17],[18,18],[19,19],[[21,21,21,21,21,21],26],[[21,21,21,21,21,21],26],[[21,21,21,21,21,21],26],[16,16],[[16,16],21],[[21,21,21],26],[[21,21,21],26],[[21,21,21],26],[[21,21,21],26],[[21,21,21,21],26],[[21,21,21,21],26],[[21,21,21,21],26],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[61,20],[61,22],[61,23],[61,23],[61,16],[61,16],[61,17],[61,17],[61,24],[61,24],[61,25],[61,25],[61,26],[61,26],[61,27],[61,27],[61,18],[61,18],[61,19],[61,19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[26,17],17],[[21,21,21,21],27],[16,16],[17,17],[18,18],[19,19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[18,21],18],[[18,18],18],[[19,19],19],[[19,21],19],[[16,16]],[[16,21]],[[17,17]],[[17,21]],[[18,18]],[[18,21]],[[19,19]],[[19,21]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[16,16],[17,17],[18,18],[19,19],[[23,14],17],[[24,14],16],[[25,14],18],[[26,14],19],[[8,16,16],16],[[9,17,17],17],[[11,18,18],18],[[10,19,19],19],[16,16],[17,17],[18,18],[19,19],[[27,27,21],27],[21,16],[21,17],[21,18],[21,19],[[23,23]],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[24,24]],[[25,25]],[[26,26]],[[27,27],27],[[18,21],18],[[18,18],18],[[19,19],19],[[19,21],19],[[23,23]],[[16,21]],[[16,16]],[[17,21]],[[17,17]],[[24,24]],[[25,25]],[[26,26]],[[18,21]],[[18,18]],[[19,21]],[[19,19]],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[61,23],[61,23],[61,16],[61,16],[61,17],[61,17],[61,24],[61,24],[61,25],[61,25],[61,26],[61,26],[61,27],[61,27],[61,18],[61,18],[61,19],[61,19],[16,[[41,[21]]]],[17,[[41,[21]]]],[27,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[27],[20,[[41,[21]]]],[22,[[41,[21]]]],[23,[[41,[21]]]],[24,[[41,[21]]]],[25,[[41,[21]]]],[26,[[41,[21]]]],[20,[[41,[[41,[21]]]]]],[22,[[41,[[41,[21]]]]]],[23,[[41,[[41,[21]]]]]],[24,[[41,[[41,[21]]]]]],[25,[[41,[[41,[21]]]]]],[26,[[41,[[41,[21]]]]]],[[27,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[22],[26],[27,17],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[20,16],16],[[23,16],16],[[25,16],16],[[22,17],17],[[26,17],17],[[22,18],18],[[26,18],18],[[20,16],16],[[23,16],16],[[25,16],16],[[22,17],17],[[26,17],17],[[22,18],18],[[26,18],18],0,0,[23,23],[24,24],[25,25],[26,26],[16,16],[17,17],[18,18],[19,19],[17,16],[18,16],[19,17],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[16,[[62,[16]]]],[17,[[62,[17]]]],[18,[[62,[18]]]],[19,[[62,[19]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[21,21],16],[[21,21,21],17],[[21,21,21],18],[[21,21,21,21],19],0,0,0,[[20,[60,[21]]]],[[22,[60,[21]]]],[[23,[60,[21]]]],[[24,[60,[21]]]],[[25,[60,[21]]]],[[26,[60,[21]]]],[[16,[60,[21]]]],[[17,[60,[21]]]],[[27,[60,[21]]]],[[18,[60,[21]]]],[[19,[60,[21]]]],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],0,0,0,0,0,0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[27,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,0,0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,31],[32,32],[33,33],[[63,63,64],2],[[65,65,64],2],[[28,28,64],2],[[29,29,64],2],[[30,30,64],2],[[34,34,64],2],[[31,31,64],2],[[32,32,64],2],[[33,33,64],2],[[28,28]],[[29,29]],[[30,30]],[[34,34],34],[[31,31],31],[[31,64],31],[[32,64],32],[[32,32],32],[[33,33],33],[[33,64],33],[[28,28]],[[29,29]],[[30,30]],[[31,64]],[[31,31]],[[32,32]],[[32,64]],[[33,33]],[[33,64]],[[28,28],28],[[29,29],29],[[30,30],30],[[34,34],64],[[31,31],64],[[32,32],64],[32,32],[32],[32,32],[34,27],[31,35],[32,36],[33,37],[31,38],[32,39],[33,40],[28,24],[29,23],[30,26],[28,[[41,[64]]]],[29,[[41,[64]]]],[30,[[41,[64]]]],[31,[[41,[64]]]],[32,[[41,[64]]]],[33,[[41,[64]]]],[28,[[41,[64]]]],[29,[[41,[64]]]],[30,[[41,[64]]]],[34,[[41,[64]]]],[31,[[41,[64]]]],[32,[[41,[64]]]],[33,[[41,[64]]]],[31,42],[32,43],[33,44],[31,45],[32,46],[33,47],[31,16],[32,17],[32,18],[33,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[32,32],[33,33],[[31,31,31],31],[[32,32,32],32],[[33,33,33],33],[[31,64,64],31],[[32,64,64],32],[[33,64,64],33],[[31,64],31],[[32,64],32],[[33,64],33],[[31,64],31],[[32,64],32],[[33,64],33],[63,63],[65,65],[28,28],[29,29],[30,30],[34,34],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,31],8],[[32,32],9],[[33,33],10],[[31,31],8],[[32,32],9],[[33,33],10],[[31,31],8],[[32,32],9],[[33,33],10],[[31,31],8],[[32,32],9],[[33,33],10],[[31,31],8],[[32,32],9],[[33,33],10],[[31,31],8],[[32,32],9],[[33,33],10],[[28,14],31],[[29,14],32],[[30,14],33],[[28,14],31],[[29,14],32],[[30,14],33],[34,34],[[31,31],31],[[32,32],32],[[33,33],33],[[32,32],32],[[],63],[[],65],[[],28],[[],29],[[],30],[[],34],[[],31],[[],32],[[],33],[63],[65],[63],[65],[28,64],[29,64],[30,64],[[31,31],64],[[32,32],64],[[33,33],64],[[31,31],64],[[32,32],64],[[33,33],64],[[34,64],34],[[31,31],31],[[31,64],31],[[32,32],32],[[32,64],32],[[33,64],33],[[33,33],33],[[31,31]],[[31,64]],[[32,64]],[[32,32]],[[33,33]],[[33,64]],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],28],[[32,32,32],29],[[33,33,33,33],30],[[34,34],64],[[31,31],64],[[32,32],64],[[33,33],64],[[31,31],31],[[32,32],32],[[33,33],33],[[64,64,64,64],34],[[64,64],31],[[64,64,64],32],[[64,64,64,64],33],[[63,63],2],[[65,65],2],[[28,28],2],[[29,29],2],[[30,30],2],[[34,34],2],[[31,31],2],[[32,32],2],[[33,33],2],[31,31],[32,32],[33,33],[[31,64],32],[[32,64],33],[31,31],[32,32],[33,33],[[63,3],4],[[63,3],4],[[65,3],4],[[65,3],4],[[28,3],4],[[28,3],4],[[29,3],4],[[29,3],4],[[30,3],4],[[30,3],4],[[34,3],4],[[34,3],4],[[31,3],4],[[31,3],4],[[32,3],4],[[32,3],4],[[33,3],4],[[33,3],4],[31,31],[32,32],[33,33],[[]],[[]],[[[54,[64]]],28],[[]],[[[55,[64]]],28],[63,29],[[[49,[64]]],29],[[]],[[[48,[64]]],29],[[]],[[[57,[64]]],30],[65,30],[[[56,[64]]],30],[[[58,[64]]],34],[[]],[[],31],[38,31],[[[50,[64]]],31],[[[51,[64]]],31],[[[41,[64]]],31],[16,31],[45,31],[[]],[[],32],[[[52,[64]]],32],[[]],[[[53,[64]]],32],[46,32],[[[41,[64]]],32],[17,32],[[],32],[39,32],[[],33],[[],33],[[[59,[64]]],33],[47,33],[[]],[19,33],[[[41,[64]]],33],[[],33],[[],33],[40,33],[[],33],[34,33],[65,34],[64,63],[64,28],[64,29],[64,31],[[64,31],63],[[[41,[64]]],34],[[[41,[64]]],31],[[[41,[64]]],32],[[[41,[64]]],33],[[32,64],65],[[32,64],29],[[32,64],30],[[32,64],34],[[31,31,31],63],[[32,32,32,32],65],[[31,31],28],[[32,32,32],29],[[33,33,33,33],30],[[[41,[64]]],63],[[[41,[64]]],65],[[[41,[64]]],28],[[[41,[64]]],29],[[[41,[64]]],30],[[[41,[[41,[64]]]]],63],[[[41,[[41,[64]]]]],65],[[[41,[[41,[64]]]]],28],[[[41,[[41,[64]]]]],29],[[[41,[[41,[64]]]]],30],[[[60,[64]]],63],[[[60,[64]]],65],[[[60,[64]]],28],[[[60,[64]]],29],[[[60,[64]]],30],[31,28],[32,29],[33,30],[[1,64,64,64],29],[[1,64,64,64],30],[[1,64,64,64],34],[28,63],[28,29],[[28,31],63],[29,63],[29,65],[29,28],[29,30],[29,34],[[29,32],65],[30,65],[30,29],[30,34],[34,65],[34,29],[34,30],[[32,32],34],[[31,31],34],[[32,32],34],[[34,32],65],[[34,32],30],[64,65],[64,29],[64,30],[64,34],[64,65],[64,29],[64,30],[64,34],[64,65],[64,29],[64,30],[64,34],[31,63],[32,65],[31,29],[32,30],[[31,64],28],[[31,64,31],63],[[31,64,31],29],[[32,34,32],65],[[32,34,32],30],[32,34],[[[60,[64]]],34],[[[60,[64]]],31],[[[60,[64]]],32],[[[60,[64]]],33],[31,63],[32,65],[31,29],[32,30],[33,34],[[64,64,64,64],34],[[31,14]],[[32,14]],[[33,14]],[[31,14]],[[32,14]],[[33,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[65,65],[28,28],[29,29],[30,30],[34,34],[63,2],[65,2],[28,2],[29,2],[30,2],[34,2],[31,2],[32,2],[33,2],[63,2],[65,2],[28,2],[29,2],[30,2],[34,2],[31,2],[32,2],[33,2],[31,8],[32,9],[33,10],[34,2],[31,13],[32,13],[33,13],[34,2],[31,2],[32,2],[33,2],[34,64],[31,64],[32,64],[33,64],[34,64],[31,64],[32,64],[33,64],[34,64],[31,64],[32,64],[33,64],[[34,34,64],34],[[31,31,64],31],[[32,32,64],32],[[33,33,64],33],[[32,32,32],65],[[32,32,32],30],[[32,32,32],65],[[32,32,32],30],[[32,32,32],65],[[32,32,32],30],[[32,32,32],65],[[32,32,32],30],0,0,[[31,31],31],[[32,32],32],[[33,33],33],[31,64],[32,64],[33,64],[[31,31],31],[[32,32],32],[[33,33],33],[31,64],[32,64],[33,64],[[63,63]],[[63,29]],[[65,65]],[[65,30]],[[28,28]],[[28,64]],[[28,31]],[[29,63]],[[29,64]],[[29,29]],[[29,32]],[[30,64]],[[30,65]],[[30,33]],[[30,30]],[[34,34],34],[[34,32]],[[34,64],34],[[31,64],31],[[31,31],31],[[32,64],32],[[32,32],32],[[33,64],33],[[33,33],33],[[31,31,31],31],[[32,32,32],32],[[33,33,33],33],[[63,63]],[[65,65]],[[28,64]],[[28,28]],[[29,64]],[[29,29]],[[30,64]],[[30,30]],[[34,34]],[[31,64]],[[31,31]],[[32,32]],[[32,64]],[[33,33]],[[33,64]],[[28,28],28],[[29,29],29],[[30,30],30],[[34,34],34],[[28,64],28],[[29,64],29],[[30,64],30],[[28,31],31],[[29,32],32],[[34,32],32],[[30,33],33],[28],[29],[30],[34,34],[31,31],[32,32],[33,33],[[64,64],31],[[64,64,64],32],[[64,64,64,64],33],[34,34],[31,31],[32,32],[33,33],[31,31],[32,32],[33,33],[[64,64,64,64,64,64],30],[[64,64,64,64,64,64],30],[[64,64,64,64,64,64],30],[31,31],[[31,31],64],[[64,64,64],30],[[64,64,64],30],[[64,64,64],30],[[64,64,64],30],[[64,64,64,64],30],[[64,64,64,64],30],[[64,64,64,64],30],[[31,64],31],[[32,64],32],[[33,64],33],[61,63],[61,65],[61,28],[61,28],[61,29],[61,29],[61,30],[61,30],[61,34],[61,34],[61,31],[61,31],[61,32],[61,32],[61,33],[61,33],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[[32,32],32],[[33,33],33],[[30,32],32],[31,31],[32,32],[33,33],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[[31,64],31],[[32,32],32],[[32,64],32],[[33,33],33],[[33,64],33],[[31,64]],[[31,31]],[[32,64]],[[32,32]],[[33,33]],[[33,64]],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[31,31],[32,32],[33,33],[[28,14],31],[[29,14],32],[[30,14],33],[[8,31,31],31],[[9,32,32],32],[[10,33,33],33],[31,31],[32,32],[33,33],[[34,34,64],34],[64,31],[64,32],[64,33],[[28,28]],[[29,29]],[[30,30]],[[34,34],34],[[31,31],31],[[31,64],31],[[32,64],32],[[32,32],32],[[33,64],33],[[33,33],33],[[28,28]],[[29,29]],[[30,30]],[[31,64]],[[31,31]],[[32,64]],[[32,32]],[[33,64]],[[33,33]],[[28,28],28],[[29,29],29],[[30,30],30],[61,28],[61,28],[61,29],[61,29],[61,30],[61,30],[61,34],[61,34],[61,31],[61,31],[61,32],[61,32],[61,33],[61,33],[34,[[41,[64]]]],[31,[[41,[64]]]],[32,[[41,[64]]]],[33,[[41,[64]]]],[34],[63,[[41,[64]]]],[65,[[41,[64]]]],[28,[[41,[64]]]],[29,[[41,[64]]]],[30,[[41,[64]]]],[63,[[41,[[41,[64]]]]]],[65,[[41,[[41,[64]]]]]],[28,[[41,[[41,[64]]]]]],[29,[[41,[[41,[64]]]]]],[30,[[41,[[41,[64]]]]]],[[34,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63],[65],[30],[34,32],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[63,31],31],[[29,31],31],[[65,32],32],[[30,32],32],[[63,31],31],[[29,31],31],[[65,32],32],[[30,32],32],0,0,[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[32,31],[33,32],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[31,[[62,[31]]]],[32,[[62,[32]]]],[33,[[62,[33]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,[[63,[60,[64]]]],[[65,[60,[64]]]],[[28,[60,[64]]]],[[29,[60,[64]]]],[[30,[60,[64]]]],[[34,[60,[64]]]],[[31,[60,[64]]]],[[32,[60,[64]]]],[[33,[60,[64]]]],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],0,0,0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[34,32],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38,38],[39,39],[40,40],[[38,66],38],[[38,38],38],[[39,66],39],[[39,39],39],[[40,40],40],[[40,66],40],[[38,66]],[[38,38]],[[39,66]],[[39,39]],[[40,40]],[[40,66]],[38,31],[39,32],[40,33],[38,35],[39,36],[40,37],[38,[[41,[66]]]],[39,[[41,[66]]]],[40,[[41,[66]]]],[38,[[41,[66]]]],[39,[[41,[66]]]],[40,[[41,[66]]]],[38,42],[39,43],[40,44],[38,45],[39,46],[40,47],[38,16],[39,17],[39,18],[40,19],[[38,38]],[[38,66]],[[39,66]],[[39,39]],[[40,66]],[[40,40]],[[38,38]],[[38,66]],[[39,66]],[[39,39]],[[40,66]],[[40,40]],[[38,66]],[[38,38]],[[39,39]],[[39,66]],[[40,40]],[[40,66]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,38,38],38],[[39,39,39],39],[[40,40,40],40],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[38,38],8],[[39,39],9],[[40,40],10],[[38,38],8],[[39,39],9],[[40,40],10],[[38,38],8],[[39,39],9],[[40,40],10],[[38,38],8],[[39,39],9],[[40,40],10],[[38,38],8],[[39,39],9],[[40,40],10],[[38,38],8],[[39,39],9],[[40,40],10],[[39,39],39],[[],38],[[],39],[[],40],[[38,38],66],[[39,39],66],[[40,40],66],[[38,66],38],[[38,38],38],[[39,66],39],[[39,39],39],[[40,66],40],[[40,40],40],[[38,66]],[[38,38]],[[39,39]],[[39,66]],[[40,40]],[[40,66]],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],66],[[39,39],66],[[40,40],66],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],2],[[39,39],2],[[40,40],2],[[],2],[[],2],[[],2],[[38,66],39],[[39,66],40],[[38,3],4],[[38,3],4],[[39,3],4],[[39,3],4],[[40,3],4],[[40,3],4],[[]],[[],38],[[[51,[66]]],38],[[[50,[66]]],38],[[[41,[66]]],38],[[[53,[66]]],39],[[],39],[[]],[[[41,[66]]],39],[[[52,[66]]],39],[[],39],[[],40],[[[59,[66]]],40],[[]],[[],40],[[],40],[[[41,[66]]],40],[[],40],[[],40],[[[41,[66]]],38],[[[41,[66]]],39],[[[41,[66]]],40],[[[60,[66]]],38],[[[60,[66]]],39],[[[60,[66]]],40],[[38,5]],[[39,5]],[[40,5]],[[38,14]],[[39,14]],[[40,14]],[[38,14]],[[39,14]],[[40,14]],[[]],[[]],[[]],[38,13],[39,13],[40,13],[[66,66],38],[[66,66,66],39],[[66,66,66,66],40],[38,66],[39,66],[40,66],[[38,38],38],[[39,39],39],[[40,40],40],[38,66],[39,66],[40,66],[[38,38],38],[[39,39],39],[[40,40],40],[38,66],[39,66],[40,66],[[38,66],38],[[38,38],38],[[39,66],39],[[39,39],39],[[40,40],40],[[40,66],40],[[38,38]],[[38,66]],[[39,39]],[[39,66]],[[40,66]],[[40,40]],[38,38],[39,39],[40,40],[[66,66],38],[[66,66,66],39],[[66,66,66,66],40],[38],[39],[40],[38,38],[[38,38],66],[61,38],[61,38],[61,39],[61,39],[61,40],[61,40],[[38,66],38],[[38,38],38],[[39,66],39],[[39,39],39],[[40,66],40],[[40,40],40],[[38,66]],[[38,38]],[[39,66]],[[39,39]],[[40,40]],[[40,66]],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[8,38,38],38],[[9,39,39],39],[[10,40,40],40],[[38,67]],[[38,68]],[[38,69]],[[38,13]],[[38,45]],[[38,70]],[[38,71]],[[38,38]],[[38,72]],[[38,66]],[[39,70]],[[39,67]],[[39,66]],[[39,71]],[[39,13]],[[39,69]],[[39,72]],[[39,46]],[[39,39]],[[39,68]],[[40,71]],[[40,70]],[[40,47]],[[40,40]],[[40,67]],[[40,72]],[[40,68]],[[40,13]],[[40,66]],[[40,69]],[[38,72]],[[38,45]],[[38,68]],[[38,69]],[[38,38]],[[38,66]],[[38,13]],[[38,70]],[[38,67]],[[38,71]],[[39,46]],[[39,72]],[[39,68]],[[39,39]],[[39,71]],[[39,66]],[[39,67]],[[39,70]],[[39,13]],[[39,69]],[[40,40]],[[40,70]],[[40,47]],[[40,71]],[[40,69]],[[40,13]],[[40,72]],[[40,68]],[[40,66]],[[40,67]],[38,38],[39,39],[40,40],[66,38],[66,39],[66,40],[[38,38],38],[[38,66],38],[[39,66],39],[[39,39],39],[[40,40],40],[[40,66],40],[[38,66]],[[38,38]],[[39,39]],[[39,66]],[[40,66]],[[40,40]],[61,38],[61,38],[61,39],[61,39],[61,40],[61,40],[38,[[41,[66]]]],[39,[[41,[66]]]],[40,[[41,[66]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[39,38],[40,39],[42,[[6,[38]]]],[45,[[6,[38]]]],[[],6],[35,[[6,[38]]]],[[],6],[46,[[6,[39]]]],[36,[[6,[39]]]],[43,[[6,[39]]]],[47,[[6,[40]]]],[37,[[6,[40]]]],[[],6],[44,[[6,[40]]]],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,[60,[66]]]],[[39,[60,[66]]]],[[40,[60,[66]]]],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],0,0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35,35],[36,36],[37,37],[[35,35],35],[[35,70],35],[[36,70],36],[[36,36],36],[[37,70],37],[[37,37],37],[[35,35]],[[35,70]],[[36,36]],[[36,70]],[[37,37]],[[37,70]],[35,31],[36,32],[37,33],[35,38],[36,39],[37,40],[35,[[41,[70]]]],[36,[[41,[70]]]],[37,[[41,[70]]]],[35,[[41,[70]]]],[36,[[41,[70]]]],[37,[[41,[70]]]],[35,42],[36,43],[37,44],[35,45],[36,46],[37,47],[35,16],[36,17],[36,18],[37,19],[[35,35]],[[35,70]],[[36,36]],[[36,70]],[[37,70]],[[37,37]],[[35,35]],[[35,70]],[[36,70]],[[36,36]],[[37,37]],[[37,70]],[[35,70]],[[35,35]],[[36,70]],[[36,36]],[[37,70]],[[37,37]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35,35],35],[[36,36,36],36],[[37,37,37],37],[35,35],[36,36],[37,37],[[]],[[]],[[]],[[35,35],8],[[36,36],9],[[37,37],10],[[35,35],8],[[36,36],9],[[37,37],10],[[35,35],8],[[36,36],9],[[37,37],10],[[35,35],8],[[36,36],9],[[37,37],10],[[35,35],8],[[36,36],9],[[37,37],10],[[35,35],8],[[36,36],9],[[37,37],10],[[36,36],36],[[],35],[[],36],[[],37],[[35,35],70],[[36,36],70],[[37,37],70],[[35,35],35],[[35,70],35],[[36,36],36],[[36,70],36],[[37,70],37],[[37,37],37],[[35,35]],[[35,70]],[[36,70]],[[36,36]],[[37,37]],[[37,70]],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],70],[[36,36],70],[[37,37],70],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],2],[[36,36],2],[[37,37],2],[[],2],[[],2],[[],2],[[35,70],36],[[36,70],37],[[35,3],4],[[35,3],4],[[36,3],4],[[36,3],4],[[37,3],4],[[37,3],4],[38,35],[[[41,[70]]],35],[[[50,[70]]],35],[[],35],[[]],[[[51,[70]]],35],[[]],[[[41,[70]]],36],[[],36],[39,36],[[],36],[[[53,[70]]],36],[[[52,[70]]],36],[[],37],[[],37],[[],37],[[],37],[[[41,[70]]],37],[40,37],[[]],[[],37],[[[59,[70]]],37],[[[41,[70]]],35],[[[41,[70]]],36],[[[41,[70]]],37],[[[60,[70]]],35],[[[60,[70]]],36],[[[60,[70]]],37],[[35,5]],[[36,5]],[[37,5]],[[70,70],35],[[70,70,70],36],[[70,70,70,70],37],[[35,14]],[[36,14]],[[37,14]],[[35,14]],[[36,14]],[[37,14]],[[]],[[]],[[]],[35,13],[36,13],[37,13],[35,70],[36,70],[37,70],[[35,35],35],[[36,36],36],[[37,37],37],[35,70],[36,70],[37,70],[[35,35],35],[[36,36],36],[[37,37],37],[35,70],[36,70],[37,70],[[35,35],35],[[35,70],35],[[36,70],36],[[36,36],36],[[37,37],37],[[37,70],37],[[35,70]],[[35,35]],[[36,70]],[[36,36]],[[37,37]],[[37,70]],[35,35],[36,36],[37,37],[[70,70],35],[[70,70,70],36],[[70,70,70,70],37],[35],[36],[37],[35,35],[[35,35],70],[61,35],[61,35],[61,36],[61,36],[61,37],[61,37],[[35,35],35],[[35,70],35],[[36,36],36],[[36,70],36],[[37,70],37],[[37,37],37],[[35,35]],[[35,70]],[[36,36]],[[36,70]],[[37,37]],[[37,70]],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[8,35,35],35],[[9,36,36],36],[[10,37,37],37],[[35,72]],[[35,68]],[[35,70]],[[35,67]],[[35,45]],[[35,13]],[[35,66]],[[35,38]],[[35,71]],[[35,69]],[[36,70]],[[36,72]],[[36,67]],[[36,13]],[[36,66]],[[36,46]],[[36,68]],[[36,69]],[[36,71]],[[36,39]],[[37,70]],[[37,47]],[[37,68]],[[37,69]],[[37,72]],[[37,40]],[[37,66]],[[37,71]],[[37,13]],[[37,67]],[[35,72]],[[35,70]],[[35,45]],[[35,68]],[[35,13]],[[35,67]],[[35,69]],[[35,66]],[[35,71]],[[35,38]],[[36,67]],[[36,39]],[[36,46]],[[36,70]],[[36,68]],[[36,71]],[[36,72]],[[36,69]],[[36,13]],[[36,66]],[[37,40]],[[37,66]],[[37,69]],[[37,47]],[[37,67]],[[37,13]],[[37,70]],[[37,72]],[[37,71]],[[37,68]],[35,35],[36,36],[37,37],[70,35],[70,36],[70,37],[[35,35],35],[[35,70],35],[[36,70],36],[[36,36],36],[[37,70],37],[[37,37],37],[[35,35]],[[35,70]],[[36,36]],[[36,70]],[[37,37]],[[37,70]],[61,35],[61,35],[61,36],[61,36],[61,37],[61,37],[35,[[41,[70]]]],[36,[[41,[70]]]],[37,[[41,[70]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[36,35],[37,36],[[],6],[42,[[6,[35]]]],[43,[[6,[36]]]],[[],6],[44,[[6,[37]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],35],[[36,36],36],[[37,37],37],[[35,[60,[70]]]],[[36,[60,[70]]]],[[37,[60,[70]]]],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],0,0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,45],45],[[45,13],45],[[46,13],46],[[46,46],46],[[47,13],47],[[47,47],47],[[45,13]],[[45,45]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[45,31],[46,32],[47,33],[45,35],[46,36],[47,37],[45,38],[46,39],[47,40],[45,[[41,[13]]]],[46,[[41,[13]]]],[47,[[41,[13]]]],[45,[[41,[13]]]],[46,[[41,[13]]]],[47,[[41,[13]]]],[45,42],[46,43],[47,44],[45,16],[46,17],[46,18],[47,19],[[45,45]],[[45,13]],[[46,46]],[[46,13]],[[47,47]],[[47,13]],[[45,13]],[[45,45]],[[46,46]],[[46,13]],[[47,47]],[[47,13]],[[45,45]],[[45,13]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,45,45],45],[[46,46,46],46],[[47,47,47],47],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[45,45],8],[[46,46],9],[[47,47],10],[[45,45],8],[[46,46],9],[[47,47],10],[[45,45],8],[[46,46],9],[[47,47],10],[[45,45],8],[[46,46],9],[[47,47],10],[[45,45],8],[[46,46],9],[[47,47],10],[[45,45],8],[[46,46],9],[[47,47],10],[[46,46],46],[[],45],[[],46],[[],47],[[45,13],45],[[45,45],45],[[46,46],46],[[46,13],46],[[47,13],47],[[47,47],47],[[45,13]],[[45,45]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[[45,45],13],[[46,46],13],[[47,47],13],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],2],[[46,46],2],[[47,47],2],[[],2],[[],2],[[],2],[[45,13],46],[[46,13],47],[[45,3],4],[[45,3],4],[[46,3],4],[[46,3],4],[[47,3],4],[[47,3],4],[[[41,[13]]],45],[[]],[[],45],[[[50,[13]]],45],[[[51,[13]]],45],[[[41,[13]]],46],[[[52,[13]]],46],[[],46],[[]],[[[53,[13]]],46],[[],46],[[]],[[[41,[13]]],47],[[],47],[[],47],[[],47],[[],47],[[[59,[13]]],47],[[],47],[[[41,[13]]],45],[[[41,[13]]],46],[[[41,[13]]],47],[[[60,[13]]],45],[[[60,[13]]],46],[[[60,[13]]],47],[[45,5]],[[46,5]],[[47,5]],[[45,14]],[[46,14]],[[47,14]],[[45,14]],[[46,14]],[[47,14]],[[]],[[]],[[]],[45,13],[46,13],[47,13],[[45,45],45],[[46,46],46],[[47,47],47],[45,13],[46,13],[47,13],[[45,45],45],[[46,46],46],[[47,47],47],[45,13],[46,13],[47,13],[[45,13],45],[[45,45],45],[[46,46],46],[[46,13],46],[[47,47],47],[[47,13],47],[[45,13]],[[45,45]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[[13,13],45],[[13,13,13],46],[[13,13,13,13],47],[45],[46],[47],[61,45],[61,45],[61,46],[61,46],[61,47],[61,47],[[45,13],45],[[45,45],45],[[46,46],46],[[46,13],46],[[47,47],47],[[47,13],47],[[45,45]],[[45,13]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[8,45,45],45],[[9,46,46],46],[[10,47,47],47],[[45,72]],[[45,69]],[[45,68]],[[45,67]],[[45,45]],[[45,13]],[[45,70]],[[45,38]],[[45,71]],[[45,66]],[[46,70]],[[46,66]],[[46,39]],[[46,71]],[[46,46]],[[46,67]],[[46,13]],[[46,72]],[[46,68]],[[46,69]],[[47,71]],[[47,66]],[[47,40]],[[47,69]],[[47,67]],[[47,13]],[[47,70]],[[47,68]],[[47,47]],[[47,72]],[[45,72]],[[45,68]],[[45,45]],[[45,38]],[[45,70]],[[45,67]],[[45,69]],[[45,66]],[[45,71]],[[45,13]],[[46,67]],[[46,72]],[[46,71]],[[46,39]],[[46,70]],[[46,69]],[[46,13]],[[46,68]],[[46,46]],[[46,66]],[[47,72]],[[47,68]],[[47,67]],[[47,71]],[[47,70]],[[47,69]],[[47,13]],[[47,47]],[[47,66]],[[47,40]],[13,45],[13,46],[13,47],[[45,45],45],[[45,13],45],[[46,46],46],[[46,13],46],[[47,13],47],[[47,47],47],[[45,45]],[[45,13]],[[46,13]],[[46,46]],[[47,13]],[[47,47]],[61,45],[61,45],[61,46],[61,46],[61,47],[61,47],[45,[[41,[13]]]],[46,[[41,[13]]]],[47,[[41,[13]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[46,45],[47,46],[[],6],[42,[[6,[45]]]],[35,[[6,[45]]]],[38,[[6,[45]]]],[[],6],[36,[[6,[46]]]],[39,[[6,[46]]]],[43,[[6,[46]]]],[37,[[6,[47]]]],[44,[[6,[47]]]],[40,[[6,[47]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[13,13],45],[[13,13,13],46],[[13,13,13,13],47],0,[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,[60,[13]]]],[[46,[60,[13]]]],[[47,[60,[13]]]],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],0,0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,71],42],[[42,42],42],[[43,71],43],[[43,43],43],[[44,44],44],[[44,71],44],[[42,71]],[[42,42]],[[43,71]],[[43,43]],[[44,71]],[[44,44]],[42,31],[43,32],[44,33],[42,35],[43,36],[44,37],[42,38],[43,39],[44,40],[42,[[41,[71]]]],[43,[[41,[71]]]],[44,[[41,[71]]]],[42,[[41,[71]]]],[43,[[41,[71]]]],[44,[[41,[71]]]],[42,45],[43,46],[44,47],[42,16],[43,17],[43,18],[44,19],[[42,42]],[[42,71]],[[43,43]],[[43,71]],[[44,71]],[[44,44]],[[42,42]],[[42,71]],[[43,71]],[[43,43]],[[44,44]],[[44,71]],[[42,71]],[[42,42]],[[43,43]],[[43,71]],[[44,44]],[[44,71]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,42,42],42],[[43,43,43],43],[[44,44,44],44],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[42,42],8],[[43,43],9],[[44,44],10],[[42,42],8],[[43,43],9],[[44,44],10],[[42,42],8],[[43,43],9],[[44,44],10],[[42,42],8],[[43,43],9],[[44,44],10],[[42,42],8],[[43,43],9],[[44,44],10],[[42,42],8],[[43,43],9],[[44,44],10],[[43,43],43],[[],42],[[],43],[[],44],[[42,42],42],[[42,71],42],[[43,71],43],[[43,43],43],[[44,71],44],[[44,44],44],[[42,42]],[[42,71]],[[43,71]],[[43,43]],[[44,44]],[[44,71]],[[42,42],71],[[43,43],71],[[44,44],71],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],2],[[43,43],2],[[44,44],2],[[],2],[[],2],[[],2],[[42,71],43],[[43,71],44],[[42,3],4],[[42,3],4],[[43,3],4],[[43,3],4],[[44,3],4],[[44,3],4],[[]],[45,42],[[[41,[71]]],42],[[],42],[[[50,[71]]],42],[[[51,[71]]],42],[[[41,[71]]],43],[46,43],[[],43],[[[52,[71]]],43],[[[53,[71]]],43],[[]],[[],43],[[],44],[[]],[[],44],[47,44],[[],44],[[],44],[[],44],[[[59,[71]]],44],[[[41,[71]]],44],[[[41,[71]]],42],[[[41,[71]]],43],[[[41,[71]]],44],[[[60,[71]]],42],[[[60,[71]]],43],[[[60,[71]]],44],[[42,5]],[[43,5]],[[44,5]],[[42,14]],[[43,14]],[[44,14]],[[42,14]],[[43,14]],[[44,14]],[[]],[[]],[[]],[42,71],[43,71],[44,71],[[42,42],42],[[43,43],43],[[44,44],44],[42,71],[43,71],[44,71],[[42,42],42],[[43,43],43],[[44,44],44],[42,71],[43,71],[44,71],[[42,71],42],[[42,42],42],[[43,71],43],[[43,43],43],[[44,44],44],[[44,71],44],[[42,71]],[[42,42]],[[43,43]],[[43,71]],[[44,71]],[[44,44]],[[71,71],42],[[71,71,71],43],[[71,71,71,71],44],[42],[43],[44],[61,42],[61,42],[61,43],[61,43],[61,44],[61,44],[[42,71],42],[[42,42],42],[[43,71],43],[[43,43],43],[[44,71],44],[[44,44],44],[[42,71]],[[42,42]],[[43,43]],[[43,71]],[[44,71]],[[44,44]],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[8,42,42],42],[[9,43,43],43],[[10,44,44],44],[[42,38]],[[42,70]],[[42,72]],[[42,71]],[[42,13]],[[42,68]],[[42,69]],[[42,66]],[[42,45]],[[42,67]],[[43,46]],[[43,72]],[[43,68]],[[43,66]],[[43,71]],[[43,39]],[[43,69]],[[43,67]],[[43,13]],[[43,70]],[[44,13]],[[44,67]],[[44,66]],[[44,70]],[[44,69]],[[44,40]],[[44,72]],[[44,71]],[[44,68]],[[44,47]],[[42,68]],[[42,69]],[[42,13]],[[42,67]],[[42,72]],[[42,66]],[[42,71]],[[42,45]],[[42,70]],[[42,38]],[[43,13]],[[43,68]],[[43,71]],[[43,70]],[[43,67]],[[43,72]],[[43,39]],[[43,46]],[[43,66]],[[43,69]],[[44,70]],[[44,72]],[[44,47]],[[44,40]],[[44,69]],[[44,67]],[[44,71]],[[44,13]],[[44,68]],[[44,66]],[71,42],[71,43],[71,44],[[42,71],42],[[42,42],42],[[43,43],43],[[43,71],43],[[44,44],44],[[44,71],44],[[42,71]],[[42,42]],[[43,43]],[[43,71]],[[44,71]],[[44,44]],[61,42],[61,42],[61,43],[61,43],[61,44],[61,44],[42,[[41,[71]]]],[43,[[41,[71]]]],[44,[[41,[71]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[43,42],[44,43],[[],6],[35,[[6,[42]]]],[[],6],[36,[[6,[43]]]],[[],6],[37,[[6,[44]]]],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[71,71],42],[[71,71,71],43],[[71,71,71,71],44],0,[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],42],[[43,43],43],[[44,44],44],[[42,[60,[71]]]],[[43,[60,[71]]]],[[44,[60,[71]]]],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],0,0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],0,0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44]],"c":[],"p":[[4,"EulerRot"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"BVec3A"],[3,"BVec4A"],[15,"u32"],[15,"usize"],[3,"String"],[3,"Vec2"],[3,"Vec3"],[3,"Vec3A"],[3,"Vec4"],[3,"Affine2"],[15,"f32"],[3,"Affine3A"],[3,"Mat3"],[3,"Mat2"],[3,"Mat3A"],[3,"Mat4"],[3,"Quat"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"DQuat"],[3,"I64Vec2"],[3,"I64Vec3"],[3,"I64Vec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[15,"array"],[3,"U64Vec2"],[3,"U64Vec3"],[3,"U64Vec4"],[3,"UVec2"],[3,"UVec3"],[3,"UVec4"],[3,"RowMatrix3"],[3,"ColumnMatrix3"],[3,"Point2"],[3,"Vector2"],[3,"Vector3"],[3,"Point3"],[3,"ColumnMatrix2"],[3,"RowMatrix2"],[3,"RowMatrix4"],[3,"ColumnMatrix4"],[3,"Quaternion"],[3,"Vector4"],[15,"slice"],[8,"Iterator"],[4,"Option"],[3,"DAffine2"],[15,"f64"],[3,"DAffine3"],[15,"i32"],[15,"u8"],[15,"i8"],[15,"i16"],[15,"i64"],[15,"u64"],[15,"u16"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"]],"a":{"cross":[991,2497,3456,4364],"determinant":[991,2497,3456,4364],"magnitude":[841,842,843,844,845,2385,2386,2387,2388],"magnitude2":[851,852,853,854,855,2393,2394,2395,2396,3419,3420,3421,4327,4328,4329,5692,5693,5694,6564,6565,6566],"mix":[856,857,858,859,860,2397,2398,2399,2400],"scale":[705,706,707,708,2277,2278,2279],"wedge":[991,2497,3456,4364]}},\
"gltf":{"doc":"glTF 2.0 loader","t":"DDGNNDNDNNDENDDDNNNDDNDNNDGDEDNNDNNNNNALALMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALFFFFLLLLLLLLLLLLLLLLLLABMALALALLLLLALLALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDEENNNIENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALKEDDNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDENEDNNNNLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKDDNENNEDNDNNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNENGEDENGNGNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLALLLLLLLLLLLIDDDDQDDLLLLLLLLLLLLKLLLLLKLLLLLKLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDDQDDLLLLLLLLLLLLKLLLLKLLLLKLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENEDDNNNNNNMLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLLLLLMMMMMMNNDDNEENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDNNNNNNNNNNENNLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLMLLLLLLLLLLLLLMMMMMDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNNLLLLLLLLLLLLLLLLLLLLLMMENNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDNNNNNDEDNNNDDENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEEEDGGGGGGEENNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLALLALLLLLLLLLLLLLLLLLLLLLLLLAIDQDDDDDDLLLLLLLLLLLLLLKLLLLLLKLLLLLLKLLLLLLKLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDQDLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLIDQDLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLIDDQDDLLLLLLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDQDDLLLLLLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDELLLLLLLLLLLLLLALLLLLLLLLLLLLMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLALLLLLLLLADLLLLLLLLLLLLLLLLLGDLNDNNNNEENNNNNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Accessor","Animation","Attribute","Base64","Binary","Buffer","BufferLength","Camera","Colors","Deserialize","Document","Error","ExternalReferenceInSliceImport","Glb","Gltf","Image","Image","Io","Joints","Material","Mesh","MissingBlob","Node","Normals","Positions","Primitive","Result","Scene","Semantic","Skin","Tangents","TexCoords","Texture","UnsupportedImageEncoding","UnsupportedImageFormat","UnsupportedScheme","Validation","Weights","accessor","accessors","animation","animations","bin","binary","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffers","camera","cameras","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default_scene","deref","deref_mut","document","eq","equivalent","extensions_required","extensions_used","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json","from_json_without_validation","from_reader","from_reader_without_validation","from_slice","from_slice_without_validation","hash","header","image","images","import","import_buffers","import_images","import_slice","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_json","iter","json","json","khr_lights_punctual","lights","material","materials","mesh","meshes","nodes","open","partial_cmp","samplers","scene","scenes","serialize","skin","skins","texture","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","views","actual","buffer","expected","Accessor","DataType","Dimensions","F32","I16","I8","Item","Iter","Mat2","Mat3","Mat4","Scalar","Sparse","Standard","U16","U32","U8","Vec2","Vec3","Vec4","as_gl_enum","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","count","data_type","deserialize","deserialize","dimensions","eq","eq","equivalent","equivalent","extras","fmt","fmt","fmt","from","from","from","from_slice","index","into","into","into","into_iter","last","max","min","multiplicity","name","next","normalized","nth","offset","serialize","serialize","size","size","size_hint","sparse","sparse","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","util","view","zero","IndexType","Indices","Sparse","U16","U32","U8","Values","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","count","extras","extras","extras","fmt","from","from","from","from","index_type","indices","into","into","into","into","offset","offset","size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","view","view","Item","ItemIter","Iter","Sparse","SparseIndicesIter","SparseIter","Standard","U16","U32","U8","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","from","from","from","from_slice","into","into","into","into_iter","into_iter","into_iter","last","new","new","new","next","next","next","nth","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zero","Animation","Channel","CubicSpline","Interpolation","Linear","MorphTargetWeights","Property","Reader","Rotation","Sampler","Scale","Step","Target","Translation","animation","animation","animation","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","equivalent","extras","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","index","input","interpolation","into","into","into","into","into","into","iter","name","node","output","property","reader","sampler","samplers","serialize","serialize","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","util","Channels","Samplers","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","count","fmt","fmt","from","from","into","into","into_iter","into_iter","last","last","next","next","nth","nth","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","F32","F32","I16","I16","I8","I8","MorphTargetWeights","MorphTargetWeights","ReadInputs","ReadOutputs","Reader","Rotations","Rotations","Scales","Scales","Translations","Translations","U16","U16","U8","U8","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","into","into","into","into_f32","into_f32","into_i16","into_i16","into_i8","into_i8","into_u16","into_u16","into_u8","into_u8","morph_target_weights","read_inputs","read_outputs","rotations","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Cast","CastingIter","F32","I16","I8","Output","U16","U8","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_f32","cast_f32","cast_f32","cast_f32","cast_f32","cast_f32","cast_i16","cast_i16","cast_i16","cast_i16","cast_i16","cast_i16","cast_i8","cast_i8","cast_i8","cast_i8","cast_i8","cast_i8","cast_u16","cast_u16","cast_u16","cast_u16","cast_u16","cast_u16","cast_u8","cast_u8","cast_u8","cast_u8","cast_u8","cast_u8","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","Cast","CastingIter","F32","I16","I8","Output","U16","U8","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_f32","cast_f32","cast_f32","cast_f32","cast_f32","cast_i16","cast_i16","cast_i16","cast_i16","cast_i16","cast_i8","cast_i8","cast_i8","cast_i8","cast_i8","cast_u16","cast_u16","cast_u16","cast_u16","cast_u16","cast_u8","cast_u8","cast_u8","cast_u8","cast_u8","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","Bin","ChunkLength","ChunkType","ChunkType","Error","Glb","Header","Io","Json","Length","Magic","UnknownChunkType","Version","bin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from_reader","from_slice","header","into","into","into","json","length","magic","to_owned","to_owned","to_string","to_vec","to_writer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","length","length","length_read","length_read","ty","ArrayBuffer","Bin","Buffer","Data","ElementArrayBuffer","Source","Target","Uri","View","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","eq","equivalent","extras","extras","fmt","fmt","fmt","fmt","from","from","from","from","from_source","from_source_and_blob","index","index","into","into","into","into","length","length","name","name","offset","serialize","source","stride","target","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Camera","Orthographic","Orthographic","Perspective","Perspective","Projection","aspect_ratio","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","extras","extras","extras","fmt","fmt","fmt","from","from","from","index","into","into","into","name","projection","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xmag","yfov","ymag","zfar","zfar","znear","znear","Data","Format","Image","R16","R16G16","R16G16B16","R16G16B16A16","R32G32B32A32FLOAT","R32G32B32FLOAT","R8","R8G8","R8G8B8","R8G8B8A8","Source","Uri","View","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","equivalent","extras","fmt","fmt","fmt","format","from","from","from","from_source","hash","height","index","into","into","into","name","pixels","source","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","mime_type","mime_type","uri","view","Accessors","Animations","Buffers","Cameras","ExtensionsRequired","ExtensionsUsed","Images","Lights","Materials","Meshes","Nodes","Samplers","Scenes","Skins","Textures","Views","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","last","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Directional","Kind","Light","Point","Spot","borrow","borrow","borrow_mut","borrow_mut","color","extras","from","from","index","intensity","into","into","kind","name","range","try_from","try_from","try_into","try_into","type_id","type_id","inner_cone_angle","outer_cone_angle","AlphaMode","Blend","Mask","Material","NormalTexture","OcclusionTexture","Opaque","PbrMetallicRoughness","alpha_cutoff","alpha_mode","as_ref","as_ref","base_color_factor","base_color_texture","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","double_sided","emissive_factor","emissive_texture","eq","equivalent","extras","extras","extras","extras","fmt","from","from","from","from","index","into","into","into","into","metallic_factor","metallic_roughness_texture","name","normal_texture","occlusion_texture","pbr_metallic_roughness","roughness_factor","scale","serialize","strength","tex_coord","tex_coord","texture","texture","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Attribute","BoundingBox","Bounds","Colors","Joints","LineLoop","LineStrip","Lines","Mesh","Mode","MorphTarget","Normals","Points","Positions","Primitive","Reader","Semantic","Tangents","TexCoords","TriangleFan","TriangleStrip","Triangles","Weights","as_gl_enum","attributes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deserialize","eq","eq","equivalent","extras","extras","fmt","fmt","fmt","fmt","from","from","from","from","get","index","index","indices","into","into","into","into","iter","material","max","min","mode","morph_targets","name","normals","positions","primitives","read_colors","read_indices","read_joints","read_morph_targets","read_normals","read_positions","read_tangents","read_tex_coords","read_weights","reader","serialize","tangents","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","util","weights","Attributes","MorphTargets","Primitives","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","count","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","last","last","next","next","next","nth","nth","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","F32","F32","ReadColors","ReadIndices","ReadJoints","ReadMorphTargets","ReadNormalDisplacements","ReadNormals","ReadPositionDisplacements","ReadPositions","ReadTangentDisplacements","ReadTangents","ReadTexCoords","ReadWeights","RgbF32","RgbU16","RgbU8","RgbaF32","RgbaU16","RgbaU8","U16","U16","U16","U16","U32","U8","U8","U8","U8","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","indices","into","into","into","into","into","into","into_f32","into_f32","into_iter","into_rgb_f32","into_rgb_u16","into_rgb_u8","into_rgba_f32","into_rgba_u16","into_rgba_u8","into_u16","into_u16","into_u16","into_u32","into_u8","into_u8","joints","next","size_hint","tex_coords","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","weights","Cast","CastingIter","Output","RgbF32","RgbU16","RgbU8","RgbaF32","RgbaU16","RgbaU8","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_rgb_f32","cast_rgb_f32","cast_rgb_f32","cast_rgb_f32","cast_rgb_f32","cast_rgb_f32","cast_rgb_f32","cast_rgb_u16","cast_rgb_u16","cast_rgb_u16","cast_rgb_u16","cast_rgb_u16","cast_rgb_u16","cast_rgb_u16","cast_rgb_u8","cast_rgb_u8","cast_rgb_u8","cast_rgb_u8","cast_rgb_u8","cast_rgb_u8","cast_rgb_u8","cast_rgba_f32","cast_rgba_f32","cast_rgba_f32","cast_rgba_f32","cast_rgba_f32","cast_rgba_f32","cast_rgba_f32","cast_rgba_u16","cast_rgba_u16","cast_rgba_u16","cast_rgba_u16","cast_rgba_u16","cast_rgba_u16","cast_rgba_u16","cast_rgba_u8","cast_rgba_u8","cast_rgba_u8","cast_rgba_u8","cast_rgba_u8","cast_rgba_u8","cast_rgba_u8","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","Cast","CastingIter","Output","U32","borrow","borrow","borrow_mut","borrow_mut","cast_u16","cast_u16","cast_u32","cast_u32","cast_u8","cast_u8","clone","clone","clone_into","clone_into","count","fmt","fmt","from","from","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","Cast","CastingIter","Output","U16","borrow","borrow","borrow_mut","borrow_mut","cast_u16","cast_u16","cast_u8","cast_u8","clone","clone","clone_into","clone_into","count","fmt","fmt","from","from","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","Cast","CastingIter","F32","Output","U16","U8","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_f32","cast_f32","cast_f32","cast_f32","cast_u16","cast_u16","cast_u16","cast_u16","cast_u8","cast_u8","cast_u8","cast_u8","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap","Cast","CastingIter","F32","Output","U16","U8","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_f32","cast_f32","cast_f32","cast_f32","cast_u16","cast_u16","cast_u16","cast_u16","cast_u8","cast_u8","cast_u8","cast_u8","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","last","next","nth","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap","Decomposed","Matrix","Node","Scene","Transform","borrow","borrow_mut","camera","children","clone","clone_into","decomposed","extras","extras","fmt","from","index","index","into","iter","light","matrix","mesh","name","name","nodes","skin","to_owned","transform","try_from","try_into","type_id","weights","matrix","rotation","scale","translation","Children","Nodes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","fmt","fmt","from","from","into","into","into_iter","into_iter","last","next","next","nth","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Reader","Skin","borrow","borrow_mut","clone","clone_into","extras","fmt","from","index","into","inverse_bind_matrices","iter","joints","name","reader","skeleton","to_owned","try_from","try_into","type_id","util","Joints","borrow","borrow_mut","clone","clone_into","count","fmt","from","into","into_iter","last","next","nth","size_hint","to_owned","try_from","try_into","type_id","ReadInverseBindMatrices","Reader","read_inverse_bind_matrices","ClampToEdge","Info","Linear","Linear","LinearMipmapLinear","LinearMipmapNearest","MagFilter","MinFilter","MirroredRepeat","Nearest","Nearest","NearestMipmapLinear","NearestMipmapNearest","Repeat","Sampler","Texture","WrappingMode","as_gl_enum","as_gl_enum","as_gl_enum","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","index","index","into","into","into","into","into","mag_filter","min_filter","name","name","sampler","serialize","serialize","serialize","source","tex_coord","texture","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wrap_s","wrap_t"],"q":[[0,"gltf"],[286,"gltf::Error"],[289,"gltf::accessor"],[376,"gltf::accessor::sparse"],[427,"gltf::accessor::util"],[486,"gltf::animation"],[596,"gltf::animation::iter"],[632,"gltf::animation::util"],[696,"gltf::animation::util::morph_target_weights"],[807,"gltf::animation::util::rotations"],[913,"gltf::binary"],[968,"gltf::binary::Error"],[973,"gltf::buffer"],[1045,"gltf::camera"],[1098,"gltf::image"],[1159,"gltf::image::Source"],[1163,"gltf::iter"],[1451,"gltf::khr_lights_punctual"],[1477,"gltf::khr_lights_punctual::Kind"],[1479,"gltf::material"],[1550,"gltf::mesh"],[1655,"gltf::mesh::iter"],[1706,"gltf::mesh::util"],[1823,"gltf::mesh::util::colors"],[1958,"gltf::mesh::util::indices"],[1997,"gltf::mesh::util::joints"],[2034,"gltf::mesh::util::tex_coords"],[2103,"gltf::mesh::util::weights"],[2172,"gltf::scene"],[2205,"gltf::scene::Transform"],[2209,"gltf::scene::iter"],[2242,"gltf::skin"],[2264,"gltf::skin::iter"],[2282,"gltf::skin::util"],[2285,"gltf::texture"]],"d":["A typed view into a buffer view.","A keyframe animation.","Vertex attribute data.","Base 64 decoding error.","GLB parsing error.","A buffer points to binary data representing geometry, …","Buffer length does not match expected length.","A camera’s projection.  A node can reference a camera to …","RGB or RGBA vertex color.","JSON deserialization error.","glTF JSON wrapper.","Represents a runtime error.","An external file is referenced in a slice only import …","Binary glTF contents.","glTF JSON wrapper plus binary payload.","Image data used to create a texture.","Image decoding error.","Standard I/O error.","Joint indices.","The material appearance of a primitive.","A set of primitives to be rendered.","The <code>BIN</code> chunk of binary glTF is referenced but does not …","A node in the node hierarchy.","XYZ vertex normals.","XYZ vertex positions.","Geometry to be rendered with the given material.","Result type for convenience.","The root nodes of a scene.","Vertex attribute semantic name.","Joints and matrices defining a skin.","XYZW vertex tangents where the <code>w</code> component is a sign value …","UV texture co-ordinates.","A texture and its sampler.","Unsupported image encoding.","Unsupported image format.","Unsupported URI scheme.","glTF validation error.","Joint weights.","Accessors for reading vertex attributes from buffer views.","Returns an <code>Iterator</code> that visits the accessors of the glTF …","Animations, their channels, targets, and samplers.","Returns an <code>Iterator</code> that visits the animations of the glTF …","The optional BIN section of the <code>.glb</code> file.","Primitives for working with binary glTF.","The glTF binary payload in the case of binary glTF.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffers and buffer views.","Returns an <code>Iterator</code> that visits the pre-loaded buffers of …","Cameras and their projections.","Returns an <code>Iterator</code> that visits the cameras of the glTF …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the default scene, if provided.","","","The glTF JSON wrapper.","","","Returns the extensions required to load and render this …","Returns the extensions referenced in this .document file.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Loads glTF from pre-deserialized JSON.","Loads glTF from pre-deserialized JSON without performing …","Loads glTF from a reader.","Loads glTF from a reader without performing validation …","Loads glTF from a slice of bytes.","Loads glTF from a slice of bytes without performing …","","The header section of the <code>.glb</code> file.","Images that may be used by textures.","Returns an <code>Iterator</code> that visits the pre-loaded images of …","Import glTF 2.0 from the file system.","Import buffer data referenced by a glTF document.","Import image data referenced by a glTF document.","Import glTF 2.0 from a slice.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the glTF document.","Iterators for walking the glTF node hierarchy.","Contains (de)serializable data structures that match the …","The JSON section of the <code>.glb</code> file.","Support for the <code>KHR_lights_punctual</code> extension.","Returns an <code>Iterator</code> that visits the lights of the glTF …","Material properties of primitives.","Returns an <code>Iterator</code> that visits the materials of the glTF …","Meshes and their primitives.","Returns an <code>Iterator</code> that visits the meshes of the glTF …","Returns an <code>Iterator</code> that visits the nodes of the glTF …","Convenience function that loads glTF from the file system.","","Returns an <code>Iterator</code> that visits the samplers of the glTF …","The glTF node heirarchy.","Returns an <code>Iterator</code> that visits the scenes of the glTF …","","Mesh skinning primitives.","Returns an <code>Iterator</code> that visits the skins of the glTF …","Textures and their samplers.","Returns an <code>Iterator</code> that visits the textures of the glTF …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Iterator</code> that visits the pre-loaded buffer …","The number of bytes actually available.","The index of the offending buffer.","The expected buffer length in bytes.","A typed view into a buffer view.","The component data type.","Specifies whether an attribute, vector, or matrix.","Corresponds to <code>GL_FLOAT</code>.","Corresponds to <code>GL_SHORT</code>.","Corresponds to <code>GL_BYTE</code>.","Represents items that can be read by an <code>Accessor</code>.","General iterator for an accessor.","2x2 matrix.","3x3 matrix.","4x4 matrix.","Scalar quantity.","Iterator for accessor with sparse values.","Standard accessor iterator.","Corresponds to <code>GL_UNSIGNED_SHORT</code>.","Corresponds to <code>GL_UNSIGNED_INT</code>.","Corresponds to <code>GL_UNSIGNED_BYTE</code>.","2D vector.","3D vector.","4D vector.","Returns the corresponding <code>GLenum</code>.","","","","","","","","","","","","","","Returns the number of components within the buffer view - …","Returns the data type of components in the attribute.","","","Specifies if the attribute is a scalar, vector, or matrix.","","","","","Optional application specific data.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an object of this type from a byte slice.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the maximum value of each component in this …","Returns the minimum value of each component in this …","Returns the equivalent number of scalar quantities this …","Optional user-defined name for this object.","","Specifies whether integer data values should be normalized.","","Returns the offset relative to the start of the parent …","","","Returns the number of bytes this value represents.","Returns the size of each component that this accessor …","","Contains data structures for sparse storage.","Returns sparse storage of attributes that deviate from …","","","","","","","","","","","","","Utility functions.","Returns the buffer view this accessor reads from.","Create an object of this type that represents a zero value.","The index data type.","Indices of those attributes that deviate from their …","Sparse storage of attributes that deviate from their …","Corresponds to <code>GL_UNSIGNED_SHORT</code>.","Corresponds to <code>GL_UNSIGNED_INT</code>.","Corresponds to <code>GL_UNSIGNED_BYTE</code>.","Array of size <code>count * number_of_components</code> storing the …","","","","","","","","","","","Returns the number of attributes encoded in this sparse …","Optional application specific data.","Optional application specific data.","Optional application specific data.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The data type of each index.","Returns an index array of size <code>count</code> that points to those …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The offset relative to the start of the parent buffer view …","The offset relative to the start of the parent buffer view …","Returns the number of bytes this value represents.","","","","","","","","","","","","","","Returns an array of size <code>count * number_of_components</code>, …","Returns the buffer view containing the sparse indices.","Returns the buffer view containing the sparse values.","Represents items that can be read by an <code>Accessor</code>.","Visits the items in an <code>Accessor</code>.","General iterator for an accessor.","Iterator for accessor with sparse values.","Iterator over indices of sparse accessor.","Iterates over a sparse accessor.","Standard accessor iterator.","16-bit indices.","32-bit indices.","8-bit indices.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an object of this type from a byte slice.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Constructor.","Constructor.","Constructor.","","","","","","","","","","","","","","","","","","","Create an object of this type that represents a zero value.","A keyframe animation.","Targets an animation’s sampler at a node’s property.","Cubic spline interpolation.","Specifies an interpolation algorithm.","Linear interpolation.","Weights of morph targets.","Specifies a property to animate.","Animation channel reader.","XYZW rotation quaternion.","Defines a keyframe graph (but not its target).","XYZ scale vector.","Step interpolation.","The node and TRS property that an animation channel …","XYZ translation vector.","Returns the parent <code>Animation</code> struct.","Returns the parent <code>Animation</code> struct.","Returns the parent <code>Animation</code> struct.","","","","","","","","","","","","","Returns an <code>Iterator</code> over the animation channels.","","","","","","","","","","","","","","","","","","","","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the internal JSON index.","Returns the accessor containing the keyframe input values …","Returns the keyframe interpolation algorithm.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterators.","Optional user-defined name for this object.","Returns the target node.","Returns the accessor containing the keyframe output values.","Returns the node’s property to modify or the ‘weights…","Constructs an animation channel reader.","Returns the sampler in this animation used to compute the …","Returns an <code>Iterator</code> over the animation samplers.","","","Returns the node and property to target.","","","","","","","","","","","","","","","","","","","","","","","","","Utility functions.","An <code>Iterator</code> that visits the channels of an animation.","An <code>Iterator</code> that visits the samplers of an animation.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Rotations of type <code>[f32; 4]</code>.","Weights of type <code>f32</code>.","Rotations of type <code>[i16; 4]</code>.","Weights of type <code>i16</code>.","Rotations of type <code>[i8; 4]</code>.","Weights of type <code>i8</code>.","Morph-target weight animations.","Morph target animations.","Animation input sampler values of type <code>f32</code>.","Animation output sampler values.","Animation channel reader.","Rotation animations","Rotation animations.","Animation output sampler values of type <code>[f32; 3]</code>.","XYZ scales of type <code>[f32; 3]</code>.","Animation output sampler values of type <code>[f32; 3]</code>.","XYZ translations of type <code>[f32; 3]</code>.","Rotations of type <code>[u16; 4]</code>.","Weights of type <code>u16</code>.","Rotations of type <code>[u8; 4]</code>.","Weights of type <code>u8</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reinterpret rotations as f32.  Lossy if underlying …","Reinterpret morph weights as f32.  Lossy if underlying …","Reinterpret rotations as u16.  Lossy if underlying …","Reinterpret morph weights as u16.  Lossy if underlying …","Reinterpret rotations as u16.  Lossy if underlying …","Reinterpret morph weights as u16.  Lossy if underlying …","Reinterpret rotations as u16.  Lossy if underlying …","Reinterpret morph weights as u16.  Lossy if underlying …","Reinterpret rotations as u16.  Lossy if underlying …","Reinterpret morph weights as u16.  Lossy if underlying …","Casting iterator adapters for morph target weights.","Visits the input samples of a channel.","Visits the output samples of a channel.","Casting iterator adapters for rotations.","","","","","","","","","","","","Trait for types which describe casting behaviour.","Casting iterator for <code>MorphTargetWeights</code>.","Type which describes how to cast any weight into f32.","Type which describes how to cast any weight into i16.","Type which describes how to cast any weight into i8.","Output type.","Type which describes how to cast any weight into u16.","Type which describes how to cast any weight into u8.","","","","","","","","","","","","","Cast from f32.","","","","","","Cast from i16.","","","","","","Cast from i8.","","","","","","Cast from u16.","","","","","","Cast from u8.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwrap underlying <code>MorphTargetWeights</code> object.","Trait for types which describe casting behaviour.","Casting iterator for <code>Rotations</code>.","Type which describes how to cast any weight into f32.","Type which describes how to cast any weight into i16.","Type which describes how to cast any weight into i8.","Output type.","Type which describes how to cast any weight into u16.","Type which describes how to cast any weight into u8.","","","","","","","","","","","","","Cast from f32.","","","","","Cast from i16.","","","","","Cast from i8.","","","","","Cast from u16.","","","","","Cast from u8.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwrap underlying <code>Rotations</code> object.","<code>BIN</code> chunk.","Stream ended before we could read the chunk.","GLB chunk type.","Chunk of this chunkType was not expected.","Represents a Glb loader error.","Binary glTF contents.","The header section of a .glb file.","Io error occured.","<code>JSON</code> chunk.","Length specified in GLB header exceeeds that of slice.","Magic says that file is not glTF.","Unknown chunk type.","Unsupported version.","The optional BIN section of the <code>.glb</code> file.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reads binary glTF from a generic stream of data.","Splits loaded GLB into its three chunks.","The header section of the <code>.glb</code> file.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The JSON section of the <code>.glb</code> file.","Must match the length of the parent .glb file.","Must be <code>b&quot;glTF&quot;</code>.","","","","Writes binary glTF to a byte vector.","Writes binary glTF to a writer.","","","","","","","","","","Must be <code>2</code>.","length specified in GLB header.","chunkLength.","Actual length of data read.","Actual length of data read.","chunkType error happened at.","Corresponds to <code>GL_ARRAY_BUFFER</code>.","Buffer data is contained in the <code>BIN</code> section of binary glTF.","A buffer points to binary data representing geometry, …","Buffer data belonging to an imported glTF asset.","Corresponds to <code>GL_ELEMENT_ARRAY_BUFFER</code>.","Describes a buffer data source.","Specifies the target a GPU buffer should be bound to.","Buffer data is contained in an external data source.","A view into a buffer generally representing a subset of …","","","","","","","","","Returns the parent <code>Buffer</code>.","","","","","","","","","","","","Optional application specific data.","Optional application specific data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a buffer data object by reading the given source.","Construct a buffer data object by reading the given source.","Returns the internal JSON index.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The length of the buffer in bytes.","Returns the length of the buffer view in bytes.","Optional user-defined name for this object.","Optional user-defined name for this object.","Returns the offset into the parent buffer in bytes.","","Returns the buffer data source.","Returns the stride in bytes between vertex attributes or …","Optional target the buffer should be bound to.","","","","","","","","","","","","","","","","","A camera’s projection.  A node can reference a camera to …","Values for an orthographic camera projection.","Describes an orthographic projection.","Values for a perspective camera projection.","Describes a perspective projection.","A camera’s projection.","Aspect ratio of the field of view.","","","","","","","","","","","","","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional user-defined name for this object.","Returns the camera’s projection.","","","","","","","","","","","","","The horizontal magnification of the view.","The vertical field of view in radians.","The vertical magnification of the view.","The distance to the far clipping plane.","The distance to the far clipping plane.","The distance to the near clipping plane.","The distance to the near clipping plane.","Image data belonging to an imported glTF asset.","Format of image pixel data.","Image data used to create a texture.","Red only (16 bits).","Red, green (16 bits).","Red, green, blue (16 bits).","Red, green, blue, alpha (16 bits).","Red, green, blue, alpha (32 bits float)","Red, green, blue (32 bits float)","Red only.","Red, green.","Red, green, blue.","Red, green, blue, alpha.","Describes an image data source.","Image data is contained in an external data source.","Image data is contained in a buffer view.","","","","","","","","","","","","","","","Optional application specific data.","","","","The image pixel data format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct an image data object by reading the given source.","","The image height in pixels.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional user-defined name for this object.","The image pixel data (8 bits per channel).","Returns the image data source.","","","","","","","","","","","","","The image width in pixels.","The image data MIME type.","The image data MIME type, if provided.","The URI of the external data source.","The buffer view containing the encoded image data.","An <code>Iterator</code> that visits every accessor in a glTF asset.","An <code>Iterator</code> that visits every animation in a glTF asset.","An <code>Iterator</code> that visits every buffer in a glTF asset.","An <code>Iterator</code> that visits every camera in a glTF asset.","An <code>Iterator</code> that visits extension strings required by a …","An <code>Iterator</code> that visits extension strings used by a glTF …","An <code>Iterator</code> that visits every pre-loaded image in a glTF …","An <code>Iterator</code> that visits every light in a glTF asset.","An <code>Iterator</code> that visits every material in a glTF asset.","An <code>Iterator</code> that visits every mesh in a glTF asset.","An <code>Iterator</code> that visits every node in a glTF asset.","An <code>Iterator</code> that visits every sampler in a glTF asset.","An <code>Iterator</code> that visits every scene in a glTF asset.","An <code>Iterator</code> that visits every skin in a glTF asset.","An <code>Iterator</code> that visits every texture in a glTF asset.","An <code>Iterator</code> that visits every buffer view in a glTF asset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Directional lights are light sources that act as though …","Light subcategory.","A light in the scene.","Point lights emit light in all directions from their …","Spot lights emit light in a cone in the direction of the …","","","","","Color of the light source.","Optional application specific data.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the internal JSON index.","Intensity of the light source. <code>point</code> and <code>spot</code> lights use …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies the light subcategory.","Optional user-defined name for this object.","A distance cutoff at which the light’s intensity may be …","","","","","","","Angle in radians from centre of spotlight where falloff …","Angle in radians from centre of spotlight where falloff …","The alpha rendering mode of a material.","The alpha value is used, to determine the transparency of …","The rendered output is either fully opaque or fully …","The material appearance of a primitive.","Defines the normal texture of a material.","Defines the occlusion texture of a material.","The alpha value is ignored and the rendered output is …","A set of parameter values that are used to define the …","The optional alpha cutoff value of the material.","The alpha rendering mode of the material.  The material’…","","","Returns the material’s base color factor.","Returns the base color texture. The texture contains …","","","","","","","","","","","","Specifies whether the material is double-sided.","The emissive color of the material.","The emissive map texture.","","","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the internal JSON index if this <code>Material</code> was …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the metalness factor of the material.","The metallic-roughness texture.","Optional user-defined name for this object.","A tangent space normal map.","The occlusion map texture.","Parameter values that define the metallic-roughness …","Returns the roughness factor of the material.","Returns the scalar multiplier applied to each normal …","","Returns the scalar multiplier controlling the amount of …","The set index of the texture’s <code>TEXCOORD</code> attribute.","Returns the set index of the texture’s <code>TEXCOORD</code> …","Returns the referenced texture.","Returns the referenced texture.","","","","","","","","","","","","","","Vertex attribute data.","Vertex position bounding box.","The minimum and maximum values for a generic accessor.","RGB or RGBA vertex color.","Joint indices.","Corresponds to <code>GL_LINE_LOOP</code>.","Corresponds to <code>GL_LINE_STRIP</code>.","Corresponds to <code>GL_LINES</code>.","A set of primitives to be rendered.","The type of primitives to render.","A single morph target for a mesh primitive.","XYZ vertex normals.","Corresponds to <code>GL_POINTS</code>.","XYZ vertex positions.","Geometry to be rendered with the given material.","Mesh primitive reader.","Vertex attribute semantic name.","XYZW vertex tangents where the <code>w</code> component is a sign value …","UV texture co-ordinates.","Corresponds to <code>GL_TRIANGLE_FAN</code>.","Corresponds to <code>GL_TRIANGLE_STRIP</code>.","Corresponds to <code>GL_TRIANGLES</code>.","Joint weights.","Returns the equivalent <code>GLenum</code>.","Returns an <code>Iterator</code> that visits the vertex attributes.","","","","","","","","","Returns the bounds of the <code>POSITION</code> vertex attribute.","","","","","","","","","","","","","","Optional application specific data.","Optional application specific data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the accessor with the given semantic.","Returns the internal JSON index.","Returns the internal JSON index.","Returns the accessor containing the primitive indices, if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterators.","Returns the material to apply to this primitive when …","Maximum value.","Minimum value.","The type of primitives to render.","Returns an <code>Iterator</code> that visits the morph targets of the …","Optional user-defined name for this object.","Returns the XYZ vertex normal displacements.","Returns the XYZ vertex position displacements.","Defines the geometry to be renderered with a material.","Visits the vertex colors of a primitive.","Visits the vertex draw sequence of a primitive.","Visits the joint indices of the primitive.","Visits the morph targets of the primitive.","Visits the vertex normals of a primitive.","Visits the vertex positions of a primitive.","Visits the vertex tangents of a primitive.","Visits the vertex texture co-ordinates of a primitive.","Visits the joint weights of the primitive.","Constructs the primitive reader.","","Returns the XYZ vertex tangent displacements.","","","","","","","","","","","","","","","","","Utility functions.","Defines the weights to be applied to the morph targets.","An <code>Iterator</code> that visits the attributes of a <code>Primitive</code>.","An <code>Iterator</code> that visits the morph targets of a <code>Primitive</code>.","An <code>Iterator</code> that visits the primitives of a <code>Mesh</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","UV texture co-ordinates of type <code>[f32; 2]</code>.","Weights of type <code>[f32; 4]</code>.","Vertex colors.","Index data.","Vertex joints.","Morph targets.","XYZ vertex normal displacements of type <code>[f32; 3]</code>.","XYZ vertex normals of type <code>[f32; 3]</code>.","XYZ vertex position displacements of type <code>[f32; 3]</code>.","XYZ vertex positions of type <code>[f32; 3]</code>.","XYZ vertex tangent displacements.","XYZW vertex tangents of type <code>[f32; 4]</code> where the <code>w</code> …","UV texture co-ordinates.","Weights.","RGB vertex color of type <code>[f32; 3]</code>.","RGB vertex color of type <code>[u16; 3]&gt;</code>.","RGB vertex color of type <code>[u8; 3]&gt;</code>.","RGBA vertex color of type <code>[f32; 4]</code>.","RGBA vertex color of type <code>[u16; 4]&gt;</code>.","RGBA vertex color of type <code>[u8; 4]&gt;</code>.","Index data of type U16","Joints of type <code>[u16; 4]</code>. Refer to the documentation on …","UV texture co-ordinates of type <code>[u16; 2]&gt;</code>.","Weights of type <code>[u16; 4]</code>.","Index data of type U32","Index data of type U8","Joints of type <code>[u8; 4]</code>. Refer to the documentation on …","UV texture co-ordinates of type <code>[u8; 2]&gt;</code>.","Weights of type <code>[u8; 4]</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Casting iterator adapters for colors.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Casting iterator adapters for vertex indices.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reinterpret texture coordinates as f32.  Lossy if the …","Reinterpret weights as f32.  Lossy if the underlying …","","Reinterpret colors as RGB f32, discarding alpha, if …","Reinterpret colors as RGB u16, discarding alpha, if …","Reinterpret colors as RGB u8, discarding alpha, if …","Reinterpret colors as RGBA f32, with default alpha 1.0.  …","Reinterpret colors as RGBA u16, with default alpha 65535.  …","Reinterpret colors as RGBA u8, with default alpha 255.  …","Reinterpret joints as u16, which can fit any possible …","Reinterpret texture coordinates as u16.  Lossy if the …","Reinterpret weights as u16.  Lossy if the underlying …","Reinterpret indices as u32, which can fit any possible …","Reinterpret texture coordinates as u8.  Lossy if the …","Reinterpret weights as u8.  Lossy if the underlying …","Casting iterator adapters for joint indices.","","","Casting iterator adapters for texture co-ordinates.","","","","","","","","","","","","","","","","","","","","","","","","","Casting iterator adapters for node weights.","Trait for types which describe casting behaviour.","Casting iterator for <code>Colors</code>.","Output type.","Type which describes how to cast any color into RGB f32.","Type which describes how to cast any color into RGB u16.","Type which describes how to cast any color into RGB u8.","Type which describes how to cast any color into RGBA f32.","Type which describes how to cast any color into RGBA u16.","Type which describes how to cast any color into RGBA u8.","","","","","","","","","","","","","","","Cast from RGB f32.","","","","","","","Cast from RGB u16.","","","","","","","Cast from RGB u8.","","","","","","","Cast from RGBA f32.","","","","","","","Cast from RGBA u16.","","","","","","","Cast from RGBA u8.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwrap underlying <code>ReadColors</code> object.","Trait for types which describe casting behaviour.","Casting iterator for <code>Indices</code>.","Output type.","Type which describes how to cast any index into u32.","","","","","Cast from u16.","","Cast from u32.","","Cast from u8.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Unwrap underlying <code>Indices</code> object.","Trait for types which describe casting behaviour.","Casting iterator for <code>Joints</code>.","Output type.","Type which describes how to cast any joint into u16.","","","","","Cast from u16.","","Cast from u8.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Unwrap underlying <code>Joints</code> object.","Trait for types which describe casting behaviour.","Casting iterator for <code>TexCoords</code>.","Type which describes how to cast any texture coordinate …","Output type.","Type which describes how to cast any texture coordinate …","Type which describes how to cast any texture coordinate …","","","","","","","","","Cast from f32 pair.","","","","Cast from u16 pair.","","","","Cast from u8 pair.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Unwrap underlying <code>TexCoords</code> object.","Trait for types which describe casting behaviour.","Casting iterator for <code>Weights</code>.","Type which describes how to cast any weight into f32.","Output type.","Type which describes how to cast any weight into u16.","Type which describes how to cast any weight into u8.","","","","","","","","","Cast from f32.","","","","Cast from u16.","","","","Cast from u8.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Unwrap underlying <code>Weights</code> object.","Decomposed TRS properties.","4x4 transformation matrix in column-major order.","A node in the node hierarchy.","The root nodes of a scene.","The transform for a <code>Node</code>.","","","Returns the camera referenced by this node.","Returns an <code>Iterator</code> that visits the node’s children.","","","Returns a decomposed representation of this transform.","Optional application specific data.","Optional application specific data.","","Returns the argument unchanged.","Returns the internal JSON index.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Iterators.","Returns the light at this node as defined by the …","Returns the matrix representation of this transform.","Returns the mesh referenced by this node.","Optional user-defined name for this object.","Optional user-defined name for this object.","Returns an <code>Iterator</code> that visits each root node of the …","Returns the skin referenced by this node.","","Returns the node’s transform.","","","","Returns the weights of the instantiated morph target.","4x4 matrix.","<code>[x, y, z, w]</code> quaternion, where <code>w</code> is the scalar.","<code>[x, y, z]</code> vector.","<code>[x, y, z]</code> vector.","An <code>Iterator</code> that visits the children of a node.","An <code>Iterator</code> that visits the nodes in a scene.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Skin reader.","Joints and matrices defining a skin.","","","","","Optional application specific data.","","Returns the argument unchanged.","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Returns the accessor containing the 4x4 inverse-bind …","Iterators.","Returns an <code>Iterator</code> that visits the skeleton nodes used as …","Optional user-defined name for this object.","Constructs a skin reader.","Returns the node used as the skeleton root. When <code>None</code>, …","","","","","Utility functions.","An <code>Iterator</code> that visits the joints of a <code>Skin</code>.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Inverse Bind Matrices of type <code>[[f32; 4]; 4]</code>.","Skin reader.","Returns an <code>Iterator</code> that reads the inverse bind matrices of","Corresponds to <code>GL_CLAMP_TO_EDGE</code>.","A reference to a <code>Texture</code>.","Corresponds to <code>GL_LINEAR</code>.","Corresponds to <code>GL_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_NEAREST</code>.","Magnification filter.","Minification filter.","Corresponds to <code>GL_MIRRORED_REPEAT</code>.","Corresponds to <code>GL_NEAREST</code>.","Corresponds to <code>GL_NEAREST</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_NEAREST</code>.","Corresponds to <code>GL_REPEAT</code>.","Texture sampler properties for filtering and wrapping …","A texture and its sampler.","Texture co-ordinate wrapping mode.","OpenGL enum","Returns the corresponding OpenGL enum value.","Returns the corresponding OpenGL enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the internal JSON index if this <code>Sampler</code> was …","Returns the internal JSON index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Magnification filter.","Minification filter.","Optional user-defined name for this object.","Optional user-defined name for this object.","Returns the sampler used by this texture.","","","","Returns the image used by this texture.","The set index of the texture’s <code>TEXCOORD</code> attribute.","Returns the referenced <code>Texture</code>.","","","","","","","","","","","","","","","","","","","","","<code>s</code> wrapping mode.","<code>t</code> wrapping mode."],"i":[0,0,0,28,28,0,28,0,20,28,0,0,28,0,0,0,28,28,20,0,0,28,0,20,20,0,0,0,0,0,20,20,0,28,28,28,28,20,0,1,0,1,8,0,19,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,0,1,0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,20,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,20,20,1,19,19,19,20,20,1,1,6,7,8,9,10,11,12,13,14,15,16,17,18,28,28,19,1,20,6,7,8,9,10,11,12,13,14,15,16,17,18,28,28,28,28,28,28,19,1,20,1,1,19,19,19,19,20,8,0,1,0,0,0,0,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,1,0,0,8,0,1,0,1,0,1,1,19,20,1,0,1,20,0,1,0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,20,28,20,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,6,7,8,9,10,11,12,13,14,15,16,17,18,28,19,1,20,1,181,181,181,0,0,0,60,60,60,0,0,62,62,62,62,65,65,60,60,60,62,62,62,60,60,62,65,60,62,65,60,62,65,60,62,65,65,6,6,60,62,6,60,62,60,62,6,60,62,65,60,62,65,64,6,60,62,65,65,65,6,6,62,6,65,6,65,6,60,62,60,6,65,0,6,60,62,65,60,62,65,60,62,65,60,62,65,0,6,64,0,0,0,74,74,74,0,75,72,76,74,75,72,76,74,74,74,72,75,72,76,74,75,72,76,74,75,72,75,72,76,74,75,76,74,74,75,72,76,74,75,72,76,74,75,72,76,74,72,75,76,0,0,0,65,0,0,65,77,77,77,77,78,79,77,78,79,77,78,79,77,78,79,79,77,78,79,77,78,79,64,77,78,79,77,78,79,79,65,78,79,77,78,79,79,78,79,77,78,79,77,78,79,77,78,79,77,78,79,64,0,0,85,0,85,86,0,0,86,0,86,85,0,86,81,82,83,85,86,87,81,82,83,85,86,87,81,82,83,7,85,86,87,81,82,83,85,86,87,81,82,83,85,85,86,85,86,85,86,7,81,82,83,85,86,87,81,82,83,85,86,87,81,82,83,7,82,82,85,86,87,81,82,83,0,7,83,82,83,81,81,7,85,86,81,85,86,87,81,82,83,85,86,87,81,82,83,85,86,87,81,82,83,85,86,87,81,82,83,0,0,0,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,84,88,89,90,89,90,89,90,0,104,0,0,0,0,104,0,104,0,104,89,90,89,90,104,89,90,104,89,90,89,90,89,90,89,90,104,89,90,104,89,90,89,90,89,90,89,90,89,90,89,90,0,87,87,0,89,90,104,89,90,104,89,90,104,89,90,0,0,0,0,0,109,0,0,94,98,102,96,100,93,94,98,102,96,100,93,109,98,102,96,100,93,109,98,102,96,100,93,109,98,102,96,100,93,109,98,102,96,100,93,109,98,102,96,100,93,94,98,102,96,100,93,94,98,102,96,100,93,94,94,98,102,96,100,93,94,98,102,96,100,93,94,98,102,96,100,93,94,94,94,94,94,94,98,102,96,100,93,94,98,102,96,100,93,94,98,102,96,100,93,94,98,102,96,100,93,94,0,0,0,0,0,111,0,0,92,97,101,95,99,91,92,97,101,95,99,91,111,97,95,99,91,111,97,95,99,91,111,97,95,99,91,111,97,95,99,91,111,97,95,99,91,92,97,101,95,99,91,92,97,101,95,99,91,92,92,97,101,95,99,91,92,97,101,95,99,91,92,97,101,95,99,91,92,92,92,92,92,92,97,101,95,99,91,92,97,101,95,99,91,92,97,101,95,99,91,92,97,101,95,99,91,92,113,32,0,32,0,0,0,32,113,32,32,32,32,8,32,112,113,32,112,113,112,113,112,113,32,32,112,113,32,112,113,8,8,8,32,112,113,8,112,112,112,113,32,8,8,32,112,113,32,112,113,32,112,113,112,182,183,182,183,183,115,116,0,0,115,0,0,116,0,115,73,116,46,115,73,116,46,73,115,73,116,46,115,73,116,46,46,115,115,9,73,115,73,116,46,115,73,116,46,46,46,9,73,115,73,116,46,9,73,9,73,73,115,9,73,73,115,73,116,46,115,73,116,46,115,73,116,46,115,73,116,46,0,0,118,0,118,0,117,118,119,117,118,119,117,118,119,117,118,119,117,10,119,117,118,119,117,118,119,117,10,118,119,117,10,10,118,119,117,118,119,117,118,119,117,118,119,117,119,117,119,119,117,119,117,0,0,0,120,120,120,120,120,120,120,120,120,120,0,121,121,120,121,47,120,121,47,120,121,47,120,121,47,120,120,11,120,121,47,47,120,121,47,47,120,47,11,120,121,47,11,47,11,120,121,47,120,121,47,120,121,47,120,121,47,47,184,185,185,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,25,24,2,3,4,59,5,43,48,49,50,51,52,53,55,56,123,0,0,123,123,122,123,122,123,122,122,122,123,122,122,122,123,122,122,122,122,123,122,123,122,123,186,186,0,124,124,0,0,0,124,0,12,12,125,126,127,127,127,125,126,124,127,125,126,124,124,124,124,12,12,12,124,124,127,125,126,12,124,127,125,126,124,12,127,125,126,124,127,127,12,12,12,12,127,125,124,126,125,126,125,126,124,127,125,126,124,127,125,126,124,127,125,126,124,0,0,0,20,20,129,129,129,0,0,0,20,129,20,0,0,0,20,20,129,129,129,20,129,14,132,133,134,129,132,133,134,129,14,132,133,134,129,132,133,134,129,129,129,132,129,129,13,14,132,133,134,129,132,133,134,129,14,13,14,14,132,133,134,129,0,14,132,132,14,14,13,133,133,13,134,134,134,134,134,134,134,134,134,14,129,133,132,133,134,129,132,133,134,129,132,133,134,129,132,133,134,129,0,13,0,0,0,136,130,137,136,130,137,136,130,137,136,130,137,136,137,136,130,137,136,130,137,136,130,137,136,130,137,136,137,136,130,137,136,137,136,130,137,136,130,137,136,130,137,136,130,137,136,130,137,145,146,0,0,0,0,0,0,0,0,0,0,0,0,138,138,138,138,138,138,139,140,145,146,139,139,140,145,146,138,139,140,145,146,141,138,139,140,145,146,141,138,139,140,145,146,141,138,139,140,145,146,141,0,138,139,140,145,146,141,138,139,140,145,146,141,0,138,139,140,145,146,141,145,146,141,138,138,138,138,138,138,140,145,146,139,145,146,0,141,141,0,138,139,140,145,146,141,138,139,140,145,146,141,138,139,140,145,146,141,138,139,140,145,146,141,0,0,0,166,0,0,0,0,0,0,152,154,153,151,157,156,155,152,154,153,151,157,156,155,166,154,153,151,157,156,155,166,154,153,151,157,156,155,166,154,153,151,157,156,155,166,154,153,151,157,156,155,166,154,153,151,157,156,155,166,154,153,151,157,156,155,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,152,152,152,152,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,154,153,151,157,156,155,152,0,0,167,0,163,162,163,162,167,162,167,162,167,162,163,162,163,162,163,163,162,163,162,163,162,163,163,163,163,163,163,162,163,162,163,162,163,162,163,0,0,168,0,159,158,159,158,168,158,168,158,159,158,159,158,159,159,158,159,158,159,158,159,159,159,159,159,159,158,159,158,159,158,159,158,159,0,0,0,169,0,0,148,164,160,147,148,164,160,147,169,164,160,147,169,164,160,147,169,164,160,147,148,164,160,147,148,164,160,147,148,148,164,160,147,148,164,160,147,148,164,160,147,148,148,148,148,148,148,164,160,147,148,164,160,147,148,164,160,147,148,164,160,147,148,0,0,0,170,0,0,150,165,161,149,150,165,161,149,170,165,161,149,170,165,161,149,170,165,161,149,150,165,161,149,150,165,161,149,150,150,165,161,149,150,165,161,149,150,165,161,149,150,150,150,150,150,150,165,161,149,150,165,161,149,150,165,161,149,150,165,161,149,150,172,172,0,0,0,172,172,15,15,172,172,172,15,16,172,172,15,16,172,0,15,172,15,15,16,16,15,172,15,172,172,172,15,187,188,188,188,0,0,173,171,173,171,173,171,173,171,171,173,171,173,171,173,171,173,171,171,173,171,171,173,171,173,171,173,171,173,171,173,171,0,0,174,174,174,174,17,174,174,17,174,17,0,17,17,17,17,174,174,174,174,0,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,0,174,179,0,177,178,178,178,0,0,179,177,178,178,178,179,0,0,0,177,178,179,128,128,180,177,178,179,128,180,177,178,179,128,180,177,178,179,128,180,177,178,179,179,177,178,179,177,178,179,177,178,179,128,180,18,128,180,177,178,179,128,180,177,178,179,180,18,128,180,177,178,179,180,180,180,18,18,177,178,179,18,128,128,128,180,177,178,179,128,180,177,178,179,128,180,177,178,179,128,180,177,178,179,180,180],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[1,3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,4],0,[1,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[1,1],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,20],21],[1,[[22,[16]]]],[19],[19],0,[[20,20],23],[[],23],[1,24],[1,25],[[6,26],27],[[7,26],27],[[8,26],27],[[9,26],27],[[10,26],27],[[11,26],27],[[12,26],27],[[13,26],27],[[14,26],27],[[15,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[28,26],27],[[28,26],27],[[19,26],27],[[1,26],27],[[20,26],[[30,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,28],[32,28],[[]],[33,28],[34,28],[35,28],[[]],[[]],[[]],[36,[[37,[1]]]],[36,1],[[[0,[38,39]]],[[37,[19]]]],[[[0,[38,39]]],[[37,[19]]]],[[[41,[40]]],[[37,[19]]]],[[[41,[40]]],[[37,[19]]]],[[20,42]],0,0,[1,43],[[[45,[44]]],37],[[1,[22,[44]],[22,[[33,[40]]]]],[[37,[[33,[46]]]]]],[[1,[22,[44]],[41,[46]]],[[37,[[33,[47]]]]]],[[[45,[[41,[40]]]]],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,36],0,0,0,0,[1,[[22,[48]]]],0,[1,49],0,[1,50],[1,51],[[[45,[44]]],[[37,[19]]]],[[20,20],[[22,[21]]]],[1,52],0,[1,53],[[20,54],30],0,[1,55],0,[1,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[20,57],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[1,59],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,61],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[62,62],[[[65,[[0,[63,64]]]]],[[65,[[0,[63,64]]]]]],[[]],[[]],[[]],[[[65,[64]]],66],[6,66],[6,60],[67,[[30,[60]]]],[67,[[30,[62]]]],[6,62],[[60,60],23],[[62,62],23],[[],23],[[],23],[6,68],[[60,26],[[30,[29]]]],[[62,26],[[30,[29]]]],[[[65,[[0,[69,64]]]],26],27],[[]],[[]],[[]],[[[41,[40]]]],[6,66],[[]],[[]],[[]],[[]],[[[65,[64]]],22],[6,[[22,[70]]]],[6,[[22,[70]]]],[62,66],[6,[[22,[71]]]],[[[65,[64]]],22],[6,23],[[[65,[64]],66],22],[6,66],[[60,54],30],[[62,54],30],[60,66],[6,66],[[[65,[64]]]],0,[6,[[22,[72]]]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],0,[6,[[22,[73]]]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[[]],[72,61],[75,68],[72,68],[76,68],[[74,26],27],[[]],[[]],[[]],[[]],[75,74],[72,75],[[]],[[]],[[]],[[]],[75,61],[76,61],[74,66],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[72,76],[75,73],[76,73],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[[[78,[[0,[63,64]]]]],[[78,[[0,[63,64]]]]]],[[[79,[[0,[63,64]]]]],[[79,[[0,[63,64]]]]]],[[]],[[]],[[]],[[[79,[64]]],66],[[77,26],27],[[[78,[[0,[69,64]]]],26],27],[[[79,[[0,[69,64]]]],26],27],[[]],[[]],[[]],[[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[79,[64]]],22],[[6,[0,[63,80]]],[[22,[[65,[64]]]]]],[[[22,[[79,[64]]]],77,[79,[64]]],[[78,[64]]]],[[[41,[40]],66],[[79,[64]]]],[77,22],[[[78,[64]]],22],[[[79,[64]]],22],[[[79,[64]],66],22],[[[78,[64]]]],[[[79,[64]]]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[81,7],[82,7],[83,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,84],[85,85],[86,86],[[[87,[[0,[63,80,63]]]]],[[87,[[0,[63,80,63]]]]]],[81,81],[82,82],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[],85],[67,[[30,[85]]]],[67,[[30,[86]]]],[[85,85],23],[[86,86],23],[[],23],[[],23],[7,68],[81,68],[82,68],[83,68],[[85,26],[[30,[29]]]],[[86,26],[[30,[29]]]],[[[87,[[0,[63,80,69]]]],26],27],[[81,26],27],[[82,26],27],[[83,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[7,66],[82,6],[82,85],[[]],[[]],[[]],[[]],[[]],[[]],0,[7,[[22,[71]]]],[83,15],[82,6],[83,86],[[81,[0,[63,80]]],[[87,[[0,[63,80]]]]]],[81,82],[7,88],[[85,54],30],[[86,54],30],[81,83],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,0,0,[[]],[[]],[[]],[[]],[84,84],[88,88],[[]],[[]],[84,66],[88,66],[[84,26],27],[[88,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[84,22],[88,22],[84,22],[88,22],[[84,66],22],[[88,66],22],[84],[88],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[[]],[[]],[[89,26],27],[[90,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[89,[[92,[91]]]],[90,[[94,[93]]]],[89,[[92,[95]]]],[90,[[94,[96]]]],[89,[[92,[97]]]],[90,[[94,[98]]]],[89,[[92,[99]]]],[90,[[94,[100]]]],[89,[[92,[101]]]],[90,[[94,[102]]]],0,[[[87,[[0,[63,80]]]]],[[22,[103]]]],[[[87,[[0,[63,80]]]]],[[22,[104]]]],0,[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105],[105],[105],[105],[105],[105],[106],[106],[106],[106],[106],[106],[107],[107],[107],[107],[107],[107],[108],[108],[108],[108],[108],[108],[40],[40],[40],[40],[40],[40],[[[94,[63]]],[[94,[63]]]],[98,98],[102,102],[96,96],[100,100],[93,93],[[]],[[]],[[]],[[]],[[]],[[]],[[[94,[109]]],66],[[[94,[69]],26],27],[[98,26],27],[[102,26],27],[[96,26],27],[[100,26],27],[[93,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[94,[109]]],22],[[[94,[109]]],22],[[[94,[109]],66],22],[[[94,[109]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[94,90],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[106]]]],[[[110,[106]]]],[[[110,[106]]]],[[[110,[106]]]],[[[110,[106]]]],[[[110,[107]]]],[[[110,[107]]]],[[[110,[107]]]],[[[110,[107]]]],[[[110,[107]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[92,[63]]],[[92,[63]]]],[97,97],[101,101],[95,95],[99,99],[91,91],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[111]]],66],[[[92,[69]],26],27],[[97,26],27],[[101,26],27],[[95,26],27],[[99,26],27],[[91,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[111]]],22],[[[92,[111]]],22],[[[92,[111]],66],22],[[[92,[111]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[92,89],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[[]],[[]],[[32,26],27],[[32,26],27],[[112,26],27],[[113,26],27],[[]],[[]],[[]],[38,[[30,[8,28]]]],[[[41,[40]]],[[30,[8,28]]]],0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[],57],[8,[[30,[[33,[40]],28]]]],[[8,114],[[30,[28]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,9],[115,115],[73,73],[116,116],[46,46],[[]],[[]],[[]],[[]],[46],[[115,115],23],[[],23],[9,68],[73,68],[[115,26],[[30,[29]]]],[[73,26],27],[[116,26],27],[[46,26],27],[[]],[[]],[[]],[[]],[[116,[22,[44]]],[[37,[46]]]],[[116,[22,[44]],[22,[[33,[40]]]]],[[37,[46]]]],[9,66],[73,66],[[]],[[]],[[]],[[]],[9,66],[73,66],[9,[[22,[71]]]],[73,[[22,[71]]]],[73,66],[[115,54],30],[9,116],[73,[[22,[66]]]],[73,[[22,[115]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],0,0,0,0,0,0,[117,[[22,[105]]]],[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[119,119],[117,117],[[]],[[]],[[]],[10,68],[119,68],[117,68],[[118,26],27],[[119,26],27],[[117,26],27],[[]],[[]],[[]],[10,66],[[]],[[]],[[]],[10,[[22,[71]]]],[10,118],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[119,105],[117,105],[119,105],[119,105],[117,[[22,[105]]]],[119,105],[117,105],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[120,120],[121,121],[47,47],[[]],[[]],[[]],[[120,120],23],[[],23],[11,68],[[120,26],27],[[121,26],27],[[47,26],27],0,[[]],[[]],[[]],[[121,[22,[44]],[41,[46]]],[[37,[47]]]],[[120,42]],0,[11,66],[[]],[[]],[[]],[11,[[22,[71]]]],0,[11,121],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[24,24],[2,2],[3,3],[4,4],[59,59],[5,5],[43,43],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[55,55],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,66],[24,66],[2,66],[3,66],[4,66],[59,66],[5,66],[43,66],[48,66],[49,66],[50,66],[51,66],[52,66],[53,66],[55,66],[56,66],[[25,26],27],[[24,26],27],[[2,26],27],[[3,26],27],[[4,26],27],[[59,26],27],[[5,26],27],[[43,26],27],[[48,26],27],[[49,26],27],[[50,26],27],[[51,26],27],[[52,26],27],[[53,26],27],[[55,26],27],[[56,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,22],[24,22],[2,22],[3,22],[4,22],[59,22],[5,22],[43,22],[48,22],[49,22],[50,22],[51,22],[52,22],[53,22],[55,22],[56,22],[25,22],[24,22],[2,22],[3,22],[4,22],[59,22],[5,22],[43,22],[48,22],[49,22],[50,22],[51,22],[52,22],[53,22],[55,22],[56,22],[[25,66],22],[[24,66],22],[[2,66],22],[[3,66],22],[[4,66],22],[[59,66],22],[[5,66],22],[[43,66],22],[[48,66],22],[[49,66],22],[[50,66],22],[[51,66],22],[[52,66],22],[[53,66],22],[[55,66],22],[[56,66],22],[25],[24],[2],[3],[4],[59],[5],[43],[48],[49],[50],[51],[52],[53],[55],[56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,0,0,0,0,[[]],[[]],[[]],[[]],[122,[[110,[105]]]],[122,68],[[]],[[]],[122,66],[122,105],[[]],[[]],[122,123],[122,[[22,[71]]]],[122,[[22,[105]]]],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,[12,[[22,[105]]]],[12,124],[125,18],[126,18],[127,[[110,[105]]]],[127,[[22,[128]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[[]],[[],124],[12,23],[12,[[110,[105]]]],[12,[[22,[128]]]],[[124,124],23],[[],23],[127,68],[125,68],[126,68],[12,68],[[124,26],[[30,[29]]]],[[]],[[]],[[]],[[]],[12,[[22,[66]]]],[[]],[[]],[[]],[[]],[127,105],[127,[[22,[128]]]],[12,[[22,[71]]]],[12,[[22,[125]]]],[12,[[22,[126]]]],[12,127],[127,105],[125,105],[[124,54],30],[126,105],[125,61],[126,61],[125,18],[126,18],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[129,61],[14,130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,131],[[[132,[63]]],[[132,[63]]]],[133,133],[[[134,[[0,[63,80,63]]]]],[[134,[[0,[63,80,63]]]]]],[129,129],[[]],[[]],[[]],[[]],[[],129],[67,[[30,[129]]]],[[[132,[135]],[132,[135]]],23],[[129,129],23],[[],23],[13,68],[14,68],[[[132,[69]],26],27],[[133,26],27],[[[134,[[0,[63,80,69]]]],26],27],[[129,26],[[30,[29]]]],[[]],[[]],[[]],[[]],[[14,20],[[22,[6]]]],[13,66],[14,66],[14,[[22,[6]]]],[[]],[[]],[[]],[[]],0,[14,12],0,0,[14,129],[14,136],[13,[[22,[71]]]],[133,[[22,[6]]]],[133,[[22,[6]]]],[13,137],[[[134,[[0,[63,80]]]],61],[[22,[138]]]],[[[134,[[0,[63,80]]]]],[[22,[139]]]],[[[134,[[0,[63,80]]]],61],[[22,[140]]]],[[[134,[[0,[63,80]]]]],[[141,[[0,[63,80]]]]]],[[[134,[[0,[63,80]]]]],[[22,[142]]]],[[[134,[[0,[63,80]]]]],[[22,[143]]]],[[[134,[[0,[63,80]]]]],[[22,[144]]]],[[[134,[[0,[63,80]]]],61],[[22,[145]]]],[[[134,[[0,[63,80]]]],61],[[22,[146]]]],[[14,[0,[63,80]]],[[134,[[0,[63,80]]]]]],[[129,54],30],[133,[[22,[6]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],0,[13,[[22,[[41,[105]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[136,136],[130,130],[137,137],[[]],[[]],[[]],[136,66],[137,66],[[136,26],27],[[130,26],27],[[137,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,22],[137,22],[136,22],[130,22],[137,22],[[136,66],22],[[137,66],22],[136],[130],[137],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[140,140],[145,145],[146,146],[[[141,[[0,[63,80,63]]]]],[[141,[[0,[63,80,63]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[138,26],27],[[139,26],27],[[140,26],27],[[145,26],27],[[146,26],27],[[[141,[[0,[63,80,69]]]],26],27],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[145,[[148,[147]]]],[146,[[150,[149]]]],[[]],[138,[[152,[151]]]],[138,[[152,[153]]]],[138,[[152,[154]]]],[138,[[152,[155]]]],[138,[[152,[156]]]],[138,[[152,[157]]]],[140,[[159,[158]]]],[145,[[148,[160]]]],[146,[[150,[161]]]],[139,[[163,[162]]]],[145,[[148,[164]]]],[146,[[150,[165]]]],0,[[[141,[[0,[63,80]]]]],22],[[[141,[[0,[63,80]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[152,[63]]],[[152,[63]]]],[154,154],[153,153],[151,151],[157,157],[156,156],[155,155],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[152,[166]]],66],[[[152,[69]],26],27],[[154,26],27],[[153,26],27],[[151,26],27],[[157,26],27],[[156,26],27],[[155,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[152,[166]]],22],[[[152,[166]]],22],[[[152,[166]],66],22],[[[152,[166]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[152,138],0,0,0,0,[[]],[[]],[[]],[[]],[108],[108],[61],[61],[40],[40],[[[163,[63]]],[[163,[63]]]],[162,162],[[]],[[]],[[[163,[167]]],66],[[[163,[69]],26],27],[[162,26],27],[[]],[[]],[[]],[[]],[[]],[[[163,[167]]],22],[[[163,[167]]],22],[[[163,[167]],66],22],[[[163,[167]]]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[163,139],0,0,0,0,[[]],[[]],[[]],[[]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[159,[63]]],[[159,[63]]]],[158,158],[[]],[[]],[[[159,[168]]],66],[[[159,[69]],26],27],[[158,26],27],[[]],[[]],[[]],[[]],[[]],[[[159,[168]]],22],[[[159,[168]]],22],[[[159,[168]],66],22],[[[159,[168]]]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[159,140],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[148,[63]]],[[148,[63]]]],[164,164],[160,160],[147,147],[[]],[[]],[[]],[[]],[[[148,[169]]],66],[[[148,[69]],26],27],[[164,26],27],[[160,26],27],[[147,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[148,[169]]],22],[[[148,[169]]],22],[[[148,[169]],66],22],[[[148,[169]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[148,145],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[105]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[108]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[110,[40]]]],[[[150,[63]]],[[150,[63]]]],[165,165],[161,161],[149,149],[[]],[[]],[[]],[[]],[[[150,[170]]],66],[[[150,[69]],26],27],[[165,26],27],[[161,26],27],[[149,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[170]]],22],[[[150,[170]]],22],[[[150,[170]],66],22],[[[150,[170]]]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[150,146],0,0,0,0,0,[[]],[[]],[15,[[22,[10]]]],[15,171],[172,172],[[]],[172],[15,68],[16,68],[[172,26],27],[[]],[15,66],[16,66],[[]],0,[15,[[22,[122]]]],[172,[[110,[[110,[105]]]]]],[15,[[22,[13]]]],[15,[[22,[71]]]],[16,[[22,[71]]]],[16,173],[15,[[22,[17]]]],[[]],[15,172],[[],30],[[],30],[[],58],[15,[[22,[[41,[105]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[173,173],[171,171],[[]],[[]],[171,66],[[173,26],27],[[171,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[171,22],[173,22],[171,22],[[171,66],22],[173],[171],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],0,0,[[]],[[]],[[[174,[[0,[63,80,63]]]]],[[174,[[0,[63,80,63]]]]]],[[]],[17,68],[[[174,[[0,[63,80,69]]]],26],27],[[]],[17,66],[[]],[17,[[22,[6]]]],0,[17,175],[17,[[22,[71]]]],[[17,[0,[63,80]]],[[174,[[0,[63,80]]]]]],[17,[[22,[15]]]],[[]],[[],30],[[],30],[[],58],0,0,[[]],[[]],[175,175],[[]],[175,66],[[175,26],27],[[]],[[]],[[]],[175,22],[175,22],[[175,66],22],[175],[[]],[[],30],[[],30],[[],58],0,0,[[[174,[[0,[63,80]]]]],[[22,[176]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[177,61],[178,61],[179,61],[128,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128,128],[180,180],[177,177],[178,178],[179,179],[[]],[[]],[[]],[[]],[[]],[[],179],[67,[[30,[177]]]],[67,[[30,[178]]]],[67,[[30,[179]]]],[[177,177],23],[[178,178],23],[[179,179],23],[[],23],[[],23],[[],23],[128,68],[180,68],[18,68],[[128,26],27],[[180,26],27],[[177,26],[[30,[29]]]],[[178,26],[[30,[29]]]],[[179,26],[[30,[29]]]],[[]],[[]],[[]],[[]],[[]],[180,[[22,[66]]]],[18,66],[[]],[[]],[[]],[[]],[[]],[180,[[22,[177]]]],[180,[[22,[178]]]],[180,[[22,[71]]]],[18,[[22,[71]]]],[18,180],[[177,54],30],[[178,54],30],[[179,54],30],[18,11],[128,61],[128,18],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],58],[[],58],[[],58],[[],58],[[],58],[180,179],[180,179]],"c":[],"p":[[3,"Document"],[3,"Accessors"],[3,"Animations"],[3,"Buffers"],[3,"Cameras"],[3,"Accessor"],[3,"Animation"],[3,"Glb"],[3,"Buffer"],[3,"Camera"],[3,"Image"],[3,"Material"],[3,"Mesh"],[3,"Primitive"],[3,"Node"],[3,"Scene"],[3,"Skin"],[3,"Texture"],[3,"Gltf"],[4,"Semantic"],[4,"Ordering"],[4,"Option"],[15,"bool"],[3,"ExtensionsRequired"],[3,"ExtensionsUsed"],[3,"Formatter"],[6,"Result"],[4,"Error"],[3,"Error"],[4,"Result"],[4,"ImageError"],[4,"Error"],[3,"Vec"],[3,"Error"],[3,"Error"],[3,"Root"],[6,"Result"],[8,"Read"],[8,"Seek"],[15,"u8"],[15,"slice"],[8,"Hasher"],[3,"Images"],[3,"Path"],[8,"AsRef"],[3,"Data"],[3,"Data"],[3,"Lights"],[3,"Materials"],[3,"Meshes"],[3,"Nodes"],[3,"Samplers"],[3,"Scenes"],[8,"Serializer"],[3,"Skins"],[3,"Textures"],[3,"String"],[3,"TypeId"],[3,"Views"],[4,"DataType"],[15,"u32"],[4,"Dimensions"],[8,"Clone"],[8,"Item"],[4,"Iter"],[15,"usize"],[8,"Deserializer"],[6,"Extras"],[8,"Debug"],[4,"Value"],[15,"str"],[3,"Sparse"],[3,"View"],[4,"IndexType"],[3,"Indices"],[3,"Values"],[4,"SparseIndicesIter"],[3,"SparseIter"],[3,"ItemIter"],[8,"Fn"],[3,"Channel"],[3,"Sampler"],[3,"Target"],[3,"Channels"],[4,"Interpolation"],[4,"Property"],[3,"Reader"],[3,"Samplers"],[4,"Rotations"],[4,"MorphTargetWeights"],[3,"F32"],[3,"CastingIter"],[3,"F32"],[3,"CastingIter"],[3,"I16"],[3,"I16"],[3,"I8"],[3,"I8"],[3,"U16"],[3,"U16"],[3,"U8"],[3,"U8"],[6,"ReadInputs"],[4,"ReadOutputs"],[15,"f32"],[15,"i16"],[15,"i8"],[15,"u16"],[8,"Cast"],[15,"array"],[8,"Cast"],[3,"Header"],[4,"ChunkType"],[8,"Write"],[4,"Target"],[4,"Source"],[3,"Perspective"],[4,"Projection"],[3,"Orthographic"],[4,"Format"],[4,"Source"],[3,"Light"],[4,"Kind"],[4,"AlphaMode"],[3,"NormalTexture"],[3,"OcclusionTexture"],[3,"PbrMetallicRoughness"],[3,"Info"],[4,"Mode"],[3,"Attributes"],[6,"BoundingBox"],[3,"Bounds"],[3,"MorphTarget"],[3,"Reader"],[8,"PartialEq"],[3,"MorphTargets"],[3,"Primitives"],[4,"ReadColors"],[4,"ReadIndices"],[4,"ReadJoints"],[3,"ReadMorphTargets"],[6,"ReadNormals"],[6,"ReadPositions"],[6,"ReadTangents"],[4,"ReadTexCoords"],[4,"ReadWeights"],[3,"F32"],[3,"CastingIter"],[3,"F32"],[3,"CastingIter"],[3,"RgbF32"],[3,"CastingIter"],[3,"RgbU16"],[3,"RgbU8"],[3,"RgbaF32"],[3,"RgbaU16"],[3,"RgbaU8"],[3,"U16"],[3,"CastingIter"],[3,"U16"],[3,"U16"],[3,"U32"],[3,"CastingIter"],[3,"U8"],[3,"U8"],[8,"Cast"],[8,"Cast"],[8,"Cast"],[8,"Cast"],[8,"Cast"],[3,"Children"],[4,"Transform"],[3,"Nodes"],[3,"Reader"],[3,"Joints"],[6,"ReadInverseBindMatrices"],[4,"MagFilter"],[4,"MinFilter"],[4,"WrappingMode"],[3,"Sampler"],[13,"BufferLength"],[13,"Length"],[13,"ChunkLength"],[13,"View"],[13,"Uri"],[13,"Spot"],[13,"Matrix"],[13,"Decomposed"]]},\
"gltf_derive":{"doc":"","t":"Y","n":["Validate"],"q":[[0,"gltf_derive"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"gltf_json":{"doc":"","t":"DDNDNDDDGDDDDDNNNDDDDNDEAMMMAMLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMMMMMMMMAMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLAMMMAMMMMMMMMMMMMMMMMMMMMMMLAMMLLMAMMMMMAMMALLLLLLLLLLLLLLLMAMMLMMLAMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLAMMMDRENRDNNDNNNRNENNNRRRRRRNNNLLLLLLLLLMMLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLMMLMMLLLLLAMLLLLLLLLLLLLMLLLLDDDLLLLLLMMMMLLLLLLMMLLLMMMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLMDDNENNENDNNDNRRLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLMMLLLLLMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLDMMMMMMRNDRNRRERDLLLLMMMMMLLLLLLLMMMMLLLLLLMMLLMLLLLLLLLMLDDNDNERMLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLMMMLLLLLLLLLLLLMLLLLLMMMMMMMFFFFRCRAAAAAAAAAAAADLLLLLLLLLLALLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLNDDNDNERLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLMMLLLLMMMMLLLLMLLLLLLLLLLLLMLLLLLLLDLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDLLLLLLLLLLLLLLLLLDDRLLMLLLMMLLLMMLLLLLMDENDNDDDNDDDRMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMMMMMMLLLLLLLLLLLLLLLLMMLLLLLLLLMMMMMMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNRRRNNNDEDNRNNDERRRNNNNNRRNLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMLLLLMMMMLMMLLLLMMLLLLLLLLLLLLLLLLLLLMDLLLLLIDDMMMMMMMMMMLLLKLMMMLMMMMMMLLLLLLLLDDDLLMMLLLLMMMMLLLMMMMMMMLMLMLLLMFFFFFFFDMMMMMMRNDRRRNNNNREENRRRNNNNRNDDRRRELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLMLLLLLMMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMEENNNNNILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Accessor","Animation","Array","Asset","Bool","Buffer","Camera","Error","Extras","Image","Index","Material","Mesh","Node","Null","Number","Object","Path","Root","Scene","Skin","String","Texture","Value","accessor","accessors","alpha_cutoff","alpha_mode","animation","animations","as_array","as_array_mut","as_bool","as_f64","as_i64","as_null","as_number","as_object","as_object_mut","as_str","as_u64","asset","asset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_view","buffer_view","buffer_views","buffers","byte_length","byte_offset","camera","camera","cameras","channels","children","classify","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","column","component_type","copyright","count","custom","custom","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","double_sided","emissive_factor","emissive_texture","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions","extensions_required","extensions_used","extras","extras","extras","extras","extras","extras","extras","extras","extras","extras","extras","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","generator","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_mut","hash","image","images","index","index_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_deserializer","into_deserializer","invalid_type","inverse_bind_matrices","io_error_kind","is_array","is_boolean","is_data","is_eof","is_f64","is_i64","is_io","is_null","is_number","is_object","is_string","is_syntax","is_u64","joints","line","material","materials","matrix","max","mesh","mesh","meshes","mime_type","min","min_version","name","name","name","name","name","name","name","name","name","name","name","nodes","nodes","normal_texture","normalized","occlusion_texture","orthographic","partial_cmp","path","pbr_metallic_roughness","perspective","pointer","pointer_mut","primitives","root","rotation","sampler","samplers","samplers","scale","scene","scene","scenes","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skeleton","skin","skin","skins","source","source","sparse","take","texture","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","uri","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validate","validation","version","weights","weights","Accessor","BYTE","ComponentType","F32","FLOAT","GenericComponentType","I16","I8","IndexComponentType","Mat2","Mat3","Mat4","SHORT","Scalar","Type","U16","U32","U8","UNSIGNED_BYTE","UNSIGNED_INT","UNSIGNED_SHORT","VALID_ACCESSOR_TYPES","VALID_COMPONENT_TYPES","VALID_INDEX_TYPES","Vec2","Vec3","Vec4","as_gl_enum","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_view","byte_offset","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","component_type","count","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","extensions","extras","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","max","min","multiplicity","name","normalized","serialize","serialize","serialize","serialize","size","sparse","sparse","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","Indices","Sparse","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_view","buffer_view","byte_offset","byte_offset","clone","clone","clone","clone_into","clone_into","clone_into","component_type","count","deserialize","deserialize","deserialize","extensions","extensions","extensions","extras","extras","extras","fmt","fmt","fmt","from","from","from","indices","into","into","into","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","validate","values","Animation","Channel","CubicSpline","Interpolation","Linear","MorphTargetWeights","Property","Rotation","Sampler","Scale","Step","Target","Translation","VALID_INTERPOLATIONS","VALID_PROPERTIES","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","extensions","extensions","extensions","extensions","extras","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","input","interpolation","into","into","into","into","into","name","node","output","path","sampler","samplers","serialize","serialize","serialize","serialize","serialize","target","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate","validate","Asset","copyright","extensions","extras","generator","min_version","version","ARRAY_BUFFER","ArrayBuffer","Buffer","ELEMENT_ARRAY_BUFFER","ElementArrayBuffer","MAX_BYTE_STRIDE","MIN_BYTE_STRIDE","Target","VALID_TARGETS","View","borrow","borrow","borrow_mut","borrow_mut","buffer","byte_length","byte_length","byte_offset","byte_stride","clone","clone","clone_into","clone_into","deserialize","eq","equivalent","extensions","extensions","extras","extras","fmt","fmt","from","from","into","into","name","name","serialize","serialize","target","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uri","validate","Camera","Orthographic","Orthographic","Perspective","Perspective","Type","VALID_CAMERA_TYPES","aspect_ratio","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","eq","equivalent","extensions","extensions","extensions","extras","extras","extras","fmt","fmt","fmt","from","from","from","into","into","into","name","orthographic","perspective","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","validate","validate","xmag","yfov","ymag","zfar","zfar","znear","znear","from_reader","from_slice","from_str","from_value","ENABLED_EXTENSIONS","Root","SUPPORTED_EXTENSIONS","accessor","animation","asset","buffer","camera","image","material","mesh","root","scene","skin","texture","Accessor","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","serialize","sparse","to_owned","try_from","try_into","type_id","validate","Indices","Sparse","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","validate","Animation","Channel","Sampler","Target","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate","Asset","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","validate","Buffer","View","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","fmt","fmt","from","from","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate","Camera","Orthographic","Perspective","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","validate","Image","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","validate","Material","NormalTexture","OcclusionTexture","PbrMetallicRoughness","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate","validate","validate","Mesh","Primitive","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","fmt","fmt","from","from","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate","KhrLightsPunctual","Root","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","fmt","fmt","from","from","into","into","khr_lights_punctual","lights","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate","Node","Scene","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","fmt","fmt","from","from","into","into","khr_lights_punctual","khr_lights_punctual","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","validate","Directional","KhrLightsPunctual","Light","Point","Spot","Spot","Type","VALID_TYPES","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","default","deserialize","deserialize","deserialize","eq","equivalent","extensions","extras","fmt","fmt","fmt","fmt","from","from","from","from","hash","inner_cone_angle","intensity","into","into","into","into","light","name","outer_cone_angle","range","serialize","serialize","serialize","serialize","spot","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","validate","validate","validate","Skin","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","validate","Info","Sampler","Texture","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","into","into","into","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","validate","Extras","Void","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","fmt","from","into","serialize","to_owned","to_string","try_from","try_into","type_id","validate","Image","MimeType","VALID_MIME_TYPES","borrow","borrow_mut","buffer_view","clone","clone_into","deserialize","extensions","extras","fmt","from","into","mime_type","name","serialize","to_owned","try_from","try_into","type_id","uri","AlphaCutoff","AlphaMode","Blend","EmissiveFactor","Mask","Material","NormalTexture","OcclusionTexture","Opaque","PbrBaseColorFactor","PbrMetallicRoughness","StrengthFactor","VALID_ALPHA_MODES","alpha_cutoff","alpha_mode","base_color_factor","base_color_texture","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double_sided","emissive_factor","emissive_texture","eq","equivalent","extensions","extensions","extensions","extensions","extras","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","index","index","into","into","into","into","into","into","into","into","metallic_factor","metallic_roughness_texture","name","normal_texture","occlusion_texture","pbr_metallic_roughness","roughness_factor","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","strength","tex_coord","tex_coord","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","validate","Colors","Joints","LINES","LINE_LOOP","LINE_STRIP","LineLoop","LineStrip","Lines","Mesh","Mode","MorphTarget","Normals","POINTS","Points","Positions","Primitive","Semantic","TRIANGLES","TRIANGLE_FAN","TRIANGLE_STRIP","Tangents","TexCoords","TriangleFan","TriangleStrip","Triangles","VALID_MODES","VALID_MORPH_TARGETS","Weights","as_gl_enum","attributes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","extensions","extensions","extras","extras","fmt","fmt","fmt","fmt","from","from","from","from","hash","indices","into","into","into","into","material","mode","name","normals","partial_cmp","positions","primitives","serialize","serialize","serialize","serialize","tangents","targets","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","validate","weights","Path","as_str","field","index","key","new","Get","Index","Root","accessors","animations","asset","buffer_views","buffers","cameras","extensions","extensions_required","extensions_used","extras","from_reader","from_slice","from_str","get","get","images","materials","meshes","new","nodes","samplers","scene","scenes","skins","textures","to_string","to_string_pretty","to_value","to_vec","to_vec_pretty","to_writer","to_writer_pretty","value","Node","Scene","UnitQuaternion","borrow","borrow_mut","camera","children","clone","clone_into","default","deserialize","extensions","extensions","extras","extras","fmt","from","into","matrix","mesh","name","name","nodes","rotation","scale","serialize","skin","to_owned","translation","try_from","try_into","type_id","weights","to_string","to_string_pretty","to_value","to_vec","to_vec_pretty","to_writer","to_writer_pretty","Skin","extensions","extras","inverse_bind_matrices","joints","name","skeleton","CLAMP_TO_EDGE","ClampToEdge","Info","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","Linear","Linear","LinearMipmapLinear","LinearMipmapNearest","MIRRORED_REPEAT","MagFilter","MinFilter","MirroredRepeat","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","Nearest","Nearest","NearestMipmapLinear","NearestMipmapNearest","REPEAT","Repeat","Sampler","Texture","VALID_MAG_FILTERS","VALID_MIN_FILTERS","VALID_WRAPPING_MODES","WrappingMode","as_gl_enum","as_gl_enum","as_gl_enum","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","extensions","extensions","extensions","extras","extras","extras","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","index","into","into","into","into","into","mag_filter","min_filter","name","name","sampler","serialize","serialize","serialize","serialize","serialize","source","tex_coord","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate","validate","wrap_s","wrap_t","Checked","Error","IndexOutOfBounds","Invalid","Invalid","Missing","Valid","Validate","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","hash","into","into","partial_cmp","partial_cmp","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","validate","validate"],"q":[[0,"gltf_json"],[577,"gltf_json::accessor"],[676,"gltf_json::accessor::sparse"],[735,"gltf_json::animation"],[840,"gltf_json::asset"],[847,"gltf_json::buffer"],[898,"gltf_json::camera"],[965,"gltf_json::deserialize"],[969,"gltf_json::extensions"],[984,"gltf_json::extensions::accessor"],[1001,"gltf_json::extensions::accessor::sparse"],[1049,"gltf_json::extensions::animation"],[1111,"gltf_json::extensions::asset"],[1127,"gltf_json::extensions::buffer"],[1159,"gltf_json::extensions::camera"],[1207,"gltf_json::extensions::image"],[1223,"gltf_json::extensions::material"],[1287,"gltf_json::extensions::mesh"],[1319,"gltf_json::extensions::root"],[1353,"gltf_json::extensions::scene"],[1387,"gltf_json::extensions::scene::khr_lights_punctual"],[1464,"gltf_json::extensions::skin"],[1480,"gltf_json::extensions::texture"],[1528,"gltf_json::extras"],[1547,"gltf_json::image"],[1569,"gltf_json::material"],[1724,"gltf_json::mesh"],[1830,"gltf_json::path"],[1836,"gltf_json::root"],[1872,"gltf_json::scene"],[1905,"gltf_json::serialize"],[1912,"gltf_json::skin"],[1919,"gltf_json::texture"],[2042,"gltf_json::validation"]],"d":["A typed view into a buffer view.","A keyframe animation.","Represents a JSON array.","Metadata about the glTF asset.","Represents a JSON boolean.","A buffer points to binary data representing geometry, …","A camera’s projection.","This type represents all possible errors that can occur …","Data type of the <code>extras</code> attribute on all glTF objects.","Image data used to create a texture.","Represents an offset into an array of type <code>T</code> owned by the …","The material appearance of a primitive.","A set of primitives to be rendered.","A node in the node hierarchy.  When the node contains <code>skin</code>…","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON object.","An immutable JSON source path.","The root object of a glTF 2.0 asset.","The root <code>Node</code>s of a scene.","Joints and matrices defining a skin.","Represents a JSON string.","A texture and its sampler.","Represents any valid JSON value.","Contains <code>Accessor</code> and other related data structures.","An array of accessors.","The alpha cutoff value of the material.","The alpha rendering mode of the material.","Contains <code>Animation</code> and other related data structures.","An array of keyframe animations.","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is an Array, returns the associated mutable …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is a number, represent it as f64 if possible. …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is a Number, returns the associated <code>Number</code>. …","If the <code>Value</code> is an Object, returns the associated Map. …","If the <code>Value</code> is an Object, returns the associated mutable …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, represent it as u64 if …","Contains <code>Asset</code> metadata.","Metadata about the glTF asset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains <code>Buffer</code>, <code>View</code>, and other related data structures.","The parent buffer view this accessor reads from.","The index of the buffer view that contains the image. Use …","An array of buffer views.","An array of buffers.","The length of the buffer in bytes.","The offset relative to the start of the parent <code>BufferView</code> …","Contains <code>Camera</code> and other related data structures.","The index of the camera referenced by this node.","An array of cameras.","An array of channels, each of which targets an animation’…","The indices of this node’s children.","Categorizes the cause of this error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One-based column number at which the error was detected.","The data type of components in the attribute.","A copyright message suitable for display to credit the …","The number of components within the buffer view - not to …","","","","","","","","Re-exports of <code>serde_json</code> deserialization functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies whether the material is double-sided.","The emissive color of the material.","The emissive map controls the color and intensity of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains extension specific data structures and the names …","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Names of glTF extensions required to properly load this …","Names of glTF extensions used somewhere in this asset.","Contains <code>Extras</code>.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","","","","","Display a JSON value as a string.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Convert a <code>Vec</code> to <code>Value</code>","","","","Convert 32-bit floating point number to <code>Value</code>","Convert <code>Number</code> to <code>Value</code>","Convert copy-on-write string to <code>Value</code>","Convert string slice to <code>Value</code>","","","Convert 64-bit floating point number to <code>Value</code>","","","Convert <code>String</code> to <code>Value</code>","Convert <code>()</code> to <code>Value</code>","","Convert a slice to <code>Value</code>","Convert map (with string keys) to <code>Value</code>","","Convert boolean to <code>Value</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert an iteratable type to a <code>Value</code>","Convert an iteratable type to a <code>Value</code>","","Tool that generated this glTF model.","Index into a JSON array or map. A string index can be used …","","","","","","","","","","","","","","","Mutably index into a JSON array or map. A string index can …","","Contains <code>Image</code> and other related data structures.","An array of images.","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> or","Write into a <code>serde_json::Value</code> using the syntax …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The index of the accessor containing the 4x4 inverse-bind …","The kind reported by the underlying standard library I/O …","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if the <code>Value</code> is a number that can be …","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if this error was caused by a failure to read …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is an Object. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if this error was caused by input that was not","Returns true if the <code>Value</code> is an integer between zero and …","Indices of skeleton nodes used as joints in this skin.","One-based line number at which the error was detected.","Contains <code>Material</code> and other related data structures.","An array of materials.","4x4 column-major transformation matrix.","Maximum value of each component in this attribute.","Contains <code>Mesh</code> and other related data structures.","The index of the mesh in this node.","An array of meshes.","The image’s MIME type.","Minimum value of each component in this attribute.","The minimum glTF version that this asset targets.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","Optional user-defined name for this object.","An array of nodes.","The indices of each root node.","A tangent space normal map. The texture contains RGB …","Specifies whether integer data values should be normalized.","The occlusion map texture. The occlusion values are …","An orthographic camera containing properties to create an …","","Contains <code>Path</code>.","A set of parameter values that are used to define the …","A perspective camera containing properties to create a …","Looks up a value by a JSON Pointer.","Looks up a value by a JSON Pointer and returns a mutable …","Defines the geometry to be renderered with a material.","Contains <code>Root</code>.","The node’s unit quaternion rotation in the order (x, y, …","The index of the sampler used by this texture.","An array of samplers that combine input and output …","An array of samplers.","The node’s non-uniform scale.","Contains <code>Scene</code>, <code>Node</code>, and other related data structures.","The default scene.","An array of scenes.","Re-exports of <code>serde_json</code> serialization functions.","","","","","","","","","","","","","","","","The index of the node used as a skeleton root.","Contains <code>Skin</code> and other related data structures.","The index of the skin referenced by this node.","An array of skins.","","The index of the image used by this texture.","Sparse storage of attributes that deviate from their …","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …","Contains <code>Texture</code>, <code>Sampler</code>, and other related data …","An array of textures.","","","","","","","","","","","","","","","","","","","","","The node’s translation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies if the attribute is a scalar, vector, or matrix.","Specifies if the camera uses a perspective or orthographic …","","","","","","","","","","","","","","","","","","The uri of the buffer.  Relative paths are relative to the …","The uri of the image.  Relative paths are relative to the …","","","","","","","","","","","","","","","Contains functions that validate glTF JSON data against …","The glTF version of this asset.","Defines the weights to be applied to the morph targets.","The weights of the instantiated Morph Target. Number of …","A typed view into a buffer view.","Corresponds to <code>GL_BYTE</code>.","The component data type.","Corresponds to <code>GL_FLOAT</code>.","Corresponds to <code>GL_FLOAT</code>.","The data type of a generic vertex attribute.","Corresponds to <code>GL_SHORT</code>.","Corresponds to <code>GL_BYTE</code>.","The data type of an index.","2x2 matrix.","3x3 matrix.","4x4 matrix.","Corresponds to <code>GL_SHORT</code>.","Scalar quantity.","Specifies whether an attribute, vector, or matrix.","Corresponds to <code>GL_UNSIGNED_SHORT</code>.","Corresponds to <code>GL_UNSIGNED_INT</code>.","Corresponds to <code>GL_UNSIGNED_BYTE</code>.","Corresponds to <code>GL_UNSIGNED_BYTE</code>.","Corresponds to <code>GL_UNSIGNED_INT</code>.","Corresponds to <code>GL_UNSIGNED_SHORT</code>.","All valid accessor types.","All valid generic vertex attribute component types.","All valid index component types.","2D vector.","3D vector.","4D vector.","Returns the corresponding <code>GLenum</code>.","","","","","","","","","The parent buffer view this accessor reads from.","The offset relative to the start of the parent <code>BufferView</code> …","","","","","","","","","The data type of components in the attribute.","The number of components within the buffer view - not to …","","","","","","","","","Extension specific data.","Optional application specific data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum value of each component in this attribute.","Minimum value of each component in this attribute.","Returns the equivalent number of scalar quantities this …","Optional user-defined name for this object.","Specifies whether integer data values should be normalized.","","","","","Returns the number of bytes this value represents.","Contains data structures for sparse storage.","Sparse storage of attributes that deviate from their …","","","","","","","","","","","","","Specifies if the attribute is a scalar, vector, or matrix.","","","","","Indices of those attributes that deviate from their …","Sparse storage of attributes that deviate from their …","Array of size <code>count * number_of_components</code> storing the …","","","","","","","The parent buffer view containing the sparse indices.","The parent buffer view containing the sparse indices.","The offset relative to the start of the parent <code>BufferView</code> …","The offset relative to the start of the parent buffer view …","","","","","","","The data type of each index.","The number of attributes encoded in this sparse accessor.","","","","Extension specific data.","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Index array of size <code>count</code> that points to those accessor …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Array of size <code>count * number_of_components</code> storing the …","A keyframe animation.","Targets an animation’s sampler at a node’s property.","Cubic spline interpolation.","Specifies an interpolation algorithm.","Linear interpolation.","Weights of morph targets.","Specifies a property to animate.","XYZW rotation quaternion.","Defines a keyframe graph but not its target.","XYZ scale vector.","Step interpolation.","The index of the node and TRS property that an animation …","XYZ translation vector.","All valid animation interpolation algorithms.","All valid animation property names.","","","","","","","","","","","An array of channels, each of which targets an animation’…","","","","","","","","","","","","","","","","","","","","","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The index of an accessor containing keyframe input values, …","The interpolation algorithm.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional user-defined name for this object.","The index of the node to target.","The index of an accessor containing keyframe output values.","The name of the node’s property to modify or the ‘…","The index of a sampler in this animation used to compute …","An array of samplers that combine input and output …","","","","","","The index of the node and TRS property to target.","","","","","","","","","","","","","","","","","","","","","","","Metadata about the glTF asset.","A copyright message suitable for display to credit the …","Extension specific data.","Optional application specific data.","Tool that generated this glTF model.","The minimum glTF version that this asset targets.","The glTF version of this asset.","Corresponds to <code>GL_ARRAY_BUFFER</code>.","Corresponds to <code>GL_ARRAY_BUFFER</code>.","A buffer points to binary data representing geometry, …","Corresponds to <code>GL_ELEMENT_ARRAY_BUFFER</code>.","Corresponds to <code>GL_ELEMENT_ARRAY_BUFFER</code>.","The maximum byte stride.","The minimum byte stride.","Specifies the target a GPU buffer should be bound to.","All valid GPU buffer targets.","A view into a buffer generally representing a subset of …","","","","","The parent <code>Buffer</code>.","The length of the buffer in bytes.","The length of the <code>BufferView</code> in bytes.","Offset into the parent buffer in bytes.","The stride in bytes between vertex attributes or other …","","","","","","","","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional user-defined name for this object.","Optional user-defined name for this object.","","","Optional target the buffer should be bound to.","","","","","","","","","The uri of the buffer.  Relative paths are relative to the …","","A camera’s projection.","Values for an orthographic camera.","An orthographic projection.","Values for a perspective camera.","A perspective projection.","Specifies the camera type.","All valid camera types.","Aspect ratio of the field of view.","","","","","","","","","","","","","","","","","Extension specific data.","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional user-defined name for this object.","An orthographic camera containing properties to create an …","A perspective camera containing properties to create a …","","","","","","","","","","","","","Specifies if the camera uses a perspective or orthographic …","","","","","","The horizontal magnification of the view.","The vertical field of view in radians.","The vertical magnification of the view.","The distance to the far clipping plane.","The distance to the far clipping plane.","The distance to the near clipping plane.","The distance to the near clipping plane.","Deserialize an instance of type <code>T</code> from an I/O stream of …","Deserialize an instance of type <code>T</code> from bytes of JSON text.","Deserialize an instance of type <code>T</code> from a string of JSON …","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.","Names of glTF 2.0 extensions enabled by the user.","","Names of glTF 2.0 extensions supported by the library.","Contains <code>Accessor</code> and other related data structures.","Contains <code>Animation</code> and other related data structures.","Contains <code>Asset</code> metadata.","Contains <code>Buffer</code>, <code>View</code>, and other related data structures.","Contains <code>Camera</code> and other related data structures.","Contains <code>Image</code> and other related data structures.","Contains <code>Material</code> and other related data structures.","Contains <code>Mesh</code> and other related data structures.","Contains <code>Root</code>.","Contains <code>Scene</code>, <code>Node</code>, and other related data structures.","Contains <code>Skin</code> and other related data structures.","Contains <code>Texture</code>, <code>Sampler</code>, and other related data …","A typed view into a buffer view.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Contains data structures for sparse storage.","","","","","","Indices of those attributes that deviate from their …","Sparse storage of attributes that deviate from their …","Array of size <code>count * number_of_components</code> storing the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A keyframe animation.","Targets an animation’s sampler at a node’s property.","Defines a keyframe graph but not its target.","The index of the node and TRS property that an animation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Metadata about the glTF asset.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A buffer points to binary data representing geometry, …","A view into a buffer generally representing a subset of …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A camera’s projection.","Values for an orthographic camera.","Values for a perspective camera.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Image data used to create a texture.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The material appearance of a primitive.","Defines the normal texture of a material.","Defines the occlusion texture of a material.","A set of parameter values that are used to define the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A set of primitives to be rendered.","Geometry to be rendered with the given material.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The root object of a glTF 2.0 asset.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Lights at this node.","","","","","","","","","","","","","A node in the node hierarchy.  When the node contains <code>skin</code>…","The root <code>Node</code>s of a scene.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Directional lights act as though they are infinitely far …","","","Point lights emit light in all directions from their …","Spot light parameters.","Spot lights emit light in a cone in the direction of the …","Specifies the light type.","All valid light types.","","","","","","","","","","","","","","","","","Color of the light source.","","","","","","","Extension specific data.","Optional application specific data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Angle in radians from centre of spotlight where falloff …","Intensity of the light source. <code>point</code> and <code>spot</code> lights use …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Optional user-defined name for this object.","Angle in radians from centre of spotlight where falloff …","A distance cutoff at which the light’s intensity may be …","","","","","Spot light parameters.","","","","","","","","","","","","","Specifies the light type.","","","","","","","","Joints and matrices defining a skin.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Reference to a <code>Texture</code>.","Texture sampler properties for filtering and wrapping …","A texture and its sampler.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Data type of the <code>extras</code> attribute on all glTF objects.","Type representing no user-defined data.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Image data used to create a texture.","An image MIME type.","All valid MIME types.","","","The index of the buffer view that contains the image. Use …","","","","Extension specific data.","Optional application specific data.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The image’s MIME type.","Optional user-defined name for this object.","","","","","","The uri of the image.  Relative paths are relative to the …","The alpha cutoff value of a material.","The alpha rendering mode of a material.","The alpha value is used, to determine the transparency of …","The emissive color of a material.","The rendered output is either fully opaque or fully …","The material appearance of a primitive.","Defines the normal texture of a material.","Defines the occlusion texture of a material.","The alpha value is ignored and the rendered output is …","The base color factor of a material.","A set of parameter values that are used to define the …","A number in the inclusive range [0.0, 1.0] with a default …","All valid alpha modes.","The alpha cutoff value of the material.","The alpha rendering mode of the material.","The material’s base color factor.","The base color texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies whether the material is double-sided.","The emissive color of the material.","The emissive map controls the color and intensity of the …","","","Extension specific data.","Extension specific data.","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The index of the texture.","The index of the texture.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The metalness of the material.","The metallic-roughness texture.","Optional user-defined name for this object.","A tangent space normal map. The texture contains RGB …","The occlusion map texture. The occlusion values are …","A set of parameter values that are used to define the …","The roughness of the material.","The scalar multiplier applied to each normal vector of the …","","","","","","","","","The scalar multiplier controlling the amount of occlusion …","The set index of the texture’s <code>TEXCOORD</code> attribute.","The set index of the texture’s <code>TEXCOORD</code> attribute.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RGB or RGBA vertex color.","Joint indices.","Corresponds to <code>GL_LINES</code>.","Corresponds to <code>GL_LINE_LOOP</code>.","Corresponds to <code>GL_LINE_STRIP</code>.","Corresponds to <code>GL_LINE_LOOP</code>.","Corresponds to <code>GL_LINE_STRIP</code>.","Corresponds to <code>GL_LINES</code>.","A set of primitives to be rendered.","The type of primitives to render.","A dictionary mapping attributes to their deviations in the …","XYZ vertex normals.","Corresponds to <code>GL_POINTS</code>.","Corresponds to <code>GL_POINTS</code>.","XYZ vertex positions.","Geometry to be rendered with the given material.","Vertex attribute semantic name.","Corresponds to <code>GL_TRIANGLES</code>.","Corresponds to <code>GL_TRIANGLE_FAN</code>.","Corresponds to <code>GL_TRIANGLE_STRIP</code>.","XYZW vertex tangents where the <code>w</code> component is a sign value …","UV texture co-ordinates.","Corresponds to <code>GL_TRIANGLE_FAN</code>.","Corresponds to <code>GL_TRIANGLE_STRIP</code>.","Corresponds to <code>GL_TRIANGLES</code>.","All valid primitive rendering modes.","All valid semantic names for Morph targets.","Joint weights.","Returns the equivalent <code>GLenum</code>.","Maps attribute semantic names to the <code>Accessor</code>s containing …","","","","","","","","","","","","","","","","","","","","","","","","","","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The index of the accessor that contains the indices.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The index of the material to apply to this primitive when …","The type of primitives to render.","Optional user-defined name for this object.","XYZ vertex normal displacements of type <code>[f32; 3]</code>.","","XYZ vertex position displacements of type <code>[f32; 3]</code>.","Defines the geometry to be renderered with a material.","","","","","XYZ vertex tangent displacements of type <code>[f32; 3]</code>.","An array of Morph Targets, each  Morph Target is a …","","","","","","","","","","","","","","","","","","","","Defines the weights to be applied to the morph targets.","An immutable JSON source path.","Returns a view into the internal representation.","Returns a new path ending with the given field.","Returns a new path ending with the given array index.","Returns a new path ending with the given object key.","Creates an empty JSON source path.","Helper trait for retrieving top-level objects by a …","Represents an offset into an array of type <code>T</code> owned by the …","The root object of a glTF 2.0 asset.","An array of accessors.","An array of keyframe animations.","Metadata about the glTF asset.","An array of buffer views.","An array of buffers.","An array of cameras.","Extension specific data.","Names of glTF extensions required to properly load this …","Names of glTF extensions used somewhere in this asset.","Optional application specific data.","Deserialize from a stream of JSON.","Deserialize from a JSON byte slice.","Deserialize from a JSON string slice.","Retrieves a single value at the given index.","Returns a single item from the root object.","An array of images.","An array of materials.","An array of meshes.","Creates a new <code>Index</code> representing an offset into an array …","An array of nodes.","An array of samplers.","The default scene.","An array of scenes.","An array of skins.","An array of textures.","Serialize as a <code>String</code> of JSON.","Serialize as a pretty-printed <code>String</code> of JSON.","Serialize as a generic JSON value.","Serialize as a JSON byte vector.","Serialize as a pretty-printed JSON byte vector.","Serialize as a JSON byte writertor.","Serialize as a pretty-printed JSON byte writertor.","Returns the internal offset value.","A node in the node hierarchy.  When the node contains <code>skin</code>…","The root <code>Node</code>s of a scene.","Unit quaternion rotation in the order (x, y, z, w), where …","","","The index of the camera referenced by this node.","The indices of this node’s children.","","","","","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","4x4 column-major transformation matrix.","The index of the mesh in this node.","Optional user-defined name for this object.","Optional user-defined name for this object.","The indices of each root node.","The node’s unit quaternion rotation in the order (x, y, …","The node’s non-uniform scale.","","The index of the skin referenced by this node.","","The node’s translation.","","","","The weights of the instantiated Morph Target. Number of …","Serialize the given data structure as a String of JSON.","Serialize the given data structure as a pretty-printed …","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …","Serialize the given data structure as a JSON byte vector.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as JSON into the I/O …","Serialize the given data structure as pretty-printed JSON …","Joints and matrices defining a skin.","Extension specific data.","Optional application specific data.","The index of the accessor containing the 4x4 inverse-bind …","Indices of skeleton nodes used as joints in this skin.","Optional user-defined name for this object.","The index of the node used as a skeleton root.","Corresponds to <code>GL_CLAMP_TO_EDGE</code>.","Corresponds to <code>GL_CLAMP_TO_EDGE</code>.","Reference to a <code>Texture</code>.","Corresponds to <code>GL_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_NEAREST</code>.","Corresponds to <code>GL_LINEAR</code>.","Corresponds to <code>GL_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_LINEAR_MIPMAP_NEAREST</code>.","Corresponds to <code>GL_MIRRORED_REPEAT</code>.","Magnification filter.","Minification filter.","Corresponds to <code>GL_MIRRORED_REPEAT</code>.","Corresponds to <code>GL_NEAREST</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_NEAREST</code>.","Corresponds to <code>GL_NEAREST</code>.","Corresponds to <code>GL_NEAREST</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_LINEAR</code>.","Corresponds to <code>GL_NEAREST_MIPMAP_NEAREST</code>.","Corresponds to <code>GL_REPEAT</code>.","Corresponds to <code>GL_REPEAT</code>.","Texture sampler properties for filtering and wrapping …","A texture and its sampler.","All valid magnification filters.","All valid minification filters.","All valid wrapping modes.","Texture co-ordinate wrapping mode.","OpenGL enum","Returns the corresponding OpenGL enum value.","Returns the corresponding OpenGL enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension specific data.","Extension specific data.","Extension specific data.","Optional application specific data.","Optional application specific data.","Optional application specific data.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The index of the texture.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Magnification filter.","Minification filter.","Optional user-defined name for this object.","Optional user-defined name for this object.","The index of the sampler used by this texture.","","","","","","The index of the image used by this texture.","The set index of the texture’s <code>TEXCOORD</code> attribute.","","","","","","","","","","","","","","","","","","","","","","","<code>s</code> wrapping mode.","<code>t</code> wrapping mode.","Specifies a type that has been pre-validated during …","Specifies what kind of error occured during validation.","An index was found to be out of bounds.","An invalid value was identified.","The item is invalid.","Some required data has been omitted.","The item is valid.","Trait for validating glTF JSON data so that the library …","Converts from <code>Checked&lt;T&gt;</code> to <code>Checked&lt;&amp;T&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Takes ownership of the contained item if it is <code>Valid</code>.","Validates the invariants required for the library to …",""],"i":[0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,25,22,22,0,25,1,1,1,1,1,1,1,1,1,1,1,0,25,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,0,16,21,25,25,19,16,0,26,25,17,26,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,15,13,16,18,16,13,13,18,1,22,24,25,0,15,16,17,18,19,20,1,21,22,23,25,26,27,28,29,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,22,22,22,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,15,1,0,16,17,18,19,20,21,22,23,25,26,27,28,29,25,25,0,16,17,18,19,20,21,22,23,25,26,27,28,29,13,13,15,15,16,17,18,19,20,1,1,21,22,23,24,24,25,26,27,28,29,13,15,16,17,18,19,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,22,23,24,25,26,27,28,29,1,1,1,18,1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,1,15,0,25,1,1,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,1,1,13,28,13,1,1,13,13,1,1,13,1,1,1,1,13,1,28,13,0,25,26,16,0,26,25,21,16,18,16,17,19,20,21,22,23,26,27,28,29,25,27,22,16,22,20,15,0,22,20,1,1,23,0,26,29,17,25,26,0,25,25,0,15,16,17,18,19,20,1,21,22,23,25,26,27,28,29,28,0,26,25,13,29,16,1,0,25,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,13,15,1,24,26,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,16,20,13,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,19,21,15,16,17,18,19,20,21,22,23,25,26,27,28,29,0,18,23,26,0,0,0,66,0,0,66,66,0,67,67,67,0,67,0,66,66,66,0,0,0,0,0,0,67,67,67,66,66,67,68,69,66,67,68,69,16,16,66,67,68,69,66,67,68,69,16,16,66,67,68,69,66,67,66,67,16,16,66,67,68,69,66,67,68,69,66,67,68,69,16,16,67,16,16,66,67,68,69,66,0,16,66,67,68,69,66,67,68,69,66,67,68,69,16,66,67,68,69,0,0,0,70,71,72,70,71,72,70,72,70,72,70,71,72,70,71,72,70,71,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,71,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,71,0,0,73,0,73,74,0,74,0,74,73,0,74,0,0,73,74,75,76,77,73,74,75,76,77,17,73,74,75,76,77,73,74,75,76,77,73,73,74,75,76,77,73,74,73,74,17,75,76,77,17,75,76,77,73,74,75,76,77,73,74,75,76,77,77,77,73,74,75,76,77,17,76,77,76,75,17,73,74,75,76,77,75,73,74,75,76,77,73,74,75,76,77,73,74,75,76,77,73,74,75,76,77,76,77,0,18,18,18,18,18,18,0,78,0,0,78,0,0,0,0,0,78,55,78,55,55,19,55,55,55,78,55,78,55,55,78,78,19,55,19,55,78,55,78,55,78,55,19,55,78,55,55,78,55,78,55,78,55,78,55,19,55,0,0,79,0,79,0,0,81,79,80,81,79,80,81,79,80,81,79,80,81,80,81,79,79,20,80,81,20,80,81,79,80,81,79,80,81,79,80,81,20,20,20,79,80,81,79,80,81,79,80,81,79,80,81,20,79,80,81,80,81,80,81,80,80,81,80,81,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,85,85,85,85,85,85,85,85,0,85,85,85,85,85,0,0,0,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,86,87,88,0,0,0,0,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,92,91,92,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,0,0,0,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,0,0,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,0,0,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,0,0,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,0,0,108,109,108,109,108,109,108,109,108,109,108,109,108,109,108,109,108,109,0,108,108,109,108,109,108,109,108,109,108,109,108,109,111,0,0,111,0,111,0,0,110,111,54,112,110,111,54,112,110,111,54,112,110,111,54,112,54,112,110,54,112,111,111,54,54,110,111,54,112,110,111,54,112,111,112,54,110,111,54,112,110,54,112,54,110,111,54,112,54,110,111,54,112,110,111,54,112,110,111,54,112,54,110,111,54,112,110,54,112,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,0,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,114,115,116,0,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,118,118,21,118,118,118,21,21,118,118,118,21,21,118,118,118,118,118,21,0,0,119,0,119,0,0,0,119,0,0,0,0,22,22,120,120,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,119,120,123,124,125,126,120,121,122,123,124,125,126,22,22,22,119,119,22,120,121,122,22,120,121,122,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,121,122,119,120,121,122,123,124,125,126,120,120,22,22,22,22,120,121,119,120,121,122,123,124,125,126,122,121,122,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,119,120,121,122,123,124,125,126,120,121,122,130,130,0,0,0,127,127,127,0,0,0,130,0,127,130,0,0,0,0,0,130,130,127,127,127,0,0,130,127,128,127,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,130,127,127,128,129,127,130,127,130,23,128,23,128,127,128,129,130,127,128,129,130,130,128,127,128,129,130,128,128,23,129,130,129,23,127,128,129,130,129,128,127,128,129,130,130,127,128,129,130,127,128,129,130,127,128,129,130,128,129,23,0,24,24,24,24,24,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,147,25,25,25,25,15,25,25,25,25,25,25,25,25,25,25,25,25,25,15,0,0,0,132,132,26,26,132,132,132,132,26,27,26,27,132,132,132,26,26,26,27,27,26,26,132,26,132,26,132,132,132,26,0,0,0,0,0,0,0,0,28,28,28,28,28,28,0,137,0,0,0,0,135,136,136,136,0,0,0,137,0,0,0,135,136,136,136,0,137,0,0,0,0,0,0,135,136,137,135,136,137,53,138,135,136,137,53,138,135,136,137,53,138,135,136,137,53,138,137,53,135,136,137,53,138,135,136,137,135,136,137,53,29,138,53,29,138,135,136,137,53,138,135,136,137,53,138,138,135,136,137,53,138,53,53,53,29,29,135,136,137,53,138,29,138,135,136,137,53,138,135,136,137,53,138,135,136,137,53,138,135,136,137,53,138,53,138,53,53,0,0,140,140,139,140,139,0,139,140,139,140,139,140,139,140,139,140,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,139,140,139,140,140,139,140,139,140,139,140,139,140,139,139,140,139,140,139,140,139,140,139,140,139,139,63,139],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[1,2]]]]]],[1,[[4,[[3,[1,2]]]]]],[1,[[4,[5]]]],[1,[[4,[6]]]],[1,[[4,[7]]]],[1,4],[1,[[4,[8]]]],[1,[[4,[[10,[9,1]]]]]],[1,[[4,[[10,[9,1]]]]]],[1,[[4,[11]]]],[1,[[4,[12]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[13,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[1,1],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,15],30],[13,31],0,0,0,[32,13],[32,13],[[],18],[[],1],[[],22],[[],24],[[],25],0,[33,[[34,[15]]]],[33,[[34,[16]]]],[33,[[34,[17]]]],[33,[[34,[18]]]],[33,[[34,[19]]]],[33,[[34,[20]]]],[33,[[34,[1]]]],[33,[[34,[21]]]],[33,[[34,[22]]]],[33,[[34,[23]]]],[33,[[34,[25]]]],[33,[[34,[26]]]],[33,[[34,[27]]]],[33,[[34,[28]]]],[33,[[34,[29]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,11,[36,[11]],35],[[34,[13]]]],[[1,11,[36,[11]],35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,11,35],[[34,[13]]]],[[1,11,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,11,[36,[11]],35],[[34,[13]]]],[[1,11,[36,[11]],35],[[34,[13]]]],[[1,31,35],[[34,[13]]]],[[1,31,35],[[34,[13]]]],[[1,11,31,35],[[34,[13]]]],[[1,11,31,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,35],[[34,[13]]]],[[1,11,35],[[34,[13]]]],[[1,11,35],[[34,[13]]]],0,0,0,[[15,15],5],[[1,37],5],[[1,38],5],[[1,39],5],[[1,40],5],[[1,11],5],[[1,7],5],[[1,5],5],[[1,12],5],[[1,38],5],[[1,40],5],[[1,37],5],[[1,6],5],[[1,41],5],[[1,5],5],[[1,42],5],[[1,7],5],[[1,39],5],[[1,31],5],[[1,43],5],[[1,6],5],[[1,42],5],[[1,31],5],[[1,43],5],[[1,42],5],[[1,12],5],[[1,44],5],[[1,37],5],[[1,41],5],[[1,5],5],[[1,38],5],[[1,43],5],[[1,44],5],[[1,1],5],[[1,11],5],[[1,6],5],[[1,31],5],[[1,41],5],[[1,40],5],[[1,7],5],[[1,9],5],[[1,39],5],[[1,44],5],[[1,12],5],[[24,24],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,45],[[34,[46]]]],[[13,45],[[34,[46]]]],[[15,45],47],[[15,45],47],[[16,45],47],[[17,45],47],[[18,45],47],[[19,45],47],[[20,45],47],[[1,45],[[34,[46]]]],[[1,45],[[34,[46]]]],[[21,45],47],[[22,45],47],[[23,45],47],[[24,45],47],[[24,45],47],[[25,45],47],[[26,45],47],[[27,45],47],[[28,45],47],[[29,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,1],[12,1],[[[3,[[48,[1]],2]]],1],[42,1],[43,1],[39,1],[41,1],[8,1],[[[49,[11]]],1],[11,1],[31,1],[37,1],[6,1],[40,1],[44,1],[9,1],[[],1],[[[4,[[48,[1]]]]],1],[[[36,[[0,[50,[48,[1]]]]]]],1],[[[10,[9,1]]],1],[7,1],[5,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,1],[51,1],[11,[[34,[1,13]]]],0,[[1,52],[[4,[1]]]],[[25,[15,[17]]],[[4,[17]]]],[[25,[15,[22]]],[[4,[22]]]],[[25,[15,[23]]],[[4,[23]]]],[[25,[15,[26]]],[[4,[26]]]],[[25,[15,[20]]],[[4,[20]]]],[[25,[15,[27]]],[[4,[27]]]],[[25,[15,[53]]],[[4,[53]]]],[[25,[15,[29]]],[[4,[29]]]],[[25,[15,[19]]],[[4,[19]]]],[[25,[15,[21]]],[[4,[21]]]],[[25,[15,[28]]],[[4,[28]]]],[[25,[15,[16]]],[[4,[16]]]],[[25,[15,[54]]],[[4,[54]]]],[[25,[15,[55]]],[[4,[55]]]],[[1,52],[[4,[1]]]],[[15,56]],0,0,[[1,52],1],[[1,52],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[[57,58],13],0,[13,[[4,[59]]]],[1,5],[1,5],[13,5],[13,5],[1,5],[1,5],[13,5],[1,5],[1,5],[1,5],[1,5],[13,5],[1,5],0,[13,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,15],[[4,[30]]]],0,0,0,[[1,11],[[4,[1]]]],[[1,11],[[4,[1]]]],0,0,0,0,0,0,0,0,0,0,0,[[15,60],34],[[16,60],34],[[17,60],34],[[18,60],34],[[19,60],34],[[20,60],34],[[1,60],34],[[21,60],34],[[22,60],34],[[23,60],34],[[25,60],34],[[26,60],34],[[27,60],34],[[28,60],34],[[29,60],34],0,0,0,0,[13,[[4,[61]]]],0,0,[1,1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,0,[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],0,0,[[[15,[63]],25,64,65]],[[16,25,64,65]],[[17,25,64,65]],[[18,25,64,65]],[[19,25,64,65]],[[20,25,64,65]],[[21,25,64,65]],[[22,25,64,65]],[[23,25,64,65]],[[25,25,64,65]],[[26,25,64,65]],[[27,25,64,65]],[[28,25,64,65]],[[29,25,64,65]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[66,66],[67,67],[68,68],[69,69],[[]],[[]],[[]],[[]],0,0,[33,[[34,[66]]]],[33,[[34,[67]]]],[33,[[34,[68]]]],[33,[[34,[69]]]],[[66,66],5],[[67,67],5],[[],5],[[],5],0,0,[[66,45],47],[[67,45],47],[[68,45],47],[[69,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[67,31],0,0,[[66,60],34],[[67,60],34],[[68,60],34],[[69,60],34],[66,31],0,0,[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],62],[[],62],[[],62],[[],62],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[70,70],[71,71],[72,72],[[]],[[]],[[]],0,0,[33,[[34,[70]]]],[33,[[34,[71]]]],[33,[[34,[72]]]],0,0,0,0,0,0,[[70,45],47],[[71,45],47],[[72,45],47],[[]],[[]],[[]],0,[[]],[[]],[[]],[[70,60],34],[[71,60],34],[[72,60],34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[70,25,64,65]],[[71,25,64,65]],[[72,25,64,65]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[73,73],[74,74],[75,75],[76,76],[77,77],[[]],[[]],[[]],[[]],[[]],[[],73],[33,[[34,[73]]]],[33,[[34,[74]]]],[33,[[34,[75]]]],[33,[[34,[76]]]],[33,[[34,[77]]]],[[73,73],5],[[74,74],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[[73,45],47],[[74,45],47],[[75,45],47],[[76,45],47],[[77,45],47],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[73,60],34],[[74,60],34],[[75,60],34],[[76,60],34],[[77,60],34],0,[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[],62],[[76,25,64,65]],[[77,25,64,65]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[78,78],[55,55],[[]],[[]],[33,[[34,[55]]]],[[78,78],5],[[],5],0,0,0,0,[[78,45],47],[[55,45],47],[[]],[[]],[[]],[[]],0,0,[[78,60],34],[[55,60],34],0,[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],0,[[55,25,64,65]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[80,80],[81,81],[[]],[[]],[[]],[33,[[34,[80]]]],[33,[[34,[81]]]],[[79,79],5],[[],5],0,0,0,0,0,0,[[79,45],47],[[80,45],47],[[81,45],47],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[79,60],34],[[80,60],34],[[81,60],34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],62],[[],62],[[],62],[[80,25,64,65]],[[81,25,64,65]],0,0,0,0,0,0,0,[82,[[34,[83,13]]]],[[[36,[38]]],[[34,[84,13]]]],[11,[[34,[84,13]]]],[1,[[34,[83,13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[85,85],[[]],[[],85],[33,[[34,[85]]]],[[85,45],47],[[]],[[]],[[85,60],34],0,[[]],[[],34],[[],34],[[],62],[[85,25,64,65]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[87,87],[88,88],[[]],[[]],[[]],[[],86],[[],87],[[],88],[33,[[34,[86]]]],[33,[[34,[87]]]],[33,[[34,[88]]]],[[86,45],47],[[87,45],47],[[88,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[86,60],34],[[87,60],34],[[88,60],34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[86,25,64,65]],[[87,25,64,65]],[[88,25,64,65]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[],89],[[],90],[[],91],[[],92],[33,[[34,[89]]]],[33,[[34,[90]]]],[33,[[34,[91]]]],[33,[[34,[92]]]],[[89,45],47],[[90,45],47],[[91,45],47],[[92,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[89,60],34],[[90,60],34],[[91,60],34],[[92,60],34],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[91,25,64,65]],[[92,25,64,65]],0,[[]],[[]],[93,93],[[]],[[],93],[33,[[34,[93]]]],[[93,45],47],[[]],[[]],[[93,60],34],[[]],[[],34],[[],34],[[],62],[[93,25,64,65]],0,0,[[]],[[]],[[]],[[]],[94,94],[95,95],[[]],[[]],[[],94],[[],95],[33,[[34,[94]]]],[33,[[34,[95]]]],[[94,45],47],[[95,45],47],[[]],[[]],[[]],[[]],[[94,60],34],[[95,60],34],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[94,25,64,65]],[[95,25,64,65]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[96,96],[97,97],[98,98],[[]],[[]],[[]],[[],96],[[],97],[[],98],[33,[[34,[96]]]],[33,[[34,[97]]]],[33,[[34,[98]]]],[[96,45],47],[[97,45],47],[[98,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[96,60],34],[[97,60],34],[[98,60],34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[96,25,64,65]],[[97,25,64,65]],[[98,25,64,65]],0,[[]],[[]],[99,99],[[]],[[],99],[33,[[34,[99]]]],[[99,45],47],[[]],[[]],[[99,60],34],[[]],[[],34],[[],34],[[],62],[[99,25,64,65]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[101,101],[102,102],[103,103],[[]],[[]],[[]],[[]],[[],100],[[],101],[[],102],[[],103],[33,[[34,[100]]]],[33,[[34,[101]]]],[33,[[34,[102]]]],[33,[[34,[103]]]],[[100,45],47],[[101,45],47],[[102,45],47],[[103,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[100,60],34],[[101,60],34],[[102,60],34],[[103,60],34],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[100,25,64,65]],[[101,25,64,65]],[[102,25,64,65]],[[103,25,64,65]],0,0,[[]],[[]],[[]],[[]],[104,104],[105,105],[[]],[[]],[[],104],[[],105],[33,[[34,[104]]]],[33,[[34,[105]]]],[[104,45],47],[[105,45],47],[[]],[[]],[[]],[[]],[[104,60],34],[[105,60],34],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[104,25,64,65]],[[105,25,64,65]],0,0,[[]],[[]],[[]],[[]],[106,106],[107,107],[[]],[[]],[[],106],[[],107],[33,[[34,[106]]]],[33,[[34,[107]]]],[[106,45],47],[[107,45],47],[[]],[[]],[[]],[[]],0,0,[[106,60],34],[[107,60],34],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[106,25,64,65]],[[107,25,64,65]],0,0,[[]],[[]],[[]],[[]],[108,108],[109,109],[[]],[[]],[[],108],[[],109],[33,[[34,[108]]]],[33,[[34,[109]]]],[[108,45],47],[[109,45],47],[[]],[[]],[[]],[[]],0,0,[[108,60],34],[[109,60],34],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[108,25,64,65]],[[109,25,64,65]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[111,111],[54,54],[112,112],[[]],[[]],[[]],[[]],0,[[],112],[33,[[34,[110]]]],[33,[[34,[54]]]],[33,[[34,[112]]]],[[111,111],5],[[],5],0,0,[[110,45],47],[[111,45],47],[[54,45],47],[[112,45],47],[[]],[[]],[[]],[[]],[[111,56]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[110,60],34],[[111,60],34],[[54,60],34],[[112,60],34],0,[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],62],[[],62],[[],62],[[],62],[[110,25,64,65]],[[54,25,64,65]],[[112,25,64,65]],0,[[]],[[]],[113,113],[[]],[[],113],[33,[[34,[113]]]],[[113,45],47],[[]],[[]],[[113,60],34],[[]],[[],34],[[],34],[[],62],[[113,25,64,65]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[115,115],[116,116],[[]],[[]],[[]],[[],114],[[],115],[[],116],[33,[[34,[114]]]],[33,[[34,[115]]]],[33,[[34,[116]]]],[[114,45],47],[[115,45],47],[[116,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[114,60],34],[[115,60],34],[[116,60],34],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[114,25,64,65]],[[115,25,64,65]],[[116,25,64,65]],0,0,[[]],[[]],[117,117],[[]],[[],117],[33,[[34,[117]]]],[[117,45],47],[[117,45],47],[[]],[[]],[[117,60],34],[[]],[[],9],[[],34],[[],34],[[],62],[[117,25,64,65]],0,0,0,[[]],[[]],0,[118,118],[[]],[33,[[34,[118]]]],0,0,[[118,45],47],[[]],[[]],0,0,[[118,60],34],[[]],[[],34],[[],34],[[],62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],119],[[],120],[[],123],[[],124],[[],125],[[],126],[33,[[34,[120]]]],[33,[[34,[121]]]],[33,[[34,[122]]]],[33,[[34,[123]]]],[33,[[34,[124]]]],[33,[[34,[125]]]],[33,[[34,[126]]]],0,0,0,[[119,119],5],[[],5],0,0,0,0,0,0,0,0,[[119,45],47],[[120,45],47],[[121,45],47],[[122,45],47],[[123,45],47],[[124,45],47],[[125,45],47],[[126,45],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[119,60],34],[[120,60],34],[[121,60],34],[[122,60],34],[[123,60],34],[[124,60],34],[[125,60],34],[[126,60],34],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[120,25,64,65]],[[121,25,64,65]],[[122,25,64,65]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[127,37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,127],[128,128],[129,129],[130,130],[[]],[[]],[[]],[[]],[[130,130],30],[[],127],[33,[[34,[127]]]],[33,[[34,[128]]]],[33,[[34,[129]]]],[[127,127],5],[[130,130],5],[[],5],[[],5],0,0,0,0,[[127,45],47],[[128,45],47],[[129,45],47],[[130,45],47],[[]],[[]],[[]],[[]],[[130,56]],0,[[]],[[]],[[]],[[]],0,0,0,0,[[130,130],[[4,[30]]]],0,0,[[127,60],34],[[128,60],34],[[129,60],34],[[130,60],34],0,0,[[]],[[]],[[]],[[]],[130,9],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[128,25,64,65]],[[129,25,64,65]],0,0,[24,11],[[24,11],24],[[24,31],24],[[24,11],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,[82,[[34,[25,13]]]],[[[36,[38]]],[[34,[25,13]]]],[11,[[34,[25,13]]]],[15,4],[[25,15],4],0,0,0,[37,15],0,0,0,0,0,0,[25,[[34,[9,13]]]],[25,[[34,[9,13]]]],[25,[[34,[1,13]]]],[25,[[34,[[3,[38]],13]]]],[25,[[34,[[3,[38]],13]]]],[[25,131],[[34,[13]]]],[[25,131],[[34,[13]]]],[15,31],0,0,0,[[]],[[]],0,0,[132,132],[[]],[[],132],[33,[[34,[132]]]],0,0,0,0,[[132,45],47],[[]],[[]],0,0,0,0,0,0,0,[[132,60],34],0,[[]],0,[[],34],[[],34],[[],62],0,[[[0,[133,134]]],[[34,[9,13]]]],[[[0,[133,134]]],[[34,[9,13]]]],[133,[[34,[1,13]]]],[[[0,[133,134]]],[[34,[[3,[38,2]],13]]]],[[[0,[133,134]]],[[34,[[3,[38,2]],13]]]],[[131,[0,[133,134]]],[[34,[13]]]],[[131,[0,[133,134]]],[[34,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[135,37],[136,37],[137,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,135],[136,136],[137,137],[53,53],[138,138],[[]],[[]],[[]],[[]],[[]],[[],137],[[],53],[33,[[34,[135]]]],[33,[[34,[136]]]],[33,[[34,[137]]]],[33,[[34,[53]]]],[33,[[34,[138]]]],[[135,135],5],[[136,136],5],[[137,137],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,[[135,45],47],[[136,45],47],[[137,45],47],[[53,45],47],[[138,45],47],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[135,60],34],[[136,60],34],[[137,60],34],[[53,60],34],[[138,60],34],0,0,[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[[],62],[[],62],[[],62],[[53,25,64,65]],[[138,25,64,65]],0,0,0,0,0,0,0,0,0,0,[139,139],[[]],[[]],[[]],[[]],[140,140],[[[139,[50]]],[[139,[50]]]],[[]],[[]],[[140,140],30],[[[139,[141]],[139,[141]]],30],[[],[[139,[142]]]],[33,[[34,[[139,[78]]]]]],[33,[[34,[[139,[135]]]]]],[33,[[34,[[139,[68]]]]]],[33,[[34,[[139,[73]]]]]],[33,[[34,[[139,[69]]]]]],[33,[[34,[[139,[130]]]]]],[33,[[34,[[139,[119]]]]]],[33,[[34,[[139,[111]]]]]],[33,[[34,[[139,[74]]]]]],[33,[[34,[[139,[137]]]]]],[33,[[34,[[139,[136]]]]]],[33,[[34,[[139,[67]]]]]],[33,[[34,[[139,[127]]]]]],[33,[[34,[[139,[79]]]]]],[[140,140],5],[[[139,[143]],[139,[143]]],5],[[],5],[[],5],[[140,45],47],[[140,45],47],[[[139,[144]],45],47],[[]],[[]],[[140,56]],[[[139,[145]],56]],[[]],[[]],[[140,140],[[4,[30]]]],[[[139,[146]],[139,[146]]],[[4,[30]]]],[[[139,[133]],60],34],[[]],[[]],[[],9],[[[139,[130]]],9],[[],34],[[],34],[[],34],[[],34],[[],62],[[],62],[139],[[25,64,65]],[[139,25,64,65]]],"c":[],"p":[[4,"Value"],[3,"Global"],[3,"Vec"],[4,"Option"],[15,"bool"],[15,"f64"],[15,"i64"],[3,"Number"],[3,"String"],[3,"Map"],[15,"str"],[15,"u64"],[3,"Error"],[4,"Category"],[3,"Index"],[3,"Accessor"],[3,"Animation"],[3,"Asset"],[3,"Buffer"],[3,"Camera"],[3,"Image"],[3,"Material"],[3,"Mesh"],[3,"Path"],[3,"Root"],[3,"Node"],[3,"Scene"],[3,"Skin"],[3,"Texture"],[4,"Ordering"],[15,"usize"],[8,"Display"],[8,"Deserializer"],[4,"Result"],[8,"Visitor"],[15,"slice"],[15,"u32"],[15,"u8"],[15,"i8"],[15,"i16"],[15,"f32"],[15,"i32"],[15,"isize"],[15,"u16"],[3,"Formatter"],[3,"Error"],[6,"Result"],[8,"Into"],[4,"Cow"],[8,"Clone"],[8,"IntoIterator"],[8,"Index"],[3,"Sampler"],[3,"Light"],[3,"View"],[8,"Hasher"],[4,"Unexpected"],[8,"Expected"],[4,"ErrorKind"],[8,"Serializer"],[8,"Error"],[3,"TypeId"],[8,"Validate"],[8,"Fn"],[8,"FnMut"],[4,"ComponentType"],[4,"Type"],[3,"IndexComponentType"],[3,"GenericComponentType"],[3,"Indices"],[3,"Sparse"],[3,"Values"],[4,"Interpolation"],[4,"Property"],[3,"Channel"],[3,"Target"],[3,"Sampler"],[4,"Target"],[4,"Type"],[3,"Orthographic"],[3,"Perspective"],[8,"Read"],[8,"DeserializeOwned"],[8,"Deserialize"],[3,"Accessor"],[3,"Indices"],[3,"Sparse"],[3,"Values"],[3,"Animation"],[3,"Channel"],[3,"Target"],[3,"Sampler"],[3,"Asset"],[3,"Buffer"],[3,"View"],[3,"Camera"],[3,"Orthographic"],[3,"Perspective"],[3,"Image"],[3,"Material"],[3,"PbrMetallicRoughness"],[3,"NormalTexture"],[3,"OcclusionTexture"],[3,"Mesh"],[3,"Primitive"],[3,"Root"],[3,"KhrLightsPunctual"],[3,"Node"],[3,"Scene"],[3,"KhrLightsPunctual"],[4,"Type"],[3,"Spot"],[3,"Skin"],[3,"Sampler"],[3,"Texture"],[3,"Info"],[3,"Void"],[3,"MimeType"],[4,"AlphaMode"],[3,"PbrMetallicRoughness"],[3,"NormalTexture"],[3,"OcclusionTexture"],[3,"AlphaCutoff"],[3,"EmissiveFactor"],[3,"PbrBaseColorFactor"],[3,"StrengthFactor"],[4,"Mode"],[3,"Primitive"],[3,"MorphTarget"],[4,"Semantic"],[8,"Write"],[3,"UnitQuaternion"],[8,"Serialize"],[8,"Sized"],[4,"MagFilter"],[4,"MinFilter"],[4,"WrappingMode"],[3,"Info"],[4,"Checked"],[4,"Error"],[8,"Ord"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[8,"Get"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDELLLLLKLLLAALALLLLMEDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","hash_map","hash_set","into","raw","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","entry","entry","entry_ref","eq","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","raw_table","raw_table_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","entry","eq","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","next","next","next","next","next","next","next","next","or_insert","raw_table","raw_table_mut","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocation_info","allocator","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","copy_from_nonoverlapping","data_end","data_start","default","drain","drain_iter_from","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","is_bucket_full","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"hashbrown"],[23,"hashbrown::TryReserveError"],[24,"hashbrown::hash_map"],[425,"hashbrown::hash_set"],[640,"hashbrown::raw"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","","","","","The layout of the allocation request that failed.","Dummy default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last element of data table.","Returns pointer to start of data table.","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns an iterator which consumes all elements from the …","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …"],"i":[1,1,0,0,0,0,1,1,1,1,1,21,1,1,1,0,0,1,0,1,1,1,1,72,0,0,0,0,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,7,8,10,12,8,10,12,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,16,17,7,7,15,16,17,7,7,7,7,44,7,7,7,7,7,7,7,7,15,30,31,32,33,16,17,23,34,35,8,36,37,38,10,39,40,12,42,43,44,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,35,38,7,35,38,35,38,7,36,39,42,7,36,7,36,7,7,7,7,7,36,39,42,7,7,7,8,36,37,10,39,40,12,42,43,37,36,7,37,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,30,31,32,33,16,17,23,28,34,36,40,43,36,7,36,39,42,7,7,7,7,36,10,39,40,12,42,43,36,7,7,15,30,31,32,33,16,17,23,34,15,30,31,32,33,16,17,23,28,34,10,12,8,10,12,8,10,12,10,12,7,7,7,7,7,36,39,42,7,36,39,42,39,42,36,39,42,39,42,7,7,7,7,15,30,31,32,33,16,17,23,28,34,7,15,16,17,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,44,7,7,7,7,7,7,0,0,0,0,0,0,0,0,59,0,0,0,59,0,52,52,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,53,54,55,56,57,52,52,53,54,55,56,57,52,52,52,52,52,52,52,52,52,52,52,53,61,58,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,59,62,63,52,52,52,52,52,59,63,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,63,52,52,52,52,52,52,53,61,58,53,61,58,60,54,55,56,57,59,52,52,52,62,52,62,52,52,52,52,53,61,58,60,54,55,56,57,52,52,52,52,53,54,55,56,57,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,52,52,0,0,0,0,0,0,0,50,50,65,65,65,70,65,50,66,69,68,71,70,65,50,66,69,68,71,50,50,50,50,50,50,65,50,66,50,50,65,50,66,65,50,50,50,50,50,50,69,68,50,50,50,50,70,65,50,66,69,68,71,50,50,50,50,50,50,50,50,70,65,50,66,69,68,71,50,66,69,68,71,50,50,50,50,69,68,50,50,50,50,66,69,68,71,66,66,50,50,50,50,50,66,69,68,65,50,66,70,65,50,66,69,68,71,50,70,65,50,66,69,68,71,50,50,50,70,65,50,66,69,68,71,50,50],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[1,3],4],[[]],0,0,[[]],0,[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],13],[[[7,[0]]]],[[[7,[14,14,14,[0,[0,14]]]]],[[7,[14,14,14,[0,[0,14]]]]]],[15,15],[16,16],[17,17],[[[7,[14,14,14,[0,[0,14]]]],[7,[14,14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[7,[22,[0,[22,0]]]]]],[[[7,[0]]],[[23,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[10,[[0,[18,19]],20,0]]]],0,[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[12,[[0,[18,19]],[0,[19,[21,[[0,[18,19]]]],11]],20,0]]]],[[[7,[[0,[18,19]],24,20,0]],[7,[[0,[18,19]],24,20,0]]],2],[[],2],[[[7,[[0,[18,19,25]],25,20,0]],26]],[[[7,[[0,[18,19,25]],25,20,0]],26]],[[[7,[[0,[18,19]],20,0]],26]],[[[7,[0]],27],[[28,[27,0]]]],[[[7,[29,29,0]],3],4],[[[15,[29,29]],3],4],[[[30,[29,29]],3],4],[[[31,[29,29,0]],3],4],[[[32,[29,29,0]],3],4],[[[33,[29,0]],3],4],[[[16,[29]],3],4],[[[17,[29]],3],4],[[[23,[29,29,0]],3],4],[[[34,[29]],3],4],[[[35,[0]],3],4],[[[8,[29,29,0]],3],4],[[[36,[29,29,0]],3],4],[[[37,[0]],3],4],[[[38,[0]],3],4],[[[10,[29,29,0]],3],4],[[[39,[29,29,0]],3],4],[[[40,[29,0]],3],4],[[[12,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[42,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[43,[[41,[[0,[11,29]]]],[0,[11,29]],0]],3],4],[[[44,[29,29,0]],3],4],[[[44,[29,29,0]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[0]],45,27],[[8,[0]]]],[[[38,[0]],45,27],46],[26,[[7,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[35,[20,0]],[0,[19,21,11]]],[[8,[20,0]]]],[[[38,[20,0]],[0,[19,21,11]]],46],[[[35,[0]],45,[0,[21,11]]],[[8,[0]]]],[[[38,[0]],45,[0,[21,11]]],46],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],46],[[[8,[19,20,0]],19],[[36,[19,20,0]]]],[[[36,[0]]]],[[[37,[19,20,0]],19]],[[[10,[19,20,0]]],[[39,[19,20,0]]]],[[[39,[0]]]],[[[40,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]],[[42,[[0,[19,[48,[11]]]],11,20,0]]]],[[[42,[11,0]]]],[[[43,[[0,[19,[48,[11]]]],11,20,0]]]],[[[37,[19,20,0]],45,19]],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]]],[[[37,[0]],45,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],15],[[[7,[0]]],30],[[[7,[0]]],[[31,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[0]]]],[[[40,[0]]]],[[[43,[[48,[11]],11,0]]],[[48,[11]]]],[[[36,[0]]]],[[[7,[0]]],[[32,[0]]]],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]],[[33,[0]]]],[[[7,[0]]],2],[[[7,[0]]],15],[[[7,[0]]],30],[[[36,[0]]]],[[[10,[0]]]],[[[39,[0]]]],[[[40,[0]]]],[[[12,[[41,[11]],11,0]]],11],[[[42,[11,0]]]],[[[43,[[41,[11]],11,0]]],11],[[[36,[0]]]],[[[7,[0]]],16],[[[7,[0]]],13],[15,13],[30,13],[[[31,[0]]],13],[[[32,[0]]],13],[[[33,[0]]],13],[16,13],[17,13],[[[23,[0]]],13],[34,13],[15,46],[30,46],[[[31,[0]]],46],[[[32,[0]]],46],[[[33,[0]]],46],[16,46],[17,46],[[[23,[0]]],46],[[[28,[27,0]]],46],[34,46],[[[10,[19,22,20,0]]],22],[[[12,[[0,[19,[48,[11]]]],11,22,20,0]]],22],[[[8,[19,20,0]],19]],[[[10,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]]],[[[8,[19,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[48,[11]]]],11,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[41,[11]],[48,[11]]]],11,20,0]],9]],[[[7,[0]]],[[38,[0]]]],[[[7,[0]]],[[35,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]]],[[[36,[0]],9],[[8,[0]]]],[[[39,[0]],9],[[10,[0]]]],[[[42,[11,0]],9],[[12,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]],[[48,[11]]]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[0]],27]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[[0,[18,19]],20,0]]]],[15],[30],[[[31,[0]]]],[[[32,[0]]]],[[[33,[0]]]],[16],[17],[[[23,[0]]]],[[[28,[27,0]]]],[34],[[]],[[]],[[]],[[]],[[],51],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[5,[[44,[[0,[18,19]],20,0]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[7,[0]]],17],[[[7,[0]]],34],[13,7],0,[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],13],[[[52,[0]]]],[[[52,[14,14,[0,[0,14]]]]],[[52,[14,14,[0,[0,14]]]]]],[53,53],[[[54,[0]]],[[54,[0]]]],[[[55,[0]]],[[55,[0]]]],[[[56,[0]]],[[56,[0]]]],[[[57,[0]]],[[57,[0]]]],[[[52,[14,14,[0,[0,14]]]],[52,[14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[52,[22,[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[55,[[0,[18,19]],20,0]]]],[[[52,[0]]],[[58,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[59,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[],2],[[[52,[[0,[18,19,25]],20,0]],26]],[[[52,[[0,[18,19]],20,0]],26]],[[[52,[0]],27],[[60,[27,0]]]],[[[52,[29,0]],3],4],[[[53,[29]],3],4],[[[61,[29,0]],3],4],[[[58,[29,0]],3],4],[[[54,[[0,[29,18,19]],20,0]],3],4],[[[55,[[0,[29,18,19]],20,0]],3],4],[[[56,[[0,[29,18,19]],20,0]],3],4],[[[57,[[0,[29,18,19]],20,0]],3],4],[[[59,[29,0]],3],4],[[[62,[29,0]],3],4],[[[63,[29,0]],3],4],[[[7,[0]]],[[52,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[52,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[[59,[0]]]],[[[62,[0]]]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],64,11]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]],9],[[0,[18,19]]]],[[[52,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],2],[[[59,[19,20,0]]],[[62,[19,20,0]]]],[[[63,[19,20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[54,[[0,[18,19]],20,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],[[61,[0]]]],[[[52,[0]]],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],53],[[[52,[0]]],13],[53,13],[[[61,[0]]],13],[[[58,[0]]],13],[53,46],[[[61,[0]]],46],[[[58,[0]]],46],[[[60,[27,0]]],46],[[[54,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[55,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[57,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[59,[19,20,0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[46,[[0,[18,19]]]]]],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[0]],27]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[[0,[18,19]],20,0]]]],[53],[[[61,[0]]]],[[[58,[0]]]],[[[60,[27,0]]]],[[[54,[[0,[18,19]],20,0]]]],[[[55,[[0,[18,19]],20,0]]]],[[[56,[[0,[18,19]],20,0]]]],[[[57,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[56,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[52,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[57,[[0,[18,19]],20,0]]]],[13,[[52,[0]]]],0,[[],[[52,[0]]]],0,0,0,0,0,0,0,0,[[[50,[0]]]],0,[65],[65],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],13],65],[[[50,[0]],65],13],[[[50,[0]]],13],[[[50,[0]]],13],[[[50,[0]]]],[[[50,[0]]]],[65,65],[[[50,[14,[0,[0,14]]]]],[[50,[14,[0,[0,14]]]]]],[66,66],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]]]],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]],49]],[[]],[[]],[[]],[[65,65]],[[[50,[0]]],67],[[[50,[0]]],67],[[],[[50,[[0,[0,22]]]]]],[[[50,[0]]],[[68,[0]]]],[[[50,[0]],66],[[68,[0]]]],[[[50,[0]]]],[[[69,[0]]]],[[[68,[0]]]],[[[50,[0]],65]],[[[50,[0]],45,27],2],[[[50,[0]],45,27],[[46,[65]]]],[[[50,[0]],45,27,49],[[5,[65,70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],45,27],46],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],45,27],46],[[[50,[0]],45,49],65],[[[50,[0]],45,49]],[[[50,[0]],45,70],65],[[[50,[0]],45],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]]],[[69,[0]]]],[[]],[[]],[[]],[[]],[[[50,[0]],66],[[69,[0]]]],[[[50,[0]],13],2],[[[50,[0]]],2],[[[50,[0]]],66],[[[69,[0]]],66],[[[68,[0]]],66],[[[50,[0]],45],71],[[[50,[0]]],13],[[],[[50,[0]]]],0,[66,[[46,[65]]]],[[[69,[0]]],46],[[[68,[0]]],46],[71,[[46,[65]]]],[[66,65]],[[66,65]],[[[50,[0]],65]],[[[50,[0]],45,27],46],[[[50,[0]],65,9],2],[[[50,[0]],13,49]],[[[50,[0]],13,49]],[66],[[[69,[0]]]],[[[68,[0]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],45],[[5,[65]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],13,49],[[5,[1]]]],[13,[[5,[[50,[0]],1]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[13,[[50,[0]]]],0],"c":[],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"HashMap"],[4,"RawEntryMut"],[8,"FnOnce"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Default"],[3,"Drain"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[8,"FnMut"],[3,"ExtractIf"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[15,"u64"],[4,"Option"],[15,"array"],[8,"From"],[8,"Fn"],[3,"RawTable"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[4,"Entry"],[3,"ExtractIf"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"ToOwned"],[3,"Bucket"],[3,"RawIter"],[3,"NonNull"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[13,"AllocError"],[4,"DefaultHashBuilder"]]},\
"hecs":{"doc":"A handy ECS","t":"EDDDDDDDDNDDIYDDDDIEIISIIYDDDDQDNNDNDNNEDDDDIYDDDDEINDDNDDDDNDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Access","Archetype","ArchetypeColumn","ArchetypeColumnMut","ArchetypesGeneration","Batch","BatchIncomplete","BatchWriter","BatchedIter","Both","BuiltEntity","BuiltEntityClone","Bundle","Bundle","ColumnBatch","ColumnBatchBuilder","ColumnBatchType","CommandBuffer","Component","ComponentError","ComponentRef","ComponentRefShared","DANGLING","DynamicBundle","DynamicBundleClone","DynamicBundleClone","Entity","EntityBuilder","EntityBuilderClone","EntityRef","Item","Iter","Iterate","Left","MissingComponent","MissingComponent","NoSuchEntity","NoSuchEntity","NoSuchEntity","Or","PreparedQuery","PreparedQueryBorrow","PreparedQueryIter","PreparedView","Query","Query","QueryBorrow","QueryIter","QueryMut","QueryOne","QueryOneError","QueryShared","Read","Ref","RefMut","Right","Satisfies","SpawnBatchIter","SpawnColumnBatchIter","TakenEntity","Unsatisfied","View","With","Without","World","Write","access","add","add","add","add_bundle","add_bundle","archetypes","archetypes_generation","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","cmp","component_types","component_types","component_types","component_types","contains","default","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","despawn","despawn","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entity","entity","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exchange","exchange_one","extend","fill","find_entity_from_id","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_iter","get","get","get","get","get","get","get","get","get_mut","get_mut","get_mut","get_mut","get_mut_n","get_mut_n","get_unchecked","get_unchecked","get_unchecked","has","has","has","has","has","has","has","has","has_dynamic","hash","hash","hash","hash","hash","hash","id","ids","insert","insert","insert_one","insert_one","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_batch","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_batched","is_empty","is_empty","is_empty","iter","iter","iter","iter_batched","left","len","len","len","len","len","len","len","len","map","map","map","new","new","new","new","new","new","new","new","new","next","next","next","next","next","next","next","partial_cmp","partial_cmp","partial_cmp","push","query","query","query","query_mut","query_mut","query_one","query_one_mut","remove","remove","remove_one","remove_one","reserve","reserve_entities","reserve_entity","right","run_on","satisfies","satisfies","satisfies","size_hint","size_hint","size_hint","size_hint","size_hint","spawn","spawn","spawn_at","spawn_batch","spawn_column_batch","spawn_column_batch_at","split","take","to_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view_mut","with","with","with","without","without","without","writer"],"q":[[0,"hecs"]],"d":["Type of access a <code>Query</code> may have to an <code>Archetype</code>","A collection of entities having the same component types","Shared reference to a single column of component data in …","Unique reference to a single column of component data in …","Determines freshness of information derived from …","A sequence of entities yielded by <code>BatchedIter</code>","Error indicating that a <code>ColumnBatchBuilder</code> was missing …","Handle for appending components","Batched version of <code>QueryIter</code>","Both an <code>L</code> and an <code>R</code>","The output of an <code>EntityBuilder</code>, suitable for passing to …","A collection of components that implement <code>Clone</code>","A statically typed collection of components","Implement <code>Bundle</code> for a struct","A collection of component data for entities with the same …","An incomplete collection of component data for entities …","A collection of component types","Records operations for future application to a <code>World</code>","Types that can be components, implemented automatically …","Errors that arise when accessing components","<code>&amp;T</code> or <code>&amp;mut T</code> where <code>T</code> is some component type","<code>&amp;T</code> where <code>T</code> is some component type","An <code>Entity</code> that does not necessarily correspond to data in …","A dynamically typed collection of components","A dynamically typed collection of cloneable components","Implement <code>DynamicBundleClone</code> for a struct.","Lightweight unique ID, or handle, of an entity","Helper for incrementally constructing a bundle of …","Variant of <code>EntityBuilder</code> that clones components on use","Handle to an entity with any component types","Type of results yielded by the query","Iterator over all of a world’s entities","Read entity IDs only, no components","Just an <code>L</code>","Error indicating that an entity did not have a required …","The entity did not have a requested component","Error indicating that no entity with a particular ID exists","The entity was already despawned","The entity was already despawned","Holds an <code>L</code>, or an <code>R</code>, or both","A prepared query can be stored independently of the <code>World</code> …","Combined borrow of a <code>PreparedQuery</code> and a <code>World</code>","Iterates over all entities matching a <code>PreparedQuery</code>","Provides random access to the results of a prepared query","A collection of component types to fetch from a <code>World</code>","Implement <code>Query</code> for a struct","A borrow of a <code>World</code> sufficient to execute the query <code>Q</code>","Iterator over the set of entities with the components in <code>Q</code>","A query builder that’s convertible directly into an …","A borrow of a <code>World</code> sufficient to execute the query <code>Q</code> on a …","Errors that arise when querying a single entity","Marker trait indicating whether a given <code>Query</code> will not …","Read components","Shared borrow of an entity’s component","Unique borrow of an entity’s component","Just an <code>R</code>","A query that matches all entities, yielding <code>bool</code>s …","Entity IDs created by <code>World::spawn_batch</code>","Iterator over <code>Entity</code>s spawned by …","An entity removed from a <code>World</code>","The entity exists but does not satisfy the query","Provides random access to the results of a query","Transforms query <code>Q</code> by skipping entities not satisfying …","Transforms query <code>Q</code> by skipping entities satisfying query <code>R</code>","An unordered collection of entities, each having any …","Read and write components","How, if at all, <code>Q</code> will access entities in this archetype","Update to include <code>T</code> components","Add <code>component</code> to the entity.","Add <code>component</code> to the entity.","Add all components in <code>bundle</code> to the entity.","Add all components in <code>bundle</code> to the entity.","Inspect the archetypes that entities are organized into","Returns a distinct value after <code>archetypes</code> is changed","Convert from <code>&amp;mut Or&lt;L, R&gt;</code> to <code>Or&lt;&amp;mut L, &amp;mut R&gt;</code>","Convert from <code>&amp;Or&lt;L, R&gt;</code> to <code>Or&lt;&amp;L, &amp;R&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish the batch, failing if any components are missing","Construct a <code>Bundle</code> suitable for spawning","Convert into a value whose shared references are …","Drop all recorded commands","Despawn all entities","Drop previously <code>add</code>ed components","Drop previously <code>add</code>ed components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps an <code>Or&lt;&amp;L, &amp;R&gt;</code> to an <code>Or&lt;L, R&gt;</code> by cloning its contents","","","","Enumerate the types of the components of entities stored …","Enumerate the types of the entity builder’s components","Enumerate the types of the entity builder’s components","Enumerate the types of the entity’s components","Whether <code>entity</code> still exists","Create an empty buffer","","","","","","","","","","","","Despawn <code>entity</code> from World","Destroy an entity and all its components","","","","","","","","","","","","","Access an entity regardless of its component types","Get the <code>Entity</code> handle associated with this entity","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove <code>S</code> components from <code>entity</code> and then add <code>components</code>","Remove the <code>S</code> component from <code>entity</code> and then add <code>component</code>","","How many components have been added so far","Given an id obtained from <code>Entity::id</code>, reconstruct the …","Convert all reserved entities into empty entities that can …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Reconstruct an <code>Entity</code> previously destructured with <code>to_bits</code> …","","Borrow all components of a single type from these …","Retrieve the query results corresponding to <code>entity</code>","Retrieve the query results corresponding to <code>entity</code>","Get the query result, or <code>None</code> if the entity does not …","Short-hand for <code>entity</code> followed by <code>EntityRef::get</code>","Borrow a shared reference <code>T</code> to some component type, if it …","Borrow a shared reference <code>T</code> to some component type, if it …","Borrow a single component, if it exists","Retrieve the query results corresponding to <code>entity</code>","Retrieve the query results corresponding to <code>entity</code>","Borrow a shared or unique reference <code>T</code> to some component …","Borrow a shared or unique reference <code>T</code> to some component …","Like <code>get_mut</code>, but allows checked simultaneous access to …","Like <code>get_mut</code>, but allows checked simultaneous access to …","Like <code>get_mut</code>, but allows simultaneous access to multiple …","Like <code>get_mut</code>, but allows simultaneous access to multiple …","Borrow a single component of <code>entity</code> without safety checks","Whether this archetype contains <code>T</code> components","Checks if the Bundle contains the given <code>T</code>:","Checks if the Bundle contains the given <code>T</code>:","","Checks to see if the component of type <code>T</code> exists","Checks to see if the component of type <code>T</code> exists","","Determine whether this entity has a <code>T</code> component without …","Whether this archetype contains components with the type …","","","","","","","Extract a transiently unique identifier","Raw IDs of the entities in this archetype","Add components from <code>bundle</code> to <code>entity</code>, if it exists","Add <code>components</code> to <code>entity</code>","Add <code>component</code> to <code>entity</code>, if the entity exists","Add <code>component</code> to <code>entity</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a <code>ColumnBatchBuilder</code> for <em>exactly</em> <code>size</code> entities …","","","","","","","","","","","Like <code>into_iter</code>, but returns child iterators of at most …","Whether this archetype contains no entities","Whether no entities are live","Shorthand for <code>self.len() == 0</code>","Execute the query","Execute the prepared query","Iterate over all entities in the world","Like <code>iter</code>, but returns child iterators of at most …","Extract <code>L</code> regardless of whether <code>R</code> is present","Number of entities in this archetype","","","Number of currently live entities","","","","Number of components in this entity","Transform the <code>Ref&lt;&#39;_, T&gt;</code> to point to a part of the …","Transform the <code>RefMut&lt;&#39;_, T&gt;</code> to point to a part of the …","Transform <code>L</code> with <code>f</code> and <code>R</code> with <code>g</code>","Create a batch for <em>exactly</em> <code>size</code> entities with certain …","Create an empty command buffer","Create a prepared query which is not yet attached to any …","Create an empty world","Create an empty type","Construct an error representing a missing <code>T</code>","Create a builder representing an entity with no components","Create a builder representing an entity with no components","Construct an <code>Or&lt;L, R&gt;</code> if at least one argument is <code>Some</code>","","","","","","","","","","","Add a component if there’s space remaining","Query <code>world</code>, using dynamic borrow checking","Efficiently iterate over all entities that have certain …","Run a query against this entity","Query a uniquely borrowed world","Query a uniquely borrowed world","Prepare a query against a single entity, using dynamic …","Query a single entity in a uniquely borrow world","Remove components from <code>entity</code> if they exist","Remove components from <code>entity</code>","Remove a component from <code>entity</code> if it exists","Remove the <code>T</code> component from <code>entity</code>","Ensure at least <code>additional</code> entities with exact components <code>T</code>…","Allocate many entities ID concurrently","Allocate an entity ID concurrently","Extract <code>R</code> regardless of whether <code>L</code> is present","Run recorded commands on <code>world</code>, clearing the command buffer","Determine whether this archetype would satisfy the query <code>Q</code>","Short-hand for <code>entity</code> followed by <code>EntityRef::satisfies</code>","Determine whether this entity would satisfy the query <code>Q</code>","","","","","","Spawn a new entity with <code>components</code>","Create an entity with certain components","Create an entity with certain components and a specific …","Efficiently spawn a large number of entities with the same …","Super-efficiently spawn the contents of a <code>ColumnBatch</code>","Hybrid of <code>spawn_column_batch</code> and <code>spawn_at</code>","Destructure into two <code>Option</code>s, where either or both are <code>Some</code>","Despawn <code>entity</code>, yielding a <code>DynamicBundle</code> of its components","Convert to a form convenient for passing outside of rust","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provide random access to the query results","Provide random access to the query results","Provides random access to the results of the prepared query","Provide random access to query results for a uniquely …","Transform the query into one that requires another query …","Transform the query into one that requires another query …","Transform the query into one that requires another query …","Transform the query into one that skips entities …","Transform the query into one that skips entities …","Transform the query into one that skips entities …","Get a handle for inserting <code>T</code> components if <code>T</code> was in the …"],"i":[0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,35,0,2,14,0,29,0,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,14,0,0,0,0,30,0,0,0,0,2,1,4,5,7,5,7,11,11,14,14,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,15,5,7,21,11,5,7,22,24,4,17,25,26,27,7,20,28,2,14,29,30,13,22,24,4,17,25,26,27,7,20,28,2,14,29,30,13,14,26,2,14,1,5,7,28,11,21,36,11,4,5,7,22,38,24,39,38,39,21,11,1,22,38,15,21,19,40,41,42,43,44,45,11,28,17,25,26,27,2,14,29,30,13,17,17,25,25,26,26,27,27,2,2,14,14,29,29,30,30,13,13,11,11,11,49,11,11,22,38,24,39,4,17,17,25,25,26,27,27,2,14,29,29,30,30,13,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,7,20,20,28,2,14,29,29,29,30,30,13,26,11,1,56,57,42,11,5,7,28,56,57,5,7,56,57,56,57,11,1,9,9,19,5,7,20,28,1,17,25,26,14,29,30,26,1,21,11,21,11,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,4,40,67,64,66,71,68,11,65,44,45,64,1,11,28,40,41,11,40,14,1,67,68,11,65,44,45,28,24,39,14,15,21,36,11,4,25,5,7,14,67,66,71,68,65,44,45,26,2,14,49,36,11,28,36,11,11,11,21,11,21,11,11,11,11,14,21,1,11,28,67,68,65,44,45,21,11,11,11,11,11,14,11,26,22,24,4,17,25,26,27,7,20,28,2,14,29,30,13,17,25,27,29,30,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,1,22,38,15,16,49,21,19,24,39,76,75,77,40,67,64,66,71,36,41,68,56,57,42,43,11,65,44,45,4,17,25,26,27,5,7,20,28,2,14,29,30,13,40,64,41,36,40,64,42,40,64,42,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[4,4],[[5,6],5],[[7,[0,[6,8]]],7],[[5,9],5],[[7,10],7],[11,12],[11,13],[14,14],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[18,[16,17]]]],[5,19],[7,20],[21],[11],[5],[7],[[[22,[6]]],[[22,[6]]]],[[[24,[23]]],[[24,[23]]]],[4,4],[17,17],[25,25],[26,26],[27,27],[7,7],[20,20],[28,28],[2,2],[[[14,[8,8]]],[[14,[8,8]]]],[29,29],[30,30],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[8,8]]],[[14,[8,8]]]],[[26,26],31],[[2,2],31],[[[14,[32,32]],[14,[32,32]]],31],[1,12],[5,33],[7,33],[28,33],[[11,26],34],[[],21],[[],[[36,[35]]]],[[],11],[[],4],[[],5],[[],7],[[[22,[6]]],[[37,[6]]]],[[[38,[6]]],[[37,[6]]]],[[[24,[23]]],23],[[[39,[23]]],23],[[[38,[6]]],[[37,[6]]]],[[[39,[23]]],23],[[21,26]],[[11,26],[[18,[27]]]],[1],[[[22,[6]]]],[[[38,[6]]]],[15],[21],[19],[[[40,[35]]]],[[[41,[35]]]],[[[42,[35]]]],[43],[[[44,[33]]]],[45],[[11,26],[[18,[28,27]]]],[28,26],[[17,17],34],[[25,25],34],[[26,26],34],[[27,27],34],[[2,2],34],[[[14,[46,46]],[14,[46,46]]],34],[[29,29],34],[[30,30],34],[[13,13],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[11,26,9],[[18,[47,29]]]],[[11,26,6],[[18,[6,29]]]],[[11,48]],[49,50],[[11,50],26],[11],[[[22,[[0,[6,51]]]],52],53],[[[38,[[0,[6,51]]]],52],53],[[[24,[[0,[23,51]]]],52],53],[[[39,[[0,[23,51]]]],52],53],[[4,52],53],[[17,52],53],[[17,52],53],[[25,52],53],[[25,52],53],[[26,52],53],[[27,52],53],[[27,52],53],[[2,52],53],[[[14,[51,51]],52],53],[[29,52],53],[[29,52],53],[[30,52],53],[[30,52],53],[[13,52],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,7],[[]],[7,20],[[]],[[]],[[]],[[]],[27,29],[[]],[25,29],[[]],[27,30],[[]],[54,[[3,[26]]]],[48,11],[1,3],[[[56,[55,35]],26],3],[[[57,[55,35]],26],3],[[[42,[35]]],3],[[11,26],[[18,[29]]]],[5,[[3,[58]]]],[7,[[3,[58]]]],[28,3],[[[56,[35]],26],3],[[[57,[35]],26],3],[5,[[3,[59]]]],[7,[[3,[59]]]],[[[56,[35]],[60,[26]]],[[60,[3]]]],[[[57,[35]],[60,[26]]],[[60,[3]]]],[[[56,[35]],26],3],[[[57,[35]],26],3],[[11,26],[[18,[59,29]]]],[1,34],[[],34],[[],34],[19,34],[5,34],[7,34],[20,34],[28,34],[[1,61],34],[[17,62]],[[25,62]],[[26,62]],[[[14,[63,63]],62]],[[29,62]],[[30,62]],[26,50],[1,[[37,[50]]]],[[21,26,9]],[[11,26,9],[[18,[27]]]],[[21,26,6]],[[11,26,6],[[18,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,50],15],[[[40,[35]]]],[[]],[[[64,[35]]]],[[]],[[]],[[]],[11,65],[[]],[[]],[[]],[[[64,[35]],50],[[66,[35]]]],[1,34],[11,34],[28,34],[[[40,[35]]],[[67,[35]]]],[[[41,[35]]],[[68,[35]]]],[11,65],[[[40,[35]],50],[[66,[35]]]],[14,3],[1,50],[[[67,[35]]],69],[[[68,[35]]],69],[11,50],[65,69],[[[44,[12]]],69],[45,69],[28,69],[[[24,[23]],70],[[24,[23]]]],[[[39,[23]],70],[[39,[23]]]],[[14,70,70],14],[[4,50],15],[[],21],[[],[[36,[35]]]],[[],11],[[],4],[[],25],[[],5],[[],7],[[3,3],[[3,[14]]]],[[[67,[35]]],3],[[[66,[35]]],3],[[[71,[35]]],3],[[[68,[35]]],3],[65,3],[[[44,[33]]],[[3,[26]]]],[45,[[3,[26]]]],[[26,26],[[3,[31]]]],[[2,2],[[3,[31]]]],[[[14,[72,72]],[14,[72,72]]],[[3,[31]]]],[49,18],[[[36,[35]],11],[[41,[35]]]],[11,[[40,[35]]]],[28,[[42,[35]]]],[[[36,[35]],11],[[68,[35]]]],[11,[[64,[35]]]],[[11,26],[[18,[[42,[35]],27]]]],[[11,26],[[18,[30]]]],[[21,26]],[[11,26],[[18,[47,29]]]],[[21,26]],[[11,26],[[18,[6,29]]]],[[11,50]],0,[11,26],[14,3],[[21,11]],[1,34],[[11,26],[[18,[34,27]]]],[28,34],[[[67,[35]]]],[[[68,[35]]]],[65],[[[44,[33]]]],[45],[[21,9]],[[11,9],26],[[11,26,9]],[[11,48],44],[[11,16],45],[[11,[37,[26]],16]],[14],[[11,26],[[18,[43,27]]]],[26,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],74],[[],74],[[],74],[[],74],[[],74],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[[40,[35]]],[[56,[35]]]],[[[64,[35]]],[[56,[35]]]],[[[41,[35]]],[[57,[35]]]],[[[36,[35]],11],[[57,[35]]]],[[[40,[35]]],[[40,[[75,[35,35]]]]]],[[[64,[35]]],[[64,[[75,[35,35]]]]]],[[[42,[35]]],[[42,[[75,[35,35]]]]]],[[[40,[35]]],[[40,[[76,[35,35]]]]]],[[[64,[35]]],[[64,[[76,[35,35]]]]]],[[[42,[35]]],[[42,[[76,[35,35]]]]]],[15,[[3,[[49,[6]]]]]]],"c":[],"p":[[3,"Archetype"],[4,"Access"],[4,"Option"],[3,"ColumnBatchType"],[3,"EntityBuilder"],[8,"Component"],[3,"EntityBuilderClone"],[8,"Clone"],[8,"DynamicBundle"],[8,"DynamicBundleClone"],[3,"World"],[8,"ExactSizeIterator"],[3,"ArchetypesGeneration"],[4,"Or"],[3,"ColumnBatchBuilder"],[3,"ColumnBatch"],[3,"BatchIncomplete"],[4,"Result"],[3,"BuiltEntity"],[3,"BuiltEntityClone"],[3,"CommandBuffer"],[3,"ArchetypeColumn"],[8,"Sized"],[3,"Ref"],[3,"MissingComponent"],[3,"Entity"],[3,"NoSuchEntity"],[3,"EntityRef"],[4,"ComponentError"],[4,"QueryOneError"],[4,"Ordering"],[8,"Ord"],[8,"Iterator"],[15,"bool"],[8,"Query"],[3,"PreparedQuery"],[15,"slice"],[3,"ArchetypeColumnMut"],[3,"RefMut"],[3,"QueryBorrow"],[3,"PreparedQueryBorrow"],[3,"QueryOne"],[3,"TakenEntity"],[3,"SpawnBatchIter"],[3,"SpawnColumnBatchIter"],[8,"PartialEq"],[8,"Bundle"],[8,"IntoIterator"],[3,"BatchWriter"],[15,"u32"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"u64"],[8,"QueryShared"],[3,"View"],[3,"PreparedView"],[8,"ComponentRefShared"],[8,"ComponentRef"],[15,"array"],[3,"TypeId"],[8,"Hasher"],[8,"Hash"],[3,"QueryMut"],[3,"Iter"],[3,"BatchedIter"],[3,"QueryIter"],[3,"PreparedQueryIter"],[15,"usize"],[8,"FnOnce"],[3,"Batch"],[8,"PartialOrd"],[3,"NonZeroU64"],[3,"String"],[3,"With"],[3,"Without"],[3,"Satisfies"]]},\
"hecs_macros":{"doc":"","t":"YYY","n":["Bundle","DynamicBundleClone","Query"],"q":[[0,"hecs_macros"]],"d":["Implement <code>Bundle</code> for a struct","Implement <code>DynamicBundleClone</code> for a struct.","Implement <code>Query</code> for a struct"],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[]},\
"hexf_parse":{"doc":"Parses hexadecimal float literals. There are two functions …","t":"DLLLLLLLLLLLFFLLLLL","n":["ParseHexfError","borrow","borrow_mut","clone","clone_into","description","eq","equivalent","fmt","fmt","from","into","parse_hexf32","parse_hexf64","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"hexf_parse"]],"d":["An opaque error type from <code>parse_hexf32</code> and <code>parse_hexf64</code>.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Tries to parse a hexadecimal float literal to <code>f32</code>. The …","Tries to parse a hexadecimal float literal to <code>f64</code>. The …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[1,2],[[1,1],3],[[],3],[[1,4],5],[[1,4],5],[[]],[[]],[[2,3],[[7,[6,1]]]],[[2,3],[[7,[8,1]]]],[[]],[[],9],[[],7],[[],7],[[],10]],"c":[],"p":[[3,"ParseHexfError"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"f32"],[4,"Result"],[15,"f64"],[3,"String"],[3,"TypeId"]]},\
"humantime":{"doc":"Human-friendly time parser and formatter","t":"DENDNNNNNNDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMM","n":["Duration","DurationError","Empty","FormattedDuration","InvalidCharacter","InvalidDigit","InvalidFormat","NumberExpected","NumberOverflow","OutOfRange","Rfc3339Timestamp","Timestamp","TimestampError","UnknownUnit","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_duration","format_rfc3339","format_rfc3339_micros","format_rfc3339_millis","format_rfc3339_nanos","format_rfc3339_seconds","from","from","from","from","from","from","from","from","from_str","from_str","get_ref","get_ref","hash","into","into","into","into","into","into","into","into","parse_duration","parse_rfc3339","parse_rfc3339_weak","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","end","start","unit","value"],"q":[[0,"humantime"],[120,"humantime::DurationError"]],"d":["A wrapper for duration that has <code>FromStr</code> implementation","Error parsing human-friendly duration","The value was an empty string (or consists only whitespace)","A wrapper type that allows you to Display a Duration","Invalid character during parsing","Bad character where digit is expected","Other formatting errors","Non-numeric value where number is expected","The numeric value is too large","Numeric component is out of range","A wrapper type that allows you to Display a SystemTime","A wrapper for SystemTime that has <code>FromStr</code> implementation","Error parsing datetime (timestamp)","Unit in the number is not one of allowed units","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats duration into a human-readable string","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000000Z</code>","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a reference to the <code>Duration</code> that is being …","Returns a reference to the <code>SystemTime</code> that is being …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parse duration object <code>1hour 12min 5s</code>","Parse RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>","Parse RFC3339-like timestamp <code>2018-02-14 00:28:07</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","End of the invalid unit inside the original string","Start of the invalid unit inside the original string","The unit verbatim","A number associated with the unit"],"i":[0,0,5,0,5,7,7,5,5,7,0,0,0,5,1,3,5,6,1,3,7,8,5,6,1,3,7,8,5,6,1,3,7,8,5,6,1,3,7,8,1,3,5,1,3,7,1,3,5,5,6,6,1,1,3,3,7,7,8,8,0,0,0,0,0,0,5,6,1,1,3,3,7,8,1,3,6,8,1,5,6,1,1,3,3,7,8,0,0,0,5,6,1,3,7,8,5,6,1,3,7,8,5,6,1,3,7,8,5,6,1,3,7,8,5,6,1,3,7,8,17,17,17,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[6,6],[1,1],[3,3],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[5,5],9],[[1,1],9],[[3,3],9],[[7,7],9],[[],9],[[],9],[[5,10],11],[[5,10],11],[[6,10],11],[[6,10],11],[[1,10],11],[[1,10],11],[[3,10],11],[[3,10],11],[[7,10],11],[[7,10],11],[[8,10],11],[[8,10],11],[2,6],[4,8],[4,8],[4,8],[4,8],[4,8],[[]],[[]],[[]],[2,1],[[]],[4,3],[[]],[[]],[12,[[13,[1]]]],[12,[[13,[3]]]],[6,2],[8,4],[[1,14]],[[]],[[]],[[]],[1,2],[[]],[3,4],[[]],[[]],[12,[[13,[2,5]]]],[12,[[13,[4,7]]]],[12,[[13,[4,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0],"c":[],"p":[[3,"Duration"],[3,"Duration"],[3,"Timestamp"],[3,"SystemTime"],[4,"DurationError"],[3,"FormattedDuration"],[4,"TimestampError"],[3,"Rfc3339Timestamp"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[8,"Hasher"],[3,"String"],[3,"TypeId"],[13,"UnknownUnit"]]},\
"image":{"doc":"Overview","t":"NINNNNNSSSESSNDEIENCDDIINGGNNDIIICENNNNECNNNNNNNNNNNNNNNNNNNNNNDDNIQIDNNNIDNQDNNNNNNGNNNGDNNNNNNGNNNGDQNNNNNLKLLLLKLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLALLLLLLLLKLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLKLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLKLLLLLKLLLLKLLLLLFLLLLLLLLLLLLLLLLLFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLKLLLLLALFFFKLLLLKLLLLKLLLLLLALLLLLLLLLLLLLLLLLFLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLFFLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLIDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLNNNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDRLLLLLLLLLLLLLLMLLLLMLMLLMLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLFLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLMLNNDDNDELLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLNDNNENNENNNDDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNNNDNNNNNEEGNNDENNNNDENNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNEDNENNNDNNDDNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLCCNCECNCNCNCNFLLCLLACFFCLFFFFFFFLLCCCCFCCFFLCFFFFFFFFFFFFFFFLLLLFFDQILLFFLLFFFLFFFFLLFFFKLLFLLKLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLMMM","n":["A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Delay","DynamicImage","EncodableLayout","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","Jpeg","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Luma","LumaA","OpenExr","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","apply_without_alpha","as_bytes","as_bytes","as_flat_samples","as_flat_samples_f32","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb32f","as_mut_rgb8","as_mut_rgba16","as_mut_rgba32f","as_mut_rgba8","as_raw","as_rgb16","as_rgb32f","as_rgb8","as_rgba16","as_rgba32f","as_rgba8","bits_per_pixel","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_type","convert","copy_from","copy_from","copy_within","copy_within","copy_within","crop","crop_imm","current","default","default","delay","deref","deref","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expand_palette","expand_palette","extensions_str","filter3x3","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_mime_type","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_checked","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut_checked","grayscale","guess_format","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","huerotate","icc_profile","icc_profile","image_dimensions","imageops","in_bounds","in_bounds","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma16","into_luma8","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb16","into_rgb32f","into_rgb8","into_rgba16","into_rgba32f","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","io","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","map_without_alpha","math","new","new","new","new","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb32f","new_rgb8","new_rgba16","new_rgba32f","new_rgba8","next","next","numer_denom_ms","open","original_color_type","original_color_type","partial_cmp","pixels","pixels","pixels","pixels_mut","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image","read_image_with_progress","read_image_with_progress","read_rect","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","scanline_bytes","set_limits","set_limits","sub_image","sub_image","sub_image","thumbnail","thumbnail_exact","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma32f","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha32f","to_luma_alpha8","to_mime_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb32f","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba32f","to_rgba8","top","total","total_bytes","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","view","width","width","width","width","write_buffer_with_format","write_image","write_to","write_to","write_with_encoder","write_with_encoder","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bmp","dds","dxt","hdr","jpeg","png","BmpDecoder","BmpEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","dimensions","encode","encode_with_palette","from","from","get_palette","into","into","into_reader","new","new","new_without_file_header","read_image","read_rect_with_progress","set_indexed_color","try_from","try_from","try_into","try_into","type_id","type_id","write_image","DdsDecoder","borrow","borrow_mut","color_type","dimensions","from","into","into_reader","new","read_image","scanline_bytes","try_from","try_into","type_id","DXT1","DXT3","DXT5","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","color_type","dimensions","encode","eq","equivalent","fmt","from","from","from","from","into","into","into","into","into_reader","new","new","read","read_image","read_rect_with_progress","scanline_bytes","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","Rgbe8Pixel","SIGNATURE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","color_correction","color_type","custom_attributes","default","dimensions","e","encode","eq","equivalent","exposure","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","height","into","into","into","into","into","into","into","into_iter","into_iter","into_reader","metadata","new","new","new","new_nonstrict","next","orientation","pixel_aspect_ratio","read","read_image","read_image_hdr","read_image_ldr","read_image_native","read_image_transform","read_raw_file","read_rect_with_progress","read_to_end","rgbe8","size_hint","to_hdr","to_ldr","to_ldr_scale_gamma","to_owned","to_owned","to_rgbe8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","with_strictness","Centimeters","Inches","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","density","dimensions","dpi","encode","encode_image","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","icc_profile","into","into","into","into","into_reader","new","new","new_with_quality","read_image","scale","set_pixel_density","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","write_image","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","dimensions","encode","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","icc_profile","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_limits","write_image","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","limits","supported","ChannelCountMismatch","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_mut","as_mut_slice","as_ref","as_slice","as_view","as_view_mut","as_view_with_mut_samples","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","dimensions","dimensions","eq","eq","eq","equivalent","equivalent","equivalent","extents","extents","fits","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut_sample","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","get_sample","has_aliased_samples","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_mut_slice","image_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds","in_bounds_index","in_bounds_index","index","index","index","index_ignoring_bounds","index_ignoring_bounds","index_mut","into","into","into","into","into","into","into_inner","into_inner","is_normal","is_normal","layout","min_length","min_length","min_length","min_length","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","shrink_to","strides_cwh","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","width","width_stride","with_monocolor","BiLevel","CatmullRom","CatmullRom","ColorMap","FilterType","Gaussian","Gaussian","Lanczos3","Lanczos3","Nearest","Nearest","Triangle","Triangle","blur","borrow","borrow_mut","brighten","clone","clone_into","colorops","contrast","crop","crop_imm","dither","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","horizontal_gradient","huerotate","index_colors","interpolate_bilinear","interpolate_nearest","into","invert","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","sample_bilinear","sample_nearest","thumbnail","tile","to_owned","try_from","try_into","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","borrow","borrow_mut","brighten","brighten_in_place","clone","clone_into","contrast","contrast_in_place","dither","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","index_of","into","invert","lookup","lookup","map_color","map_color","to_owned","try_from","try_into","type_id","LimitSupport","Limits","Reader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","check_support","clear_format","clone","clone","clone_into","clone_into","decode","default","default","eq","eq","equivalent","equivalent","fmt","fmt","format","free","free_usize","from","from","from","hash","hash","into","into","into","into_dimensions","into_inner","limits","max_alloc","max_image_height","max_image_width","new","no_limits","no_limits","open","reserve","reserve_usize","set_format","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_format","with_guessed_format","Rect","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","height","into","to_owned","try_from","try_into","type_id","width","x","y"],"q":[[0,"image"],[679,"image::buffer"],[801,"image::codecs"],[807,"image::codecs::bmp"],[836,"image::codecs::dds"],[850,"image::codecs::dxt"],[902,"image::codecs::hdr"],[1009,"image::codecs::jpeg"],[1073,"image::codecs::png"],[1163,"image::error"],[1331,"image::error::LimitErrorKind"],[1333,"image::flat"],[1507,"image::imageops"],[1573,"image::imageops::colorops"],[1607,"image::io"],[1669,"image::math"]],"d":["Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An Image in JPEG Format","An Image in JPEG Format with specified quality, up to 100","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Grayscale colors.","Grayscale colors + alpha channel","An Image in OpenEXR Format","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a view on the raw sample buffer for 32bit per …","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 32bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","Returns the underlying raw buffer","Return a reference to an 16bit RGB image","Return a reference to an 32bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 32bit RGBA image","Return a reference to an 8bit RGBA image","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","Put a pixel at location (x, y), taking into account alpha …","Put a pixel at location (x, y), taking into account alpha …","","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Returns the color type of the image data produced by this …","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","","Delay of this frame","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","The width and height of this image.","","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Filters this image with the specified 3x3 kernel.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Return the image format specified by a MIME type.","Create a delay from a ratio of milliseconds.","Constructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Constructs a buffer from a generic container (for example …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","Returns mutable view into a mutable slice.","","","","","Creates an image buffer out of an existing buffer. Returns …","Returns the pixel located at (x, y). Indexed from top left.","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the pixel at location <code>(x, y)</code> or …","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","Do not use is function: It is unimplemented!","Gets a reference to the mutable pixel at location <code>(x, y)</code> …","Return a grayscale version of this image. Returns <code>Luma</code> …","Guess image format from memory block","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","The height of this image.","The height of this image.","The height of this image.","Returns the height of the underlying image","Hue rotate the supplied image. <code>value</code> is the degrees to …","Returns the ICC color profile embedded in the image","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Returns true if this x, y coordinate is contained inside …","","","","","","","","","","","Get a reference to the underlying image.","Get a mutable reference to the underlying image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Returns the x offset","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Creates a new <code>Frames</code> from an implementation specific …","Constructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Construct a new subimage The coordinates set the position …","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","Returns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Put a pixel at location (x, y). Indexed from top left.","","Puts a pixel at location <code>(x, y)</code>","","Returns all the bytes in the image.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Returns a mutable subimage that is a view into this image. …","Returns a mutable subimage that is a view into this image. …","Create a mutable sub-view of the image.","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Return a copy of this image’s pixels as a byte vector. …","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Return the MIME type for this image format or “…","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns a subimage that is an immutable view into this …","Returns a subimage that is an immutable view into this …","Create a sub-view of the image.","The width of this image.","The width of this image.","The width of this image.","Returns the width of the underlying image","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Writes the buffer to a writer in the specified format.","Encode this image and write it to <code>w</code>.","Writes the buffer with the given encoder.","Encode this image with the provided encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of BMP Images","Decoding of DDS images","Decoding of DXT (S3TC) compression","Decoding of Radiance HDR Images","Decoding and Encoding of JPEG Images","Decoding and Encoding of PNG Images","A bmp decoder","The representation of a BMP encoder.","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Same as <code>encode</code>, but allow a palette to be passed in. The …","Returns the argument unchanged.","Returns the argument unchanged.","Get the palette that is embedded in the BMP image, if any.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","Create a new decoder that decodes from the stream <code>r</code> …","","","If true, the palette in BMP does not apply to the image …","","","","","","","","The representation of a DDS decoder","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","","","","","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …","DXT decoder","DXT encoder","DXT reader","What version of DXT compression are we using? Note that …","","","","","","","","","","","","Returns the color type that is stored in this DXT variant","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new DXT decoder that decodes from the stream <code>r</code>. …","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","","","","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Radiance HDR file signature","","","","","","","","","","","","","","","Color components","","","","","Divide color values by corresponding tuple member (r, g, …","","All lines contained in image header are put here. Ordering …","","","Exponent","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>","","","Divide color values by exposure to get to get physical …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Height of decoded image. It depends on orientation too.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns file metadata. Refer to <code>HdrMetadata</code> for details.","Creates encoder","Creates adapter","Reads Radiance HDR image header from stream <code>r</code> if the …","Allows reading old Radiance HDR images","","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","","","Consumes decoder and returns a vector of <code>Rgb&lt;f32&gt;</code> pixels.","Consumes decoder and returns a vector of <code>Rgb&lt;u8&gt;</code> pixels. …","Consumes decoder and returns a vector of RGBE8 pixels","Consumes decoder and returns a vector of transformed pixels","Helper function for reading raw 3-channel f32 images","","","Creates <code>Rgbe8Pixel</code> from components","","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;f32&gt;</code> linearly","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;T&gt;</code> with scale=1 and gamma=2.2","Converts <code>Rgbe8Pixel</code> into <code>Rgb&lt;T&gt;</code> using provided scale and …","","","Converts <code>Rgb&lt;f32&gt;</code> into <code>Rgbe8Pixel</code>","","","","","","","","","","","","","","","","","","","","","","Width of decoded image. It could be either scanline length,","Reads Radiance HDR image header from stream <code>reader</code>, if the …","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","","","","","","","","","","","","","","Returns a pixel density with a pixel aspect ratio of 1","A couple of values for (Xdensity, Ydensity)","","Creates the most common pixel density type: the horizontal …","Encodes the image stored in the raw byte buffer <code>image</code> that …","Encodes the given image.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","","Configure the decoder to scale the image during decoding.","Set the pixel density of the images the encoder will …","","","","","","","","","","","","","","","The unit in which the density is measured","","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code> with …","Write a PNG image with the specified width, height, and …","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given limits","The supported strict limits","The color format did not match the channel count.","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","Deprecated - ChannelCountMismatch is used instead","Get a mutable reference based version.","View the samples as a slice.","Get a reference based version.","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a single sample.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a single sample.","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Mutable portion of the buffer that holds sample values.","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","Get the theoretical position of sample (x, y, channel).","Get the theoretical position of sample (channel, x, y).","Return a mutable reference to a single sample at specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","Copy the data into an owned vector.","","","","","","","","","","","","","Move the data into an image buffer.","Try to convert this into an image with mutable pixels.","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","Create a monocolor image from a single pixel.","Color operations","","Cubic Filter","Color operations","Available Sampling Filters.","","Gaussian Filter","","Lanczos with window 3","","Nearest Neighbor","","Linear Filter","Image sampling Performs a Gaussian blur on the supplied …","","","Color operations","","","Functions for altering and converting the color of …","Color operations","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Color operations","","Image sampling Perform a 3x3 box filter on the supplied …","Affine transformations Flip an image horizontally","Affine transformations Flip an image horizontally and put …","Affine transformations Flip an image horizontally in place.","Affine transformations Flip an image vertically","Affine transformations Flip an image vertically and put …","Affine transformations Flip an image vertically in place.","","Returns the argument unchanged.","Color operations","Color operations","Color operations","Color operations","Fill the image with a linear horizontal gradient","Color operations","Color operations","Image sampling Linearly sample from an image using …","Image sampling Sample from an image using coordinates in […","Calls <code>U::from(self)</code>.","Color operations","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Image sampling Resize the supplied image to the specified …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 90 degrees …","Affine transformations Rotate an image 90 degrees …","Image sampling Linearly sample from an image using …","Image sampling Sample from an image using coordinates in […","Image sampling Resize the supplied image to the specific …","Tile an image by repeating it multiple times","","","","","Image sampling Performs an unsharpen mask on the supplied …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","","","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","","","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Returns the argument unchanged.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","","","","","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","","","","","","","This function checks the <code>max_image_width</code> and …","This function checks that all currently set strict limits …","Remove the current information on the image format.","","","","","Read the image (replaces <code>load</code>).","","","","","","","","","Get the currently determined format.","This function increases the <code>max_alloc</code> limit with amount. …","This function acts identically to [<code>free</code>], but takes a <code>usize</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Set a custom set of decoding limits.","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","Create a new image reader without a preset format.","Disable all decoding limits.","Disable all limits.","Open a file to read, format will be guessed from path.","This function checks that the current limit allows for …","This function acts identically to [<code>reserve</code>], but takes a …","Supply the format as which to interpret the read image.","","","","","","","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","Calls <code>U::from(self)</code>.","","","","","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner."],"i":[34,0,31,34,34,31,37,11,11,77,0,4,4,31,0,0,0,0,31,0,0,0,0,0,31,0,0,31,31,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,31,37,34,26,34,34,34,26,34,34,26,34,34,34,26,34,0,0,31,0,43,0,0,31,37,31,0,0,31,58,0,34,26,34,34,26,34,0,34,26,34,0,0,34,26,34,34,26,34,0,34,26,34,0,0,11,31,31,34,37,31,1,11,5,6,7,8,11,5,6,7,8,11,5,6,7,8,11,11,141,1,14,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,1,1,1,1,1,1,26,11,5,6,7,8,133,14,1,1,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,43,14,1,1,0,30,30,26,31,31,33,26,34,11,5,6,7,8,11,5,6,7,8,11,5,6,7,8,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,0,41,1,58,14,133,133,133,133,14,1,1,38,14,1,30,14,33,14,33,58,43,14,14,1,14,14,14,14,35,14,26,34,5,6,7,8,1,31,37,38,35,14,26,34,5,6,7,8,31,37,38,0,20,14,31,1,0,1,1,35,14,26,34,5,6,7,8,1,31,37,38,40,41,30,35,14,26,34,34,5,5,6,6,7,7,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,31,37,37,38,40,33,11,5,6,7,8,1,31,14,31,35,30,31,14,14,35,11,5,6,7,8,11,5,6,7,8,14,43,14,14,1,14,133,14,14,1,14,1,0,26,26,14,26,34,5,6,7,8,31,43,43,14,1,1,58,58,0,0,43,43,14,5,6,7,8,14,5,6,7,8,33,33,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,30,1,14,142,41,40,1,1,1,1,14,58,1,1,1,1,1,1,14,11,5,6,7,8,1,0,30,0,0,0,11,5,6,7,8,11,5,6,7,8,11,5,6,7,8,11,11,0,41,30,14,33,1,1,1,1,1,1,1,1,1,1,41,40,35,0,58,58,35,43,43,14,14,133,14,14,1,58,58,58,58,143,143,143,38,1,1,1,1,1,1,14,14,14,14,1,0,0,14,1,58,58,58,58,133,133,33,1,1,1,33,11,5,6,7,8,1,1,1,11,5,6,7,8,1,1,1,31,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,11,5,6,7,8,1,1,1,11,5,6,7,8,1,1,1,30,38,58,58,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,41,30,35,14,26,34,5,6,7,8,1,31,37,38,40,33,43,43,14,133,133,14,1,43,43,33,43,43,14,1,0,83,14,1,14,1,0,0,0,0,0,0,0,0,0,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,74,47,49,70,74,47,49,144,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,70,71,74,75,47,49,48,50,70,74,47,49,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,70,71,74,75,47,49,48,50,0,0,0,0,0,0,0,0,85,86,85,86,85,85,86,86,85,86,85,85,86,85,85,86,85,85,85,85,85,86,85,86,85,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,0,0,0,0,89,92,90,88,89,92,90,88,88,88,89,88,89,90,88,88,88,89,92,90,88,89,92,90,88,89,89,90,92,89,89,89,88,89,92,90,88,89,92,90,88,89,92,90,88,0,0,0,0,0,0,0,0,100,99,97,96,98,94,95,100,99,97,96,98,94,95,94,94,95,94,95,95,96,95,94,96,94,97,94,94,95,96,98,94,95,100,99,97,96,98,94,95,95,100,99,97,96,98,94,95,99,98,96,98,97,96,98,96,99,95,95,100,96,98,98,98,98,0,96,100,0,99,94,94,94,94,95,0,100,99,97,96,98,94,95,100,99,97,96,98,94,95,100,99,97,96,98,94,95,95,98,104,104,0,0,104,0,0,106,107,104,105,106,107,104,105,104,105,104,105,106,105,105,106,105,107,107,104,105,104,105,104,105,106,107,104,105,106,106,107,104,105,106,106,107,107,106,106,107,104,105,106,107,104,105,106,107,104,105,106,107,104,105,105,107,111,0,111,110,0,110,110,0,110,111,111,0,0,0,110,111,111,108,113,108,109,112,110,111,113,108,109,112,110,111,110,111,110,111,108,110,111,108,112,110,111,110,111,110,111,113,108,109,112,110,111,108,113,108,109,112,110,111,109,108,108,108,112,112,113,108,113,108,110,111,113,108,109,112,110,111,113,108,109,112,110,111,113,108,109,112,110,111,108,112,114,91,0,116,115,91,0,117,115,114,115,114,0,0,0,116,91,0,0,91,117,115,91,0,0,117,117,91,116,0,0,91,119,114,120,121,115,122,123,116,117,91,119,114,120,121,115,122,123,116,117,114,115,116,117,114,115,116,117,114,115,116,117,116,91,91,119,119,114,120,120,121,121,115,122,122,123,123,116,117,117,119,120,122,91,91,91,119,119,114,120,121,115,122,123,116,117,117,117,119,120,122,121,123,114,115,116,117,91,119,114,120,121,115,122,123,116,117,119,121,123,120,122,91,120,121,122,114,115,116,117,91,119,120,121,122,123,117,91,119,114,120,121,115,122,123,116,117,91,119,114,120,121,115,122,123,116,117,91,119,114,120,121,115,122,123,116,117,145,145,124,130,0,0,130,0,124,130,130,0,124,130,0,0,124,15,15,15,15,15,15,15,129,15,76,128,129,124,130,15,76,128,129,124,130,15,76,128,129,76,76,15,76,128,129,124,130,15,76,128,129,124,130,15,76,128,129,76,124,130,76,124,130,15,76,15,76,128,129,15,76,128,129,124,124,130,15,76,128,129,124,130,15,128,129,128,129,129,15,128,129,15,76,76,124,130,76,76,15,128,129,15,128,129,15,76,128,129,15,76,15,15,76,15,76,15,15,76,128,129,124,130,128,129,15,76,15,15,76,128,129,130,129,76,128,129,15,15,76,128,129,15,76,15,76,128,129,124,130,124,15,15,76,128,129,124,130,15,76,128,129,124,130,15,128,15,76,128,129,124,130,76,76,15,0,0,73,0,0,0,73,0,73,0,73,0,73,0,73,73,0,73,73,0,0,0,0,0,73,0,0,0,0,0,0,0,73,73,0,0,0,0,0,0,0,0,0,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,0,0,0,136,0,135,135,0,0,135,135,0,0,0,135,0,0,0,0,136,135,0,0,0,136,135,135,0,136,135,136,135,135,135,135,135,0,0,0,138,137,78,138,137,78,78,78,138,137,78,137,78,138,137,78,137,78,137,78,137,78,138,78,78,138,137,78,137,78,138,137,78,138,138,138,78,78,78,138,138,78,138,78,78,138,137,78,138,137,78,138,137,78,138,137,78,138,138,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[3],[[[5,[[0,[4,0]]]],3]],[[[6,[4]],3]],[[[7,[[0,[4,0]]]],3]],[[[8,[4]],3]],[3],[[[5,[[0,[4,0]]]],[5,[[0,[4,0]]]],3]],[[[6,[4]],[6,[4]],3]],[[[7,[[0,[4,0]]]],[7,[[0,[4,0]]]],3]],[[[8,[4]],[8,[4]],3]],[[3,3]],[[[5,[[0,[4,0]]]],3,3]],[[[6,[4]],3,3]],[[[7,[[0,[4,0]]]],3,3]],[[[8,[4]],3,3]],[3],[3],[[],[[10,[9]]]],[1,[[10,[9]]]],[[[14,[11,[12,[10]],13]]],[[15,[10]]]],[1,[[16,[[15,[[10,[2]]]]]]]],[[[14,[11,[17,[10]],13]]],[[15,[10]]]],[1,[[16,[[15,[[10,[18]]]]]]]],[1,[[16,[[15,[[10,[9]]]]]]]],[1,[[16,[[14,[[6,[18]],[19,[18]]]]]]]],[1,[[16,[20]]]],[1,[[16,[[14,[[8,[18]],[19,[18]]]]]]]],[1,[[16,[21]]]],[1,[[16,[[14,[[6,[18]],[19,[18]]]]]]]],[1,[[16,[20]]]],[1,[[16,[[14,[[8,[18]],[19,[18]]]]]]]],[1,[[16,[21]]]],[1,[[16,[[14,[[5,[18]],[19,[18]]]]]]]],[1,[[16,[22]]]],[1,[[16,[23]]]],[1,[[16,[[14,[[7,[18]],[19,[18]]]]]]]],[1,[[16,[24]]]],[1,[[16,[25]]]],[[[14,[11,13]]],13],[1,[[16,[[14,[[5,[18]],[19,[18]]]]]]]],[1,[[16,[22]]]],[1,[[16,[23]]]],[1,[[16,[[14,[[7,[18]],[19,[18]]]]]]]],[1,[[16,[24]]]],[1,[[16,[25]]]],[26,18],[[]],[[[5,[[0,[4,0]]]],[5,[[0,[4,0]]]]]],[[[6,[4]],[6,[4]]]],[[[7,[[0,[4,0]]]],[7,[[0,[4,0]]]]]],[[[8,[4]],[8,[4]]]],[[27,27]],[[[14,[11,[0,[13,28]]]],27,27,11]],[[1,27,27,[7,[9]]]],[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[11,[0,[13,13]]]]]],[1],[[1,29],1],0,[30,25],[30,25],[26,9],[31,32],[31,32],[[33,27,27,27,27]],[26,9],[34,9],[[],10],[[[5,[[0,[4,0]]]]],[[10,[[0,[4,0]]]]]],[[[6,[4]]],[[10,[4]]]],[[[7,[[0,[4,0]]]]],[[10,[[0,[4,0]]]]]],[[[8,[4]]],[[10,[4]]]],[[]],[[[5,[[0,[4,0]]]]]],[[[6,[4]]]],[[[7,[[0,[4,0]]]]]],[[[8,[4]]]],[[],10],[[[5,[[0,[4,0]]]]],[[10,[[0,[4,0]]]]]],[[[6,[4]]],[[10,[4]]]],[[[7,[[0,[4,0]]]]],[[10,[[0,[4,0]]]]]],[[[8,[4]]],[[10,[4]]]],[30,30],[35,35],[[[14,[11,[0,[13,36]]]]],[[14,[11,[0,[13,36]]]]]],[26,26],[34,34],[[[5,[36]]],[[5,[36]]]],[[[6,[36]]],[[6,[36]]]],[[[7,[36]]],[[7,[36]]]],[[[8,[36]]],[[8,[36]]]],[1,1],[31,31],[37,37],[38,38],[[[40,[39]]],[[40,[39]]]],[[[33,[36]]],[[33,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[41,[[42,[[19,[30]]]]]],[1,26],[[],26],[[[14,[11,13]]],[[14,[[0,[[0,[11]],11]],19]]]],[[43,27,27],42],[[43,27,27],42],[[44,27,27],32],[[44,27,27],32],[[[14,[11,[0,[13,28]]]],44,27,27],32],[[1,27,27,27,27],1],[[1,27,27,27,27],1],[38,45],[[],[[14,[11,46]]]],[[],1],[30,35],[[[14,[11,13]]]],[[[33,[13]]]],[[[14,[11,[0,[13,28]]]]]],[[[33,[28]]]],[[]],[[]],[[[14,[11,13]]]],[[[14,[11,[0,[13,13]]]]]],[1],[[[14,[11,13]]],[[47,[11]]]],[[[14,[11,[0,[13,28]]]]],[[48,[11]]]],[[[14,[11,13]]],[[49,[11]]]],[[[14,[11,[0,[13,28]]]]],[[50,[11]]]],[[35,35],32],[[[14,[[0,[51,11]],51]],[14,[[0,[51,11]],51]]],32],[[26,26],32],[[34,34],32],[[[5,[51]],[5,[51]]],32],[[[6,[51]],[6,[51]]],32],[[[7,[51]],[7,[51]]],32],[[[8,[51]],[8,[51]]],32],[[1,1],32],[[31,31],32],[[37,37],32],[[38,38],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[[20,10,[16,[9]]],25],[[[14,[[6,[9]],[19,[9,52]]]],10,[16,[9]]],25],[31,[[10,[53]]]],[[1,[10,[2]]],1],0,[1,1],[1,1],[[35,54],55],[[[14,[[0,[56,11]],56]],54],55],[[26,54],55],[[34,54],55],[[[5,[56]],54],55],[[[6,[56]],54],55],[[[7,[56]],54],55],[[[8,[56]],54],55],[[1,54],55],[[31,54],55],[[37,54],55],[[38,54],55],[[[40,[[0,[56,39]]]],54],55],[[]],[[]],[[]],[[]],[[]],[[]],[26,34],[57,5],[[]],[57,6],[[]],[[]],[57,7],[[]],[57,8],[[[14,[[8,[2]],[19,[2]]]]],1],[[[14,[[6,[2]],[19,[2]]]]],1],[[[14,[[5,[18]],[19,[18]]]]],1],[25,1],[[[14,[[8,[18]],[19,[18]]]]],1],[23,1],[21,1],[[]],[22,1],[[[14,[[7,[18]],[19,[18]]]]],1],[[[14,[[6,[18]],[19,[18]]]]],1],[24,1],[20,1],[[]],[[]],[31,37],[[]],[[]],[[]],[[]],[[[0,[4,0]],[0,[4,0]],[0,[4,0]],[0,[4,0]]],[[5,[[0,[4,0]]]]]],[[4,4,4,4],[[6,[4]]]],[[[0,[4,0]],[0,[4,0]],[0,[4,0]],[0,[4,0]]],[[7,[[0,[4,0]]]]]],[[4,4,4,4],[[8,[4]]]],[58,[[42,[1]]]],[[[12,[59]]],[[16,[31]]]],[[27,27,3],[[14,[11,19]]]],[[[12,[53]]],[[16,[31]]]],[[27,27],35],[[25,27,27,35],30],[[[12,[60]]],[[42,[31]]]],[[27,27,11],[[14,[11,19]]]],[[27,27,13],[[16,[[14,[11,13]]]]]],[61,35],[10],[[[10,[[0,[4,0]]]]],[[5,[[0,[4,0]]]]]],[[[10,[4]]],[[6,[4]]]],[[[10,[[0,[4,0]]]]],[[7,[[0,[4,0]]]]]],[[[10,[4]]],[[8,[4]]]],[10],[[[10,[[0,[4,0]]]]],[[5,[[0,[4,0]]]]]],[[[10,[4]]],[[6,[4]]]],[[[10,[[0,[4,0]]]]],[[7,[[0,[4,0]]]]]],[[[10,[4]]],[[8,[4]]]],[[27,27,19],[[16,[[14,[11,19]]]]]],[[27,27]],[[[14,[11,[0,[13,13]]]],27,27],11],[[[14,[11,13]],27,27],11],[[1,27,27],[[7,[9]]]],[[[14,[11,13]],27,27],[[16,[11]]]],[[27,27]],[[[14,[11,[0,[13,28]]]],27,27],11],[[[14,[11,[0,[13,28]]]],27,27],11],[[1,27,27],[[7,[9]]]],[[[14,[11,[0,[13,28]]]],27,27],[[16,[11]]]],[1,1],[[[10,[9]]],[[42,[31]]]],[26,32],[26,32],[[[14,[[0,[62,11]],62]],63]],[[26,63]],[[34,63]],[[[5,[62]],63]],[[[6,[62]],63]],[[[7,[62]],63]],[[[8,[62]],63]],[[31,63]],[[],27],[[],27],[[[14,[11,13]]],27],[1,27],[[1,29],1],[[],[[16,[[19,[9]]]]]],[[],[[16,[[19,[9]]]]]],[[[12,[60]]],42],0,[[27,27],32],[[27,27],32],[[[14,[11,13]]],11],[[5,64]],[[6,64]],[[7,64]],[[8,64]],[[[14,[11,[0,[13,28]]]]],11],[[5,64]],[[6,64]],[[7,64]],[[8,64]],[[[33,[13]]]],[[[33,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,25],[1,[[19,[9]]]],[[[14,[11,[12,[10]],13]]],[[15,[[12,[10]],13]]]],[[],41],[[]],[[]],[1,[[14,[[6,[18]],[19,[18]]]]]],[1,20],[1,[[14,[[8,[18]],[19,[18]]]]]],[1,21],[[[14,[11,13]]],13],[[],42],[1,[[14,[[5,[18]],[19,[18]]]]]],[1,22],[1,23],[1,[[14,[[7,[18]],[19,[18]]]]]],[1,24],[1,25],[[[14,[11,19]]],19],[[]],[[[5,[[0,[4,0]]]]]],[[[6,[4]]]],[[[7,[[0,[4,0]]]]]],[[[8,[4]]]],[1],0,[30,27],[[[0,[65,66]],31],[[42,[1]]]],[[[10,[9]]],[[42,[1]]]],[[[10,[9]],31],[[42,[1]]]],[3],[[[5,[[0,[4,0]]]],3],[[5,[[0,[4,0]]]]]],[[[6,[4]],3],[[6,[4]]]],[[[7,[[0,[4,0]]]],3],[[7,[[0,[4,0]]]]]],[[[8,[4]],3],[[8,[4]]]],[3],[[[5,[[0,[4,0]]]],[5,[[0,[4,0]]]],3],[[5,[[0,[4,0]]]]]],[[[6,[4]],[6,[4]],3],[[6,[4]]]],[[[7,[[0,[4,0]]]],[7,[[0,[4,0]]]],3],[[7,[[0,[4,0]]]]]],[[[8,[4]],[8,[4]],3],[[8,[4]]]],[[3,3]],[[[5,[[0,[4,0]]]],3,3],[[5,[[0,[4,0]]]]]],[[[6,[4]],3,3],[[6,[4]]]],[[[7,[[0,[4,0]]]],3,3],[[7,[[0,[4,0]]]]]],[[[8,[4]],3,3],[[8,[4]]]],[3],[3],0,[[[68,[67]]],41],[25,30],[[27,27],[[14,[11,19]]]],[[27,27,27,27],33],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[[27,27],1],[41,[[16,[[42,[30]]]]]],[[[40,[43]]],16],[35],[[[12,[60]]],[[42,[1]]]],[[],34],[[],34],[[35,35],[[16,[69]]]],[39,[[40,[39]]]],[39,[[40,[39]]]],[[[14,[11,13]]],[[70,[11]]]],[[[14,[11,[0,[13,28]]]]],[[71,[11]]]],[[27,27]],[[[14,[11,[0,[13,28]]]],27,27,11]],[[[14,[11,[0,[13,28]]]],27,27,11]],[[1,27,27,[7,[9]]]],[[[10,[9]]],42],[[[10,[9]]],42],[[[10,[9]],72],42],[[[10,[9]],72],42],[[27,27,27,27,[10,[9]]],42],[[27,27,27,27,[10,[9]]],42],[[27,27,27,27,[10,[9]],72],42],[38,45],[[1,27,27,73],1],[[1,27,27,73],1],[[1,27,27,73],1],[1,1],[1,1],[1,1],[[[14,[11,13]]],[[74,[11]]]],[[[14,[11,[0,[13,28]]]]],[[75,[11]]]],[[[14,[11,13]]],76],[[[14,[77,11,13]],[12,[60]]],42],[[1,[12,[60]]],42],[[[12,[60]],[10,[9]],27,27,26],42],[[[12,[60]],[10,[9]],27,27,26,31],42],[[[14,[77,11,13]],[12,[60]],31],42],[[1,[12,[60]],31],42],[[],45],[[],45],[78,42],[78,42],[[39,27,27,27,27],[[33,[39]]]],[[39,27,27,27,27],[[33,[39]]]],[[[33,[28]],27,27,27,27],33],[[1,27,27],1],[[1,27,27],1],[1,[[19,[9]]]],[[[33,[13]]],[[14,[19]]]],[[],6],[[[5,[[0,[4,0]]]]],[[6,[[0,[4,0]]]]]],[[[6,[4]]],[[6,[4]]]],[[[7,[[0,[4,0]]]]],[[6,[[0,[4,0]]]]]],[[[8,[4]]],[[6,[4]]]],[1,[[14,[[6,[18]],[19,[18]]]]]],[1,[[14,[[6,[2]],[19,[2]]]]]],[1,20],[[],8],[[[5,[[0,[4,0]]]]],[[8,[[0,[4,0]]]]]],[[[6,[4]]],[[8,[4]]]],[[[7,[[0,[4,0]]]]],[[8,[[0,[4,0]]]]]],[[[8,[4]]],[[8,[4]]]],[1,[[14,[[8,[18]],[19,[18]]]]]],[1,[[14,[[8,[2]],[19,[2]]]]]],[1,21],[31,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[[5,[[0,[4,0]]]]],[[5,[[0,[4,0]]]]]],[[[6,[4]]],[[5,[4]]]],[[[7,[[0,[4,0]]]]],[[5,[[0,[4,0]]]]]],[[[8,[4]]],[[5,[4]]]],[1,[[14,[[5,[18]],[19,[18]]]]]],[1,22],[1,23],[[],7],[[[5,[[0,[4,0]]]]],[[7,[[0,[4,0]]]]]],[[[6,[4]]],[[7,[4]]]],[[[7,[[0,[4,0]]]]],[[7,[[0,[4,0]]]]]],[[[8,[4]]],[[7,[4]]]],[1,[[14,[[7,[18]],[19,[18]]]]]],[1,24],[1,25],[30,27],[38,45],[[],45],[[],45],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[27,27]],[[27,27]],[[[14,[11,[0,[13,13]]]],27,27],11],[[27,27]],[[27,27]],[[[14,[11,[0,[13,28]]]],27,27,11]],[[1,2,29],1],[[39,27,27,27,27],[[33,[39]]]],[[39,27,27,27,27],[[33,[39]]]],[[[33,[13]],27,27,27,27],33],[[],27],[[],27],[[[14,[11,13]]],27],[1,27],[[[0,[81,66]],[10,[9]],27,27,26,[82,[37]]],42],[[[10,[9]],27,27,26],42],[[[14,[77,11,13]],[0,[81,66]],[82,[37]]],42],[[1,[0,[81,66]],[82,[37]]],42],[[[14,[77,11,13]],83],42],[[1,83],42],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[11]]],[[70,[11]]]],[[[74,[11]]],[[74,[11]]]],[[[47,[11]]],[[47,[11]]]],[[[49,[11]]],[[49,[11]]]],[[]],[[]],[[]],[[]],[[]],[[[70,[11]],54],55],[[[71,[11]],54],55],[[[74,[11]],54],55],[[[75,[11]],54],55],[[[47,[11]],54],55],[[[49,[11]],54],55],[[[48,[11]],54],55],[[[50,[11]],54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[11]]],64],[[[71,[11]]],64],[[[74,[11]]],64],[[[75,[11]]],64],[[[47,[11]]],64],[[[49,[11]]],64],[[[48,[11]]],64],[[[50,[11]]],64],[[[70,[11]]],[[16,[11]]]],[[[71,[11]]],[[16,[11]]]],[[[74,[11]]],[[16,[[70,[11]]]]]],[[[75,[11]]],[[16,[[71,[11]]]]]],[[[47,[11]]],16],[[[49,[11]]],16],[[[48,[11]]],16],[[[50,[11]]],16],[[[70,[11]]],[[16,[11]]]],[[[71,[11]]],[[16,[11]]]],[[[74,[11]]],[[16,[[70,[11]]]]]],[[[75,[11]]],[[16,[[71,[11]]]]]],[[[70,[11]]]],[[[71,[11]]]],[[[74,[11]]]],[[[75,[11]]]],[[[47,[11]]]],[[[49,[11]]]],[[[48,[11]]]],[[[50,[11]]]],[[]],[[]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[85,[[0,[84,66]]]]],26],[[[85,[[0,[84,66]]]]]],[[[86,[81]],[10,[9]],27,27,26],42],[[[86,[81]],[10,[9]],27,27,26,[16,[[10,[[57,[9]]]]]]],42],[[]],[[]],[[[85,[[0,[84,66]]]]],[[16,[[10,[[57,[9]]]]]]]],[[]],[[]],[[[85,[[0,[84,66]]]]],42],[[[0,[84,66]]],[[42,[[85,[[0,[84,66]]]]]]]],[81,[[86,[81]]]],[[[0,[84,66]]],[[42,[[85,[[0,[84,66]]]]]]]],[[[85,[[0,[84,66]]]],[10,[9]]],42],[[[85,[[0,[84,66]]]],27,27,27,27,[10,[9]],72],42],[[[85,[[0,[84,66]]]],32]],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[[86,[81]],[10,[9]],27,27,26],42],0,[[]],[[]],[[[87,[84]]],26],[[[87,[84]]]],[[]],[[]],[[[87,[84]]],42],[84,[[42,[[87,[84]]]]]],[[[87,[84]],[10,[9]]],42],[[[87,[84]]],45],[[],79],[[],79],[[],80],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[[]],[[[89,[84]]],26],[88,26],[[[89,[84]]]],[[[90,[81]],[10,[9]],27,27,88],42],[[88,88],32],[[],32],[[88,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[89,[84]]],42],[[84,27,27,88],[[79,[[89,[84]],91]]]],[81,[[90,[81]]]],[[[92,[84]],[10,[9]]],[[93,[64]]]],[[[89,[84]],[10,[9]]],42],[[[89,[[0,[84,66]]]],27,27,27,27,[10,[9]],72],42],[[[89,[84]]],45],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[94,94],[95,95],[[]],[[]],0,[[[96,[65]]],26],0,[[],94],[[[96,[65]]]],0,[[[97,[81]],[10,[[5,[2]]]],64,64],42],[[94,94],32],[[],32],0,[[[96,[[0,[56,84]]]],54],55],[[[98,[56]],54],55],[[94,54],55],[[95,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[98,[84]]]],[[[96,[65]]],42],[[[98,[65]]],95],[81,[[97,[81]]]],[65,[[42,[[96,[65]]]]]],[65,[[42,[[98,[65]]]]]],[65,[[42,[[96,[65]]]]]],[[[99,[84]]],16],0,0,[[100,[10,[9]]],[[93,[64]]]],[[[96,[65]],[10,[9]]],42],[[[98,[65]]],[[42,[[19,[[5,[2]]]]]]]],[[[98,[65]]],[[42,[[19,[[5,[9]]]]]]]],[[[98,[65]]],[[42,[[19,[94]]]]]],[[[98,[65]],[0,[101,102,72]],[10,[101]]],42],[[[12,[60]]],[[93,[[19,[[5,[2]]]]]]]],[[[96,[[0,[65,66]]]],27,27,27,27,[10,[9]],72],42],[[100,[19,[9]]],[[93,[64]]]],[[9,9,9,9],94],[[[99,[84]]]],[94,[[5,[2]]]],[94,[[5,[[0,[4,103]]]]]],[[94,2,2],[[5,[[0,[4,103]]]]]],[[]],[[]],[[[5,[2]]],94],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,[[65,32],[[42,[[98,[65]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,104],[105,105],[[]],[[]],[[[106,[84]]],26],[[],105],0,[[[106,[84]]]],[18,105],[[[107,[81]],[10,[9]],27,27,26],42],[[[107,[81]],43],42],[[104,104],32],[[105,105],32],[[],32],[[],32],[[104,54],55],[[105,54],55],[[]],[[]],[[]],[[]],[[[106,[84]]],[[16,[[19,[9]]]]]],[[]],[[]],[[]],[[]],[[[106,[84]]],42],[84,[[42,[[106,[84]]]]]],[81,[[107,[81]]]],[[81,9],[[107,[81]]]],[[[106,[84]],[10,[9]]],42],[[[106,[84]],18,18],42],[[[107,[81]],105]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],0,[[[107,[81]],[10,[9]],27,27,26],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[108,[84]]],[[109,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[111,111],[[]],[[]],[[[108,[84]]],26],[[],110],[[],111],[[[108,[84]]]],[[[112,[81]],[10,[9]],27,27,26],42],[[110,110],32],[[111,111],32],[[],32],[[],32],[[110,54],55],[[111,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[[108,[84]]],[[16,[[19,[9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[109,[84]]],41],[[[108,[84]]],42],[[[108,[84]]],32],[84,[[42,[[108,[84]]]]]],[81,[[112,[81]]]],[[81,110,111],[[112,[81]]]],[[[113,[84]],[10,[9]]],[[93,[64]]]],[[[108,[84]],[10,[9]]],42],[[[113,[84]],[19,[9]]],[[93,[64]]]],[[[108,[84]]],45],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[84,78],[[42,[[108,[84]]]]]],[[[112,[81]],[10,[9]],27,27,26],42],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[115,115],[116,116],[117,117],[[]],[[]],[[]],[[]],[[114,114],32],[[115,115],32],[[116,116],32],[[117,117],32],[[],32],[[91,54],[[79,[118]]]],[[91,54],55],[[119,54],[[79,[118]]]],[[119,54],55],[[114,54],55],[[120,54],55],[[120,54],[[79,[118]]]],[[121,54],55],[[121,54],[[79,[118]]]],[[115,54],55],[[122,54],55],[[122,54],[[79,[118]]]],[[123,54],55],[[123,54],[[79,[118]]]],[[116,54],55],[[117,54],55],[[117,54],[[79,[118]]]],[119,117],[120,117],[122,117],[[]],[124,91],[125,91],[[]],[117,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,117],[[]],[60,117],[[117,114],119],[117,120],[117,122],[115,121],[116,123],[[114,63]],[[115,63]],[[116,63]],[[117,63]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,114],[121,115],[123,116],[[117,[82,[[68,[126]]]]],120],[[117,[82,[[68,[126]]]]],122],[91,[[16,[126]]]],[120,[[16,[126]]]],[121,[[16,[126]]]],[122,[[16,[126]]]],[[]],[[]],[[]],[[]],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[15,[[17,[10]]]]],[[15,[10]]]],[[[15,[[17,[10]]]]],10],[[[15,[[12,[10]]]]],[[15,[10]]]],[[[15,[[12,[10]]]]],10],[[[15,[[12,[10]]]]],[[79,[[128,[10,11]],124]]]],[[[15,[[17,[10]]]]],[[79,[[129,[10,11]],124]]]],[[[15,[[17,[10]]]]],[[79,[[128,[10,11]],124]]]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]],27,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[76],[[[128,[[12,[10]],11]]]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]]]],0,0,[[[15,[36]]],[[15,[36]]]],[76,76],[[[128,[[0,[[12,[10]],36]],[0,[36,11]]]]],[[128,[[0,[[12,[10]],36]],[0,[36,11]]]]]],[[[129,[[0,[[17,[10]],36]],[0,[36,11]]]]],[[129,[[0,[[17,[10]],36]],[0,[36,11]]]]]],[124,124],[130,130],[[]],[[]],[[]],[[]],[[]],[[]],0,[[9,27,27],76],[[[128,[[12,[10]],11]]]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]]]],[[76,76],32],[[124,124],32],[[130,130],32],[[],32],[[],32],[[],32],[15],[76],[[15,64],32],[[76,64],32],[[[128,[[12,[10]],11]]],[[15,[[12,[10]]]]]],[[[129,[[17,[10]],11]]],[[15,[[17,[10]]]]]],[[[15,[56]],54],55],[[76,54],55],[[[128,[[0,[[12,[10]],56]],[0,[56,11]]]],54],55],[[[129,[[0,[[17,[10]],56]],[0,[56,11]]]],54],55],[[124,54],55],[[124,54],55],[[130,54],55],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[[17,[10]]]],9,27,27],16],[[[128,[[17,[10]],[12,[10]],11]],9,27,27],16],[[[129,[[17,[10]],11]],9,27,27],16],[[[128,[[12,[10]],11]],27,27]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]],27,27]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]],27,27]],[[[15,[[12,[10]]]],9,27,27],16],[[[128,[[12,[10]],11]],9,27,27],16],[[[129,[[12,[10]],[17,[10]],11]],9,27,27],16],[15,32],[76,32],[[76,63]],[[124,63]],[[130,63]],0,0,[[[15,[[17,[10]]]]],[[16,[10]]]],[[[128,[[17,[10]],[12,[10]],11]]],10],[[[129,[[17,[10]],11]]],10],[[[15,[[12,[10]]]]],[[16,[10]]]],[[[128,[[12,[10]],11]]],10],[[[129,[[12,[10]],[17,[10]],11]]],10],[[15,9,27,27],32],[[76,9,27,27],32],[[[128,[[12,[10]],11]],27,27],32],[[[129,[[0,[[17,[10]],[12,[10]]]],11]],27,27],32],[[15,9,27,27],64],[[76,9,27,27],64],[[15,9,27,27],[[16,[64]]]],[[[15,[[131,[64]]]]]],[[76,9,27,27],[[16,[64]]]],[[15,64,64,64],[[16,[64]]]],[[76,64,64,64],[[16,[64]]]],[[[15,[[132,[64]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[128,[[12,[10]],11]]],[[15,[[12,[10]]]]]],[[[129,[[17,[10]],11]]],[[15,[[17,[10]]]]]],[[15,130],32],[[76,130],32],0,[15,[[16,[64]]]],[76,[[16,[64]]]],[[[128,[[12,[10]],11]]],64],[[[129,[[17,[10]],11]]],64],[[130,130],[[16,[69]]]],[[[129,[[0,[[17,[10]],[12,[10]]]],11]],27,27]],[[9,27,27],76],[[[128,[[12,[10]],11]]],[[12,[10]]]],[[[129,[[17,[10]],11]]],[[17,[10]]]],0,[[15,9,27,27]],[[76,9,27,27]],[[[128,[[12,[10]],11]],27,27]],[[[129,[[17,[10]],11]],27,27]],[15],[76],[[]],[[]],[[]],[[]],[[]],[[]],[[],127],[[[15,[[12,[[10,[36]]]]]]],[[15,[[19,[36]]]]]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[[15,[13]]],[[79,[[14,[11,13]]]]]],[[[128,[[17,[10]],[12,[10]],11]]],[[79,[[129,[[17,[10]],[12,[10]],11]]]]]],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,0,[[11,27,27],[[15,[[10,[4]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,2],[[14,[19]]]],[[]],[[]],0,[73,73],[[]],0,0,[[43,27,27,27,27],[[33,[43]]]],[[43,27,27,27,27],[[33,[43]]]],0,[[73,73],32],[[43,[10,[2]]],[[14,[11,[19,[4]]]]]],[43,[[14,[19]]]],[[43,[14,[28]]],42],[133],[43,[[14,[19]]]],[[43,[14,[28]]],42],[133],[[73,54],55],[[]],0,0,0,0,[[133,11,11]],0,0,[[43,2,2],[[16,[11]]]],[[43,2,2],[[16,[11]]]],[[]],0,[[133,43,134,134]],[[27,27]],[[133,43,134,134]],[[43,27,27,73],[[14,[19]]]],[43,[[14,[19]]]],[[43,[14,[28]]],42],[133],[43,[[14,[19]]]],[[43,[14,[28]]],42],[43,[[14,[19]]]],[[43,[14,[28]]],42],[[43,2,2],[[16,[11]]]],[[43,2,2],[[16,[11]]]],[[43,27,27],[[14,[11,[19,[[0,[4,0]]]]]]]],[[133,43]],[[]],[[],79],[[],79],[[],80],[[43,2,29],[[14,[11,[19,[4]]]]]],[[133,11,11]],0,0,0,[[]],[[]],[[43,29],[[14,[11,[19,[4]]]]]],[[133,29]],[135,135],[[]],[[43,2],[[14,[11,[19,[4]]]]]],[[133,2]],[[[14,[11,[19,[9]]]],[0,[136,39]]]],[[]],[43,[[14,[6,19]]]],[43,[[14,[8,19]]]],[43,[[14,[[0,[11,[0,[6]]]],19]]]],[43,[[14,[[0,[11,[0,[8]]]],19]]]],[[],32],[135,32],[[43,29],[[14,[11,[19,[4]]]]]],[[133,29]],[[[14,[11,[19,[9]]]],[0,[136,39]]],[[14,[[6,[9]],[19,[9]]]]]],[[],64],[[135,[6,[9]]],64],[[]],[133],[64,16],[[135,64],16],[[]],[[135,[6,[9]]]],[[]],[[],79],[[],79],[[],80],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[78,27,27],42],[[78,137],42],[[[138,[84]]]],[137,137],[78,78],[[]],[[]],[[[138,[[0,[65,66]]]]],[[42,[1]]]],[[],137],[[],78],[[137,137],32],[[78,78],32],[[],32],[[],32],[[137,54],55],[[78,54],55],[[[138,[84]]],[[16,[31]]]],[[78,45]],[[78,64]],[[]],[[]],[[]],[[137,63]],[[78,63]],[[]],[[]],[[]],[[[138,[[0,[65,66]]]]],42],[[[138,[84]]],84],[[[138,[84]],78]],0,0,0,[84,[[138,[84]]]],[[[138,[84]]]],[[],78],[[[12,[60]]],[[93,[[138,[[140,[139]]]]]]]],[[78,45],42],[[78,64],42],[[[138,[84]],31]],[[]],[[]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[],80],[[],80],[[84,31],[[138,[84]]]],[[[138,[[0,[65,66]]]]],[[93,[[138,[[0,[65,66]]]]]]]],0,[[]],[[]],[44,44],[[]],[[44,44],32],[[],32],[[44,54],55],[[]],[[44,63]],0,[[]],[[]],[[],79],[[],79],[[],80],0,0,0],"c":[160,214,361,392,557,803,850,851,852,853,854,855,856,865,867,868,869,870,871,873,882,883,884,885,886,887,888,1081,1087,1111],"p":[[4,"DynamicImage"],[15,"f32"],[8,"FnMut"],[8,"Primitive"],[3,"Rgb"],[3,"Luma"],[3,"Rgba"],[3,"LumaA"],[15,"u8"],[15,"slice"],[8,"Pixel"],[8,"AsRef"],[8,"Deref"],[3,"ImageBuffer"],[3,"FlatSamples"],[4,"Option"],[8,"AsMut"],[15,"u16"],[3,"Vec"],[6,"GrayImage"],[6,"GrayAlphaImage"],[6,"Rgb32FImage"],[6,"RgbImage"],[6,"Rgba32FImage"],[6,"RgbaImage"],[4,"ColorType"],[15,"u32"],[8,"DerefMut"],[15,"i32"],[3,"Frame"],[4,"ImageFormat"],[15,"bool"],[3,"SubImage"],[4,"ExtendedColorType"],[3,"Delay"],[8,"Clone"],[4,"ImageOutputFormat"],[3,"Progress"],[8,"Sized"],[3,"Pixels"],[3,"Frames"],[6,"ImageResult"],[8,"GenericImageView"],[3,"Rect"],[15,"u64"],[8,"Default"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[8,"PartialEq"],[3,"Global"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"array"],[8,"ImageDecoder"],[3,"OsStr"],[3,"Path"],[3,"Duration"],[8,"Hash"],[8,"Hasher"],[15,"usize"],[8,"BufRead"],[8,"Seek"],[8,"Iterator"],[3,"Box"],[4,"Ordering"],[3,"Pixels"],[3,"PixelsMut"],[8,"Fn"],[4,"FilterType"],[3,"Rows"],[3,"RowsMut"],[3,"SampleLayout"],[8,"PixelWithColorType"],[3,"Limits"],[4,"Result"],[3,"TypeId"],[8,"Write"],[8,"Into"],[8,"ImageEncoder"],[8,"Read"],[3,"BmpDecoder"],[3,"BmpEncoder"],[3,"DdsDecoder"],[4,"DxtVariant"],[3,"DxtDecoder"],[3,"DxtEncoder"],[4,"ImageError"],[3,"DxtReader"],[6,"Result"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"HdrAdapter"],[3,"HdrEncoder"],[3,"HdrDecoder"],[3,"HdrImageDecoderIterator"],[3,"HdrReader"],[8,"Send"],[8,"Sync"],[8,"Zero"],[4,"PixelDensityUnit"],[3,"PixelDensity"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"PngDecoder"],[3,"ApngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"PngReader"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"Error"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[4,"Error"],[3,"Error"],[8,"Error"],[3,"String"],[3,"View"],[3,"ViewMut"],[4,"NormalForm"],[8,"Index"],[8,"IndexMut"],[8,"GenericImage"],[15,"i64"],[3,"BiLevel"],[8,"ColorMap"],[3,"LimitSupport"],[3,"Reader"],[3,"File"],[3,"BufReader"],[8,"EncodableLayout"],[8,"AnimationDecoder"],[8,"ImageDecoderRect"],[8,"ConvertBuffer"],[13,"Unsupported"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":"ICCDLLLLLKLLLLLLOOLAALLLLLDEDDDDDDQDINDDNDQDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Equivalent","IndexMap","IndexSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","indexmap","indexset","into","map","set","to_owned","to_string","try_from","try_into","type_id","Drain","Entry","IndexMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Key","Keys","MutableKeys","Occupied","OccupiedEntry","Slice","Vacant","VacantEntry","Value","Values","ValuesMut","and_modify","as_mut_slice","as_mut_slice","as_slice","as_slice","as_slice","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","collect","collect","collect","collect","collect","collect","compare","contains_key","count","count","count","count","count","count","count","count","count","default","default","default","default","default","default","default","default","default","default","default","drain","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","first_mut","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_full","get_full_mut","get_full_mut2","get_full_mut2","get_index","get_index","get_index_mut","get_index_mut","get_index_mut2","get_index_mut2","get_index_of","get_key_value","get_mut","get_mut","get_range","get_range","get_range_mut","get_range_mut","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert_full","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_keys","into_mut","into_slice","into_values","into_values","is_empty","is_empty","iter","iter","iter_mut","iter_mut","key","key","key","keys","keys","last","last","last","last","last","last","last","last","last","last","last","last_mut","last_mut","len","len","len","len","len","len","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","or_default","or_insert","or_insert_with","or_insert_with_key","partial_cmp","pop","remove","remove","remove_entry","remove_entry","reserve","reserve_exact","retain","retain2","retain2","reverse","shift_remove","shift_remove","shift_remove_entry","shift_remove_entry","shift_remove_full","shift_remove_index","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort_by","sort_by_cached_key","sort_keys","sort_unstable_by","sort_unstable_keys","sorted_by","sorted_unstable_by","split_at","split_at_mut","split_first","split_first_mut","split_last","split_last_mut","split_off","swap_indices","swap_remove","swap_remove","swap_remove_entry","swap_remove_entry","swap_remove_full","swap_remove_index","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values_mut","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","Difference","Drain","IndexSet","Intersection","IntoIter","Iter","Slice","SymmetricDifference","Union","as_slice","as_slice","as_slice","as_slice","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","compare","contains","count","count","count","default","default","default","default","difference","drain","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from_iter","get","get_full","get_index","get_index","get_index_of","get_range","get_range","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","insert","insert_full","intersection","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_empty","is_subset","is_superset","iter","iter","last","last","last","last","last","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth_back","nth_back","nth_back","partial_cmp","pop","remove","replace","replace_full","reserve","reserve_exact","retain","reverse","rfold","rfold","shift_remove","shift_remove_full","shift_remove_index","shift_take","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","sort_by","sort_by_cached_key","sort_unstable","sort_unstable_by","sorted_by","sorted_unstable_by","split_at","split_first","split_last","split_off","sub","swap_indices","swap_remove","swap_remove_full","swap_remove_index","swap_take","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"indexmap"],[26,"indexmap::map"],[448,"indexmap::set"]],"d":["Key equivalence trait.","","","The error type for <code>try_reserve</code> methods.","","","","","","Compare self to <code>key</code> and return <code>true</code> if they are equal.","","","","","","Returns the argument unchanged.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of values","Calls <code>U::from(self)</code>.","<code>IndexMap</code> is a hash table where the iteration order of the …","A hash set implemented using <code>IndexMap</code>","","","","","","A draining iterator over the entries of a <code>IndexMap</code>.","Entry for an existing key-value pair or a vacant location …","A hash table where the iteration order of the key-value …","An owning iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the keys of a <code>IndexMap</code>.","An owning iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","","An iterator over the keys of a <code>IndexMap</code>.","Opt-in mutable access to keys.","Existing slot with equivalent key.","A view into an occupied entry in a <code>IndexMap</code>. It is part of …","A dynamically-sized slice of key-value pairs in an <code>IndexMap</code>…","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","Modifies the entry if it is occupied.","Returns a mutable slice of the remaining entries in the …","Returns a mutable slice of all the key-value pairs in the …","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the key-value pairs in the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of elements the map can hold without …","Remove all key-value pairs in the map, while preserving …","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","","","","","","","","","","","","","","","","","","","","Return an empty <code>IndexMap</code>","Clears the <code>IndexMap</code> in the given index range, returning …","Get the given key’s corresponding entry in the map for …","","","","","","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","Get the first key-value pair.","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","Get the first key-value pair, with mutable access to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Create an <code>IndexMap</code> from the sequence of key-value pairs in …","Gets a reference to the entry’s value in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return item index, key and value","","Return item index, mutable reference to key and value","","Get a key-value pair by index.","Get a key-value pair by index","Get a key-value pair by index, with mutable access to the …","Get a key-value pair by index","Return mutable reference to key and value at an index.","","Return item index, if it exists in the map","Return references to the key-value pair stored for <code>key</code>, if …","Gets a mutable reference to the entry’s value in the map.","","Returns a slice of key-value pairs in the given range of …","Returns a slice of key-value pairs in the given range of …","Returns a mutable slice of key-value pairs in the given …","Returns a mutable slice of key-value pairs in the given …","","Return a reference to the map’s <code>BuildHasher</code>.","Return the index of the key-value pair","Return the index where the key-value pair exists or will …","Return the index where the key-value pair will be inserted.","","","","","","","","","","","","Returns a reference to the value corresponding to the …","","","Returns a reference to the value at the supplied <code>index</code>.","","","","","","","","","","","","","","","Returns a mutable reference to the value corresponding to …","","Returns a mutable reference to the value at the supplied …","","","Sets the value of the entry to <code>value</code>, and returns the entry…","Inserts the entry’s key and the given value into the …","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the key-value pairs in …","","","","","","","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map slice.","Return an owning iterator over the keys of the map, in …","Converts into a mutable reference to the entry’s value …","Returns a mutable slice of the remaining entries in the …","Return an owning iterator over the values of the map slice.","Return an owning iterator over the values of the map, in …","Returns true if the map slice contains no elements.","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s key, either within the …","Gets a reference to the key that was used to find the …","Return an iterator over the keys of the map slice.","Return an iterator over the keys of the map, in their order","","","","","","","","","","Get the last key-value pair.","Get the last key-value pair","Get the last key-value pair, with mutable access to the …","Get the last key-value pair, with mutable access to the …","","","","","","","","","","Return the number of key-value pairs in the map slice.","Return the number of key-value pairs in the map.","Moves the position of a key-value pair from one index to …","Create a new map. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a default-constructed value in the entry if it is …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if it …","Inserts the result of the <code>call</code> function with a reference …","","Remove the last key-value pair","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Reserve capacity for <code>additional</code> more key-value pairs.","Reserve capacity for <code>additional</code> more key-value pairs, …","Scan through each key-value pair in the map and keep those …","Scan through each key-value pair in the map and keep those …","","Reverses the order of the map’s key-value pairs in place.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","Shrink the capacity of the map with a lower limit.","Shrink the capacity of the map as much as possible.","","","","","","","","","","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs in place using a sort-key …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the key-value pairs of the map and return a by-value …","Sort the key-value pairs of the map and return a by-value …","Divides one slice into two at an index.","Divides one mutable slice into two at an index.","Returns the first key-value pair and the rest of the slice,","Returns the first key-value pair and the rest of the slice,","Returns the last key-value pair and the rest of the slice, …","Returns the last key-value pair and the rest of the slice, …","Splits the collection into two at the given index.","Swaps the position of two key-value pairs in the map.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","","","","","Shortens the map, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more key-value …","Try to reserve capacity for <code>additional</code> more key-value …","","","","","","","","","","","","","","","Return an iterator over the values of the map slice.","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the the …","Return an iterator over mutable references to the values …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>.","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>IndexSet</code>.","A hash set where the iteration order of the values is …","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A dynamically-sized slice of values in an <code>IndexSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>IndexSet</code>…","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the values in the set.","Returns the set intersection, cloned into a new set.","Returns the set union, cloned into a new set.","Returns the set symmetric-difference, cloned into a new …","","","","","","","","","","","","","","","","","","","Return the number of elements the set can hold without …","Remove all elements in the set, while preserving its …","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","","","","","","","Return an empty <code>IndexSet</code>","Return an iterator over the values that are in <code>self</code> but …","Clears the <code>IndexSet</code> in the given index range, returning …","","","","","","","","","","","Get the first value.","Get the first value","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","","Return a reference to the value stored in the set, if it …","Return item index and value","Get a value by index.","Get a value by index","Return item index, if it exists in the set","Returns a slice of values in the given range of indices.","Returns a slice of values in the given range of indices.","","Return a reference to the set’s <code>BuildHasher</code>.","","","","","","","","","","","","","","","","Returns a reference to the value at the supplied <code>index</code>.","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in both <code>self</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the values in the set.","","","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns true if the set slice contains no elements.","Returns true if the set contains no elements.","Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…","Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…","Return an iterator over the values of the set slice.","Return an iterator over the values of the set, in their …","","","","Get the last value.","Get the last value","","","","Return the number of elements in the set slice.","Return the number of elements in the set.","Moves the position of a value from one index to another by …","Create a new set. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","Remove the last value","Remove the value from the set, and return <code>true</code> if it was …","Adds a value to the set, replacing the existing value, if …","Adds a value to the set, replacing the existing value, if …","Reserve capacity for <code>additional</code> more values.","Reserve capacity for <code>additional</code> more values, without …","Scan through each value in the set and keep those where the","Reverses the order of the set’s values in place.","","","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Shrink the capacity of the set with a lower limit.","Shrink the capacity of the set as much as possible.","","","","","","","","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the set’s values in place using a key extraction …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by-value iterator …","Sort the values of the set and return a by-value iterator …","Divides one slice into two at an index.","Returns the first value and the rest of the slice, or <code>None</code> …","Returns the last value and the rest of the slice, or <code>None</code> …","Splits the collection into two at the given index.","Returns the set difference, cloned into a new set.","Swaps the position of two values in the set.","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Return an iterator over the values that are in <code>self</code> or …","Removes and returns the value in the set, if any, that is …","","","","","","","Shortens the set, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more values.","Try to reserve capacity for <code>additional</code> more values, …","","","","","","","","","","Return an iterator over all values that are in <code>self</code> or …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>."],"i":[0,0,0,0,1,1,1,1,1,29,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,61,0,0,8,0,0,8,0,61,0,0,8,10,12,13,14,10,15,12,38,8,39,13,14,10,15,17,23,18,24,25,11,12,38,8,39,13,14,10,15,17,23,18,24,25,11,12,12,12,13,17,18,12,12,13,17,18,12,11,13,14,10,15,17,23,18,24,25,11,12,13,14,10,15,17,23,18,24,25,13,14,10,17,23,18,24,25,11,11,12,12,12,11,12,11,11,11,12,12,12,12,12,11,12,11,12,38,8,39,13,14,10,15,17,23,18,24,25,11,12,38,8,39,13,14,10,15,17,23,18,24,25,12,12,12,38,12,12,12,61,12,11,12,11,12,61,12,12,12,38,12,11,12,11,12,11,12,38,8,39,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,38,39,12,12,38,8,39,13,14,10,15,17,23,18,24,25,12,12,13,14,10,15,17,23,18,24,25,11,11,12,12,12,39,11,12,38,14,11,12,11,12,11,12,11,12,38,8,39,11,12,13,14,10,15,17,23,18,24,25,11,12,11,12,13,14,10,15,17,23,18,24,25,11,12,12,12,13,14,10,15,17,23,18,24,25,13,14,10,15,17,23,18,24,25,13,14,10,15,17,23,18,24,25,13,14,10,15,17,23,18,24,25,8,8,8,8,11,12,38,12,38,12,12,12,12,61,12,12,38,12,38,12,12,12,12,12,13,14,10,15,17,23,18,24,25,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,38,12,38,12,12,12,13,17,18,12,12,38,8,39,13,14,10,15,17,23,18,24,25,12,38,8,39,13,14,10,15,17,23,18,24,25,12,12,12,38,8,39,13,14,10,15,17,23,18,24,25,11,12,11,12,11,12,12,12,12,0,0,0,0,0,0,0,0,0,52,54,55,56,56,56,56,52,54,55,57,58,59,60,53,56,52,54,55,57,58,59,60,53,56,56,56,52,57,58,59,60,56,56,52,57,58,59,60,56,53,52,54,55,53,56,52,54,55,52,54,53,56,56,56,53,56,53,53,53,56,56,56,56,56,53,56,52,54,55,57,58,59,60,53,56,59,60,52,54,55,57,58,59,60,56,56,56,56,56,53,56,56,53,56,53,56,53,53,53,53,53,53,53,53,56,56,56,56,56,56,56,56,56,56,56,52,54,55,57,58,59,60,56,56,52,54,55,57,58,59,60,53,56,56,56,53,56,56,56,53,56,52,54,55,53,56,52,54,55,53,56,56,56,52,54,55,57,58,59,60,52,54,55,57,58,59,60,52,54,55,52,54,55,53,56,56,56,56,56,56,56,56,59,60,56,56,56,56,56,56,52,54,55,57,58,59,60,56,56,56,56,56,56,56,53,53,53,56,56,56,56,56,56,56,56,56,52,57,58,59,60,56,56,52,54,55,57,58,59,60,56,52,54,55,57,58,59,60,56,56,56,52,54,55,57,58,59,60,53,56,56,56,56,56],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[],2],[[],2],[[1,3],4],[[1,3],4],[[]],0,0,[[]],0,0,[[]],[[],5],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,9],8],[10,11],[12,11],[13,11],[14,11],[10,11],[15,11],[12,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,16],[12],[13,13],[17,17],[18,18],[[[12,[19,19,19]]],[[12,[19,19,19]]]],[[[12,[19,19,19]],[12,[19,19,19]]]],[[]],[[]],[[]],[[]],[[[11,[20,20]],[11,[20,20]]],21],[13,22],[14,22],[10,22],[15,22],[17,22],[23,22],[18,22],[24,22],[25,22],[[],21],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],2],[13,16],[14,16],[10,16],[15,16],[17,16],[23,16],[18,16],[24,16],[25,16],[[],13],[[],14],[[],10],[[],17],[[],23],[[],18],[[],24],[[],25],[[],11],[[],11],[[],[[12,[31]]]],[[12,[32,[16]]],15],[[[12,[[0,[26,27]],28]],[0,[26,27]]],[[8,[[0,[26,27]]]]]],[[[11,[33,33]],[11,[33,33]]],2],[[[12,[[0,[26,27]],33,28]],[12,[[0,[26,27]],28]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[12,[[0,[26,27]],28]],34]],[[[12,[[0,[26,27,35]],35,28]],34]],[11,36],[12,36],[11,36],[12,36],[[[38,[37,37]],3],4],[[[8,[37,37]],3],4],[[[39,[37]],3],4],[[[13,[37,37]],3],4],[[[14,[37,37]],3],4],[[[10,[37,37]],3],4],[[[15,[37,37]],3],4],[[[17,[37]],3],4],[[[23,[37]],3],4],[[[18,[37]],3],4],[[[24,[37]],3],4],[[[25,[37]],3],4],[[[11,[37,37]],3],4],[[[12,[37,37]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[12,[[0,[26,27]],41]]]],[34,[[12,[[0,[26,27]],[0,[28,31]]]]]],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[0,[26,29,30]]],36],[[[12,[[0,[27,26]],28]],[0,[26,[29,[[0,[27,26]]]],30]]],36],[[11,16],36],[[12,16],36],[[11,16],36],[[12,16],36],[16,36],[[[12,[[0,[27,26]],28]],16],36],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[16]]]],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[11,[32,[16]]],[[36,[11]]]],[[12,[32,[16]]],[[36,[11]]]],[[11,[32,[16]]],[[36,[11]]]],[[12,[32,[16]]],[[36,[11]]]],[[[11,[26,26]],42]],[12],[38,16],[8,16],[39,16],[[11,[43,[16]]],11],[[11,[44,[16]]],11],[[11,[45,[16]]],11],[11,11],[[11,[46,[16]]],11],[[11,47],11],[[11,[48,[16]]],11],[[11,16]],[[12,47]],[[12,[48,[16]]]],[[12,[45,[16]]]],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]]],[[12,[46,[16]]]],[[12,[43,[16]]]],[[12,16]],[12],[[12,[44,[16]]]],[[11,47],11],[[11,16]],[[11,[44,[16]]],11],[[11,[45,[16]]],11],[[11,[43,[16]]],11],[[11,[46,[16]]],11],[[11,[48,[16]]],11],[11,11],[[12,[43,[16]]]],[[12,47]],[[12,[48,[16]]]],[[12,[45,[16]]]],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]]],[[12,[44,[16]]]],[[12,16]],[12],[[12,[46,[16]]]],[38],[39],[[[12,[[0,[26,27]],28]],[0,[26,27]]],36],[[[12,[[0,[26,27]],28]],[0,[26,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[49,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[12],[12],[12],[39],[[[49,[11]]],23],[12,23],[38],[14,11],[[[49,[11]]],25],[12,25],[11,2],[12,2],[11,13],[12,13],[11,14],[12,14],[38],[8],[39],[11,17],[12,17],[13,36],[14,36],[10,36],[15,36],[17,36],[23,36],[18,36],[24,36],[25,36],[11,36],[12,36],[11,36],[12,36],[13,16],[14,16],[10,16],[15,16],[17,16],[23,16],[18,16],[24,16],[25,16],[11,16],[12,16],[[12,16,16]],[[],12],[13,36],[14,36],[10,36],[15,36],[17,36],[23,36],[18,36],[24,36],[25,36],[13,36],[14,36],[10,36],[15,36],[17,36],[23,36],[18,36],[24,36],[25,36],[[13,16],36],[[14,16],36],[[10,16],36],[[15,16],36],[[17,16],36],[[23,16],36],[[18,16],36],[[24,16],36],[[25,16],36],[[13,16],36],[[14,16],36],[[10,16],36],[[15,16],36],[[17,16],36],[[23,16],36],[[18,16],36],[[24,16],36],[[25,16],36],[[[8,[31]]],31],[8],[[8,9]],[[8,9]],[[[11,[50,50]],[11,[50,50]]],[[36,[21]]]],[[[12,[[0,[26,27]],28]]],36],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[12,[[0,[26,27]],28]],16]],[[[12,[[0,[26,27]],28]],16]],[[[12,[[0,[26,27]],28]],51]],[51],[[[12,[[0,[27,26]],28]],51]],[[[12,[[0,[26,27]],28]]]],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[12,16],36],[[[12,[[0,[26,27]],28]],16]],[[[12,[[0,[26,27]],28]]]],[13],[14],[10],[15],[17],[23],[18],[24],[25],[[[12,[[0,[26,27]],28]],51]],[[[12,[[0,[26,27]],28]],51]],[[[12,[20,[0,[26,27]],28]]]],[[[12,[[0,[26,27]],28]],51]],[[[12,[20,[0,[26,27]],28]]]],[[[12,[[0,[26,27]],28]],51],[[10,[[0,[26,27]]]]]],[[[12,[[0,[26,27]],28]],51],[[10,[[0,[26,27]]]]]],[[11,16]],[[11,16]],[11,36],[11,36],[11,36],[11,36],[[[12,[19]],16],[[12,[19]]]],[[12,16,16]],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[38],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[[12,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[12,16],36],[[]],[[]],[[]],[[]],[[12,16]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[12,[[0,[26,27]],28]],16],[[6,[1]]]],[[[12,[[0,[26,27]],28]],16],[[6,[1]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[11,18],[12,18],[11,24],[12,24],[16,12],[16,12],[[],12],0,0,0,0,0,0,0,0,0,[52,53],[54,53],[55,53],[56,53],[[[56,[[0,[27,26,19]],[0,[28,31]]]],[56,[[0,[27,26,19]],28]]]],[[[56,[[0,[27,26,19]],[0,[28,31]]]],[56,[[0,[27,26,19]],28]]]],[[[56,[[0,[27,26,19]],[0,[28,31]]]],[56,[[0,[27,26,19]],28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,16],[56],[52,52],[57,57],[58,58],[59,59],[60,60],[[[56,[19,19]]],[[56,[19,19]]]],[[[56,[19,19]],[56,[19,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[20]],[53,[20]]],21],[52,22],[54,22],[55,22],[[],21],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],2],[52,16],[54,16],[55,16],[[],52],[[],54],[[],53],[[],[[56,[31]]]],[[[56,[[0,[26,27]],28]],[56,[[0,[26,27]],28]]],[[57,[[0,[26,27]],28]]]],[[56,[32,[16]]],55],[[[53,[33]],[53,[33]]],2],[[[56,[[0,[26,27]],28]],[56,[[0,[26,27]],28]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[56,[[0,[26,27,35]],28]],34]],[[[56,[[0,[26,27]],28]],34]],[53,36],[56,36],[[[52,[37]],3],4],[[[54,[37]],3],4],[[[55,[37]],3],4],[[[57,[[0,[37,27,26]],28]],3],4],[[[58,[[0,[37,27,26]],28]],3],4],[[[59,[[0,[37,27,26]],28,28]],3],4],[[[60,[[0,[37,27,26]],28]],3],4],[[[53,[37]],3],4],[[[56,[37]],3],4],[[[59,[[0,[27,26]],28,28]],51]],[[[60,[[0,[27,26]],28]],51]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[[0,[27,26]]]]],[[56,[[0,[27,26]],41]]]],[34,[[56,[[0,[26,27]],[0,[28,31]]]]]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[53,16],36],[[56,16],36],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[16]]]],[[53,[32,[16]]],[[36,[53]]]],[[56,[32,[16]]],[[36,[53]]]],[[[53,[26]],42]],[56],[[53,[48,[16]]]],[[53,16]],[[53,[44,[16]]]],[53],[[53,[46,[16]]]],[[53,[45,[16]]]],[[53,47]],[[53,[43,[16]]]],[[56,[44,[16]]]],[[56,[43,[16]]]],[[56,47]],[[56,[48,[16]]]],[56],[[56,[45,[16]]]],[[56,[46,[16]]]],[[56,16]],[[[56,[[0,[26,27]],28]],[0,[26,27]]],2],[[[56,[[0,[26,27]],28]],[0,[26,27]]]],[[[56,[[0,[26,27]],28]],[56,[[0,[26,27]],28]]],[[58,[[0,[26,27]],28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,[[49,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[56],[56],[[[56,[[0,[27,26]],28]],[56,[[0,[27,26]],28]]],2],[53,2],[56,2],[[[56,[[0,[27,26]],28]],[56,[[0,[27,26]],28]]],2],[[[56,[[0,[27,26]],28]],[56,[[0,[27,26]],28]]],2],[53,52],[56,52],[52,36],[54,36],[55,36],[53,36],[56,36],[52,16],[54,16],[55,16],[53,16],[56,16],[[56,16,16]],[[],56],[52,36],[54,36],[55,36],[[[57,[[0,[27,26]],28]]],36],[[[58,[[0,[27,26]],28]]],36],[[[59,[[0,[27,26]],28,28]]],36],[[[60,[[0,[27,26]],28]]],36],[52,36],[54,36],[55,36],[[[57,[[0,[27,26]],28]]],36],[[[58,[[0,[27,26]],28]]],36],[[[59,[[0,[27,26]],28,28]]],36],[[[60,[[0,[27,26]],28]]],36],[[52,16],36],[[54,16],36],[[55,16],36],[[52,16],36],[[54,16],36],[[55,16],36],[[[53,[50]],[53,[50]]],[[36,[21]]]],[[[56,[[0,[26,27]],28]]],[[36,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],2],[[[56,[[0,[26,27]],28]],[0,[26,27]]],[[36,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],[0,[26,27]]]],[[[56,[[0,[26,27]],28]],16]],[[[56,[[0,[26,27]],28]],16]],[[[56,[[0,[26,27]],28]],51]],[[[56,[[0,[26,27]],28]]]],[[[59,[[0,[27,26]],28,28]],51]],[[[60,[[0,[27,26]],28]],51]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],2],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[56,16],36],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],16]],[[[56,[[0,[26,27]],28]]]],[52],[54],[55],[[[57,[[0,[27,26]],28]]]],[[[58,[[0,[27,26]],28]]]],[[[59,[[0,[27,26]],28,28]]]],[[[60,[[0,[27,26]],28]]]],[[[56,[20,[0,[26,27]],28]]]],[[[56,[[0,[26,27]],28]],51]],[[[56,[[0,[26,27]],28]],51]],[[[56,[20,[0,[26,27]],28]]]],[[[56,[[0,[26,27]],28]],51]],[[[56,[[0,[26,27]],28]],51],[[54,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],51],[[54,[[0,[26,27]]]]]],[[53,16]],[53,36],[53,36],[[[56,[19]],16],[[56,[19]]]],[[[56,[[0,[27,26,19]],[0,[28,31]]]],[56,[[0,[27,26,19]],28]]]],[[56,16,16]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],2],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],36],[[56,16],36],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[[0,[26,27]]]]]],[[[56,[[0,[26,27]],28]],[56,[[0,[26,27]],28]]],[[59,[[0,[26,27]],28,28]]]],[[[56,[[0,[26,27]],28]],[0,[26,[29,[[0,[26,27]]]],30]]],[[36,[[0,[26,27]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,16]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[56,[[0,[26,27]],28]],16],[[6,[1]]]],[[[56,[[0,[26,27]],28]],16],[[6,[1]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[56,[[0,[26,27]],28]],[56,[[0,[26,27]],28]]],[[60,[[0,[26,27]],28]]]],[16,56],[16,56],[[],56]],"c":[],"p":[[3,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Entry"],[8,"FnOnce"],[3,"IntoIter"],[3,"Slice"],[3,"IndexMap"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[15,"usize"],[3,"Keys"],[3,"Values"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"FromIterator"],[3,"IntoKeys"],[3,"ValuesMut"],[3,"IntoValues"],[8,"Hash"],[8,"Eq"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Sized"],[8,"Default"],[8,"RangeBounds"],[8,"PartialEq"],[8,"IntoIterator"],[8,"Copy"],[4,"Option"],[8,"Debug"],[3,"OccupiedEntry"],[3,"VacantEntry"],[15,"array"],[3,"RandomState"],[8,"Hasher"],[3,"RangeToInclusive"],[3,"Range"],[3,"RangeTo"],[3,"RangeInclusive"],[3,"RangeFull"],[3,"RangeFrom"],[3,"Box"],[8,"PartialOrd"],[8,"FnMut"],[3,"Iter"],[3,"Slice"],[3,"IntoIter"],[3,"Drain"],[3,"IndexSet"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[8,"MutableKeys"]]},\
"inflections":{"doc":"This is a library which allows anyone to change various …","t":"IAKKKKKKKKKKKKKKKKKKKKFFFFFFFFFFFFFFFFFFFF","n":["Inflect","case","is_camel_case","is_constant_case","is_kebab_case","is_lower_case","is_pascal_case","is_sentence_case","is_snake_case","is_title_case","is_train_case","is_upper_case","to_camel_case","to_constant_case","to_kebab_case","to_lower_case","to_pascal_case","to_sentence_case","to_snake_case","to_title_case","to_train_case","to_upper_case","is_camel_case","is_constant_case","is_kebab_case","is_lower_case","is_pascal_case","is_sentence_case","is_snake_case","is_title_case","is_train_case","is_upper_case","to_camel_case","to_constant_case","to_kebab_case","to_lower_case","to_pascal_case","to_sentence_case","to_snake_case","to_title_case","to_train_case","to_upper_case"],"q":[[0,"inflections"],[22,"inflections::case"]],"d":["An extension trait to make the functions in the <code>case</code> …","Utilities to change the case of a string to another case. …","","","","","","","","","","","","","","","","","","","","","Check to see if a string is camelCase.","Check to see if a string is CONSTANT_CASE.","Check to see if a string is kebab-case.","Check to see if a string is completely lower case.","Check to see if a string is PascalCase.","Check to see if a string is sentence case.","Check to see if a string is snake_case.","Check to see if a string is Title Case.","Check to see if a string is Train-Case.","Check to see if a string is completely UPPER CASE.","Converts any case into camelCase.","Converts any case into CONSTANT_CASE.","Converts any case into kebab-case.","Converts any case into lower case ignoring separators.","Converts any case into PascalCase.","Converts any case into traditional sentence case without …","Converts any case into snake_case.","Converts any case into title case where <em>every</em> word is …","Converts any case into Train-Case.","Converts any case into UPPER CASE ignoring separators."],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[3,2]],"c":[],"p":[[15,"bool"],[3,"String"],[15,"str"],[8,"Inflect"]]},\
"instant":{"doc":"","t":"DGSSSSSGSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLL","n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","equivalent","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":[[0,"instant"]],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[1,2],[1,2],[1,2],[1,3],[1,4],[1,5],[[]],[[]],[[1,1],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,1],[[6,[1]]]],[1,1],[[]],[[1,1],8],[[],1],[[1,7],1],[[1,7]],[[1,1],4],[[1,1],5],[[1,4],1],[[1,5],1],[[1,1],9],[[],9],[[1,10],[[12,[11]]]],[[]],[3,1],[3,1],[3,1],[3,1],[4,1],[5,1],[[1,13]],[[]],[1,9],[[1,7],1],[[1,7]],[[1,4],1],[[1,5],1],[[3,7],1],[[],5],[[1,1],[[6,[8]]]],[[1,1],1],[[1,7],1],[[1,1],1],[[1,1],1],[[1,1]],[1,7],[1,7],[1,7],[14,1],[14,1],[[]],[[],12],[4,[[12,[1,15]]]],[5,[[12,[1,15]]]],[[],12],[[],16]],"c":[],"p":[[3,"Duration"],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"Option"],[15,"u32"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[3,"TryFromFloatSecsError"],[3,"TypeId"]]},\
"is_terminal":{"doc":"is-terminal is a simple utility that answers one question:","t":"IFK","n":["IsTerminal","is_terminal","is_terminal"],"q":[[0,"is_terminal"]],"d":["Extension trait to check whether something is a terminal.","Returns <code>true</code> if <code>this</code> is a terminal.","Returns true if this is a terminal."],"i":[0,0,1],"f":[0,[1,2],[[],2]],"c":[],"p":[[8,"IsTerminal"],[15,"bool"]]},\
"itoa":{"doc":"github crates-io docs-rs","t":"DILLLLLLLLLLL","n":["Buffer","Integer","borrow","borrow_mut","clone","default","format","from","into","new","try_from","try_into","type_id"],"q":[[0,"itoa"]],"d":["A correctly sized stack allocation for the formatted …","An integer that can be written into an <code>itoa::Buffer</code>.","","","","","Print an integer into this buffer and return a reference …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","This is a cheap operation; you don’t need to worry about …","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[]],[[]],[1,1],[[],1],[[1,2],3],[[]],[[]],[[],1],[[],4],[[],4],[[],5]],"c":[],"p":[[3,"Buffer"],[8,"Integer"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","t":"NNNEENNNNNDENNNDNNNNNNNNNENNNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["ArithmeticEntropyCoding","CMYK","CMYK32","CodingProcess","ColorTransform","ColorTransform","ComponentCount","DNL","DctProgressive","DctSequential","Decoder","Error","Format","Grayscale","Hierarchical","ImageInfo","Internal","Io","JcsBgRgb","JcsBgYcc","L16","L8","Lossless","NonIntegerSubsamplingRatio","None","PixelFormat","RGB","RGB24","SamplePrecision","SubsamplingRatio","Unknown","Unsupported","UnsupportedFeature","YCCK","YCbCr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","coding_process","decode","decode_scan_lossless","eq","eq","eq","eq","eq","equivalent","equivalent","exif_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","height","icc_profile","info","into","into","into","into","into","into","into","new","pixel_bytes","pixel_format","read_info","scale","set_color_transform","set_max_decoding_buffer_size","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width"],"q":[[0,"jpeg_decoder"]],"d":["JPEG using arithmetic entropy coding instead of Huffman …","CMYK transform should be applied.","CMYK, 8 bits per channel","Represents the coding process of an image.","Describes the colour transform to apply before binary data …","Colour transform","Number of components in an image. 1, 3 and 4 components …","An image can specify a zero height in the frame header and …","Progressive Discrete Cosine Transform","Sequential Discrete Cosine Transform","JPEG decoder","Errors that can occur while decoding a JPEG image.","The image is not formatted properly. The string contains …","Grayscale transform should be applied (expects 1 channel)","Hierarchical JPEG.","Represents metadata of an image.","An internal error occurred while decoding the image.","An I/O error occurred while decoding the image.","big gamut red/green/blue, bg-sRGB","big gamut Y/Cb/Cr, bg-sYCC","Luminance (grayscale), 16 bits","Luminance (grayscale), 8 bits","Lossless","A subsampling ratio not representable as an integer.","No transform should be applied and the data is returned …","An enumeration over combinations of color spaces and bit …","RGB transform should be applied.","RGB, 8 bits per channel","Sample precision in bits. 8 bit sample precision is what …","Subsampling ratio.","Unknown colour transformation","The image makes use of a JPEG feature not (currently) …","An enumeration over JPEG features (currently) unsupported …","YCCK transform should be applied.","YCbCr transform should be applied.","","","","","","","","","","","","","","","","","","","","","","","","","The coding process of the image.","Decodes the image and returns the decoded pixels if …","decode_scan_lossless","","","","","","","","Returns raw exif data, starting at the TIFF header, if the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","The height of the image, in pixels.","Returns the embeded icc profile if the image contains one.","Returns metadata about the image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>Decoder</code> using the reader <code>reader</code>.","Determine the size in bytes of each pixel in this format","The pixel format of the image.","Tries to read metadata from the image without decoding it.","Configure the decoder to scale the image during decoding.","Colour transform to use when decoding the image. App …","Set maximum buffer size allowed for decoded images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The width of the image, in pixels."],"i":[4,3,1,0,0,4,4,4,5,5,0,0,10,3,4,0,10,10,3,3,1,1,5,4,3,0,3,1,4,4,3,10,0,3,3,7,1,2,3,4,10,5,7,1,2,3,4,10,5,1,2,3,4,5,1,2,3,4,5,2,7,7,1,2,3,4,5,3,4,7,1,2,3,4,10,10,5,7,1,2,3,4,10,10,5,3,4,2,7,7,7,1,2,3,4,10,5,7,1,2,7,7,7,7,10,1,2,3,4,5,10,7,1,2,3,4,10,5,7,1,2,3,4,10,5,7,1,2,3,4,10,5,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[[7,[6]]],[[11,[[9,[8]],10]]]],0,[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[],12],[[],12],[[[7,[6]]],[[14,[[13,[8]]]]]],[[1,15],16],[[2,15],16],[[3,15],16],[[4,15],16],[[10,15],16],[[10,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[17,10],[[]],[[]],[[3,18]],[[4,18]],0,[[[7,[6]]],[[14,[[9,[8]]]]]],[[[7,[6]]],[[14,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[7,[6]]]],[1,19],0,[[[7,[6]]],[[11,[10]]]],[[[7,[6]],20,20],[[11,[10]]]],[[[7,[6]],3]],[[[7,[6]],19]],[10,[[14,[21]]]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0],"c":[],"p":[[4,"PixelFormat"],[3,"ImageInfo"],[4,"ColorTransform"],[4,"UnsupportedFeature"],[4,"CodingProcess"],[8,"Read"],[3,"Decoder"],[15,"u8"],[3,"Vec"],[4,"Error"],[4,"Result"],[15,"bool"],[15,"slice"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Hasher"],[15,"usize"],[15,"u16"],[8,"Error"],[3,"String"],[3,"TypeId"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGFGRRRRRRRRRRRRRRRRFFFFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRERRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFRFRRRERRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRFFFFFRRRFFRRRRRRRRRRRRRRRRRRRFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRRRRRRMDDDDFMMMMMMMGGMMMMMMGGMMFFFFFMMFFFFFMMMMDFMMMMMMMMMMFFMFMMMFMFMFFDFMMMMMFFFDMFFFFFFFMMGDDDFFFFFFFMMMMFMGGMGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFFMMMMMMGGGMGMMGGMMGGGGGGGEMFMGFFFFFFMFFFFFMMFFFFGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFMMMMMMMMMDMMMMMFFFMMFGGFFFFGMMMGMMGMMMMMMMMMFFFMDMMMMMMMMMMMMMMMGFMMDFFFMFFFMMMMFFMMMMMMMMMMDFFFFMMFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMFFFFFFFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFMMFFFFFFFFFFMDFFFFMMFFFFFFMMFMMMMMMMMMMMMMMMMFDFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMFMMMFEFDFFMFFFMMFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFFFFFFGDDMMMMMMMMFFFFDFMMFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMGMMMFDFFFMMMMFDMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMGGGFFFGDFFFFGGMMGDDFMFDDMDFFMMMMDMMMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDMMMMMMMMMMMMMDMMMMMMMMMDDDGDGMMFMMGGGGGMMMMMMMMGMGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFMMDDDDDMMMMMDMMMFFFFFFFFFFFFFMMDMMFRRRRRRRRRRRRRGDFFDGFFFMMMMMMMMMMFFFDGGDFFFFFMDGFFFFFDFMMFFFFFMDDFGGDGGFHFDFGGFGGMFMMFFFFFFFDFFFFFFFFFFDFDMMMMMGGFFFFFGGFFFFFMFFFFFFFFFFFFFFFMGMMMMMFFFMMMMMMMDDFFFFFMMMMFMGMMMFGFGFGMMFMMFFDMGMMFFFFFFFDFGFGFFFGGGFFFDGFFMMMMMMMMMMDFFMMMMMMMMMMMMMMMMMMMMFMFGFMMGFDFMFFFFFFFFFGFFFFFFFFFFFFFFGFMFFMMFMDFFFFFFFFFFFFFFFFFDDDDDGGMDGGGGGDGGDGGDFRRRRRMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFDFFFFFDFFFFFFDFFFFFFFFFFFFFFGFGFFFFFFFGFFFFFFDFFFFFFFDFFFDFFFFFFFFDFFFFFFFGFMMMMMMMMMMMMMMMMMMMFGFMMMMFFFFFMMMMMMMMMMMMFFEFFFMMDFFMMFFFFFFFFFFFFFDFFDGMFFFFFFFMMMMMMMFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGDMMFMMMMMMMMMMMMDDDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGDDDDDMMMMMMMDMGMMMMGGMMMMMFMMMMMFFFDMFMMMMMMMMMFFDDMMFMFMMMMMFMMMMMFGFFFDFFDFTFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDMMMMMMMMFMMFFGFFFDFLMMMLMMLMLMLDFFFFFMMMMDFGDFFFFGDFMMMMMMMMMMMMMMMMMMMMMMGMMFMMMMMFDDDDDDDDDDFFGMMGFFFMMMMMMFGMMMMMMMMMMMMMMMMMMMMMMMDDFDFMDFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMGMMMMMMMMMFFFFFFFFFEEGFFMFMMMMMFGFFGGFGFDGGFFGFFFFFFFFFDMGGDGGDGGDGGMDGGDGGGMMDGGFGGDGGGMGFFGDGGDGGGDGGGMDGGMFMMGDFFMDDDDEDMMMMMMMMMMMFFDMMMMMFMFMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDMMMGGGGGGGFFFFFFFFGFMMMFMMMMMMMDFFFDFDMGMMMMMMMMMDMMMGFGGGHGDGDDGGGGMMMMDDDDGMMMMMMMMMMMMMMMMMMMMMMMFFFFGFFDMMFFFMMMMMMMMMDDMM","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ACCOUNTING","AF_APPLETALK","AF_CCITT","AF_CHAOS","AF_CNT","AF_COIP","AF_DATAKIT","AF_DECnet","AF_DLI","AF_E164","AF_ECMA","AF_HYLINK","AF_IEEE80211","AF_IMPLINK","AF_INET","AF_INET6","AF_IPX","AF_ISDN","AF_ISO","AF_LAT","AF_LINK","AF_LOCAL","AF_NATM","AF_NDRV","AF_NETBIOS","AF_NS","AF_OSI","AF_PPP","AF_PUP","AF_ROUTE","AF_SIP","AF_SNA","AF_SYSTEM","AF_SYS_CONTROL","AF_UNIX","AF_UNSPEC","AF_UTUN","AF_VSOCK","AIO_ALLDONE","AIO_CANCELED","AIO_LISTIO_MAX","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_DEFAULT","AI_MASK","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_UNUSABLE","AI_V4MAPPED","AI_V4MAPPED_CFG","ALTWERASE","ALT_DIGITS","AM_STR","ARPOP_REPLY","ARPOP_REQUEST","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","ATTR_BIT_MAP_COUNT","ATTR_CMNEXT_CLONEID","ATTR_CMNEXT_EXT_FLAGS","ATTR_CMNEXT_LINKID","ATTR_CMNEXT_NOFIRMLINKPATH","ATTR_CMNEXT_PRIVATESIZE","ATTR_CMNEXT_REALDEVID","ATTR_CMNEXT_REALFSID","ATTR_CMNEXT_RECURSIVE_GENCOUNT","ATTR_CMNEXT_RELPATH","ATTR_CMN_ACCESSMASK","ATTR_CMN_ACCTIME","ATTR_CMN_ADDEDTIME","ATTR_CMN_BKUPTIME","ATTR_CMN_CHGTIME","ATTR_CMN_CRTIME","ATTR_CMN_DATA_PROTECT_FLAGS","ATTR_CMN_DEVID","ATTR_CMN_DOCUMENT_ID","ATTR_CMN_EXTENDED_SECURITY","ATTR_CMN_FILEID","ATTR_CMN_FLAGS","ATTR_CMN_FNDRINFO","ATTR_CMN_FSID","ATTR_CMN_FULLPATH","ATTR_CMN_GEN_COUNT","ATTR_CMN_GRPID","ATTR_CMN_GRPUUID","ATTR_CMN_MODTIME","ATTR_CMN_NAME","ATTR_CMN_OBJID","ATTR_CMN_OBJPERMANENTID","ATTR_CMN_OBJTAG","ATTR_CMN_OBJTYPE","ATTR_CMN_OWNERID","ATTR_CMN_PARENTID","ATTR_CMN_PAROBJID","ATTR_CMN_RETURNED_ATTRS","ATTR_CMN_SCRIPT","ATTR_CMN_USERACCESS","ATTR_CMN_UUID","ATTR_DIR_ALLOCSIZE","ATTR_DIR_DATALENGTH","ATTR_DIR_ENTRYCOUNT","ATTR_DIR_IOBLOCKSIZE","ATTR_DIR_LINKCOUNT","ATTR_DIR_MOUNTSTATUS","ATTR_FILE_ALLOCSIZE","ATTR_FILE_DATAALLOCSIZE","ATTR_FILE_DATALENGTH","ATTR_FILE_DEVTYPE","ATTR_FILE_FORKCOUNT","ATTR_FILE_FORKLIST","ATTR_FILE_IOBLOCKSIZE","ATTR_FILE_LINKCOUNT","ATTR_FILE_RSRCALLOCSIZE","ATTR_FILE_RSRCLENGTH","ATTR_FILE_TOTALSIZE","ATTR_VOL_ALLOCATIONCLUMP","ATTR_VOL_ATTRIBUTES","ATTR_VOL_CAPABILITIES","ATTR_VOL_DIRCOUNT","ATTR_VOL_ENCODINGSUSED","ATTR_VOL_FILECOUNT","ATTR_VOL_FSTYPE","ATTR_VOL_INFO","ATTR_VOL_IOBLOCKSIZE","ATTR_VOL_MAXOBJCOUNT","ATTR_VOL_MINALLOCATION","ATTR_VOL_MOUNTEDDEVICE","ATTR_VOL_MOUNTFLAGS","ATTR_VOL_MOUNTPOINT","ATTR_VOL_NAME","ATTR_VOL_OBJCOUNT","ATTR_VOL_QUOTA_SIZE","ATTR_VOL_RESERVED_SIZE","ATTR_VOL_SIGNATURE","ATTR_VOL_SIZE","ATTR_VOL_SPACEAVAIL","ATTR_VOL_SPACEFREE","ATTR_VOL_SPACEUSED","ATTR_VOL_UUID","AT_EACCESS","AT_FDCWD","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","B0","B110","B115200","B1200","B134","B14400","B150","B1800","B19200","B200","B230400","B2400","B28800","B300","B38400","B4800","B50","B57600","B600","B7200","B75","B76800","B9600","BIOCFLUSH","BIOCGBLEN","BIOCGDLT","BIOCGDLTLIST","BIOCGETIF","BIOCGHDRCMPLT","BIOCGRSIG","BIOCGRTIMEOUT","BIOCGSEESENT","BIOCGSTATS","BIOCIMMEDIATE","BIOCPROMISC","BIOCSBLEN","BIOCSDLT","BIOCSETF","BIOCSETFNR","BIOCSETIF","BIOCSHDRCMPLT","BIOCSRSIG","BIOCSRTIMEOUT","BIOCSSEESENT","BIOCVERSION","BOOT_TIME","BPF_ALIGNMENT","BRKINT","BS0","BS1","BSDLY","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_OBJERR","CCCryptorStatus","CCRNGStatus","CCRandomGenerateBytes","CCStatus","CIGNORE","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_MONOTONIC","CLOCK_MONOTONIC_RAW","CLOCK_MONOTONIC_RAW_APPROX","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","CLOCK_UPTIME_RAW","CLOCK_UPTIME_RAW_APPROX","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CODESET","CONNECT_DATA_AUTHENTICATED","CONNECT_DATA_IDEMPOTENT","CONNECT_RESUME_ON_READ_WRITE","COPYFILE_ACL","COPYFILE_CHECK","COPYFILE_CLONE","COPYFILE_CLONE_FORCE","COPYFILE_CONTINUE","COPYFILE_COPY_DATA","COPYFILE_COPY_XATTR","COPYFILE_DATA","COPYFILE_DATA_SPARSE","COPYFILE_ERR","COPYFILE_EXCL","COPYFILE_FINISH","COPYFILE_METADATA","COPYFILE_MOVE","COPYFILE_NOFOLLOW","COPYFILE_NOFOLLOW_DST","COPYFILE_NOFOLLOW_SRC","COPYFILE_PACK","COPYFILE_PRESERVE_DST_TRACKED","COPYFILE_PROGRESS","COPYFILE_QUIT","COPYFILE_RECURSE_DIR","COPYFILE_RECURSE_DIR_CLEANUP","COPYFILE_RECURSE_ERROR","COPYFILE_RECURSE_FILE","COPYFILE_RECURSIVE","COPYFILE_RUN_IN_PLACE","COPYFILE_SECURITY","COPYFILE_SKIP","COPYFILE_START","COPYFILE_STAT","COPYFILE_STATE_BSIZE","COPYFILE_STATE_COPIED","COPYFILE_STATE_DST_BSIZE","COPYFILE_STATE_DST_FD","COPYFILE_STATE_DST_FILENAME","COPYFILE_STATE_QUARANTINE","COPYFILE_STATE_SRC_BSIZE","COPYFILE_STATE_SRC_FD","COPYFILE_STATE_SRC_FILENAME","COPYFILE_STATE_STATUS_CB","COPYFILE_STATE_STATUS_CTX","COPYFILE_STATE_WAS_CLONED","COPYFILE_STATE_XATTRNAME","COPYFILE_UNLINK","COPYFILE_UNPACK","COPYFILE_VERBOSE","COPYFILE_XATTR","CPU_STATE_IDLE","CPU_STATE_MAX","CPU_STATE_NICE","CPU_STATE_SYSTEM","CPU_STATE_USER","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTLFLAG_ANYBODY","CTLFLAG_KERN","CTLFLAG_LOCKED","CTLFLAG_MASKED","CTLFLAG_NOAUTO","CTLFLAG_NOLOCK","CTLFLAG_OID2","CTLFLAG_RD","CTLFLAG_RW","CTLFLAG_SECURE","CTLFLAG_WR","CTLIOCGINFO","CTLTYPE","CTLTYPE_INT","CTLTYPE_NODE","CTLTYPE_OPAQUE","CTLTYPE_QUAD","CTLTYPE_STRING","CTLTYPE_STRUCT","CTL_DEBUG","CTL_DEBUG_MAXID","CTL_DEBUG_NAME","CTL_DEBUG_VALUE","CTL_HW","CTL_KERN","CTL_MACHDEP","CTL_MAXID","CTL_NET","CTL_UNSPEC","CTL_USER","CTL_VFS","CTL_VM","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DEAD_PROCESS","DIR","DIR_MNTSTATUS_MNTPOINT","DLT_ARCNET","DLT_ATM_RFC1483","DLT_AX25","DLT_CHAOS","DLT_EN10MB","DLT_EN3MB","DLT_FDDI","DLT_IEEE802","DLT_LOOP","DLT_NULL","DLT_PPP","DLT_PRONET","DLT_RAW","DLT_SLIP","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_MD_ORDER","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EAUTH","EBADARCH","EBADEXEC","EBADF","EBADMACHO","EBADMSG","EBADRPC","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDEVERR","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EFTYPE","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELAST","ELOOP","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENEEDAUTH","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOATTR","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPOLICY","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROCLIM","EPROCUNAVAIL","EPROGMISMATCH","EPROGUNAVAIL","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","EPWROFF","EQFULL","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMOTE","EROFS","ERPCMISMATCH","ESHLIBVERS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUSERS","EVFILT_AIO","EVFILT_FS","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VM","EVFILT_VNODE","EVFILT_WRITE","EV_ADD","EV_CLEAR","EV_DELETE","EV_DISABLE","EV_DISPATCH","EV_ENABLE","EV_EOF","EV_ERROR","EV_FLAG0","EV_FLAG1","EV_ONESHOT","EV_OOBAND","EV_POLL","EV_RECEIPT","EV_SYSFLAGS","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","EXTA","EXTB","EXTPROC","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIODTYPE","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOSETOWN","FLUSHO","FOPEN_MAX","FSOPT_ATTR_CMN_EXTENDED","FSOPT_NOFOLLOW","FSOPT_NOFOLLOW_ANY","FSOPT_PACK_INVAL_ATTRS","FSOPT_REPORT_FULLSIZE","FSOPT_RETURN_REALDEV","F_ALLOCATEALL","F_ALLOCATECONTIG","F_BARRIERFSYNC","F_DUPFD","F_DUPFD_CLOEXEC","F_FREEZE_FS","F_FULLFSYNC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETPATH","F_GETPATH_NOFIRMLINK","F_GLOBAL_NOCACHE","F_LOCK","F_LOG2PHYS","F_LOG2PHYS_EXT","F_NOCACHE","F_NODIRECT","F_OK","F_PEOFPOSMODE","F_PREALLOCATE","F_PUNCHHOLE","F_RDADVISE","F_RDAHEAD","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_SPECULATIVE_READ","F_TEST","F_THAW_FS","F_TLOCK","F_TRIM_ACTIVE_FILE","F_ULOCK","F_UNLCK","F_VOLPOSMODE","F_WRLCK","GETALL","GETNCNT","GETPID","GETVAL","GETZCNT","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRPQUOTA","HOST_CPU_LOAD_INFO","HOST_CPU_LOAD_INFO_COUNT","HOST_EXPIRED_TASK_INFO","HOST_EXTMOD_INFO64","HOST_LOAD_INFO","HOST_VM_INFO","HOST_VM_INFO64","HOST_VM_INFO64_COUNT","HUPCL","HW_AVAILCPU","HW_BUS_FREQ","HW_BYTEORDER","HW_CACHELINE","HW_CPU_FREQ","HW_DISKNAMES","HW_DISKSTATS","HW_EPOCH","HW_FLOATINGPT","HW_L1DCACHESIZE","HW_L1ICACHESIZE","HW_L2CACHESIZE","HW_L2SETTINGS","HW_L3CACHESIZE","HW_L3SETTINGS","HW_MACHINE","HW_MACHINE_ARCH","HW_MAXID","HW_MEMSIZE","HW_MODEL","HW_NCPU","HW_PAGESIZE","HW_PHYSMEM","HW_PRODUCT","HW_TARGET","HW_TB_FREQ","HW_USERMEM","HW_VECTORUNIT","ICANON","ICRNL","IEXTEN","IFF_ALLMULTI","IFF_ALTPHYS","IFF_BROADCAST","IFF_DEBUG","IFF_LINK0","IFF_LINK1","IFF_LINK2","IFF_LOOPBACK","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_OACTIVE","IFF_POINTOPOINT","IFF_PROMISC","IFF_RUNNING","IFF_SIMPLEX","IFF_UP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INT_MAX","INT_MIN","IOV_MAX","IPC_CREAT","IPC_EXCL","IPC_M","IPC_NOWAIT","IPC_PRIVATE","IPC_R","IPC_RMID","IPC_SET","IPC_STAT","IPC_W","IPPROTO_3PC","IPPROTO_ADFS","IPPROTO_AH","IPPROTO_AHIP","IPPROTO_APES","IPPROTO_ARGUS","IPPROTO_AX25","IPPROTO_BHA","IPPROTO_BLT","IPPROTO_BRSATMON","IPPROTO_CFTP","IPPROTO_CHAOS","IPPROTO_CMTP","IPPROTO_CPHB","IPPROTO_CPNX","IPPROTO_DDP","IPPROTO_DGP","IPPROTO_DIVERT","IPPROTO_DONE","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EMCON","IPPROTO_ENCAP","IPPROTO_EON","IPPROTO_ESP","IPPROTO_ETHERIP","IPPROTO_FRAGMENT","IPPROTO_GGP","IPPROTO_GMTP","IPPROTO_GRE","IPPROTO_HELLO","IPPROTO_HMP","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDPR","IPPROTO_IDRP","IPPROTO_IGMP","IPPROTO_IGP","IPPROTO_IGRP","IPPROTO_IL","IPPROTO_INLSP","IPPROTO_INP","IPPROTO_IP","IPPROTO_IPCOMP","IPPROTO_IPCV","IPPROTO_IPEIP","IPPROTO_IPIP","IPPROTO_IPPC","IPPROTO_IPV6","IPPROTO_IRTP","IPPROTO_KRYPTOLAN","IPPROTO_LARP","IPPROTO_LEAF1","IPPROTO_LEAF2","IPPROTO_MAX","IPPROTO_MEAS","IPPROTO_MHRP","IPPROTO_MICP","IPPROTO_MTP","IPPROTO_MUX","IPPROTO_ND","IPPROTO_NHRP","IPPROTO_NONE","IPPROTO_NSP","IPPROTO_NVPII","IPPROTO_OSPFIGP","IPPROTO_PGM","IPPROTO_PIGP","IPPROTO_PIM","IPPROTO_PRM","IPPROTO_PUP","IPPROTO_PVP","IPPROTO_RAW","IPPROTO_RCCMON","IPPROTO_RDP","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RVD","IPPROTO_SATEXPAK","IPPROTO_SATMON","IPPROTO_SCCSP","IPPROTO_SCTP","IPPROTO_SDRP","IPPROTO_SEP","IPPROTO_SRPC","IPPROTO_ST","IPPROTO_SVMTP","IPPROTO_SWIPE","IPPROTO_TCF","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TPXX","IPPROTO_TRUNK1","IPPROTO_TRUNK2","IPPROTO_TTP","IPPROTO_UDP","IPPROTO_VINES","IPPROTO_VISA","IPPROTO_VMTP","IPPROTO_WBEXPAK","IPPROTO_WBMON","IPPROTO_WSN","IPPROTO_XNET","IPPROTO_XTP","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOTECT","IPV6_BOUND_IF","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_HOPLIMIT","IPV6_JOIN_GROUP","IPV6_LEAVE_GROUP","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_PKTINFO","IPV6_RECVPKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_BOUND_IF","IP_DONTFRAG","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_PKTINFO","IP_RECVDSTADDR","IP_RECVIF","IP_RECVTOS","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","ISIG","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","KERN_ABORTED","KERN_AFFINITY","KERN_AIOMAX","KERN_AIOPROCMAX","KERN_AIOTHREADS","KERN_ALREADY_IN_SET","KERN_ALREADY_WAITING","KERN_ARGMAX","KERN_BOOTFILE","KERN_BOOTTIME","KERN_CHECKOPENEVT","KERN_CLASSIC","KERN_CLASSICHANDLER","KERN_CLOCKRATE","KERN_CODESIGN_ERROR","KERN_COREDUMP","KERN_COREFILE","KERN_DEFAULT_SET","KERN_DOMAINNAME","KERN_DUMMY","KERN_DUMPDEV","KERN_EXCEPTION_PROTECTED","KERN_EXEC","KERN_FAILURE","KERN_FILE","KERN_HOSTID","KERN_HOSTNAME","KERN_INSUFFICIENT_BUFFER_SIZE","KERN_INVALID_ADDRESS","KERN_INVALID_ARGUMENT","KERN_INVALID_CAPABILITY","KERN_INVALID_HOST","KERN_INVALID_LEDGER","KERN_INVALID_MEMORY_CONTROL","KERN_INVALID_NAME","KERN_INVALID_OBJECT","KERN_INVALID_POLICY","KERN_INVALID_PROCESSOR_SET","KERN_INVALID_RIGHT","KERN_INVALID_SECURITY","KERN_INVALID_TASK","KERN_INVALID_VALUE","KERN_IPC","KERN_JOB_CONTROL","KERN_KDBUFWAIT","KERN_KDCPUMAP","KERN_KDDFLAGS","KERN_KDEBUG","KERN_KDEFLAGS","KERN_KDENABLE","KERN_KDGETBUF","KERN_KDGETENTROPY","KERN_KDGETREG","KERN_KDPIDEX","KERN_KDPIDTR","KERN_KDREADCURTHRMAP","KERN_KDREADTR","KERN_KDREMOVE","KERN_KDSETBUF","KERN_KDSETREG","KERN_KDSETRTCDEC","KERN_KDSETUP","KERN_KDSET_TYPEFILTER","KERN_KDTHRMAP","KERN_KDWRITEMAP","KERN_KDWRITETR","KERN_LOCK_OWNED","KERN_LOCK_OWNED_SELF","KERN_LOCK_SET_DESTROYED","KERN_LOCK_UNSTABLE","KERN_LOGSIGEXIT","KERN_LOW_PRI_DELAY","KERN_LOW_PRI_WINDOW","KERN_MAXFILES","KERN_MAXFILESPERPROC","KERN_MAXID","KERN_MAXPARTITIONS","KERN_MAXPROC","KERN_MAXPROCPERUID","KERN_MAXVNODES","KERN_MEMORY_DATA_MOVED","KERN_MEMORY_ERROR","KERN_MEMORY_FAILURE","KERN_MEMORY_PRESENT","KERN_MEMORY_RESTART_COPY","KERN_NAME_EXISTS","KERN_NETBOOT","KERN_NGROUPS","KERN_NISDOMAINNAME","KERN_NODE_DOWN","KERN_NOT_DEPRESSED","KERN_NOT_IN_SET","KERN_NOT_RECEIVER","KERN_NOT_SUPPORTED","KERN_NOT_WAITING","KERN_NO_ACCESS","KERN_NO_SPACE","KERN_NTP_PLL","KERN_NX_PROTECTION","KERN_OPENEVT_PROC","KERN_OPERATION_TIMED_OUT","KERN_OSRELDATE","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OSVERSION","KERN_POLICY_LIMIT","KERN_POLICY_STATIC","KERN_POSIX","KERN_POSIX1","KERN_PROC","KERN_PROCARGS","KERN_PROCARGS2","KERN_PROCDELAYTERM","KERN_PROCNAME","KERN_PROC_ALL","KERN_PROC_LCID","KERN_PROC_PGRP","KERN_PROC_PID","KERN_PROC_RUID","KERN_PROC_SESSION","KERN_PROC_TTY","KERN_PROC_UID","KERN_PROF","KERN_PROTECTION_FAILURE","KERN_PS_STRINGS","KERN_RAGEVNODE","KERN_RAGE_PROC","KERN_RAGE_THREAD","KERN_RESOURCE_SHORTAGE","KERN_RIGHT_EXISTS","KERN_RPC_CONTINUE_ORPHAN","KERN_RPC_SERVER_TERMINATED","KERN_RPC_TERMINATE_ORPHAN","KERN_SAFEBOOT","KERN_SAVED_IDS","KERN_SECURELVL","KERN_SEMAPHORE_DESTROYED","KERN_SHREG_PRIVATIZABLE","KERN_SPECULATIVE_READS","KERN_SUCCESS","KERN_SUGID_COREDUMP","KERN_SYMFILE","KERN_SYSV","KERN_TERMINATED","KERN_TFP","KERN_TFP_POLICY","KERN_TFP_POLICY_DEFAULT","KERN_TFP_POLICY_DENY","KERN_THALTSTACK","KERN_THREADNAME","KERN_TRANSLATE","KERN_TTY","KERN_UNOPENEVT_PROC","KERN_UNRAGE_PROC","KERN_UNRAGE_THREAD","KERN_UPDATEINTERVAL","KERN_UREFS_OVERFLOW","KERN_USRSTACK32","KERN_USRSTACK64","KERN_VERSION","KERN_VNODE","KIPC_MAXSOCKBUF","KIPC_MAX_DATALEN","KIPC_MAX_HDR","KIPC_MAX_LINKHDR","KIPC_MAX_PROTOHDR","KIPC_MBSTAT","KIPC_NMBCLUSTERS","KIPC_SOCKBUF_WASTE","KIPC_SOMAXCONN","KIPC_SOQLIMITCOMPAT","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_SEGMENT","LC_SEGMENT_64","LC_TIME","LC_TIME_MASK","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LOCAL_PEERCRED","LOCAL_PEEREPID","LOCAL_PEEREUUID","LOCAL_PEERPID","LOCAL_PEERUUID","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_INSTALL","LOG_KERN","LOG_LAUNCHD","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NETINFO","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_RAS","LOG_REMOTEAUTH","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","MACH_PORT_NULL","MACH_TASK_BASIC_INFO","MACH_TASK_BASIC_INFO_COUNT","MADV_CAN_REUSE","MADV_DONTNEED","MADV_FREE","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_ZERO_WIRED_PAGES","MAP_ANON","MAP_ANONYMOUS","MAP_COPY","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_HASSEMAPHORE","MAP_JIT","MAP_NOCACHE","MAP_NOEXTEND","MAP_NORESERVE","MAP_PRIVATE","MAP_RENAME","MAP_SHARED","MAXCOMLEN","MAXFREQ","MAXPATHLEN","MAXPHASE","MAXSEC","MAXTC","MAXTHREADNAMESIZE","MAX_KCTL_NAME","MCL_CURRENT","MCL_FUTURE","MDMBUF","MEMORY_OBJECT_NULL","MH_MAGIC","MH_MAGIC_64","MINCORE_INCORE","MINCORE_MODIFIED","MINCORE_MODIFIED_OTHER","MINCORE_REFERENCED","MINCORE_REFERENCED_OTHER","MINSEC","MINSIGSTKSZ","MNT_ASYNC","MNT_AUTOMOUNTED","MNT_CPROTECT","MNT_DEFWRITE","MNT_DONTBROWSE","MNT_DOVOLFS","MNT_EXPORTED","MNT_FORCE","MNT_IGNORE_OWNERSHIP","MNT_JOURNALED","MNT_LOCAL","MNT_MULTILABEL","MNT_NOATIME","MNT_NOBLOCK","MNT_NODEV","MNT_NOEXEC","MNT_NOSUID","MNT_NOUSERXATTR","MNT_NOWAIT","MNT_QUARANTINE","MNT_QUOTA","MNT_RDONLY","MNT_RELOAD","MNT_ROOTFS","MNT_SNAPSHOT","MNT_SYNCHRONOUS","MNT_UNION","MNT_UPDATE","MNT_WAIT","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_PPSMAX","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOF","MSG_EOR","MSG_FLUSH","MSG_HAVEMORE","MSG_HOLD","MSG_NEEDSA","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_RCVMORE","MSG_SEND","MSG_TRUNC","MSG_WAITALL","MS_ASYNC","MS_DEACTIVATE","MS_INVALIDATE","MS_KILLPAGES","MS_SYNC","NANOSECOND","NCCS","NET_RT_DUMP","NET_RT_FLAGS","NET_RT_IFLIST","NET_RT_IFLIST2","NEW_TIME","NI_DGRAM","NI_MAXHOST","NI_MAXSERV","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSCOPE","NI_NUMERICSERV","NL0","NL1","NLDLY","NOEXPR","NOFLSH","NOKERNINFO","NOSTR","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_BACKGROUND","NOTE_CHILD","NOTE_CRITICAL","NOTE_DELETE","NOTE_EXEC","NOTE_EXIT","NOTE_EXITSTATUS","NOTE_EXIT_CSERROR","NOTE_EXIT_DECRYPTFAIL","NOTE_EXIT_DETAIL","NOTE_EXIT_DETAIL_MASK","NOTE_EXIT_MEMORY","NOTE_EXTEND","NOTE_FFAND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_FFNOP","NOTE_FFOR","NOTE_FORK","NOTE_LEEWAY","NOTE_LINK","NOTE_LOWAT","NOTE_NONE","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACK","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","NOTE_WRITE","NTP_API","OCRNL","OFDEL","OFILL","OLD_TIME","ONLCR","ONLRET","ONOCR","ONOEOT","OPOST","OS_LOG_TYPE_DEBUG","OS_LOG_TYPE_DEFAULT","OS_LOG_TYPE_ERROR","OS_LOG_TYPE_FAULT","OS_LOG_TYPE_INFO","OS_SIGNPOST_EVENT","OS_SIGNPOST_INTERVAL_BEGIN","OS_SIGNPOST_INTERVAL_END","OS_UNFAIR_LOCK_INIT","OXTABS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_DSYNC","O_EVTONLY","O_EXCL","O_EXLOCK","O_FSYNC","O_NDELAY","O_NOCTTY","O_NOFOLLOW","O_NOFOLLOW_ANY","O_NONBLOCK","O_RDONLY","O_RDWR","O_SHLOCK","O_SYMLINK","O_SYNC","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_APPLETALK","PF_CCITT","PF_CHAOS","PF_CNT","PF_COIP","PF_DATAKIT","PF_DECnet","PF_DLI","PF_ECMA","PF_HYLINK","PF_IMPLINK","PF_INET","PF_INET6","PF_IPX","PF_ISDN","PF_ISO","PF_KEY","PF_LAT","PF_LINK","PF_LOCAL","PF_NATM","PF_NDRV","PF_NETBIOS","PF_NS","PF_OSI","PF_PIP","PF_PPP","PF_PUP","PF_ROUTE","PF_RTIP","PF_SIP","PF_SNA","PF_SYSTEM","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_XTP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_CLOEXEC_DEFAULT","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETEXEC","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_START_SUSPENDED","PRIO_DARWIN_BG","PRIO_DARWIN_NONUI","PRIO_DARWIN_PROCESS","PRIO_DARWIN_THREAD","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROCESSOR_BASIC_INFO","PROCESSOR_CPU_LOAD_INFO","PROCESSOR_PM_REGS_INFO","PROCESSOR_SET_BASIC_INFO","PROCESSOR_SET_LOAD_INFO","PROCESSOR_TEMPERATURE","PROC_CSM_ALL","PROC_CSM_NOSMT","PROC_CSM_TECS","PROC_PIDPATHINFO_MAXSIZE","PROC_PIDTASKALLINFO","PROC_PIDTASKINFO","PROC_PIDTBSDINFO","PROC_PIDTHREADINFO","PROC_PIDVNODEPATHINFO","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_INTROSPECTION_THREAD_CREATE","PTHREAD_INTROSPECTION_THREAD_DESTROY","PTHREAD_INTROSPECTION_THREAD_START","PTHREAD_INTROSPECTION_THREAD_TERMINATE","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PT_ATTACH","PT_ATTACHEXC","PT_CONTINUE","PT_DENY_ATTACH","PT_DETACH","PT_FIRSTMACH","PT_FORCEQUOTA","PT_KILL","PT_READ_D","PT_READ_I","PT_READ_U","PT_SIGEXC","PT_STEP","PT_THUPDATE","PT_TRACE_ME","PT_WRITE_D","PT_WRITE_I","PT_WRITE_U","P_ALL","P_PGID","P_PID","QCMD","QOS_CLASS_BACKGROUND","QOS_CLASS_DEFAULT","QOS_CLASS_UNSPECIFIED","QOS_CLASS_USER_INITIATED","QOS_CLASS_USER_INTERACTIVE","QOS_CLASS_UTILITY","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETQUOTA","Q_SYNC","RADIXCHAR","RAND_MAX","REG_ASSERT","REG_ATOI","REG_BACKR","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_BASIC","REG_DUMP","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_EMPTY","REG_EPAREN","REG_ERANGE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_INVARG","REG_ITOA","REG_LARGE","REG_NEWLINE","REG_NOMATCH","REG_NOSPEC","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_PEND","REG_STARTEND","REG_TRACE","RENAME_EXCL","RENAME_SWAP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RTAX_AUTHOR","RTAX_BRD","RTAX_DST","RTAX_GATEWAY","RTAX_GENMASK","RTAX_IFA","RTAX_IFP","RTAX_MAX","RTAX_NETMASK","RTA_AUTHOR","RTA_BRD","RTA_DST","RTA_GATEWAY","RTA_GENMASK","RTA_IFA","RTA_IFP","RTA_NETMASK","RTF_BLACKHOLE","RTF_BROADCAST","RTF_CLONING","RTF_CONDEMNED","RTF_DEAD","RTF_DELCLONE","RTF_DONE","RTF_DYNAMIC","RTF_GATEWAY","RTF_GLOBAL","RTF_HOST","RTF_IFREF","RTF_IFSCOPE","RTF_LLINFO","RTF_LOCAL","RTF_MODIFIED","RTF_MULTICAST","RTF_NOIFREF","RTF_PINNED","RTF_PRCLONING","RTF_PROTO1","RTF_PROTO2","RTF_PROTO3","RTF_PROXY","RTF_REJECT","RTF_ROUTER","RTF_STATIC","RTF_UP","RTF_WASCLONED","RTF_XRESOLVE","RTLD_DEFAULT","RTLD_FIRST","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_MAIN_ONLY","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTLD_SELF","RTM_ADD","RTM_CHANGE","RTM_DELADDR","RTM_DELETE","RTM_DELMADDR","RTM_GET","RTM_GET2","RTM_IFINFO","RTM_IFINFO2","RTM_LOCK","RTM_LOSING","RTM_MISS","RTM_NEWADDR","RTM_NEWMADDR","RTM_NEWMADDR2","RTM_OLDADD","RTM_OLDDEL","RTM_REDIRECT","RTM_RESOLVE","RTM_VERSION","RTV_EXPIRE","RTV_HOPCOUNT","RTV_MTU","RTV_RPIPE","RTV_RTT","RTV_RTTVAR","RTV_SPIPE","RTV_SSTHRESH","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_INFO_V0","RUSAGE_INFO_V1","RUSAGE_INFO_V2","RUSAGE_INFO_V3","RUSAGE_INFO_V4","RUSAGE_SELF","R_OK","SAE_ASSOCID_ALL","SAE_ASSOCID_ANY","SAE_CONNID_ALL","SAE_CONNID_ANY","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCALE_PPM","SCHED_FIFO","SCHED_OTHER","SCHED_RR","SCM_CREDS","SCM_RIGHTS","SCM_TIMESTAMP","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SEM_FAILED","SEM_UNDO","SETALL","SETVAL","SF_APPEND","SF_ARCHIVED","SF_IMMUTABLE","SF_SETTABLE","SHMLBA","SHM_R","SHM_RDONLY","SHM_RND","SHM_W","SHUTDOWN_TIME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIDL","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEMT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGNATURE","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCGIFADDR","SOCK_DGRAM","SOCK_MAXADDRLEN","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_LOCAL","SOL_SOCKET","SOMAXCONN","SO_ACCEPTCONN","SO_BROADCAST","SO_DEBUG","SO_DONTROUTE","SO_DONTTRUNC","SO_ERROR","SO_KEEPALIVE","SO_LABEL","SO_LINGER","SO_LINGER_SEC","SO_NKE","SO_NOADDRERR","SO_NOSIGPIPE","SO_NOTIFYCONFLICT","SO_NP_EXTENSIONS","SO_NREAD","SO_NWRITE","SO_OOBINLINE","SO_PEERLABEL","SO_RANDOMPORT","SO_RCVBUF","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_REUSESHAREUID","SO_SNDBUF","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMP_MONOTONIC","SO_TYPE","SO_USELOOPBACK","SO_WANTMORE","SO_WANTOOBFLAG","SRUN","SSLEEP","SSTOP","SS_DISABLE","SS_ONSTACK","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","ST_NOSUID","ST_RDONLY","SUPERPAGE_NONE","SUPERPAGE_SIZE_2MB","SUPERPAGE_SIZE_ANY","SYSDIR_DIRECTORY_ADMIN_APPLICATION","SYSDIR_DIRECTORY_ALL_APPLICATIONS","SYSDIR_DIRECTORY_ALL_LIBRARIES","SYSDIR_DIRECTORY_APPLICATION","SYSDIR_DIRECTORY_APPLICATION_SUPPORT","SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION","SYSDIR_DIRECTORY_CACHES","SYSDIR_DIRECTORY_CORESERVICE","SYSDIR_DIRECTORY_DEMO_APPLICATION","SYSDIR_DIRECTORY_DESKTOP","SYSDIR_DIRECTORY_DEVELOPER","SYSDIR_DIRECTORY_DEVELOPER_APPLICATION","SYSDIR_DIRECTORY_DOCUMENT","SYSDIR_DIRECTORY_DOCUMENTATION","SYSDIR_DIRECTORY_DOWNLOADS","SYSDIR_DIRECTORY_INPUT_METHODS","SYSDIR_DIRECTORY_LIBRARY","SYSDIR_DIRECTORY_MOVIES","SYSDIR_DIRECTORY_MUSIC","SYSDIR_DIRECTORY_PICTURES","SYSDIR_DIRECTORY_PREFERENCE_PANES","SYSDIR_DIRECTORY_PRINTER_DESCRIPTION","SYSDIR_DIRECTORY_SHARED_PUBLIC","SYSDIR_DIRECTORY_USER","SYSDIR_DOMAIN_MASK_ALL","SYSDIR_DOMAIN_MASK_LOCAL","SYSDIR_DOMAIN_MASK_NETWORK","SYSDIR_DOMAIN_MASK_SYSTEM","SYSDIR_DOMAIN_MASK_USER","SYSPROTO_CONTROL","SYSPROTO_EVENT","SZOMB","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TASK_THREAD_TIMES_INFO","TASK_THREAD_TIMES_INFO_COUNT","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_FASTOPEN","TCP_KEEPALIVE","TCP_KEEPCNT","TCP_KEEPINTVL","TCP_MAXSEG","TCP_NODELAY","TCP_NOOPT","TCP_NOPUSH","TCSADRAIN","TCSAFLUSH","TCSANOW","THOUSEP","THREAD_AFFINITY_POLICY","THREAD_AFFINITY_POLICY_COUNT","THREAD_AFFINITY_TAG_NULL","THREAD_BACKGROUND_POLICY","THREAD_BACKGROUND_POLICY_COUNT","THREAD_BACKGROUND_POLICY_DARWIN_BG","THREAD_BASIC_INFO","THREAD_BASIC_INFO_COUNT","THREAD_EXTENDED_INFO","THREAD_EXTENDED_INFO_COUNT","THREAD_EXTENDED_POLICY","THREAD_EXTENDED_POLICY_COUNT","THREAD_IDENTIFIER_INFO","THREAD_IDENTIFIER_INFO_COUNT","THREAD_LATENCY_QOS_POLICY","THREAD_LATENCY_QOS_POLICY_COUNT","THREAD_PRECEDENCE_POLICY","THREAD_PRECEDENCE_POLICY_COUNT","THREAD_STANDARD_POLICY","THREAD_STANDARD_POLICY_COUNT","THREAD_THROUGHPUT_QOS_POLICY","THREAD_THROUGHPUT_QOS_POLICY_COUNT","THREAD_TIME_CONSTRAINT_POLICY","THREAD_TIME_CONSTRAINT_POLICY_COUNT","TH_FLAGS_GLOBAL_FORCED_IDLE","TH_FLAGS_IDLE","TH_FLAGS_SWAPPED","TH_STATE_HALTED","TH_STATE_RUNNING","TH_STATE_STOPPED","TH_STATE_UNINTERRUPTIBLE","TH_STATE_WAITING","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCDTR","TIOCCONS","TIOCDCDTIMESTAMP","TIOCDRAIN","TIOCDSIMICROCODE","TIOCEXCL","TIOCEXT","TIOCFLUSH","TIOCGDRAINWAIT","TIOCGETD","TIOCGPGRP","TIOCGWINSZ","TIOCIXOFF","TIOCIXON","TIOCMBIC","TIOCMBIS","TIOCMGDTRWAIT","TIOCMGET","TIOCMODG","TIOCMODS","TIOCMSDTRWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCPTYGNAME","TIOCPTYGRANT","TIOCPTYUNLK","TIOCREMOTE","TIOCSBRK","TIOCSCONS","TIOCSCTTY","TIOCSDRAINWAIT","TIOCSDTR","TIOCSETD","TIOCSIG","TIOCSPGRP","TIOCSTART","TIOCSTAT","TIOCSTI","TIOCSTOP","TIOCSWINSZ","TIOCTIMESTAMP","TIOCUCNTL","TMP_MAX","TOSTOP","T_FMT","T_FMT_AMPM","UF_APPEND","UF_COMPRESSED","UF_HIDDEN","UF_IMMUTABLE","UF_NODUMP","UF_OPAQUE","UF_SETTABLE","UF_TRACKED","USER_BC_BASE_MAX","USER_BC_DIM_MAX","USER_BC_SCALE_MAX","USER_BC_STRING_MAX","USER_COLL_WEIGHTS_MAX","USER_CS_PATH","USER_EXPR_NEST_MAX","USER_LINE_MAX","USER_MAXID","USER_POSIX2_CHAR_TERM","USER_POSIX2_C_BIND","USER_POSIX2_C_DEV","USER_POSIX2_FORT_DEV","USER_POSIX2_FORT_RUN","USER_POSIX2_LOCALEDEF","USER_POSIX2_SW_DEV","USER_POSIX2_UPE","USER_POSIX2_VERSION","USER_PROCESS","USER_RE_DUP_MAX","USER_STREAM_MAX","USER_TZNAME_MAX","USRQUOTA","UTIME_NOW","UTIME_OMIT","UTUN_OPT_FLAGS","UTUN_OPT_IFNAME","VDISCARD","VDSUSP","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VM_FLAGS_ALIAS_MASK","VM_FLAGS_ANYWHERE","VM_FLAGS_FIXED","VM_FLAGS_NO_CACHE","VM_FLAGS_OVERWRITE","VM_FLAGS_PURGABLE","VM_FLAGS_RANDOM_ADDR","VM_FLAGS_RESILIENT_CODESIGN","VM_FLAGS_RESILIENT_MEDIA","VM_FLAGS_RETURN_4K_DATA_ADDR","VM_FLAGS_RETURN_DATA_ADDR","VM_FLAGS_SUPERPAGE_MASK","VM_FLAGS_SUPERPAGE_NONE","VM_FLAGS_SUPERPAGE_SHIFT","VM_FLAGS_SUPERPAGE_SIZE_2MB","VM_FLAGS_SUPERPAGE_SIZE_ANY","VM_FLAGS_USER_ALLOCATE","VM_FLAGS_USER_MAP","VM_FLAGS_USER_REMAP","VM_LOADAVG","VM_MACHFACTOR","VM_MAKE_TAG","VM_MAXID","VM_MEMORY_ACCELERATE","VM_MEMORY_ANALYSIS_TOOL","VM_MEMORY_APPKIT","VM_MEMORY_APPLICATION_SPECIFIC_1","VM_MEMORY_APPLICATION_SPECIFIC_16","VM_MEMORY_ASL","VM_MEMORY_ASSETSD","VM_MEMORY_ATS","VM_MEMORY_CARBON","VM_MEMORY_CGIMAGE","VM_MEMORY_COREDATA","VM_MEMORY_COREDATA_OBJECTIDS","VM_MEMORY_COREGRAPHICS","VM_MEMORY_COREGRAPHICS_BACKINGSTORES","VM_MEMORY_COREGRAPHICS_DATA","VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","VM_MEMORY_COREGRAPHICS_MISC","VM_MEMORY_COREGRAPHICS_SHARED","VM_MEMORY_COREGRAPHICS_XALLOC","VM_MEMORY_COREIMAGE","VM_MEMORY_COREPROFILE","VM_MEMORY_CORESERVICES","VM_MEMORY_COREUI","VM_MEMORY_COREUIFILE","VM_MEMORY_CORPSEINFO","VM_MEMORY_DHMM","VM_MEMORY_DYLD","VM_MEMORY_DYLD_MALLOC","VM_MEMORY_DYLIB","VM_MEMORY_FOUNDATION","VM_MEMORY_GENEALOGY","VM_MEMORY_GLSL","VM_MEMORY_GUARD","VM_MEMORY_IMAGEIO","VM_MEMORY_IOKIT","VM_MEMORY_JAVA","VM_MEMORY_JAVASCRIPT_CORE","VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","VM_MEMORY_LAYERKIT","VM_MEMORY_LIBDISPATCH","VM_MEMORY_MACH_MSG","VM_MEMORY_MALLOC","VM_MEMORY_MALLOC_HUGE","VM_MEMORY_MALLOC_LARGE","VM_MEMORY_MALLOC_LARGE_REUSABLE","VM_MEMORY_MALLOC_LARGE_REUSED","VM_MEMORY_MALLOC_NANO","VM_MEMORY_MALLOC_SMALL","VM_MEMORY_MALLOC_TINY","VM_MEMORY_OBJC_DISPATCHERS","VM_MEMORY_OPENCL","VM_MEMORY_OS_ALLOC_ONCE","VM_MEMORY_RAWCAMERA","VM_MEMORY_REALLOC","VM_MEMORY_SBRK","VM_MEMORY_SCENEKIT","VM_MEMORY_SHARED_PMAP","VM_MEMORY_SKYWALK","VM_MEMORY_SQLITE","VM_MEMORY_STACK","VM_MEMORY_SWIFT_METADATA","VM_MEMORY_SWIFT_RUNTIME","VM_MEMORY_TCMALLOC","VM_MEMORY_UNSHARED_PMAP","VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","VM_METER","VM_PAGE_QUERY_PAGE_COPIED","VM_PAGE_QUERY_PAGE_CS_NX","VM_PAGE_QUERY_PAGE_CS_TAINTED","VM_PAGE_QUERY_PAGE_CS_VALIDATED","VM_PAGE_QUERY_PAGE_DIRTY","VM_PAGE_QUERY_PAGE_EXTERNAL","VM_PAGE_QUERY_PAGE_FICTITIOUS","VM_PAGE_QUERY_PAGE_PAGED_OUT","VM_PAGE_QUERY_PAGE_PRESENT","VM_PAGE_QUERY_PAGE_REF","VM_PAGE_QUERY_PAGE_SPECULATIVE","VM_PROT_EXECUTE","VM_PROT_NONE","VM_PROT_READ","VM_PROT_WRITE","VM_SWAPUSAGE","VOL_CAPABILITIES_FORMAT","VOL_CAPABILITIES_INTERFACES","VOL_CAP_FMT_2TB_FILESIZE","VOL_CAP_FMT_64BIT_OBJECT_IDS","VOL_CAP_FMT_CASE_PRESERVING","VOL_CAP_FMT_CASE_SENSITIVE","VOL_CAP_FMT_DECMPFS_COMPRESSION","VOL_CAP_FMT_DIR_HARDLINKS","VOL_CAP_FMT_DOCUMENT_ID","VOL_CAP_FMT_FAST_STATFS","VOL_CAP_FMT_HARDLINKS","VOL_CAP_FMT_HIDDEN_FILES","VOL_CAP_FMT_JOURNAL","VOL_CAP_FMT_JOURNAL_ACTIVE","VOL_CAP_FMT_NO_IMMUTABLE_FILES","VOL_CAP_FMT_NO_PERMISSIONS","VOL_CAP_FMT_NO_ROOT_TIMES","VOL_CAP_FMT_NO_VOLUME_SIZES","VOL_CAP_FMT_OPENDENYMODES","VOL_CAP_FMT_PATH_FROM_ID","VOL_CAP_FMT_PERSISTENTOBJECTIDS","VOL_CAP_FMT_SEALED","VOL_CAP_FMT_SHARED_SPACE","VOL_CAP_FMT_SPARSE_FILES","VOL_CAP_FMT_SYMBOLICLINKS","VOL_CAP_FMT_VOL_GROUPS","VOL_CAP_FMT_WRITE_GENERATION_COUNT","VOL_CAP_FMT_ZERO_RUNS","VOL_CAP_INT_ADVLOCK","VOL_CAP_INT_ALLOCATE","VOL_CAP_INT_ATTRLIST","VOL_CAP_INT_CLONE","VOL_CAP_INT_COPYFILE","VOL_CAP_INT_EXCHANGEDATA","VOL_CAP_INT_EXTENDED_ATTR","VOL_CAP_INT_EXTENDED_SECURITY","VOL_CAP_INT_FLOCK","VOL_CAP_INT_MANLOCK","VOL_CAP_INT_NAMEDSTREAMS","VOL_CAP_INT_NFSEXPORT","VOL_CAP_INT_READDIRATTR","VOL_CAP_INT_RENAME_EXCL","VOL_CAP_INT_RENAME_OPENFAIL","VOL_CAP_INT_RENAME_SWAP","VOL_CAP_INT_SEARCHFS","VOL_CAP_INT_SNAPSHOT","VOL_CAP_INT_USERACCESS","VOL_CAP_INT_VOL_RENAME","VQUIT","VREPRINT","VSTART","VSTATUS","VSTOP","VSUSP","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_OK","XATTR_CREATE","XATTR_NODEFAULT","XATTR_NOFOLLOW","XATTR_NOSECURITY","XATTR_REPLACE","XATTR_SHOWCOMPRESSION","XUCRED_VERSION","X_OK","YESEXPR","YESSTR","_CS_DARWIN_USER_CACHE_DIR","_CS_DARWIN_USER_DIR","_CS_DARWIN_USER_TEMP_DIR","_CS_PATH","_IOFBF","_IOLBF","_IONBF","_NSGetEnviron","_NSGetExecutablePath","_PC_CHOWN_RESTRICTED","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_VDISABLE","_POSIX_VDISABLE","_PTHREAD_COND_SIG_init","_PTHREAD_MUTEX_SIG_init","_PTHREAD_RWLOCK_SIG_init","_RLIMIT_POSIX_FLAG","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FILE_LOCKING","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_UTX_HOSTSIZE","_UTX_IDSIZE","_UTX_LINESIZE","_UTX_USERSIZE","_WSTATUS","_WSTOPPED","__PTHREAD_CONDATTR_SIZE__","__PTHREAD_COND_SIZE__","__PTHREAD_MUTEX_SIZE__","__PTHREAD_RWLOCKATTR_SIZE__","__PTHREAD_RWLOCK_SIZE__","__cpsr","__darwin_arm_exception_state64","__darwin_arm_neon_state64","__darwin_arm_thread_state64","__darwin_mcontext64","__error","__es","__esr","__exception","__far","__fp","__fpcr","__fpsr","__int128","__int128_t","__lr","__ns","__pad","__pc","__sp","__ss","__uint128","__uint128_t","__v","__x","_dyld_get_image_header","_dyld_get_image_name","_dyld_get_image_vmaddr_slide","_dyld_image_count","_exit","_key","_seq","abort","abs","accept","access","acct","actime","active_count","active_count","address","addrinfo","adjtime","affinity_tag","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arc4random","arc4random_buf","arc4random_uniform","arphdr","array","asctime","asctime_r","atexit","atof","atoi","atol","atoll","attr_dataoffset","attr_length","attrgroup_t","attribute_set_t","attrlist","attrreference_t","backtrace","backtrace_async","backtrace_from_fp","backtrace_image_offsets","backtrace_symbols","backtrace_symbols_fd","basename","bh_caplen","bh_datalen","bh_hdrlen","bh_tstamp","bind","bitmapcount","blkcnt_t","blksize_t","blocks_in_use","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpf_hdr","brk","bsearch","buf","bytes_free","bytes_total","bytes_used","c_cc","c_cflag","c_char","c_double","c_float","c_iflag","c_int","c_ispeed","c_lflag","c_long","c_longlong","c_oflag","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","capabilities","cc_t","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","chdir","chflags","chmod","chown","chroot","chunks_free","chunks_used","clearerr","clock_getres","clock_gettime","clock_settime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clonefile","clonefileat","close","closedir","closelog","cmd","cmd","cmd","cmdsize","cmdsize","cmdsize","cmsg_len","cmsg_level","cmsg_type","cmsghdr","commonattr","commonattr","compressions","compressor_page_count","computation","confstr","connect","connectx","constant","constraint","copyfile","copyfile_callback_t","copyfile_flags_t","copyfile_state_alloc","copyfile_state_free","copyfile_state_get","copyfile_state_set","copyfile_state_t","cow_faults","cow_faults","cpu_subtype","cpu_subtype_t","cpu_ticks","cpu_type","cpu_type_t","cpu_usage","cpusubtype","cpusubtype","cputype","cputype","cr_groups","cr_ngroups","cr_uid","cr_version","creat","ctime","ctime_r","ctl_id","ctl_info","ctl_name","cuid","currency_symbol","d_ino","d_name","d_namlen","d_reclen","d_seekoff","d_type","data","data","decimal_point","decompressions","default_policy","denom","dev_t","difftime","dirattr","dirattr","dirent","dirfd","dirname","disconnectx","dispatch_qaddr","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlopen","dlsym","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curbytes","dqb_curinodes","dqb_id","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_spare","dqblk","drand48","dup","dup2","duplocale","e_tdev","e_tpgid","endgrent","endpwent","endservent","endutxent","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","esterror","esterror","events","exchangedata","execl","execle","execlp","execv","execve","execvp","exit","ext","external_page_count","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_flags_ext","f_frsize","f_fsid","f_fsid","f_fssubtype","f_fstypename","f_iosize","f_mntfromname","f_mntonname","f_namemax","f_owner","f_reserved","f_type","faccessat","faults","faults","fchdir","fchflags","fchmod","fchmodat","fchown","fchownat","fclonefileat","fclose","fcntl","fcopyfile","fd","fd_set","fdopen","fdopendir","feof","ferror","fflags","fflags","fflush","fgetattrlist","fgetc","fgetpos","fgets","fgetxattr","fileattr","fileattr","fileno","fileoff","fileoff","filesize","filesize","filetype","filetype","filter","filter","flag","flags","flags","flags","flags","flags","flags","flags","flistxattr","flock","flock","fmemopen","fmount","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fopen","fork","forkattr","forkattr","forkpty","fp_flags","fp_length","fp_offset","fpathconf","fpos_t","fprintf","fpunchhole_t","fputc","fputs","frac_digits","fread","freadlink","free","free_count","free_count","freeaddrinfo","freeifaddrs","freelocale","fremovexattr","freopen","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fseek","fseeko","fsetattrlist","fsetpos","fsetxattr","fsfilcnt_t","fsid_t","fspecread_t","fsr_flags","fsr_length","fsr_offset","fst_bytesalloc","fst_flags","fst_length","fst_offset","fst_posmode","fstat","fstatat","fstatfs","fstatvfs","fstore_t","fsync","fta_length","fta_offset","ftell","ftello","ftok","ftrimactivefile_t","ftruncate","futimens","futimes","fwrite","gai_strerror","getaddrinfo","getattrlist","getattrlistat","getattrlistbulk","getchar","getchar_unlocked","getcwd","getdate","getdomainname","getdtablesize","getegid","getenv","geteuid","getfsstat","getgid","getgrent","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","gethostuuid","getifaddrs","getitimer","getline","getloadavg","getlogin","getmntinfo","getnameinfo","getopt","getopt_long","getpeereid","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprogname","getprotobyname","getprotobynumber","getpwent","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrlimit","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid_t","gl_offs","gl_pathc","gl_pathv","glob","glob_t","globfree","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","group","grouping","h_addr_list","h_addrtype","h_aliases","h_length","h_name","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr_cnt","headers","hits","hits","host_flavor_t","host_info64_t","host_info_t","host_processor_info","host_statistics","host_statistics64","host_t","hostent","hstrerror","iconv","iconv_close","iconv_open","iconv_t","id_t","ident","ident","idtype_t","if_data","if_data64","if_freenameindex","if_index","if_indextoname","if_msghdr","if_msghdr2","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_dstaddr","ifa_flags","ifa_msghdr","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifam_addrs","ifam_flags","ifam_index","ifam_metric","ifam_msglen","ifam_type","ifam_version","ifi_addrlen","ifi_addrlen","ifi_baudrate","ifi_baudrate","ifi_collisions","ifi_collisions","ifi_hdrlen","ifi_hdrlen","ifi_hwassist","ifi_ibytes","ifi_ibytes","ifi_ierrors","ifi_ierrors","ifi_imcasts","ifi_imcasts","ifi_ipackets","ifi_ipackets","ifi_iqdrops","ifi_iqdrops","ifi_lastchange","ifi_lastchange","ifi_metric","ifi_metric","ifi_mtu","ifi_mtu","ifi_noproto","ifi_noproto","ifi_obytes","ifi_obytes","ifi_oerrors","ifi_oerrors","ifi_omcasts","ifi_omcasts","ifi_opackets","ifi_opackets","ifi_physical","ifi_physical","ifi_recvquota","ifi_recvquota","ifi_recvtiming","ifi_recvtiming","ifi_reserved1","ifi_reserved2","ifi_type","ifi_type","ifi_typelen","ifi_typelen","ifi_unused1","ifi_unused1","ifi_unused2","ifi_xmitquota","ifi_xmitquota","ifi_xmittiming","ifi_xmittiming","ifm_addrs","ifm_addrs","ifm_data","ifm_data","ifm_flags","ifm_flags","ifm_index","ifm_index","ifm_msglen","ifm_msglen","ifm_snd_drops","ifm_snd_len","ifm_snd_maxlen","ifm_timer","ifm_type","ifm_type","ifm_version","ifm_version","ifma_msghdr","ifma_msghdr2","ifmam_addrs","ifmam_addrs","ifmam_flags","ifmam_flags","ifmam_index","ifmam_index","ifmam_msglen","ifmam_msglen","ifmam_refcount","ifmam_type","ifmam_type","ifmam_version","ifmam_version","image_offset","importance","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in_addr","in_addr_t","in_pktinfo","in_port_t","inactive_count","inactive_count","initgroups","initprot","initprot","ino_t","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","integer_t","internal_page_count","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","iov_base","iov_len","iovec","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","is_master","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_value","itimerval","jitcnt","jitter","jrand48","kCCAlignmentError","kCCBufferTooSmall","kCCCallSequenceError","kCCDecodeError","kCCInvalidKey","kCCKeySizeError","kCCMemoryFailure","kCCOverflow","kCCParamError","kCCRNGFailure","kCCSuccess","kCCUnimplemented","kCCUnspecifiedError","kern_return_t","kevent","kevent","kevent64","kevent64_s","key_t","kill","killpg","kqueue","l2p_contigbytes","l2p_devoffset","l2p_flags","l_len","l_linger","l_onoff","l_pid","l_start","l_type","l_whence","labs","lchown","lcong48","lconv","ledger_array_t","ledger_t","linger","link","linkat","lio_listio","listen","listxattr","load_average","load_command","locale_t","localeconv","localeconv_l","localtime","localtime_r","lockf","log2phys","login_tty","lookups","lookups","lrand48","lseek","lstat","lutimes","mach_absolute_time","mach_factor","mach_header","mach_header_64","mach_host_self","mach_msg_type_number_t","mach_port_t","mach_task_basic_info","mach_task_basic_info_data_t","mach_task_basic_info_t","mach_task_self","mach_task_self_","mach_thread_self","mach_timebase_info","mach_timebase_info","mach_timebase_info_data_t","mach_vm_address_t","mach_vm_map","mach_vm_offset_t","mach_vm_size_t","machine","madvise","magic","magic","major","makedev","malloc","malloc_default_zone","malloc_good_size","malloc_printf","malloc_size","malloc_statistics_t","malloc_zone_calloc","malloc_zone_check","malloc_zone_free","malloc_zone_from_ptr","malloc_zone_log","malloc_zone_malloc","malloc_zone_print","malloc_zone_print_ptr_info","malloc_zone_realloc","malloc_zone_statistics","malloc_zone_t","malloc_zone_valloc","max_align_t","max_size_in_use","maxerror","maxerror","maxprot","maxprot","mcontext_t","mem_entry_name_port_t","memchr","memcmp","memcpy","memmem","memmove","memory_object_offset_t","memory_object_t","memset","memset_pattern16","memset_pattern4","memset_pattern8","memset_s","microseconds","mincore","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mrand48","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","mstats","mstats","msync","munlock","munlockall","munmap","n_cs_precedes","n_sep_by_space","n_sign_posn","name","nanosleep","nativeattr","natural_t","ncmds","ncmds","negative_sign","newlocale","nfds_t","nice","nl_item","nl_langinfo","nlink_t","no_data","nodename","nrand48","nsects","nsects","ntp_adjtime","ntp_gettime","ntptimeval","numer","off_t","offset","offset","open","open_memstream","open_wmemstream","openat","opendir","openlog","openpty","option","os_log_create","os_log_t","os_log_type_enabled","os_log_type_t","os_signpost_enabled","os_signpost_id_generate","os_signpost_id_make_with_pointer","os_signpost_id_t","os_signpost_type_t","os_unfair_lock","os_unfair_lock_assert_not_owner","os_unfair_lock_assert_owner","os_unfair_lock_lock","os_unfair_lock_s","os_unfair_lock_t","os_unfair_lock_trylock","os_unfair_lock_unlock","p_aliases","p_cs_precedes","p_name","p_proto","p_sep_by_space","p_sign_posn","pageins","pageins","pageouts","pageouts","passwd","pathconf","pause","pbi_comm","pbi_flags","pbi_gid","pbi_name","pbi_nfiles","pbi_nice","pbi_pgid","pbi_pid","pbi_pjobc","pbi_ppid","pbi_rgid","pbi_ruid","pbi_start_tvsec","pbi_start_tvusec","pbi_status","pbi_svgid","pbi_svuid","pbi_uid","pbi_xstatus","pbsd","pclose","period","perror","pid_t","pipe","policy","policy","policy_t","poll","pollfd","popen","positive_sign","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_get_qos_class_np","posix_spawnattr_getarchpref_np","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_set_qos_class_np","posix_spawnattr_setarchpref_np","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppsfreq","pread","preadv","precision","preemptible","printf","priority","proc_bsdinfo","proc_kmsgbuf","proc_libversion","proc_listallpids","proc_listchildpids","proc_listpgrppids","proc_listpids","proc_name","proc_pid_rusage","proc_pidfdinfo","proc_pidfileportinfo","proc_pidinfo","proc_pidpath","proc_regionfilename","proc_set_csm","proc_set_no_smt","proc_setthread_csm","proc_setthread_no_smt","proc_taskallinfo","proc_taskinfo","proc_threadinfo","proc_vnodepathinfo","processor_basic_info","processor_basic_info_data_t","processor_basic_info_t","processor_count","processor_cpu_load_info","processor_cpu_load_info_data_t","processor_cpu_load_info_t","processor_flavor_t","processor_info_array_t","processor_info_t","processor_set_basic_info","processor_set_basic_info_data_t","processor_set_basic_info_t","processor_set_load_info","processor_set_load_info_data_t","processor_set_load_info_t","protoent","pselect","pseudo_AF_HDRCMPLT","pseudo_AF_KEY","pseudo_AF_PIP","pseudo_AF_RTIP","pseudo_AF_XTP","pth_cpu_usage","pth_cpu_usage","pth_curpri","pth_curpri","pth_flags","pth_flags","pth_maxpriority","pth_maxpriority","pth_name","pth_name","pth_policy","pth_policy","pth_priority","pth_priority","pth_run_state","pth_run_state","pth_sleep_time","pth_sleep_time","pth_system_time","pth_system_time","pth_user_time","pth_user_time","pthread_atfork","pthread_attr_destroy","pthread_attr_get_qos_class_np","pthread_attr_getschedparam","pthread_attr_getstacksize","pthread_attr_init","pthread_attr_set_qos_class_np","pthread_attr_setdetachstate","pthread_attr_setschedparam","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_condattr_t","pthread_cpu_number_np","pthread_create","pthread_create_from_mach_thread","pthread_detach","pthread_exit","pthread_from_mach_thread_np","pthread_get_qos_class_np","pthread_get_stackaddr_np","pthread_get_stacksize_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_introspection_getspecific_np","pthread_introspection_hook_install","pthread_introspection_hook_t","pthread_introspection_setspecific_np","pthread_jit_write_callback_t","pthread_jit_write_freeze_callbacks_np","pthread_jit_write_protect_np","pthread_jit_write_protect_supported_np","pthread_jit_write_with_callback_np","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mach_thread_np","pthread_main_np","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_set_qos_class_self_np","pthread_setname_np","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_stack_frame_decode_np","pthread_t","pthread_threadid_np","pti_cow_faults","pti_csw","pti_faults","pti_messages_received","pti_messages_sent","pti_numrunning","pti_pageins","pti_policy","pti_priority","pti_resident_size","pti_syscalls_mach","pti_syscalls_unix","pti_threadnum","pti_threads_system","pti_threads_user","pti_total_system","pti_total_user","pti_virtual_size","ptinfo","ptrace","ptrdiff_t","ptsname","purgeable_count","purgeable_count","purges","purges","putchar","putchar_unlocked","putenv","puts","pututxline","pvi_cdir","pvi_rdir","pw_change","pw_class","pw_dir","pw_expire","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwritev","qos_class_t","qsort","querylocale","quotactl","ra_count","ra_offset","radvisory","raise","rand","reactivations","reactivations","read","readdir","readdir_r","readlink","readlinkat","readv","realloc","realpath","recv","recvfrom","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","release","remove","removexattr","rename","renameat","renameatx_np","renamex_np","res_init","reserved","reserved","reserved","reserved","resident_size","resident_size_max","revents","rewind","rewinddir","rfu_1","ri_billed_energy","ri_billed_system_time","ri_billed_system_time","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_cpu_time_qos_background","ri_cpu_time_qos_background","ri_cpu_time_qos_default","ri_cpu_time_qos_default","ri_cpu_time_qos_legacy","ri_cpu_time_qos_legacy","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_utility","ri_cpu_time_qos_utility","ri_cycles","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_instructions","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interval_max_phys_footprint","ri_lifetime_max_phys_footprint","ri_logical_writes","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_runnable_time","ri_serviced_energy","ri_serviced_system_time","ri_serviced_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","rlim_cur","rlim_max","rlim_t","rlimit","rm_eo","rm_so","rmdir","rmx_expire","rmx_filler","rmx_hopcount","rmx_locks","rmx_mtu","rmx_pksent","rmx_recvpipe","rmx_rtt","rmx_rttvar","rmx_sendpipe","rmx_ssthresh","rmx_state","rt_metrics","rt_msghdr","rt_msghdr2","rtm_addrs","rtm_addrs","rtm_errno","rtm_flags","rtm_flags","rtm_index","rtm_index","rtm_inits","rtm_inits","rtm_msglen","rtm_msglen","rtm_parentflags","rtm_pid","rtm_refcnt","rtm_reserved","rtm_rmx","rtm_rmx","rtm_seq","rtm_type","rtm_type","rtm_use","rtm_use","rtm_version","rtm_version","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","run_state","running","rusage","rusage_info_t","rusage_info_v0","rusage_info_v1","rusage_info_v2","rusage_info_v3","rusage_info_v4","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_endpoints_t","sa_family","sa_family_t","sa_flags","sa_len","sa_mask","sa_sigaction","sae_associd_t","sae_connid_t","sae_dstaddr","sae_dstaddrlen","sae_srcaddr","sae_srcaddrlen","sae_srcif","sbrk","sc_family","sc_id","sc_len","sc_reserved","sc_unit","scanf","sched_get_priority_max","sched_get_priority_min","sched_param","sched_priority","sched_yield","sdl_alen","sdl_data","sdl_family","sdl_index","sdl_len","sdl_nlen","sdl_slen","sdl_type","seconds","seed48","seekdir","segment_command","segment_command_64","segname","segname","select","sem_base","sem_close","sem_ctime","sem_flg","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_pad1","sem_pad2","sem_pad3","sem_perm","sem_post","sem_t","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semid_ds","semop","semun","send","sendfile","sendmsg","sendto","servent","setattrlist","setattrlistat","setbuf","setdomainname","setegid","setenv","seteuid","setgid","setgrent","setgroups","sethostid","sethostname","setitimer","setlocale","setlogin","setlogmask","setpgid","setpriority","setprogname","setpwent","setregid","setreuid","setrlimit","setservent","setsid","setsockopt","settimeofday","setuid","setutxent","setvbuf","setxattr","sf_hdtr","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_internal","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_addr","si_code","si_errno","si_pid","si_pid","si_signo","si_status","si_status","si_uid","si_uid","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_attributes","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","sigpending","sigprocmask","sigset_t","sigval","sigwait","sin6_addr","sin6_family","sin6_flowinfo","sin6_len","sin6_port","sin6_scope_id","sin_addr","sin_addr","sin_family","sin_family","sin_len","sin_len","sin_other","sin_port","sin_port","sin_srcaddr","sin_tos","sin_zero","sival_ptr","size","size_allocated","size_in_use","size_t","sizeofcmds","sizeofcmds","sleep","sleep_time","slot_num","snd_family","snd_len","snd_name","snprintf","sockaddr","sockaddr_ctl","sockaddr_dl","sockaddr_in","sockaddr_in6","sockaddr_inarp","sockaddr_ndrv","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","speculative_count","speculative_count","speed_t","sprintf","srand","srand48","ss_family","ss_flags","ss_len","ss_size","ss_sp","ss_sysaddr","sscanf","ssize_t","st_atime","st_atime_nsec","st_birthtime","st_birthtime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_flags","st_gen","st_gid","st_ino","st_lspare","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_qspare","st_rdev","st_size","st_uid","stabil","stack_t","stat","stat","statfs","statfs","status","statvfs","statvfs","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtonum","strtoul","strtoull","strxfrm","sun_family","sun_len","sun_path","suseconds_t","suspend_count","suspend_count","svm_cid","svm_family","svm_len","svm_port","svm_reserved1","swapins","swapouts","symlink","symlinkat","sync","syscall","sysconf","sysctl","sysctlbyname","sysctlnametomib","sysdir_get_next_search_path_enumeration","sysdir_search_path_directory_t","sysdir_search_path_domain_mask_t","sysdir_search_path_enumeration_state","sysdir_start_search_path_enumeration","syslog","sysname","system","system_time","system_time","system_time","tai","task_count","task_create","task_flavor_t","task_for_pid","task_info","task_info_t","task_inspect_t","task_set_info","task_t","task_terminate","task_thread_times_info","task_thread_times_info_data_t","task_thread_times_info_t","task_threads","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","telldir","termios","thousands_sep","thread_act_array_t","thread_act_t","thread_affinity_policy","thread_affinity_policy_data_t","thread_affinity_policy_t","thread_background_policy","thread_background_policy_data_t","thread_background_policy_t","thread_basic_info","thread_basic_info_data_t","thread_basic_info_t","thread_count","thread_extended_info","thread_extended_info_data_t","thread_extended_info_t","thread_extended_policy","thread_extended_policy_data_t","thread_extended_policy_t","thread_flavor_t","thread_handle","thread_id","thread_identifier_info","thread_identifier_info_data_t","thread_identifier_info_t","thread_info","thread_info_t","thread_inspect_t","thread_latency_qos_policy","thread_latency_qos_policy_data_t","thread_latency_qos_policy_t","thread_latency_qos_t","thread_latency_qos_tier","thread_policy_flavor_t","thread_policy_get","thread_policy_set","thread_policy_t","thread_precedence_policy","thread_precedence_policy_data_t","thread_precedence_policy_t","thread_standard_policy","thread_standard_policy_data_t","thread_standard_policy_t","thread_t","thread_throughput_qos_policy","thread_throughput_qos_policy_data_t","thread_throughput_qos_policy_t","thread_throughput_qos_t","thread_throughput_qos_tier","thread_time_constraint_policy","thread_time_constraint_policy_data_t","thread_time_constraint_policy_t","throttled_count","time","time","time_state","time_t","time_value_t","timegm","times","timeshare","timespec","timeval","timeval32","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","total_uncompressed_pages_in_compressor","toupper","trailers","trl_cnt","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uc_link","uc_mcontext","uc_mcsize","uc_onstack","uc_sigmask","uc_stack","ucontext_t","udata","udata","uid","uid_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","uname","ungetc","unlink","unlinkat","unlockpt","unmount","unsetenv","useconds_t","uselocale","user_time","user_time","user_time","usleep","ut_host","ut_id","ut_line","ut_pid","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpx","utmpxname","utsname","uuid","uuid_t","val","val","valid","validattr","version","vi_fsid","vi_pad","vi_stat","vi_type","vinfo_stat","vip_path","vip_vi","virtual_size","vm_address_t","vm_deallocate","vm_inherit_t","vm_map_t","vm_offset_t","vm_page_size","vm_prot_t","vm_range_t","vm_size_t","vm_statistics","vm_statistics64","vm_statistics64_data_t","vm_statistics64_t","vm_statistics_data_t","vm_statistics_t","vmaddr","vmaddr","vmsize","vmsize","vnode_info","vnode_info_path","vol_attributes_attr_t","vol_capabilities_attr_t","vol_capabilities_set_t","volattr","volattr","vst_atime","vst_atimensec","vst_birthtime","vst_birthtimensec","vst_blksize","vst_blocks","vst_ctime","vst_ctimensec","vst_dev","vst_flags","vst_gen","vst_gid","vst_ino","vst_mode","vst_mtime","vst_mtimensec","vst_nlink","vst_qspare","vst_rdev","vst_size","vst_uid","wait","wait4","waitid","waitpid","wchar_t","wcslen","wcstombs","winsize","wire_count","wire_count","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xsu_avail","xsu_encrypted","xsu_pagesize","xsu_total","xsu_used","xsw_usage","xucred","zero_fill_count","zero_fill_count"],"q":[[0,"libc"]],"ddata includes security that replaces the TFO-cookie","data is idempotent","resume connect() on read/writehird Party Connect","Any distributed FS","IP6 Auth Header","any host internal protocol","any private encr. scheme","Argus","AX.25 Frames","BHA","Bulk Data Transfer","BackRoom SATNET Monitoring","CFTP","Chaos","Control Message Transport","Comp. Prot. HeartBeat","Comp. Prot. Net. Executive","Datagram Delivery","dissimilar gateway prot.","divert pseudo-protocol","last return value of *_input(), meaning “all job for …","IP6 destination option","exterior gateway protocol","EMCON","encapsulation header","ISO cnlp","IP6 Encap Sec. Payload","Ethernet IP encapsulation","IP6 fragmentation header","gateway2 (deprecated)","GMTP","General Routing Encap.","“hello” routing protocol","Host Monitoring","IP6 hop-by-hop options","","","xns idp","InterDomain Policy Routing","InterDomain Routing","group mgmt protocol","NSFNET-IGP","Cisco/GXS IGRP","IL transport protocol","Integ. Net Layer Security","Merit Internodal","","payload compression (IPComp)","Packet Core Utility","IP encapsulated in IP","for compatibility","Pluribus Packet Core","","Reliable Transaction","Kryptolan","Locus Address Resoloution","Leaf-1","Leaf-2","","DCN Measurement Subsystems","Mobile Host Routing","Mobile Int.ing control","Multicast Transport","Multiplexing","Sun net disk proto (temp.)","Next Hop Resolution","IP6 no next header","Network Services","network voice protocol","OSPFIGP","PGM","private interior gateway","Protocol Independent Mcast","Packet Radio Measurement","pup","Packet Video Protocol","raw IP packet","BBN RCC Monitoring","Reliable Data","IP6 routing header","resource reservation","Remote Virtual Disk","SATNET/Backroom EXPAK","Satnet Monitoring","Semaphore Comm. security","SCTP","Source Demand Routing","Sequential Exchange","Strite RPC protocol","Stream protocol II.","Secure VMTP","IP with encryption","TCF","","tp-4 w/ class negotiation","TP++ Transport","Trunk-1","Trunk-2","TTP","","Banyon VINES","VISA Protocol","VMTP","WIDEBAND EXPAK","WIDEBAND Monitoring","Wang Span Network","Cross Net Debugger","XTP","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","((sae_associd_t)(-1ULL))","","((sae_connid_t)(-1ULL))","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Process being created by fork.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Currently runnable.","Sleeping on an address.","Process debugging or suspension.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Awaiting collection by parent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable/Disable TCP Fastopen on this socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C <code>__int128</code> (a GCC extension that’s part of many ABIs)","C __int128_t (alternate name for __int128)","","","","","","","C <code>unsigned __int128</code> (a GCC extension that’s part of many …","C __uint128_t (alternate name for __uintquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notesalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,1],[4,4],[[3,1],1],[4,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6]],[[5,6],7],[[5,6]],0,[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,5],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,7],0,[5,5],[5,7],[5,7],[5,7],[5,7],0,0,0,[5,5],[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[6,6],[34,34],[3,3],[1,1],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,11],7],[[12,12],7],[[13,13],7],[[14,14],7],[[15,15],7],[[16,16],7],[[17,17],7],[[18,18],7],[[19,19],7],[[20,20],7],[[21,21],7],[[22,22],7],[[23,23],7],[[24,24],7],[[25,25],7],[[26,26],7],[[27,27],7],[[30,30],7],[[31,31],7],[[32,32],7],[[33,33],7],[[6,6],7],[[34,34],7],[[3,3],7],[[1,1],7],[[35,35],7],[[36,36],7],[[37,37],7],[[38,38],7],[[39,39],7],[[40,40],7],[[41,41],7],[[174,174],7],[[46,46],7],[[47,47],7],[[48,48],7],[[49,49],7],[[50,50],7],[[51,51],7],[[52,52],7],[[53,53],7],[[54,54],7],[[55,55],7],[[56,56],7],[[57,57],7],[[58,58],7],[[59,59],7],[[60,60],7],[[61,61],7],[[62,62],7],[[63,63],7],[[64,64],7],[[65,65],7],[[66,66],7],[[67,67],7],[[68,68],7],[[69,69],7],[[70,70],7],[[71,71],7],[[72,72],7],[[73,73],7],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[78,78],7],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[[85,85],7],[[86,86],7],[[87,87],7],[[88,88],7],[[89,89],7],[[90,90],7],[[91,91],7],[[92,92],7],[[93,93],7],[[94,94],7],[[95,95],7],[[96,96],7],[[97,97],7],[[98,98],7],[[99,99],7],[[100,100],7],[[101,101],7],[[102,102],7],[[103,103],7],[[104,104],7],[[105,105],7],[[106,106],7],[[107,107],7],[[108,108],7],[[109,109],7],[[110,110],7],[[111,111],7],[[112,112],7],[[113,113],7],[[114,114],7],[[115,115],7],[[116,116],7],[[117,117],7],[[118,118],7],[[119,119],7],[[120,120],7],[[121,121],7],[[122,122],7],[[123,123],7],[[124,124],7],[[125,125],7],[[126,126],7],[[127,127],7],[[128,128],7],[[129,129],7],[[130,130],7],[[131,131],7],[[132,132],7],[[133,133],7],[[134,134],7],[[135,135],7],[[136,136],7],[[137,137],7],[[138,138],7],[[139,139],7],[[140,140],7],[[141,141],7],[[142,142],7],[[143,143],7],[[144,144],7],[[145,145],7],[[146,146],7],[[147,147],7],[[148,148],7],[[149,149],7],[[150,150],7],[[151,151],7],[[152,152],7],[[153,153],7],[[154,154],7],[[155,155],7],[[156,156],7],[[157,157],7],[[159,159],7],[[160,160],7],[[161,161],7],[[162,162],7],[[163,163],7],[[164,164],7],[[165,165],7],[[167,167],7],[[168,168],7],[[169,169],7],[[170,170],7],[[171,171],7],[[172,172],7],[[173,173],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,175],176],[[11,175],176],[[12,175],176],[[13,175],176],[[14,175],176],[[15,175],176],[[16,175],176],[[17,175],176],[[18,175],176],[[19,175],176],[[20,175],176],[[21,175],176],[[22,175],176],[[23,175],176],[[24,175],176],[[25,175],176],[[26,175],176],[[27,175],176],[[28,175],176],[[29,175],176],[[30,175],176],[[31,175],176],[[32,175],176],[[33,175],176],[[6,175],176],[[34,175],176],[[3,175],176],[[1,175],176],[[35,175],176],[[36,175],176],[[37,175],176],[[38,175],176],[[39,175],176],[[40,175],176],[[41,175],176],[[174,175],176],[[42,175],176],[[43,175],176],[[44,175],176],[[45,175],176],[[46,175],176],[[47,175],176],[[48,175],176],[[49,175],176],[[50,175],176],[[51,175],176],[[52,175],176],[[53,175],176],[[54,175],176],[[55,175],176],[[56,175],176],[[57,175],176],[[58,175],176],[[59,175],176],[[60,175],176],[[61,175],176],[[62,175],176],[[63,175],176],[[64,175],176],[[65,175],176],[[66,175],176],[[67,175],176],[[68,175],176],[[69,175],176],[[70,175],176],[[71,175],176],[[72,175],176],[[73,175],176],[[74,175],176],[[75,175],176],[[76,175],176],[[77,175],176],[[78,175],176],[[79,175],176],[[80,175],176],[[177,175],[[179,[178]]]],[[81,175],176],[[82,175],176],[[83,175],176],[[84,175],176],[[85,175],176],[[86,175],176],[[87,175],176],[[88,175],176],[[89,175],176],[[90,175],176],[[91,175],176],[[92,175],176],[[93,175],176],[[94,175],176],[[95,175],176],[[96,175],176],[[97,175],176],[[98,175],176],[[99,175],176],[[100,175],176],[[101,175],176],[[102,175],176],[[103,175],176],[[104,175],176],[[105,175],176],[[106,175],176],[[107,175],176],[[108,175],176],[[109,175],176],[[110,175],176],[[111,175],176],[[112,175],176],[[113,175],176],[[114,175],176],[[115,175],176],[[116,175],176],[[117,175],176],[[118,175],176],[[119,175],176],[[120,175],176],[[121,175],176],[[122,175],176],[[123,175],176],[[124,175],176],[[125,175],176],[[126,175],176],[[127,175],176],[[128,175],176],[[129,175],176],[[130,175],176],[[131,175],176],[[132,175],176],[[133,175],176],[[134,175],176],[[135,175],176],[[136,175],176],[[137,175],176],[[138,175],176],[[139,175],176],[[140,175],176],[[141,175],176],[[142,175],176],[[143,175],176],[[144,175],176],[[145,175],176],[[146,175],176],[[147,175],176],[[148,175],176],[[149,175],176],[[150,175],176],[[151,175],176],[[152,175],176],[[153,175],176],[[154,175],176],[[155,175],176],[[156,175],176],[[157,175],176],[[159,175],176],[[160,175],176],[[161,175],176],[[162,175],176],[[163,175],176],[[164,175],176],[[165,175],176],[[167,175],176],[[168,175],176],[[169,175],176],[[170,175],176],[[171,175],176],[[172,175],176],[[173,175],176],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,180]],[[12,180]],[[13,180]],[[14,180]],[[15,180]],[[16,180]],[[17,180]],[[18,180]],[[19,180]],[[20,180]],[[21,180]],[[22,180]],[[23,180]],[[24,180]],[[25,180]],[[26,180]],[[27,180]],[[30,180]],[[31,180]],[[32,180]],[[33,180]],[[6,180]],[[34,180]],[[3,180]],[[1,180]],[[35,180]],[[36,180]],[[37,180]],[[38,180]],[[39,180]],[[40,180]],[[41,180]],[[174,180]],[[46,180]],[[47,180]],[[48,180]],[[49,180]],[[50,180]],[[51,180]],[[52,180]],[[53,180]],[[54,180]],[[55,180]],[[56,180]],[[57,180]],[[58,180]],[[59,180]],[[60,180]],[[61,180]],[[62,180]],[[63,180]],[[64,180]],[[65,180]],[[66,180]],[[67,180]],[[68,180]],[[69,180]],[[70,180]],[[71,180]],[[72,180]],[[73,180]],[[74,180]],[[75,180]],[[76,180]],[[77,180]],[[78,180]],[[79,180]],[[80,180]],[[81,180]],[[82,180]],[[83,180]],[[84,180]],[[85,180]],[[86,180]],[[87,180]],[[88,180]],[[89,180]],[[90,180]],[[91,180]],[[92,180]],[[93,180]],[[94,180]],[[95,180]],[[96,180]],[[97,180]],[[98,180]],[[99,180]],[[100,180]],[[101,180]],[[102,180]],[[103,180]],[[104,180]],[[105,180]],[[106,180]],[[107,180]],[[108,180]],[[109,180]],[[110,180]],[[111,180]],[[112,180]],[[113,180]],[[114,180]],[[115,180]],[[116,180]],[[117,180]],[[118,180]],[[119,180]],[[120,180]],[[121,180]],[[122,180]],[[123,180]],[[124,180]],[[125,180]],[[126,180]],[[127,180]],[[128,180]],[[129,180]],[[130,180]],[[131,180]],[[132,180]],[[133,180]],[[134,180]],[[135,180]],[[136,180]],[[137,180]],[[138,180]],[[139,180]],[[140,180]],[[141,180]],[[142,180]],[[143,180]],[[144,180]],[[145,180]],[[146,180]],[[147,180]],[[148,180]],[[149,180]],[[150,180]],[[151,180]],[[152,180]],[[153,180]],[[154,180]],[[155,180]],[[156,180]],[[157,180]],[[159,180]],[[160,180]],[[161,180]],[[162,180]],[[163,180]],[[164,180]],[[165,180]],[[167,180]],[[168,180]],[[169,180]],[[170,180]],[[171,180]],[[172,180]],[[173,180]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],181],0,0,0,0,0,0,0,0,0,0,0,0,0,[182,183],[[183,183],182],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[182,183],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,177],0,0,0,[57,184],0,0,[57,5],0,[57,185],0,[57,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],[[],179],0,0,0,0,0,0,0,0,[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],[[],186],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[59,1534,1786,1787,1788,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2408,2409,2410,2411,3087,3088,3089,3090,3114,3390,3391,3396,3397,4205,4206,4207,4208,4485,4487,4488,4498,4499,4500,4507,4508,4596,4597,4613,4957,5332,5333,6111,6112,6113,6114],"p":[[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[3,"fd_set"],[15,"bool"],[15,"u8"],[15,"u32"],[4,"DIR"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"fsid_t"],[3,"if_nameindex"],[3,"regex_t"],[3,"regmatch_t"],[3,"option"],[3,"sockaddr_un"],[3,"utsname"],[4,"timezone"],[4,"qos_class_t"],[4,"sysdir_search_path_directory_t"],[4,"sysdir_search_path_domain_mask_t"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"fpunchhole_t"],[3,"ftrimactivefile_t"],[3,"fspecread_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"ifa_msghdr"],[3,"ifma_msghdr"],[3,"ifma_msghdr2"],[3,"rt_metrics"],[3,"rt_msghdr"],[3,"rt_msghdr2"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sockaddr_ndrv"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"thread_standard_policy"],[3,"thread_extended_policy"],[3,"thread_time_constraint_policy"],[3,"thread_precedence_policy"],[3,"thread_affinity_policy"],[3,"thread_background_policy"],[3,"thread_latency_qos_policy"],[3,"thread_throughput_qos_policy"],[3,"malloc_statistics_t"],[3,"mstats"],[3,"vm_range_t"],[3,"sched_param"],[3,"vinfo_stat"],[3,"vnode_info"],[3,"vnode_info_path"],[3,"proc_vnodepathinfo"],[3,"vm_statistics"],[3,"task_thread_times_info"],[3,"rusage_info_v0"],[3,"rusage_info_v1"],[3,"rusage_info_v2"],[3,"rusage_info_v3"],[3,"rusage_info_v4"],[3,"image_offset"],[3,"attrlist"],[3,"attrreference_t"],[3,"vol_capabilities_attr_t"],[3,"attribute_set_t"],[3,"vol_attributes_attr_t"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[3,"time_value_t"],[3,"thread_basic_info"],[3,"thread_identifier_info"],[3,"thread_extended_info"],[3,"if_data64"],[3,"if_msghdr2"],[3,"vm_statistics64"],[3,"mach_task_basic_info"],[3,"log2phys"],[3,"os_unfair_lock_s"],[3,"sockaddr_vm"],[19,"semun"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"pthread_attr_t"],[3,"malloc_zone_t"],[3,"max_align_t"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_arm_exception_state64"],[3,"__darwin_arm_thread_state64"],[3,"__darwin_arm_neon_state64"],[3,"ctl_info"],[3,"in6_addr"],[6,"os_unfair_lock"],[3,"Formatter"],[6,"Result"],[4,"c_void"],[3,"Error"],[4,"Result"],[8,"Hasher"],[6,"mach_port_t"],[6,"dev_t"],[15,"i32"],[6,"pid_t"],[6,"uid_t"],[3,"TypeId"]],"a":{"__errno_location":[2388],"errno":[2388]}},\
"libm":{"doc":"libm in pure Rust","t":"DFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLFLLFFLLFLFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFFLLFFLLFFLLFFLLFFLLFLLLFLLFFLLFFLLF","n":["Libm","acos","acos","acos","acosf","acosh","acosh","acosh","acoshf","asin","asin","asin","asinf","asinh","asinh","asinh","asinhf","atan","atan","atan","atan2","atan2","atan2","atan2f","atanf","atanh","atanh","atanh","atanhf","borrow","borrow_mut","cbrt","cbrt","cbrt","cbrtf","ceil","ceil","ceil","ceilf","copysign","copysign","copysign","copysignf","cos","cos","cos","cosf","cosh","cosh","cosh","coshf","erf","erf","erf","erfc","erfc","erfc","erfcf","erff","exp","exp","exp","exp10","exp10","exp10","exp10f","exp2","exp2","exp2","exp2f","expf","expm1","expm1","expm1","expm1f","fabs","fabs","fabs","fabsf","fdim","fdim","fdim","fdimf","floor","floor","floor","floorf","fma","fma","fma","fmaf","fmax","fmax","fmax","fmaxf","fmin","fmin","fmin","fminf","fmod","fmod","fmod","fmodf","frexp","frexp","frexp","frexpf","from","hypot","hypot","hypot","hypotf","ilogb","ilogb","ilogb","ilogbf","into","j0","j0","j0","j0f","j1","j1","j1","j1f","jn","jn","jn","jnf","ldexp","ldexp","ldexp","ldexpf","lgamma","lgamma","lgamma","lgamma_r","lgamma_r","lgamma_r","lgammaf","lgammaf_r","log","log","log","log10","log10","log10","log10f","log1p","log1p","log1p","log1pf","log2","log2","log2","log2f","logf","modf","modf","modf","modff","nextafter","nextafter","nextafter","nextafterf","pow","pow","pow","powf","remainder","remainder","remainder","remainderf","remquo","remquo","remquo","remquof","rint","rint","rint","rintf","round","round","round","roundf","scalbn","scalbn","scalbn","scalbnf","sin","sin","sin","sincos","sincos","sincos","sincosf","sinf","sinh","sinh","sinh","sinhf","sqrt","sqrt","sqrt","sqrtf","tan","tan","tan","tanf","tanh","tanh","tanh","tanhf","tgamma","tgamma","tgamma","tgammaf","trunc","trunc","trunc","truncf","try_from","try_into","type_id","y0","y0","y0","y0f","y1","y1","y1","y1f","yn","yn","yn","ynf"],"q":[[0,"libm"]],"d":["Generic helper for libm functions, abstracting over f32 …","Arccosine (f64)","","","Arccosine (f32)","Inverse hyperbolic cosine (f64)","","","Inverse hyperbolic cosine (f32)","Arcsine (f64)","","","Arcsine (f32)","Inverse hyperbolic sine (f64)","","","Inverse hyperbolic sine (f32)","Arctangent (f64)","","","Arctangent of y/x (f64)","","","Arctangent of y/x (f32)","Arctangent (f32)","Inverse hyperbolic tangent (f64)","","","Inverse hyperbolic tangent (f32)","","","Computes the cube root of the argument.","","","Cube root (f32)","Ceil (f64)","","","Ceil (f32)","Sign of Y, magnitude of X (f64)","","","Sign of Y, magnitude of X (f32)","","","","","Hyperbolic cosine (f64)","","","Hyperbolic cosine (f64)","Error function (f64)","","","Complementary error function (f64)","","","Complementary error function (f32)","Error function (f32)","Exponential, base <em>e</em> (f64)","","","","","","","Exponential, base 2 (f64)","","","Exponential, base 2 (f32)","Exponential, base <em>e</em> (f32)","Exponential, base <em>e</em>, of x-1 (f64)","","","Exponential, base <em>e</em>, of x-1 (f32)","Absolute value (magnitude) (f64) Calculates the absolute …","","","Absolute value (magnitude) (f32) Calculates the absolute …","Positive difference (f64)","","","Positive difference (f32)","Floor (f64)","","","Floor (f32)","Floating multiply add (f64)","","","Floating multiply add (f32)","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,6,0,0,0,6,6,0,6,6,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,6,0,0,0,6,6,0,6,6,0,0,6,6,0,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,0,6,6,0,0,6,6,0,6,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,6,0,0,0,6,6,0,6,6,0,0,6,6,0,0,6,6,0,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,6,0,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,0,6,6,0,6,6,6,0,6,6,0,0,6,6,0,0,6,6,0],"f":[0,[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[2,2],[1,1],[2,2],[1,1],[2,2],[[]],[[]],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[1,1],[1,1],[2,2],[2,2],[2,2],[1,1],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,1],[2,2],[1,1],[2,2],[[1,1,1],1],[[2,2,2],2],[[1,1,1],1],[[2,2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1],[2],[1],[2],[[]],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[1,3],[2,3],[1,3],[2,3],[[]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2],[[1,3],1],[[1,3],1],[[2,3],2],[[2,3],2],[1,1],[1,1],[2,2],[1],[2],[1],[2,2],[2],[1,1],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[2,2],[1],[2],[1],[2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1]],[[2,2]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,3],1],[[2,3],2],[[1,3],1],[[2,3],2],[1,1],[1,1],[2,2],[1],[2],[1],[2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[],4],[[],4],[[],5],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2]],"c":[],"p":[[15,"f64"],[15,"f32"],[15,"i32"],[4,"Result"],[3,"TypeId"],[3,"Libm"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[36,37,0,15,16,0,0,15,2,3,16,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,5,18,6,19,8,9,11,21,22,5,18,9,22,23,9,11,24,9,24,5,18,6,19,8,9,11,21,22,12,13,14,5,5,18,18,6,6,19,19,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,41,42,12,12,12,3,13,13,13,14,14,14,5,18,6,19,8,9,11,21,22,12,13,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,12,13,14,15,15,12,3,13,16,16,14,16,16,14,3,13,5,15,12,3,13,16,16,33,20,5,18,6,19,8,9,21,22,5,12,13,14,2,12,13,14,14,14,6,8,9,11,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,12,3,13,16,37,37,36,12,3,13,16,37,33,38,38,37,36,12,3,13,20,39,39,5,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,39,11,39,11,11,11,11,14,14,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,3,16,7,1,3,5,18,6,19,8,9,11,21,22,16,7,20,10,5,6,8,9,11,5,6,8,9,11,14,20,11,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[14,[16,4]]]],[[],[[12,[15,[0,[4,17]]]]]],[[],[[13,[15,2,[0,[4,17]]]]]],[[],[[14,[16,[0,[4,17]]]]]],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[6,[15,2,4]]],4],[[[19,[15,2,4]]],4],[[[8,[16,4]]],4],[[[9,[16,4]]],4],[[[11,[20,4]]],4],[[[21,[16,4]]],4],[[[22,[16,4]]],4],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[9,[16,4]]],4],[[[22,[16,4]]],4],[[]],[[[9,[23,4]]],[[8,[23,4]]]],[[[11,[24,4]]],[[8,[24,4]]]],[[]],[[[9,[24,4]]],[[11,[24,4]]]],[[]],[[[5,[15,4]]]],[[[18,[15,4]]]],[[[6,[15,2,4]]]],[[[19,[15,2,4]]]],[[[8,[16,4]]]],[[[9,[16,4]]]],[[[11,[20,4]]]],[[[21,[16,4]]]],[[[22,[16,4]]]],[[[12,[15,[0,[4,25]]]],26],27],[[[13,[15,2,[0,[4,25]]]],26],27],[[[14,[16,[0,[4,25]]]],26],27],[[[5,[15,[0,[28,4]]]],26],27],[[[5,[15,[0,[25,4]]]],26],27],[[[18,[15,[0,[28,4]]]],26],27],[[[18,[15,[0,[25,4]]]],26],27],[[[6,[15,2,[0,[25,4]]]],26],27],[[[6,[15,2,[0,[28,4]]]],26],27],[[[19,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[28,4]]]],26],27],[[[8,[16,[0,[28,4]]]],26],27],[[[8,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[28,4]]]],26],27],[[[11,[20,[0,[25,4]]]],26],27],[[[11,[20,[0,[28,4]]]],26],27],[[[21,[16,[0,[25,4]]]],26],27],[[[21,[16,[0,[28,4]]]],26],27],[[[22,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[28,4]]]],26],27],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[12,[1,4]]]],[[[13,[1,2,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[]],[[]],[29],[[]],[[],[[12,[15]]]],[[]],[[]],[[],[[13,[15,2]]]],[29],[[],[[14,[16]]]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],4],[[[13,[15,2,4]]],4],[[[14,[16,4]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,2]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[[5,[15,4]]],4],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[3,[15,2]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31],[[18,[15,4]]]],[[[18,[15,4]],31],[[18,[15,4]]]],[[[6,[15,2,4]],31],[[19,[15,2,4]]]],[[[19,[15,2,4]],31],[[19,[15,2,4]]]],[[[8,[16,4]],31],[[21,[16,4]]]],[[[9,[16,4]],31],[[22,[16,4]]]],[[[21,[16,4]],31],[[21,[16,4]]]],[[[22,[16,4]],31],[[22,[16,4]]]],[[[5,[15,4]]],[[12,[15,4]]]],[[],[[12,[15]]]],[[],[[13,[15,2]]]],[[],[[14,[16]]]],[[],32],[[[12,[15,4]]],15],[[[13,[15,2,4]]],15],[[[14,[16,4]]],16],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[33,4]]],[[8,[33,4]]]],[[[6,[15,2,4]]],[[13,[15,2,4]]]],[[[8,[16,4]]],[[14,[16,4]]]],[[[9,[16,4]]],[[14,[16,4]]]],[[[11,[20,4]]],[[14,[20,4]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],30],[[[12,[15,4]]],[[35,[[5,[15,4]]]]]],[[[3,[15,2]]],30],[[[13,[15,2,4]]],[[35,[[6,[15,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[[5,[15,4]],31],[[34,[[18,[15,4]],[5,[15,4]]]]]],[[[18,[15,4]],31],[[34,[[18,[15,4]],[18,[15,4]]]]]],[[[6,[15,2,4]],31],[[34,[[19,[15,2,4]],[6,[15,2,4]]]]]],[[[19,[15,2,4]],31],[[34,[[19,[15,2,4]],[19,[15,2,4]]]]]],[[[8,[16,4]],31],[[34,[[21,[16,4]],[8,[16,4]]]]]],[[[9,[16,4]],31],[[34,[[22,[16,4]],[9,[16,4]]]]]],[[[21,[16,4]],31],[[34,[[21,[16,4]],[21,[16,4]]]]]],[[[22,[16,4]],31],[[34,[[22,[16,4]],[22,[16,4]]]]]],[[[14,[16,4]]],[[35,[[8,[16,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[33,4]]],[[35,[[8,[33,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[20,4]]],[[35,[[11,[20,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[],30],[[[11,[20,4]]],[[34,[[9,[20,4]],[11,[20,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[[11,[24,4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[14,[16,4]]],[[35,[[9,[16,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[[3,[15,2]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[18,[1,4]]]],[[[6,[1,2,4]]]],[[[19,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[[21,[7,4]]]],[[[22,[7,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31]],[[[6,[15,2,4]],31]],[[[8,[16,4]],31]],[[[9,[16,4]],31]],[[[11,[20,4]],31]],[[[5,[1,4]],31]],[[[6,[1,2,4]],31]],[[[8,[7,4]],31]],[[[9,[7,4]],31]],[[[11,[10,4]],31]],[[[14,[20,4]]],[[11,[20,4]]]],[[]],[[[11,[20,4]]],[[9,[20,4]]]],[[[11,[24,4]],31]],[[[14,[16,4]]],[[9,[16,4]]]]],"c":[],"p":[[8,"RawMutexFair"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[8,"Sized"],[3,"MutexGuard"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[8,"FnOnce"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_boxed_logger","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>Box&lt;Log&gt;</code>.","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","","","","","","","","","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,4,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,0,1,3,8,7,6,4,4,6,1,8,4,6,15,11,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[]],[[]],[[]],[[]],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[[[21,[20]]],[[16,[15]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0],"c":[],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"Box"],[3,"String"],[3,"TypeId"]]},\
"lyon":{"doc":"GPU-based 2D graphics rendering tools in Rust using path …","t":"CCBBACCGGGGGGGGGFFF","n":["algorithms","geom","lyon_algorithms","lyon_tessellation","math","path","tessellation","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","point","size","vector"],"q":[[0,"lyon"],[7,"lyon::math"]],"d":["","","","","f32 version of the lyon_geom types used everywhere. Most …","","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Shorthand for <code>Point::new(x, y)</code>.","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],[[3,[1,2]]]],[[1,1],[[4,[1,2]]]],[[1,1],[[5,[1,2]]]]],"c":[],"p":[[15,"f32"],[3,"UnknownUnit"],[3,"Point2D"],[3,"Size2D"],[3,"Vector2D"]]},\
"lyon_algorithms":{"doc":"2d Path transformation and manipulation algorithms.","t":"AAACAAAAABAAAAAFFDFFLLLLLLLLLENNNNNLLLLLLFFLLLLLLLSSSSSSSSDIDIDDDDDDMKLKLLLLLMMMLLLLLLLLLLLLLLLLMMLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLKLKLKLMMMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLFFFGGGGGGGGGFFFNNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLMLLLLMMMFLLLLLLDMLLLLLLLLLMMLLFLMLLLGFDIDDDMLLLLLLLLLLLLMMLLMLLLLLLLMMMLLLLLLLKLLLLMLLMLLLLLLLLLLLLFLDLLFLLLLLLL","n":["aabb","area","fit","geom","hatching","hit_test","length","math","measure","path","raycast","rect","rounded_polygon","walk","winding","bounding_box","fast_bounding_box","SignedAreas","approximate_signed_area","approximate_sub_path_signed_area","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id","FitStyle","Horizontal","Max","Min","Stretch","Vertical","borrow","borrow_mut","clone","clone_into","eq","equivalent","fit_box","fit_path","fmt","from","into","to_owned","try_from","try_into","type_id","DEFAULT","DEFAULT","DEFAULT_ANGLE","DEFAULT_ANGLE","DEFAULT_TOLERANCE","DEFAULT_TOLERANCE","DEFAULT_UV_ORIGIN","DEFAULT_UV_ORIGIN","Dot","DotBuilder","DotOptions","HatchBuilder","HatchEndpoint","HatchSegment","Hatcher","HatchingOptions","RegularDotPattern","RegularHatchingPattern","a","add_dot","add_dot","add_segment","add_segment","alignment","alignment","angle","angle","angle","angle","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone_into","clone_into","column","column_interval","compute_tangents","default","default","default","dot_path","eq","eq","first_column_offset","fmt","fmt","from","from","from","from","from","from","from","from","hatch_path","interval","into","into","into","into","into","into","into","into","new","next_column_offset","next_column_offset","next_offset","next_offset","next_row_offset","next_row_offset","position","position","row","row","row_interval","tangent","to_owned","to_owned","tolerance","tolerance","tolerance","tolerance","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","uv_origin","uv_origin","v","v","with_angle","with_angle","with_tangents","with_tolerance","with_tolerance","hit_test_path","path_winding_number_at_position","approximate_length","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","point","size","vector","Distance","Normalized","PathMeasurements","PathSample","PathSampler","SampleType","attributes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_sampler","create_sampler_with_attributes","empty","eq","eq","equivalent","fmt","fmt","from","from","from","from","from_iter","from_path","from_path_slice","hash","initialize","initialize_with_path","initialize_with_path_slice","into","into","into","into","length","length","new","position","sample","split_range","tangent","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Hit","Ray","borrow","borrow","borrow_mut","borrow_mut","direction","from","from","into","into","normal","origin","position","raycast_path","try_from","try_from","try_into","try_into","type_id","type_id","ToRectangleOptions","auto_close","borrow","borrow_mut","clone","clone_into","default","eq","fill","fmt","from","ignore_closed_empty_sub_paths","ignore_open_empty_sub_paths","into","stroke","to_axis_aligned_rectangle","to_owned","tolerance","try_from","try_into","type_id","Point","add_rounded_polygon","PathWalker","Pattern","RegularPattern","RepeatedPattern","WalkerEvent","attributes","begin","begin","begin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","callback","callback","cubic_bezier_to","cubic_bezier_to","distance","end","end","fmt","from","from","from","from","index","interval","intervals","into","into","into","into","line_to","line_to","new","next","next","next","num_attributes","num_attributes","position","quadratic_bezier_to","quadratic_bezier_to","tangent","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","walk_along_path","with_attributes","Windings","borrow","borrow_mut","compute_winding","from","into","into_iter","next","try_from","try_into","type_id"],"q":[[0,"lyon_algorithms"],[15,"lyon_algorithms::aabb"],[17,"lyon_algorithms::area"],[29,"lyon_algorithms::fit"],[50,"lyon_algorithms::hatching"],[186,"lyon_algorithms::hit_test"],[188,"lyon_algorithms::length"],[189,"lyon_algorithms::math"],[201,"lyon_algorithms::measure"],[261,"lyon_algorithms::raycast"],[282,"lyon_algorithms::rect"],[303,"lyon_algorithms::rounded_polygon"],[305,"lyon_algorithms::walk"],[368,"lyon_algorithms::winding"]],"d":["Bounding rectangle computation for paths.","Approximate the area of a path.","Fit paths into rectangles.","","Generate hatching and dotted patterns in a path.","Determine whether a point is inside a path.","Approximate path length.","f32 version of the lyon_geom types used everywhere. Most …","Perform cached measurements and split operations on a path.","","Find the first collision between a ray and a path.","","","Move at a defined speed along a path.","","Computes the smallest axis-aligned rectangle that contains …","Computes a conservative axis-aligned rectangle that …","Iterator over the sub-path areas of a path.","Compute the signed area of a path by summing the signed …","Compute the signed area of the next sub-path.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","The strategy to use when fitting (stretching, overflow, …","Uniformly scale to fit horizontally.","Uniformly scale with overflow.","Uniformly scale without overflow.","Stretch vertically and horizontally to fit the destination …","Uniformly scale to fit vertically.","","","","","","","Computes a transform that fits a rectangle into another …","Fits a path into a rectangle.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Default hatching angle.","Default inclination of the dot pattern.","Default flattening tolerance.","Default flattening tolerance.","","","","The output of <code>Hatcher::dot_path</code>.","Parameters for generating dot patterns.","The output of <code>Hatcher::hatch_path</code>.","","","A context object that can fill a path with a hatching or …","Parameters for the hatcher.","A <code>DotBuilder</code> implementation for dot patterns with constant …","A <code>HatchBuilder</code> implementation for hatching patterns with …","Left endpoint.","Called for each dot.","","Called for each hatch segment.","","Whether and how much to align the dots for a given row.","","","","Angle between the hatching pattern and the x axis.","Angle between the hatching pattern and the x axis.","Right endpoint.","","","","","","","","","","","","","","","","","A callback invoked for each dot.","A callback invoked for each segment.","","","","","Index of the current column.","Minimum distance between dots in a given column.","Whether to compute the tangent of the outline where it …","","","","Generate dots for a path.","","","Offset of the first dot after a left edge.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate hatches for a path.","The distance between each row of hatches.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructor.","Distance between each dot in a given row.","","Specifies the distance between each row of the pattern.","","Called for each row of dots.","","Position in world space of the point.","World-space position of the dot.","Index of the current row.","Index of the current row.","Minimum distance between dots in a given row.","Tangent of the path edge at this point (pointing downward).","","","","","Maximum allowed distance to the path when building an …","Maximum allowed distance to the path when building an …","","","","","","","","","","","","","","","","","","","","","","","","","Rotated position along the direction of the hatching …","Rotated position along an axis parallel to the rows of the …","The origin of the rotated uv coordinates.","The origin of the rotated uv coordinates.","Rotated position along a direction perpendicular to the …","Rotated position along an axis parallel to the columns of …","","","","","","Returns whether the point is inside the path.","Compute the winding number of a given position with …","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Shorthand for <code>Point::new(x, y)</code>.","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>.","","","An acceleration structure for sampling distances along a …","The result of sampling a path.","Performs fast sample queries on a path with cached …","Whether to measure real or normalized (between 0 and 1) …","","","","","","","","","","","","Create an object that can perform fast sample queries on a …","Create an object that can perform fast sample queries on a …","Create empty path measurements.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create path measurements initialized with a generic …","Create path measurements initialized with a <code>Path</code>.","Create path measurements initialized with a <code>PathSlice</code>.","","Initialize the path measurements with a path.","Initialize the path measurements with a path.","Initialize the path measurements with a path.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the approximate length of the path.","Returns the approximate length of the path.","Create a sampler.","","Sample at a given distance along the path.","Construct a path for a specific sub-range of the measured …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Find the closest collision between a ray and the path.","","","","","","","","","","","","","","","Default parameters relevant for filling paths.","","Returns the argument unchanged.","If true don’t consider closed sub-paths with no segment.","If true don’t consider open sub-paths with no segment.","Calls <code>U::from(self)</code>.","Default parameters relevant for stroking paths.","If the input path represents an axis-aligned rectangle, …","","","","","","","Adds a sub-path from a polygon but rounds the corners.","A helper struct to walk along a flattened path using a …","Types implementing the <code>Pattern</code> can be used to walk along a …","A simple pattern that invokes a callback at regular …","A pattern that invokes a callback at a repeated sequence of","","","Invoked at the start each sub-path.","","","","","","","","","","","","The function to call at each step.","The function to call at each step.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The index of the next interval in the sequence.","A constant interval between each step.","The repeated interval sequence.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This method is invoked at each step along the path.","","","","","","","","","","","","","","","","","","","","","Walks along the path staring at offset <code>start</code> and applies a …","","Iterator over the sub-path windings of a path.","","","Compute the winding of the next sub-path.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,0,9,9,9,9,9,9,9,9,9,9,9,0,0,9,9,9,9,9,9,9,22,23,22,23,22,23,22,23,0,0,0,0,0,0,0,0,0,0,18,25,17,26,19,25,17,22,23,22,23,18,18,61,15,17,24,19,22,23,18,61,15,17,24,19,22,23,17,19,22,23,22,23,15,17,22,24,22,23,24,22,23,25,22,23,18,61,15,17,24,19,22,23,24,19,18,61,15,17,24,19,22,23,24,25,17,26,19,25,17,61,15,18,15,17,61,22,23,22,23,22,23,18,61,15,17,24,19,22,23,18,61,15,17,24,19,22,23,18,61,15,17,24,19,22,23,61,15,22,23,18,15,22,23,22,22,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,34,37,39,36,34,37,39,36,34,36,36,37,37,37,36,34,36,36,34,37,39,36,34,37,37,37,36,37,37,37,37,39,36,34,37,39,39,34,39,39,34,36,37,39,36,34,37,39,36,34,37,39,36,34,0,0,46,47,46,47,46,46,47,46,47,47,46,47,0,46,47,46,47,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,0,0,0,0,0,0,0,53,54,51,51,51,56,57,53,51,56,57,53,51,56,57,51,51,53,51,51,53,51,56,57,53,57,56,57,51,56,57,53,51,51,51,54,56,57,51,51,53,51,51,53,51,56,57,53,51,56,57,53,51,56,57,53,0,51,0,60,60,0,60,60,60,60,60,60,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],0,[[3,1],3],[[3,4],[[5,[3]]]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]]],[[5,[3]]]],[[],7],[[],7],[[],8],0,0,0,0,0,0,[[]],[[]],[9,9],[[]],[[9,9],10],[[],10],[[2,2,9],11],[[12,2,9],12],[[9,13],14],[[]],[[]],[[]],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15],[[[17,[16]],15]],[18],[[[19,[16]],18]],[20,[[5,[3]]]],[[[17,[16]],20],[[5,[3]]]],[21,22],[21,23],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[22,22],[23,23],[[]],[[]],0,0,0,[[],24],[[],22],[[],23],[[24,1,23,25]],[[22,22],10],[[23,23],10],[20,3],[[22,13],14],[[23,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,1,22,26]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[20,20],3],[[[17,[16]],20,20],3],[20,3],[[[19,[16]],20],3],[[20,20],3],[[[17,[16]],20,20],3],0,0,0,0,0,0,[[]],[[]],[3,22],[3,23],0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,[[22,21],22],[[23,21],23],[[22,10],22],[[22,3],22],[[23,3],23],[[27,1,28,3],10],[[27,1,3],29],[[1,3],3],0,0,0,0,0,0,0,0,0,[[3,3],[[31,[3,30]]]],[[3,3],[[32,[3,30]]]],[[3,3],[[33,[3,30]]]],0,0,0,0,0,0,[34,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[[]],[[37,38,36],[[39,[38]]]],[[37,38,40,36],[[39,[38,40]]]],[[],37],[[36,36],10],[[34,34],10],[[],10],[[36,13],14],[[34,13],14],[[]],[[]],[[]],[[]],[[1,38,3],37],[[12,3],37],[[41,3],37],[[36,42]],[[37,1,38,3]],[[37,12,3]],[[37,41,3]],[[]],[[]],[[]],[[]],[37,3],[[[39,[38,40]]],3],[[37,38,40,36],[[39,[38,40]]]],[34,27],[[[39,[38,40]],3],34],[[[39,[38,40]],[43,[3]],44]],[34,45],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,0,[[46,1,3],[[5,[47]]]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,[[]],[[]],[48,48],[[]],[[],48],[[48,48],10],[3,48],[[48,13],14],[[]],0,0,[[]],[3,48],[[1,48],[[5,[2]]]],[[]],0,[[],7],[[],7],[[],8],0,[[44,[50,[49]],3,35]],0,0,0,0,0,0,[3,[[5,[3]]]],[[51,27,35],52],[[51,27,35],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51],0,0,[[51,27,27,27,35],52],[[51,27,27,27,35],52],0,[[51,10]],[[51,10]],[[53,13],14],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[51,27,35],52],[[51,27,35],52],[[3,3,54],[[55,[51]]]],[53,[[5,[3]]]],[[[56,[16]],53],[[5,[3]]]],[[[57,[16]],53],[[5,[3]]]],[51,58],[51,58],0,[[51,27,27,35],52],[[51,27,27,35],52],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[1,3,3,54]],[[58,3,3,54],51],0,[[]],[[]],[4,[[5,[59]]]],[[]],[[]],[[]],[[[60,[4]]],[[5,[59]]]],[[],7],[[],7],[[],8]],"c":[],"p":[[8,"IntoIterator"],[6,"Box2D"],[15,"f32"],[8,"Iterator"],[4,"Option"],[3,"SignedAreas"],[4,"Result"],[3,"TypeId"],[4,"FitStyle"],[15,"bool"],[6,"Transform"],[3,"Path"],[3,"Formatter"],[6,"Result"],[3,"Dot"],[8,"FnMut"],[3,"RegularDotPattern"],[3,"HatchSegment"],[3,"RegularHatchingPattern"],[15,"u32"],[6,"Angle"],[3,"HatchingOptions"],[3,"DotOptions"],[3,"Hatcher"],[8,"DotBuilder"],[8,"HatchBuilder"],[6,"Point"],[4,"FillRule"],[15,"i32"],[3,"UnknownUnit"],[3,"Point2D"],[3,"Size2D"],[3,"Vector2D"],[3,"PathSample"],[6,"Attributes"],[4,"SampleType"],[3,"PathMeasurements"],[8,"PositionStore"],[3,"PathSampler"],[8,"AttributeStore"],[3,"PathSlice"],[8,"Hasher"],[3,"Range"],[8,"PathBuilder"],[6,"Vector"],[3,"Ray"],[3,"Hit"],[3,"ToRectangleOptions"],[6,"Point"],[3,"Polygon"],[3,"PathWalker"],[3,"EndpointId"],[3,"WalkerEvent"],[8,"Pattern"],[3,"NoAttributes"],[3,"RegularPattern"],[3,"RepeatedPattern"],[15,"usize"],[4,"Winding"],[3,"Windings"],[3,"HatchEndpoint"]]},\
"lyon_geom":{"doc":"Simple 2D geometric primitives on top of euclid.","t":"DDDGDSSSSSSSDDDSSSSGDGSSIQGIGDSSSGGDGSLMLLLLLKLLLLLLLLKLLLLACLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMALLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCMKLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLFMLLALMMMKLLLLLLLLLLFLLLLLLKLLLLLLKLLLLLLLLMLLLLMMLKLLLLLMMMMLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKFMLLLLLLLMMLLLLLLDDDDLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLMLLLLLMLMMLLLLMMMLMLLLLLLMMLDDLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLQIIKKKKLLLLLLKKKKKKKKKLLLLLLFFFFFF","n":["Angle","Arc","ArcFlags","Box2D","CubicBezierSegment","DIV_EPSILON","DIV_EPSILON","EIGHT","EPSILON","FIVE","FOUR","HALF","Line","LineEquation","LineSegment","MAX","MIN","NINE","ONE","Point","QuadraticBezierSegment","Rotation","SEVEN","SIX","Scalar","Scalar","Scale","Segment","Size","SvgArc","TEN","THREE","TWO","Transform","Translation","Triangle","Vector","ZERO","a","a","ab","ac","add","add","add_assign","after_split","after_split","after_split","after_split","after_split","after_split","angle_to","approx_epsilon","approx_eq_eps","approximate_length","approximate_length","approximate_length","approximate_length","approximate_length","arc","arrayvec","b","b","ba","bc","before_split","before_split","before_split","before_split","before_split","before_split","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_range_x","bounding_range_y","c","c","ca","cast","cb","center","clipped","clipped_x","clipped_y","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_point","contains_point","contains_segment","ctrl","ctrl1","ctrl2","cubic_bezier","default","default","degrees","derivative","derivative","derivative","derivative","derivative","distance_to_point","distance_to_point","distance_to_point","div","div","div_assign","dx","dx","dx","dy","dy","dy","epsilon_for","epsilon_for","eq","eq","eq","eq","eq","eq","eq","eq","eq","equation","equivalent","equivalent","euclid","flags","flip","flip","flip","flip","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","for_each_flattened_with_t","frac_pi_2","frac_pi_3","frac_pi_4","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","hash","horizontal_line_intersection","horizontal_line_intersection_t","intersection","intersection","intersection_t","intersects","intersects","intersects_box","intersects_line","intersects_line_segment","into","into","into","into","into","into","into","into","into","into","invert","is_finite","is_horizontal","is_vertical","large_arc","length","lerp","line_intersection","line_intersection_t","mid_point","mul","mul_assign","neg","new","normal","offset","overlaps_line","overlaps_segment","parallel_line","partial_cmp","pi","point","point","positive","project_point","quadratic_bezier","radians","radians","radii","radii","sample","sample","sample","sample","sample","sample","set_length","signed","signed_distance_to_point","signed_distance_to_point","sin_cos","size","solve_t_for_x","solve_t_for_y","solve_x_for_y","solve_x_for_y","solve_y_for_x","solve_y_for_x","split","split","split","split","split","split","split_at_x","split_range","split_range","split_range","split_range","split_range","split_range","square_distance_to_point","square_distance_to_point","square_length","start_angle","sub","sub_assign","sum","sum","sweep","sweep_angle","tangent","to","to","to","to","to","to","to","to","to","to","to_degrees","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_line","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_vector","traits","transform","transform_point","transform_point","transform_point","transform_point","transform_vector","transform_vector","transform_vector","transform_vector","transformed","translate","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two_pi","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","value","vector","vector","vertical_line_intersection","vertical_line_intersection_t","x","x","x","x","x","x_rotation","x_rotation","y","y","y","y","y","zero","Arc","ArcFlags","Flattened","SvgArc","after_split","approximate_length","before_split","borrow","borrow_mut","bounding_box","bounding_range_x","bounding_range_y","center","circle","end_angle","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_y","flags","flattened","flip","for_each_cubic_bezier","for_each_cubic_bezier","for_each_flattened","for_each_flattened","for_each_flattened_with_t","for_each_flattened_with_t","for_each_local_x_extremum_t","for_each_local_y_extremum_t","for_each_quadratic_bezier","for_each_quadratic_bezier","for_each_quadratic_bezier_with_t","for_each_quadratic_bezier_with_t","from","from","from","from_svg_arc","get_angle","into","into_iter","is_straight_line","large_arc","next","radii","radii","sample","sample_tangent","split","split_range","start_angle","sweep","sweep_angle","to","to","to_arc","to_svg_arc","try_from","try_into","type_id","x","x_rotation","x_rotation","y","CubicBezierSegment","Flattened","after_split","approximate_length","baseline","before_split","borrow","borrow_mut","bounding_box","bounding_range_x","bounding_range_y","ctrl1","ctrl2","cubic_intersections","cubic_intersections_t","derivative","drag","drag_with_weight","dx","dy","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_y","fat_line","flattened","flip","for_each_flattened","for_each_flattened_with_t","for_each_inflection_t","for_each_local_x_extremum_t","for_each_local_y_extremum_t","for_each_monotonic","for_each_monotonic_range","for_each_quadratic_bezier","for_each_quadratic_bezier_with_t","for_each_x_monotonic","for_each_x_monotonic_range","for_each_y_monotonic","for_each_y_monotonic_range","from","from","from","into","into_iter","is_linear","is_monotonic","is_quadratic","is_x_monotonic","is_y_monotonic","line_intersections","line_intersections_t","line_segment_intersections","line_segment_intersections_t","next","num_quadratics","quadratic_intersections","quadratic_intersections_t","sample","size_hint","solve_t_for_x","solve_t_for_y","split","split_range","to","to","to_f32","to_f64","to_quadratic","to_quadratic_error","transformed","try_from","try_into","type_id","x","x_maximum_t","x_minimum_t","y","y_maximum_t","y_minimum_t","Flattened","FlattenedT","FlatteningParameters","QuadraticBezierSegment","after_split","baseline","before_split","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_range_x","bounding_range_y","bounding_triangle","closest_point","ctrl","derivative","distance_to_point","drag","dx","dy","fast_bounding_box","fast_bounding_range_x","fast_bounding_range_y","fat_line","flattened","flattened_t","flattening_step","flip","for_each_flattened","for_each_flattened_with_t","for_each_monotonic","for_each_monotonic_range","for_each_x_monotonic","for_each_x_monotonic_range","for_each_y_monotonic","for_each_y_monotonic_range","from","from","from","from","from","into","into","into","into_iter","into_iter","is_a_point","is_linear","is_monotonic","is_x_monotonic","is_y_monotonic","length","line_intersections","line_intersections_t","line_segment_intersections","line_segment_intersections_t","local_x_extremum_t","local_y_extremum_t","new","next","next","sample","size_hint","size_hint","split","split_range","square_distance_to_point","to","to","to_cubic","to_f32","to_f64","transformed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","x","x_maximum_t","x_minimum_t","y","y_maximum_t","y_minimum_t","Scalar","Segment","Transformation","after_split","approximate_length","before_split","derivative","dx","dx","dx","dy","dy","dy","flip","for_each_flattened_with_t","from","sample","split","split_range","to","transform_point","transform_vector","x","x","x","y","y","y","cubic_polynomial_roots","directed_angle","directed_angle2","min_max","normalized_tangent","tangent"],"q":[[0,"lyon_geom"],[398,"lyon_geom::arc"],[461,"lyon_geom::cubic_bezier"],[540,"lyon_geom::quadratic_bezier"],[632,"lyon_geom::traits"],[660,"lyon_geom::utils"]],"d":["An angle in radians. An angle in radians","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","Alias for <code>euclid::default::Box2D</code>","A 2d curve segment defined by four points: the beginning …","","","","","","","","An infinite line defined by a point and a vector.","A line defined by the equation …","A linear segment.","","","","","Alias for <code>euclid::default::Point2D</code>.","A 2d curve segment defined by three points: the beginning …","Alias for <code>euclid::default::Rotation2D</code>","","","","","Alias for <code>euclid::default::Scale</code>","Common APIs to segment types.","Alias for <code>euclid::default::Size2D</code>.","An elliptic arc curve segment using the SVG’s end-point …","","","","Alias for <code>euclid::default::Transform2D</code>","Alias for <code>euclid::default::Translation2D</code>","A 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.","Alias for <code>euclid::default::Vector2D</code>.","","","","","","","","","Return the curve after the split point.","","","","Return the segment after the split point.","","Returns the shortest signed angle between two angles.","","","Compute the length of the segment using a flattened …","","","","","Elliptic arc related maths and tools.","","","","","","Return the curve before the split point.","","","","Return the segment before the split point.","","","","","","","","","","","","","","","","","","","","","","Return the smallest rectangle containing this segment.","Returns the smallest rectangle that contains this triangle.","Returns a conservative range of x that contains this …","Returns a conservative range of y that contains this …","","","","Cast from one numeric representation to another.","","","Clip this segment against a rectangle.","Horizontally clip this segment against a range of the x …","Vertically clip this segment against a range of the y axis.","","","","","","","","","","","","","","","","","","","","","Computes the closest point on this segment to <code>p</code>.","","","","","","","","","","Sample the derivative at t (expecting t between 0 and 1).","","","","","Computes the distance between this segment and a point.","","","","","","","","","","","","Epsilon constants are usually not a good way to deal with …","Epsilon constants are usually not a good way to deal with …","","","","","","","","","","","","","","","Swap the direction of the segment.","","","Returns an inverted version of this segment where the …","","","","","","","","","","","","","Approximates the curve with sequence of line segments.","","","","","","","","Start of the curve.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Computes the intersection (if any) between this segment …","","Test for triangle-triangle intersection.","","","Test for triangle-segment intersection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the angle is a finite number.","","","Of the four candidate arc sweeps, two will represent an …","Computes the length of this segment.","Linear interpolation between two angles, using the …","","","Computes thid mid-point of this segment.","","","","","","","","","","","","Shorthand for <code>Point::new(x, y)</code>.","","Returns this angle in the [0..2*PI[ range.","","","","","","","Sample the curve at t (expecting t between 0 and 1).","","","Sample the segment at t (expecting t between 0 and 1).","","","Changes the segment’s length, moving destination point.","Returns this angle in the ]-PI..PI] range.","","","Returns (sin(self), cos(self)).","Shorthand for <code>Size::new(x, y)</code>.","","","","","","","Split this curve into two sub-curves.","","","Split this curve into two sub-segments.","","","","Return the curve inside a given range of t.","","","","Return the sub-segment inside a given range of t.","","Computes the squared distance between this segment and a …","Returned the squared distance to a point.","Computes the squared length of this segment.","","","","","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","End of the curve.","","","","","","","","","","","","","Cast angle to <code>f32</code>.","","","Cast angle <code>f64</code>.","Returns the line containing this segment.","","","","","","","","","","","Returns the vector between this segment’s <code>from</code> and <code>to</code> …","","[Not implemented] Applies the transform to this triangle …","","","","","","","","","Applies the transform to this segment and returns the …","","Fallible cast from one numeric representation to another.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shorthand for <code>Vector::new(x, y)</code>.","","","","","","Sample the x coordinate of the segment at t (expecting t …","","","","","","","","Sample the y coordinate of the segment at t (expecting t …","","","An elliptic arc curve segment.","Flag parameters for arcs as described by the SVG …","Flattening iterator for arcs.","An elliptic arc curve segment using the SVG’s end-point …","Return the curve after the split point.","","Return the curve before the split point.","","","Returns a conservative rectangle that contains the curve.","","","","Create simple circle.","","Returns a conservative rectangle that contains the curve.","","","","Returns the flattened representation of the curve as an …","Swap the direction of the segment.","Approximate the arc with a sequence of cubic bézier …","Approximates the arc with a sequence of cubic bézier …","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","","","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Approximate the arc with a sequence of quadratic bézier …","Approximates the arc with a sequence of quadratic bézier …","Returns the argument unchanged.","","","Convert from the SVG arc notation.","Sample the curve’s angle at t (expecting t between 0 and …","Calls <code>U::from(self)</code>.","","Per SVG spec, this arc should be rendered as a line_to …","Of the four candidate arc sweeps, two will represent an …","","","","Sample the curve at t (expecting t between 0 and 1).","Sample the curve’s tangent at t (expecting t between 0 …","Split this curve into two sub-curves.","Return the sub-curve inside a given range of t.","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","Converts this arc from endpoints to center notation.","Convert to the SVG arc notation.","","","","","","","","A 2d curve segment defined by four points: the beginning …","","Return the curve after the split point.","Compute the length of the segment using a flattened …","","Return the curve before the split point.","","","Returns a conservative rectangle that contains the curve.","Returns the smallest range of x that contains this curve.","Returns the smallest range of y that contains this curve.","","","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","Sample the curve’s derivative at t (expecting t between …","","","Sample the x coordinate of the curve’s derivative at t …","Sample the y coordinate of the curve’s derivative at t …","Returns a conservative rectangle the curve is contained in.","Returns a conservative range of x that contains this curve.","Returns a conservative range of y that contains this curve.","Computes a “fat line” of this segment.","Returns the flattened representation of the curve as an …","Swap the beginning and the end of the segment.","Approximates the curve with sequence of line segments.","Approximates the curve with sequence of line segments.","Invokes a callback at each inflection point if any.","Return local x extrema or None if this curve is monotonic.","Return local y extrema or None if this curve is monotonic.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Approximates the cubic bézier curve with sequence of …","Approximates the cubic bézier curve with sequence of …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Returns true if the curve can be approximated with a …","Returns whether this segment is fully monotonic.","Returns true if the curve can be safely approximated with …","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the y axis.","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment …","","Computes the intersections (if any) between this segment …","","Computes the number of quadratic bézier segments required …","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","Sample the curve at t (expecting t between 0 and 1).","","Return the parameter values corresponding to a given x …","Return the parameter values corresponding to a given y …","Split this curve into two sub-curves.","Return the sub-curve inside a given range of t.","","","","","Approximate the curve with a single quadratic bézier …","Evaluates an upper bound on the maximum distance between …","Applies the transform to this curve and returns the …","","","","Sample the x coordinate of the curve at t (expecting t …","Find the advancement of the x-most position in the curve.","Find the x-least position in the curve.","Sample the y coordinate of the curve at t (expecting t …","Find the advancement of the y-most position in the curve.","Find the advancement of the y-least position in the curve.","A flattening iterator for quadratic bézier segments.","A flattening iterator for quadratic bézier segments.","","A 2d curve segment defined by three points: the beginning …","Return the curve after the split point.","","Return the curve before the split point.","","","","","","","Returns the smallest rectangle the curve is contained in","Returns the smallest range of x that contains this curve.","Returns the smallest range of y that contains this curve.","Returns a triangle containing this curve segment.","Analytic solution to finding the closest point on the …","","Sample the curve’s derivative at t (expecting t between …","Returns the shortest distance between this segment and a …","","Sample the x coordinate of the curve’s derivative at t …","Sample the y coordinate of the curve’s derivative at t …","Returns a conservative rectangle that contains the curve.","Returns a conservative range of x that contains this curve.","Returns a conservative range of y that contains this curve.","Computes a “fat line” of this segment.","Returns the flattened representation of the curve as an …","Returns the flattened representation of the curve as an …","Find the interval of the beginning of the curve that can …","Swap the beginning and the end of the segment.","Approximates the curve with sequence of line segments.","Compute a flattened approximation of the curve, invoking a …","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each monotonic part of the segment.","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each x-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Invokes a callback for each y-monotonic part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the curve can be approximated with a …","Returns true if the curve can be approximated with a …","Returns whether this segment is fully monotonic.","Returns whether this segment is monotonic on the x axis.","Returns whether this segment is monotonic on the y axis.","Computes the length of this segment.","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","Computes the intersection points (if any) between this …","Computes the intersections (if any) between this segment a …","Return the x inflection point or None if this curve is …","Return the y inflection point or None if this curve is …","","","","Sample the curve at t (expecting t between 0 and 1).","","","Split this curve into two sub-curves.","Return the sub-curve inside a given range of t.","Returns the shortest squared distance between this segment …","","","Elevate this curve to a third order bézier.","","","Applies the transform to this curve and returns the …","","","","","","","","","","Sample the x coordinate of the curve at t (expecting t …","Find the advancement of the x-most position in the curve.","Find the advancement of the x-least position in the curve.","Sample the y coordinate of the curve at t (expecting t …","Find the advancement of the y-most position in the curve.","Find the advancement of the y-least position in the curve.","","Common APIs to segment types.","","Return the curve after the split point.","Compute the length of the segment using a flattened …","Return the curve before the split point.","Sample the derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample x derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Sample y derivative at t (expecting t between 0 and 1).","Swap the direction of the segment.","Approximates the curve with sequence of line segments.","Start of the curve.","Sample the curve at t (expecting t between 0 and 1).","Split this curve into two sub-curves.","Return the curve inside a given range of t.","End of the curve.","","","Sample x at t (expecting t between 0 and 1).","Sample x at t (expecting t between 0 and 1).","Sample x at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","Sample y at t (expecting t between 0 and 1).","","Angle between vectors v1 and v2 (oriented clockwise …","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,67,0,0,0,0,1,1,1,0,0,0,0,1,2,3,3,3,6,6,6,67,9,10,4,4,11,6,6,6,67,9,10,4,11,0,0,2,3,3,3,67,9,10,4,4,11,9,24,25,10,4,26,2,11,3,6,9,24,25,10,4,26,2,11,3,6,4,3,3,3,2,3,3,6,3,9,4,4,4,9,24,25,10,4,26,2,11,3,6,9,24,25,10,4,26,2,11,3,6,4,3,4,11,10,10,0,25,6,6,67,9,10,4,11,4,26,2,6,6,6,10,4,11,10,4,11,1,1,9,24,25,10,4,2,11,3,6,26,2,6,0,24,67,9,10,4,4,11,9,24,25,10,4,26,2,11,3,6,67,9,10,4,11,6,6,6,67,9,9,9,24,25,10,10,4,4,4,26,2,11,11,3,6,24,10,4,11,6,6,4,4,4,26,4,4,3,26,4,3,9,24,25,10,4,26,2,11,3,6,2,6,2,2,25,4,6,4,4,4,6,6,6,2,2,2,4,4,2,6,6,0,26,6,2,0,6,6,9,24,67,9,10,4,4,11,4,6,26,2,6,0,4,4,4,2,4,2,67,9,10,4,4,11,4,67,9,10,4,4,11,4,26,4,9,6,6,6,6,25,9,2,67,9,10,4,4,11,24,10,4,11,6,4,26,6,4,26,6,4,9,24,25,10,4,26,2,11,3,6,4,0,3,55,56,57,58,55,56,57,58,4,4,6,9,24,25,10,4,26,2,11,3,6,9,24,25,10,4,26,2,11,3,6,6,9,24,25,10,4,26,2,11,3,6,0,1,0,26,4,4,9,10,4,4,11,9,24,9,10,4,4,11,6,0,0,0,0,9,9,9,60,60,9,9,9,9,9,9,9,9,9,24,9,9,9,24,9,24,9,24,9,9,9,24,9,24,60,9,24,9,9,60,60,24,25,60,9,24,9,9,9,9,9,25,9,9,24,24,9,60,60,60,9,9,24,9,0,0,10,10,10,10,62,62,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,62,10,10,62,62,10,10,10,10,10,10,10,10,10,62,10,10,10,10,62,10,10,10,10,10,10,10,10,10,10,10,62,62,62,10,10,10,10,10,10,0,0,0,0,11,11,11,66,64,65,66,64,65,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,66,64,65,11,11,66,64,65,64,65,11,11,11,11,11,11,11,11,11,11,11,11,66,64,65,11,64,65,11,11,11,11,11,11,11,11,11,66,64,65,66,64,65,66,64,65,11,11,11,11,11,11,67,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,54,54,67,67,67,67,67,67,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],1],0,[[[3,[1]]],[[4,[1]]]],[[[3,[1]]],[[4,[1]]]],[[[6,[[5,[[5,[[5,[5]]]]]]]],[6,[[5,[[5,[[5,[5]]]]]]]]],[[6,[[5,[[5,[[5,[5]]]]]]]]]],[[[6,[[0,[7,[5,[[0,[7,[5,[[0,[7,[5,[[0,[7,5]]]]]]]]]]]]]]]],[6,[[0,[7,[5,[[0,[7,[5,[[0,[7,[5,[[0,[7,5]]]]]]]]]]]]]]]]],[[6,[[0,[7,[5,[[0,[7,[5,[[0,[7,[5,[[0,[7,5]]]]]]]]]]]]]]]]]],[[[6,[[8,[[8,[[8,[8]]]]]]]],[6,[[8,[[8,[[8,[8]]]]]]]]]],[[]],[[[9,[1]],1],[[9,[1]]]],[[[10,[1]],1],[[10,[1]]]],[[[4,[1]],1],[[4,[1]]]],[[[4,[1]],1],[[4,[1]]]],[[[11,[1]],1],[[11,[1]]]],[[[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]]],[[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]]]],[[],[[17,[[17,[[17,[[17,[17]]]]]]]]]],[[[6,[[17,[[17,[[17,[17]]]]]]]],[6,[[17,[[17,[[17,[17]]]]]]]],[17,[[17,[[17,[[17,[17]]]]]]]]],18],[[]],[[[9,[1]],1],1],[[[10,[1]],1],1],[[[4,[1]],1],1],[[[11,[1]],1],1],0,0,[[[2,[1]]],1],0,[[[3,[1]]],[[4,[1]]]],[[[3,[1]]],[[4,[1]]]],[[]],[[[9,[1]],1],[[9,[1]]]],[[[10,[1]],1],[[10,[1]]]],[[[4,[1]],1],[[4,[1]]]],[[[4,[1]],1],[[4,[1]]]],[[[11,[1]],1],[[11,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[1]]],[[19,[1]]]],[[[3,[1]]],[[19,[1]]]],[[[3,[1]]]],[[[3,[1]]]],[[[2,[1]]],1],0,[[[3,[1]]],[[4,[1]]]],[[[6,[[0,[20,7]]]]],[[6,[20]]]],[[[3,[1]]],[[4,[1]]]],0,[[[4,[1]],[19,[1]]],[[21,[[4,[1]]]]]],[[[4,[1]],[22,[1]]],[[21,[[4,[1]]]]]],[[[4,[1]],[22,[1]]],[[21,[[4,[1]]]]]],[[[9,[23]]],[[9,[23]]]],[[[24,[23]]],[[24,[23]]]],[25,25],[[[10,[23]]],[[10,[23]]]],[[[4,[23]]],[[4,[23]]]],[[[26,[23]]],[[26,[23]]]],[[[2,[23]]],[[2,[23]]]],[[[11,[23]]],[[11,[23]]]],[[[3,[23]]],[[3,[23]]]],[[[6,[23]]],[[6,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[1]],[27,[1]]],[[27,[1]]]],[[[3,[1]],[27,[1]]],18],[[[4,[1]],[4,[1]]],18],0,0,0,0,[[],25],[[],[[6,[28]]]],[29,[[6,[29]]]],[[],30],[[[9,[1]],1],[[30,[1]]]],[[[10,[1]],1],[[30,[1]]]],[[[4,[1]],1],[[30,[1]]]],[[[11,[1]],1],[[30,[1]]]],[[[4,[1]],[27,[1]]],1],[[[26,[1]],[27,[1]]],1],[[[2,[1]],[27,[1]]],1],[[[6,[[31,[[31,[[31,[31]]]]]]]],[6,[[31,[[31,[[31,[31]]]]]]]]],[[31,[[31,[[31,[[31,[31]]]]]]]]]],[[[6,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]]],[[6,[[31,[[31,[[31,[31]]]]]]]]]],[[[6,[[32,[[32,[[32,[32]]]]]]]],[32,[[32,[[32,[[32,[32]]]]]]]]]],[[[10,[1]],1],1],[[[4,[1]],1],1],[[[11,[1]],1],1],[[[10,[1]],1],1],[[[4,[1]],1],1],[[[11,[1]],1],1],[[]],[[]],[[[9,[33]],[9,[33]]],18],[[[24,[33]],[24,[33]]],18],[[25,25],18],[[[10,[33]],[10,[33]]],18],[[[4,[33]],[4,[33]]],18],[[[2,[33]],[2,[33]]],18],[[[11,[33]],[11,[33]]],18],[[[3,[33]],[3,[33]]],18],[[[6,[[33,[[33,[[33,[33]]]]]]]],[6,[[33,[[33,[[33,[33]]]]]]]]],18],[[[26,[1]]],[[2,[1]]]],[[],18],[[],18],0,0,[[]],[[[9,[1]]],[[9,[1]]]],[[[10,[1]]],[[10,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[11,[1]]],[[11,[1]]]],[[[9,[34]],35],36],[[[24,[34]],35],36],[[25,35],36],[[[10,[34]],35],36],[[[4,[34]],35],36],[[[26,[34]],35],36],[[[2,[34]],35],36],[[[11,[34]],35],36],[[[3,[34]],35],36],[[[6,[34]],35],[[38,[37]]]],[39],[[[9,[1]],39]],[[[10,[1]],39]],[[[4,[1]],39]],[[[11,[1]],39]],[[],[[6,[[0,[16,[5,[[0,[16,[5,[[0,[16,[5,[[0,[16,5]]]]]]]]]]]]]]]]]],[[],[[6,[[0,[16,[5,[[0,[16,[5,[[0,[16,[5,[[0,[16,5]]]]]]]]]]]]]]]]]],[[],[[6,[[0,[16,[5,[[0,[16,[5,[[0,[16,[5,[[0,[16,5]]]]]]]]]]]]]]]]]],[[],27],[[[9,[1]]],[[27,[1]]]],[[[24,[1]]],[[9,[1]]]],[[]],[[]],[[]],[[]],[[[10,[1]]],[[27,[1]]]],[[[4,[1]]],[[27,[1]]]],[[]],[[[4,[1]]],[[27,[1]]]],[[]],[[]],[[[11,[1]]],[[27,[1]]]],[[]],[[]],[[]],0,0,0,0,[6],[[[6,[40]],41]],[[[4,[1]],1],[[21,[[27,[1]]]]]],[[[4,[1]],1],[[21,[1]]]],[[[4,[1]],[4,[1]]],[[21,[[27,[1]]]]]],[[[26,[1]],[26,[1]]],[[21,[[27,[1]]]]]],[[[4,[1]],[4,[1]]],21],[[[4,[1]],[4,[1]]],18],[[[3,[1]],[3,[1]]],18],[[[26,[1]],[19,[1]]],18],[[[4,[1]],[26,[1]]],18],[[[3,[1]],[4,[1]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[6,[42]]],18],[[[2,[1]]],18],[[[2,[1]]],18],0,[[[4,[1]]],1],[[[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[0,[[12,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]],[[6,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[13,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[5,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],[14,[[0,[[12,[[0,[12,13,5,14,15,16,7]]]],[13,[[0,[12,13,5,14,15,16,7]]]],[5,[[0,[12,13,5,14,15,16,7]]]],[14,[[0,[12,13,5,14,15,16,7]]]],15,16,7]]]],15,16,7]]]],15,16,7]]]]]],[[[4,[1]],[26,[1]]],[[21,[[27,[1]]]]]],[[[4,[1]],[26,[1]]],[[21,[1]]]],[[[4,[1]]],[[27,[1]]]],[[[6,[[14,[[14,[[14,[14]]]]]]]],[14,[[14,[[14,[[14,[14]]]]]]]]],[[6,[[14,[[14,[[14,[14]]]]]]]]]],[[[6,[[43,[[43,[[43,[43]]]]]]]],[43,[[43,[[43,[[43,[43]]]]]]]]]],[[[6,[44]]],[[6,[44]]]],[[1,1,1],[[2,[1]]]],[[[2,[1]]],[[30,[1]]]],[[[2,[1]],1],[[2,[1]]]],[[[4,[1]],[26,[1]]],18],[[[4,[1]],[4,[1]]],18],[[[2,[1]],[27,[1]]],[[2,[1]]]],[[[6,[[45,[[45,[[45,[45]]]]]]]],[6,[[45,[[45,[[45,[45]]]]]]]]],[[21,[46]]]],[[],[[6,[[0,[16,[5,[[0,[16,[5,[[0,[16,[5,[[0,[16,5]]]]]]]]]]]]]]]]]],[[],27],0,[[[6,[[0,[[13,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[12,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[5,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],7]]]]],[[6,[[0,[[13,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[12,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[5,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],7]]]]]],[[[2,[1]],[27,[1]]],[[27,[1]]]],0,[[],6],0,0,0,[[],27],[[[9,[1]],1],[[27,[1]]]],[[[10,[1]],1],[[27,[1]]]],[[[4,[1]],1],[[27,[1]]]],[[[4,[1]],1],[[27,[1]]]],[[[11,[1]],1],[[27,[1]]]],[[[4,[1]],1]],[[[6,[[0,[[13,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[12,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[5,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],7]]]]],[[6,[[0,[[13,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[12,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],[5,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[12,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],[5,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],47,16,[45,[[0,[[13,[[0,[13,12,5,47,16,45,7]]]],[12,[[0,[13,12,5,47,16,45,7]]]],[5,[[0,[13,12,5,47,16,45,7]]]],47,16,[45,[[0,[13,12,5,47,16,45,7]]]],7]]]],7]]]],7]]]]]],[[[26,[1]],[27,[1]]],1],[[[2,[1]],[27,[1]]],1],[[[6,[48]]]],[[],49],[[[4,[1]],1],1],[[[4,[1]],1],1],[[[4,[1]],1],1],[[[2,[1]],1],[[21,[1]]]],[[[4,[1]],1],1],[[[2,[1]],1],[[21,[1]]]],[[]],[[[9,[1]],1]],[[[10,[1]],1]],[[[4,[1]],1]],[[[4,[1]],1]],[[[11,[1]],1]],[[[4,[1]],1]],[22],[[[9,[1]],[22,[1]]],[[9,[1]]]],[[[10,[1]],[22,[1]]],[[10,[1]]]],[[[4,[1]],[22,[1]]],[[4,[1]]]],[[[4,[1]],[22,[1]]],[[4,[1]]]],[[[11,[1]],[22,[1]]],[[11,[1]]]],[[[4,[1]],[27,[1]]],1],[[[26,[1]],[27,[1]]],1],[[[4,[1]]],1],0,[[[6,[[13,[[13,[[13,[13]]]]]]]],[6,[[13,[[13,[[13,[13]]]]]]]]]],[[[6,[[50,[[50,[[50,[50]]]]]]]],[6,[[50,[[50,[[50,[50]]]]]]]]]],[51,[[6,[[0,[[5,[[0,[[5,[[0,[[5,[[0,[5,7,47]]]],7,47]]]],7,47]]]],7,47]]]]]],[51,[[6,[[0,[[5,[[0,[[5,[[0,[[5,[[0,[5,47]]]],47]]]],47]]]],47]]]]]],0,0,[[[2,[1]]],[[30,[1]]]],[[],27],[[[9,[1]]],[[27,[1]]]],[[[10,[1]]],[[27,[1]]]],[[[4,[1]]],[[27,[1]]]],[[[4,[1]]],[[27,[1]]]],[[[11,[1]]],[[27,[1]]]],0,0,0,0,[[[6,[29]]],29],[[[4,[1]]],[[4,[52]]]],[[[26,[1]]],[[26,[52]]]],[[[6,[[0,[20,7]]]]],[[6,[52]]]],[[[4,[1]]],[[4,[53]]]],[[[26,[1]]],[[26,[53]]]],[[[6,[[0,[20,7]]]]],[[6,[53]]]],[[[4,[1]]],[[26,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[1]]],[[30,[1]]]],0,[[[3,[1]],[54,[1]]],[[3,[1]]]],[[[55,[1]],[27,[1]]],[[27,[1]]]],[[[56,[1]],[27,[1]]],[[27,[1]]]],[[[57,[1]],[27,[1]]],[[27,[1]]]],[[[58,[1]],[27,[1]]],[[27,[1]]]],[[[55,[1]],[30,[1]]],[[30,[1]]]],[[[56,[1]],[30,[1]]],[[30,[1]]]],[[[57,[1]],[30,[1]]],[[30,[1]]]],[[[58,[1]],[30,[1]]],[[30,[1]]]],[[[4,[1]],[54,[1]]],[[4,[1]]]],[[[4,[1]],[30,[1]]],[[4,[1]]]],[[[6,[[0,[20,7]]]]],[[21,[[6,[20]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],[[6,[[0,[16,[5,[[0,[16,[5,[[0,[16,[5,[[0,[16,5]]]]]]]]]]]]]]]]]],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],0,[52],[[],30],0,[[[4,[1]],1],[[21,[[27,[1]]]]]],[[[4,[1]],1],[[21,[1]]]],[[[9,[1]],1],1],[[[10,[1]],1],1],[[[4,[1]],1],1],[[[4,[1]],1],1],[[[11,[1]],1],1],0,0,[[[9,[1]],1],1],[[[10,[1]],1],1],[[[4,[1]],1],1],[[[4,[1]],1],1],[[[11,[1]],1],1],[[],[[6,[47]]]],0,0,0,0,[[[9,[1]],1],[[9,[1]]]],[[[9,[1]],1],1],[[[9,[1]],1],[[9,[1]]]],[[]],[[]],[[[9,[1]]],[[19,[1]]]],[[[9,[1]]]],[[[9,[1]]]],0,[[[27,[1]],1],[[9,[1]]]],[[[9,[1]]],[[6,[1]]]],[[[9,[1]]],[[19,[1]]]],[[[9,[1]]]],[[[9,[1]]]],0,[[[9,[1]],1],[[60,[1]]]],[[[9,[1]]],[[9,[1]]]],[[[9,[1]],39]],[[[24,[1]],39]],[[[9,[1]],1,39]],[[[24,[1]],1,39]],[[[9,[1]],1,39]],[[[24,[1]],1,39]],[[[9,[1]],39]],[[[9,[1]],39]],[[[9,[1]],39]],[[[24,[1]],39]],[[[9,[1]],39]],[[[24,[1]],39]],[[]],[[[9,[1]]],[[27,[1]]]],0,[[[24,[1]]],[[9,[1]]]],[[[9,[1]],1],[[6,[1]]]],[[]],[[]],[[[24,[1]]],18],0,[[[60,[1]]],[[21,[[27,[1]]]]]],0,0,[[[9,[1]],1],[[27,[1]]]],[[[9,[1]],1],[[30,[1]]]],[[[9,[1]],1]],[[[9,[1]],[22,[1]]],[[9,[1]]]],0,0,0,[[[9,[1]]],[[27,[1]]]],0,[[[24,[1]]],[[9,[1]]]],[[[9,[1]]],[[24,[1]]]],[[],38],[[],38],[[],59],[[[9,[1]],1],1],0,0,[[[9,[1]],1],1],0,0,[[[10,[1]],1],[[10,[1]]]],[[[10,[1]],1],1],[[[10,[1]]],[[4,[1]]]],[[[10,[1]],1],[[10,[1]]]],[[]],[[]],[[[10,[1]]],[[19,[1]]]],[[[10,[1]]]],[[[10,[1]]]],0,0,[[[10,[1]],[10,[1]]],[[61,[[27,[1]]]]]],[[[10,[1]],[10,[1]]],61],[[[10,[1]],1],[[30,[1]]]],[[[10,[1]],1,[27,[1]]],[[10,[1]]]],[[[10,[1]],1,[27,[1]],1],[[10,[1]]]],[[[10,[1]],1],1],[[[10,[1]],1],1],[[[10,[1]]],[[19,[1]]]],[[[10,[1]]]],[[[10,[1]]]],[[[10,[1]]]],[[[10,[1]],1],[[62,[1]]]],[[[10,[1]]],[[10,[1]]]],[[[10,[1]],1,39]],[[[10,[1]],1,39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],1,39]],[[[10,[1]],1,39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],39]],[[[10,[1]],39]],[[]],[[[10,[1]]],[[27,[1]]]],0,[[]],[[]],[[[10,[1]],1],18],[[[10,[1]]],18],[[[10,[1]],1],18],[[[10,[1]]],18],[[[10,[1]]],18],[[[10,[1]],[26,[1]]],[[61,[[27,[1]]]]]],[[[10,[1]],[26,[1]]],[[61,[1]]]],[[[10,[1]],[4,[1]]],[[61,[[27,[1]]]]]],[[[10,[1]],[4,[1]]],61],[[[62,[1]]],[[21,[[27,[1]]]]]],[[[10,[1]],1],63],[[[10,[1]],[11,[1]]],[[61,[[27,[1]]]]]],[[[10,[1]],[11,[1]]],61],[[[10,[1]],1],[[27,[1]]]],[[[62,[1]]]],[[[10,[1]],1],[[61,[1]]]],[[[10,[1]],1],[[61,[1]]]],[[[10,[1]],1]],[[[10,[1]],[22,[1]]],[[10,[1]]]],[[[10,[1]]],[[27,[1]]]],0,[[[10,[1]]],[[10,[52]]]],[[[10,[1]]],[[10,[53]]]],[[[10,[1]]],[[11,[1]]]],[[[10,[1]]],1],[[[10,[1]],[54,[1]]],[[10,[1]]]],[[],38],[[],38],[[],59],[[[10,[1]],1],1],[[[10,[1]]],1],[[[10,[1]]],1],[[[10,[1]],1],1],[[[10,[1]]],1],[[[10,[1]]],1],0,0,0,0,[[[11,[1]],1],[[11,[1]]]],[[[11,[1]]],[[4,[1]]]],[[[11,[1]],1],[[11,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[1]]],[[19,[1]]]],[[[11,[1]]]],[[[11,[1]]]],[[[11,[1]]],[[3,[1]]]],[[[11,[1]],[27,[1]]],1],0,[[[11,[1]],1],[[30,[1]]]],[[[11,[1]],[27,[1]]],1],[[[11,[1]],1,[27,[1]]],[[11,[1]]]],[[[11,[1]],1],1],[[[11,[1]],1],1],[[[11,[1]]],[[19,[1]]]],[[[11,[1]]]],[[[11,[1]]]],[[[11,[1]]]],[[[11,[1]],1],[[64,[1]]]],[[[11,[1]],1],[[65,[1]]]],[[[11,[1]],1],1],[[[11,[1]]],[[11,[1]]]],[[[11,[1]],1,39]],[[[11,[1]],1,39]],[[[11,[1]],39]],[[[11,[1]],39]],[[[11,[1]],39]],[[[11,[1]],39]],[[[11,[1]],39]],[[[11,[1]],39]],[[]],[[]],[[]],[[[11,[1]]],[[27,[1]]]],0,[[]],[[]],[[]],[[]],[[]],[[[11,[1]],1],18],[[[11,[1]],1],18],[[[11,[1]]],18],[[[11,[1]]],18],[[[11,[1]]],18],[[[11,[1]]],1],[[[11,[1]],[26,[1]]],[[61,[[27,[1]]]]]],[[[11,[1]],[26,[1]]],[[61,[1]]]],[[[11,[1]],[4,[1]]],[[61,[[27,[1]]]]]],[[[11,[1]],[4,[1]]],61],[[[11,[1]]],[[21,[1]]]],[[[11,[1]]],[[21,[1]]]],[[[11,[1]],1],[[66,[1]]]],[[[64,[1]]],[[21,[[27,[1]]]]]],[[[65,[1]]],[[21,[1]]]],[[[11,[1]],1],[[27,[1]]]],[[[64,[1]]]],[[[65,[1]]]],[[[11,[1]],1]],[[[11,[1]],[22,[1]]],[[11,[1]]]],[[[11,[1]],[27,[1]]],1],[[[11,[1]]],[[27,[1]]]],0,[[[11,[1]]],[[10,[1]]]],[[[11,[1]]],[[11,[52]]]],[[[11,[1]]],[[11,[53]]]],[[[11,[1]],[54,[1]]],[[11,[1]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],59],[[],59],[[],59],[[[11,[1]],1],1],[[[11,[1]]],1],[[[11,[1]]],1],[[[11,[1]],1],1],[[[11,[1]]],1],[[[11,[1]]],1],0,0,0,[[]],[[]],[[]],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[[],27],[[],27],[[]],[22],[[],27],[27,27],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1,1,1],[[61,[1]]]],[[[30,[1]],[30,[1]]],1],[[[27,[1]],[27,[1]],[27,[1]]],1],[[42,42]],[[[30,[1]]],[[30,[1]]]],[[[30,[42]]],[[30,[42]]]]],"c":[],"p":[[8,"Scalar"],[3,"LineEquation"],[3,"Triangle"],[3,"LineSegment"],[8,"Add"],[3,"Angle"],[8,"Copy"],[8,"AddAssign"],[3,"Arc"],[3,"CubicBezierSegment"],[3,"QuadraticBezierSegment"],[8,"Rem"],[8,"Sub"],[8,"Mul"],[8,"One"],[8,"FloatConst"],[8,"ApproxEq"],[15,"bool"],[6,"Box2D"],[8,"NumCast"],[4,"Option"],[3,"Range"],[8,"Clone"],[3,"SvgArc"],[3,"ArcFlags"],[3,"Line"],[6,"Point"],[8,"Default"],[8,"Trig"],[6,"Vector"],[8,"Div"],[8,"DivAssign"],[8,"PartialEq"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"FnMut"],[8,"Hash"],[8,"Hasher"],[8,"Float"],[8,"MulAssign"],[8,"Neg"],[8,"PartialOrd"],[4,"Ordering"],[8,"Zero"],[8,"Real"],[6,"Size"],[8,"SubAssign"],[8,"Iterator"],[15,"f32"],[15,"f64"],[8,"Transformation"],[6,"Transform"],[6,"Rotation"],[6,"Translation"],[6,"Scale"],[3,"TypeId"],[3,"Flattened"],[3,"ArrayVec"],[3,"Flattened"],[15,"u32"],[3,"Flattened"],[3,"FlattenedT"],[3,"FlatteningParameters"],[8,"Segment"]]},\
"lyon_path":{"doc":"Data structures and traits to work with paths (vector …","t":"DGDIGNNNDNNDNEDESSSGDNEENNRNNNDDDDDGDDIINNNNNENELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMALKLLLLLLAAMMAKMLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMDIDDIQIDDLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLMMKLLLLLLLLLLLKLLLLKKLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKKLLLLLLKLLLLLLLKLLLLLLKKLLLLLLKLKLKLKLKLKLKLLLLLLLLLLLLKLKLKLKLLLLMMLLLLLLLLLLLLLLLLLLKLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGGFFFGDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLCCCC","n":["ArcFlags","AttributeIndex","AttributeSlice","AttributeStore","Attributes","Begin","Bevel","Butt","ControlPointId","Cubic","End","EndpointId","EvenOdd","Event","EventId","FillRule","INVALID","INVALID","INVALID","IdEvent","IdPolygon","Line","LineCap","LineJoin","Miter","MiterClip","NO_ATTRIBUTES","Negative","Negative","NonZero","Path","PathBuffer","PathBufferSlice","PathCommands","PathCommandsSlice","PathEvent","PathSlice","Polygon","Position","PositionStore","Positive","Positive","Quadratic","Round","Round","Side","Square","Winding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed","closed","commands","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_usize","from_usize","geom","get","get","get","get","get_control_point","get_control_point","get_control_point","get_control_point","get_endpoint","get_endpoint","get_endpoint","get_endpoint","hash","hash","hash","hash","hash","index","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_edge","is_in","is_negative","is_out","is_positive","iterator","large_arc","math","new","num_attributes","num_attributes","num_attributes","num_attributes","offset","offset","opposite","path","path_buffer","points","points","polygon","position","sweep","to","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_usize","to_usize","to_usize","traits","transformed","transformed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_points","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","BorderRadii","Build","Flattened","NoAttributes","PathBuilder","PathType","SvgPathBuilder","Transformed","WithSvg","add_circle","add_circle","add_ellipse","add_ellipse","add_line_segment","add_line_segment","add_point","add_point","add_polygon","add_polygon","add_polygon","add_rectangle","add_rectangle","add_rounded_rectangle","add_rounded_rectangle","arc","arc_to","arc_to","begin","begin","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","build","build","build","build","build","build","build","build","clone","clone","clone_into","clone_into","close","close","close","close","close","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","current_position","default","default","end","end","end","end","end","eq","eq","event","extend_from_paths","flattened","flattened","flattened","fmt","fmt","fmt","from","from","from","from","from","hash","horizontal_line_to","horizontal_line_to","inner","inner_mut","into","into","into","into","into","into_inner","line_to","line_to","line_to","line_to","line_to","line_to","line_to","line_to","move_to","move_to","move_to","new","new","new","new","new","num_attributes","num_attributes","num_attributes","num_attributes","partial_cmp","path_event","path_event","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","relative_arc_to","relative_arc_to","relative_cubic_bezier_to","relative_cubic_bezier_to","relative_horizontal_line_to","relative_horizontal_line_to","relative_line_to","relative_line_to","relative_move_to","relative_move_to","relative_quadratic_bezier_to","relative_quadratic_bezier_to","relative_vertical_line_to","relative_vertical_line_to","reserve","reserve","reserve","reserve","reserve","reserve","reserve","reserve","set_tolerance","set_transform","set_transform","smooth_cubic_bezier_to","smooth_cubic_bezier_to","smooth_quadratic_bezier_to","smooth_quadratic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_cubic_bezier_to","smooth_relative_quadratic_bezier_to","smooth_relative_quadratic_bezier_to","to_owned","to_owned","to_string","top_left","top_right","transformed","transformed","transformed","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vertical_line_to","vertical_line_to","with_capacity","with_svg","with_svg","wrap","CommandsPathSlice","Events","Iter","PathCommands","PathCommandsBuilder","PathCommandsSlice","PointEvents","as_slice","begin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cubic_bezier_to","default","end","event","event","events","events","fmt","fmt","from","from","from","from","from","get_control_point","get_endpoint","index","index","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","line_to","new","next","next","next","next_event_id_in_path","next_event_id_in_path","next_event_id_in_sub_path","next_event_id_in_sub_path","path_slice","points","quadratic_bezier_to","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_capacity","Flattened","FromPolyline","NoAttributes","PathIterator","Transformed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","closed","flattened","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","new","next","next","next","next","open","size_hint","transformed","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_attributes","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","point","size","vector","Builder","BuilderImpl","BuilderWithAttributes","IdIter","Iter","IterWithAttributes","Path","PathSlice","Reversed","as_slice","attributes","attributes","begin","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","builder","builder_with_attributes","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","default","end","end","end","extend_from_paths","extend_from_paths","first_endpoint","first_endpoint","fmt","for_each_flattened","from","from","from","from","from","from","id_iter","id_iter","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_path","is_empty","iter","iter","iter_with_attributes","iter_with_attributes","last_endpoint","last_endpoint","line_to","line_to","line_to","new","new","new","next","next","next","next","num_attributes","num_attributes","num_attributes","points","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reversed","reversed","svg_builder","to_owned","to_owned","to_owned","to_owned","to_owned","transformed","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_attributes","with_capacity","with_svg","Builder","BuilderWithAttributes","Iter","PathBuffer","PathBufferSlice","as_slice","begin","begin","begin","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","builder","clear","clone","clone_into","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","end","end","end","end","from","from","from","get","get","indices","indices","into","into","into","into_iter","is_empty","is_empty","iter","iter","len","len","line_to","line_to","line_to","line_to","new","new","next","next_back","num_attributes","num_attributes","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reserve","reserve","size_hint","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_attributes","with_capacity","IdPolygon","IdPolygonIter","PathEvents","Polygon","PolygonIdIter","PolygonIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed","closed","event","event","from","from","from","from","id_iter","into","into","into","into","into_iter","into_iter","into_iter","into_iter","iter","iter","new","next","next","next","next","path_events","points","points","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Build","PathBuilder","PathIterator","SvgPathBuilder"],"q":[[0,"lyon_path"],[339,"lyon_path::Event"],[352,"lyon_path::builder"],[548,"lyon_path::commands"],[641,"lyon_path::iterator"],[691,"lyon_path::math"],[703,"lyon_path::path"],[834,"lyon_path::path_buffer"],[915,"lyon_path::polygon"],[980,"lyon_path::traits"]],"d":["Flag parameters for arcs as described by the SVG …","An alias for <code>usize</code>.","A view over a contiguous storage of custom attributes.","Interface for objects storing custom attributes associated …","An alias for a slice of <code>f32</code> values.","","A beveled corner is to be used to join path segments. The …","The stroke for each sub-path does not extend beyond its …","ID of a control point in a path.","","","ID of an endpoint point in a path.","","Represents an event or edge of path.","Refers to an event in a path.","The fill rule defines how to determine what is inside and …","","","","A path event representing endpoints and control points as …","A view over a sequence of endpoint IDs forming a polygon.","","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","An empty attribute slice.","","","","A simple path data structure.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","The commands of a path encoded in a single array using IDs …","A view over <code>PathCommands</code>.","A path event representing endpoints and control points as …","A view on a <code>Path</code>.","A view over a sequence of endpoints forming a polygon.","Interface for types types (typically endpoints and control …","Interface for objects storing endpoints and control points …","","","","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","The positive or negative side of a vector or segment.","At the end of each sub-path, the shape representing the …","The two possible orientations for the edges of a shape to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path building utilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic representation for paths that allow more control …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the endpoint’s custom attributes as a slice of …","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Tools to iterate over paths.","Of the four candidate arc sweeps, two will represent an …","f32 version of the lyon_geom types used everywhere. Most …","","Returns the number of float attributes per endpoint.","","","","","","","The default path data structure.","A container to store multiple paths contiguously.","","","Specific path types for polygons.","","If <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…","","","","","","","","","","","","","","","","","","","","","","","","<code>lyon_path</code> traits reexported here for convenience.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The radius of each corner of a rounded rectangle.","Builds a path.","A Builder that approximates curves with successions of …","A convenience wrapper for <code>PathBuilder</code> without custom …","The base path building interface.","The type of object that is created by this builder.","A path building interface that tries to stay close to SVG…","Builds a path with a transformation applied.","Implements an SVG-like building interface on top of a …","Adds a sub-path containing a circle.","Adds a sub-path containing a circle.","Adds a sub-path containing an ellipse.","Adds a sub-path containing an ellipse.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single line segment.","Adds a sub-path containing a single point.","Adds a sub-path containing a single point.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path from a polygon.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","Adds a sub-path containing a rectangle.","","Adds an elliptical arc.","","Starts a new sub-path at a given position.","","","Starts a new sub-path at a given position.","","","","","","","","","","","","","","Builds a path object, consuming the builder.","","","","","","","Builds a path object, consuming the builder.","","","","","Ends the current sub-path by connecting it back to its …","Closes the current sub path.","","","Closes the current sub path.","Adds a cubic bézier curve to the current sub-path.","Adds a cubic bézier segment to the current sub-path.","","","","","","Adds a cubic bézier curve to the current sub-path.","","","","Ends the current sub path.","","","","Ends the current sub path.","","","","","Returns a builder that approximates all curves with …","","Returns a builder that approximates all curves with …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Adds an horizontal line segment.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Adds a line segment to the current sub-path.","Adds a line segment to the current sub-path.","","","","","","Adds a line segment to the current sub-path.","Start a new sub-path at the given position.","","","","","","","","","","","","","Applies the provided path event.","Applies the provided path event.","Adds a quadratic bézier curve to the current sub-path.","Adds a quadratic bézier segment to the current sub-path.","","","","","","Adds a quadratic bézier curve to the current sub-path.","Equivalent to <code>arc_to</code> in relative coordinates.","","Equivalent to <code>cubic_bezier_to</code> in relative coordinates.","","Adds an horizontal line segment in relative coordinates.","","Equivalent to <code>line_to</code> in relative coordinates.","","Equivalent to <code>move_to</code> in relative coordinates.","","Equivalent to <code>quadratic_bezier_to</code> in relative coordinates.","","Adds a vertical line segment in relative coordinates.","","Hints at the builder that a certain number of endpoints …","Hints at the builder that a certain number of endpoints …","","","","","Hints at the builder that a certain number of endpoints …","","","","","Equivalent to <code>cubic_bezier_to</code> with implicit first control …","","Equivalent to <code>quadratic_bezier_to</code> with implicit control …","","Equivalent to <code>smooth_cubic_bezier_to</code> in relative …","","Equivalent to <code>smooth_quadratic_bezier_to</code> in relative …","","","","","","","Returns a builder that applies the given transformation to …","","Returns a builder that applies the given transformation to …","","","","","","","","","","","","","","","","Adds a vertical line segment.","","","Returns a builder that support SVG commands.","Returns a builder that support SVG commands.","","A view on a <code>PathCommands</code> buffer and two slices for …","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","An iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.","The commands of a path encoded in a single array using IDs …","Builds path commands.","A view over <code>PathCommands</code>.","An iterator of <code>PathEvent</code>.","Returns a view on the path commands.","","","","","","","","","","","","Consumes the builder and returns path commands.","Creates a PathCommandsBuilder to create path commands.","","","","","","","","","","","","","","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns an iterator over the path, with endpoints and …","Returns an iterator over the events of the path using …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns an iterator over the path commands.","Returns an iterator over the path commands.","Returns an iterator over the events of the path using IDs.","","Creates a builder without allocating memory.","","","","Returns the next event id within the path.","Returns the next event id within the path.","Returns the next event id within the sub-path.","Returns the next event id within the path.","Returns a view on a path made of these commands with …","","","","","","","","","","","","","","","","","","","","","","","Creates a pre-allocated builder.","An iterator that consumes <code>Event</code> iterator and yields …","An iterator that consumes an iterator of <code>Point</code>s and …","","An extension trait for <code>PathEvent</code> iterators.","Applies a 2D transform to a path iterator and yields the …","","","","","","","","","","Returns an iterator that turns curves into line segments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create the iterator.","Creates a new transformed path iterator from a path …","","","","","","","","Returns an iterator applying a 2D transform to all of its …","","","","","","","","","","","","","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Shorthand for <code>Point::new(x, y)</code>.","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>.","","The default builder for <code>Path</code>.","A builder for <code>Path</code> with custom attributes.","An iterator of endpoint and control point ids for <code>Path</code> and …","An iterator for <code>Path</code> and <code>PathSlice</code>.","An iterator for <code>Path</code> and <code>PathSlice</code>.","A simple path data structure.","A view on a <code>Path</code>.","An iterator of over a <code>Path</code> traversing the path in reverse.","Returns a view on this <code>Path</code>.","Returns a slice over an endpoint’s custom attributes.","Returns a slice over an endpoint’s custom attributes.","","","","","","","","","","","","","","","","","","","Creates a Builder to build a path.","Creates a BuilderWithAttributes to build a path with …","","","","","","","","","","","","","","","","","","","","Returns the first endpoint and its custom attributes if …","","","Iterate on a flattened approximation of the path with …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Iterates over the endpoint and control point ids of the …","Iterates over the endpoint and control point ids of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Builds a <code>Path</code> from This iterator.","","Iterates over the entire <code>Path</code>, ignoring custom attributes.","Iterates over the path.","Iterates over the entire <code>Path</code> with custom attributes.","Iterates over the entire <code>Path</code> with custom attributes.","Returns the last endpoint and its custom attributes if any.","","","","","Creates an Empty <code>Path</code>.","","","","","","","","","","","","","","","","","Returns a reversed version of this path in the form of an …","Returns a reversed version of this path in the form of an …","Creates an WithSvg to build a path with a rich set of …","","","","","","Applies a transform to all endpoints and control points of …","","","","","","","","","","","","","","","","","","","","","","A Builder that appends a path to an existing PathBuffer.","A Builder that appends a path to an existing PathBuffer, …","Iterator over the paths in a <code>PathBufferSlice</code>.","An object that stores multiple paths contiguously.","A view on a <code>PathBuffer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether the path buffer is empty.","Returns whether the path buffer is empty.","","","Returns the number of paths in the path buffer.","Returns the number of paths in the path buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A view over a sequence of endpoint IDs forming a polygon.","An iterator of <code>Event&lt;EndpointId, ()&gt;</code>.","An iterator of <code>PathEvent</code>.","A view over a sequence of endpoints forming a polygon.","An iterator of <code>IdEvent</code> for <code>Polygon</code>.","An iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.","","","","","","","","","","","","","","","","","","","Returns the event for a given event ID.","Returns the event for a given event ID.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator of <code>IdEvent</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns an iterator of <code>Event&lt;&amp;T&gt;</code>.","","","","","","","Returns an iterator of <code>PathEvent</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,13,12,0,5,5,0,15,0,0,0,17,18,19,0,0,5,0,0,13,13,0,14,16,15,0,0,0,0,0,0,0,0,0,0,14,16,5,12,13,0,12,0,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,10,11,0,1,6,8,1,5,12,13,14,15,16,17,18,19,5,16,17,18,19,1,2,3,5,6,7,8,9,12,13,14,15,16,17,18,19,1,30,2,3,3,5,5,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,6,8,17,18,0,88,30,6,7,89,6,7,10,89,6,7,10,5,16,17,18,19,6,6,7,7,10,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,2,6,7,7,5,15,14,15,14,0,1,0,30,88,30,6,7,17,18,14,0,0,10,11,0,32,1,5,14,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,17,18,19,0,40,5,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,30,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,5,90,91,92,93,93,91,94,92,93,91,94,92,93,0,0,0,0,0,56,0,0,0,46,47,46,47,46,47,46,47,46,95,47,46,47,46,47,53,95,53,46,54,55,47,47,54,55,53,52,47,54,55,53,52,47,52,52,56,54,54,55,53,53,47,47,52,47,52,47,95,46,53,53,47,46,95,54,55,53,53,47,47,53,52,47,46,54,55,47,47,52,47,46,47,46,53,47,52,52,47,54,55,53,52,47,47,95,53,47,47,54,55,53,52,47,47,46,95,54,55,53,53,47,47,95,53,53,54,55,53,52,47,46,54,55,47,52,46,47,46,95,54,55,53,53,47,47,95,53,95,53,95,53,95,53,95,53,95,53,95,53,46,95,54,55,53,53,47,47,54,55,53,95,53,95,53,95,53,95,53,52,47,52,52,52,46,53,47,54,55,53,52,47,54,55,53,52,47,54,55,53,52,47,95,53,47,46,47,47,0,0,0,0,0,0,0,2,62,63,62,64,35,65,63,62,64,35,65,62,2,63,62,64,35,65,63,62,64,35,65,62,62,62,2,3,2,63,63,62,63,62,64,35,65,63,63,63,63,63,62,64,35,65,64,35,65,2,3,63,62,62,64,35,65,2,3,2,3,2,64,62,63,62,64,35,65,63,62,64,35,65,63,62,64,35,65,63,62,64,35,65,62,0,0,0,0,0,71,69,70,68,71,69,70,68,68,96,71,69,70,68,71,69,70,68,71,69,70,68,69,70,68,71,69,70,68,68,69,96,71,69,70,68,71,69,70,68,71,69,70,68,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,58,73,73,78,58,73,36,75,76,78,58,73,36,75,76,58,73,73,6,6,58,73,36,75,76,58,73,36,75,76,58,73,73,58,58,73,73,58,73,6,7,76,75,78,58,73,36,75,76,6,7,78,58,73,36,75,76,78,36,75,76,78,7,6,7,6,7,6,7,58,73,73,6,58,73,78,36,75,76,58,73,73,75,58,73,73,58,73,73,6,7,6,58,73,36,75,76,6,78,58,73,36,75,76,78,58,73,36,75,76,78,58,73,36,75,76,6,58,58,0,0,0,0,0,8,79,79,80,80,79,80,81,79,80,81,79,79,80,80,8,8,81,81,79,79,80,80,79,79,80,80,79,80,81,8,9,8,9,79,80,81,81,8,9,8,9,8,9,79,79,80,80,80,8,81,81,79,80,79,79,80,80,79,79,80,80,8,81,81,79,80,81,79,80,81,79,80,81,79,8,0,0,0,0,0,0,83,84,85,86,83,84,85,86,83,84,85,86,83,84,85,86,10,11,10,11,83,84,85,86,10,83,84,85,86,83,84,85,86,10,11,86,83,84,85,86,10,10,11,83,84,85,86,83,84,85,86,83,84,85,86,83,84,85,86,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[[[5,[4,4]]],[[5,[4,4]]]],[6,6],[7,7],[8,8],[9,9],[[[10,[4]]],[[10,[4]]]],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],6],[[],8],[[1,1],20],[[[5,[21,21]],[5,[21,21]]],20],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],[[18,18],20],[[19,19],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[1,22],[[24,[23]]]],[[2,22],25],[[3,22],25],[[[5,[26,26]],22],25],[[6,22],25],[[7,22],25],[[8,22],25],[[9,22],25],[[12,22],25],[[13,22],25],[[14,22],25],[[15,22],25],[[16,22],25],[[17,22],25],[[18,22],25],[[19,22],25],[[]],[[]],[[]],[[]],[2,3],[[]],[[[5,[4]]],4],[[]],[[]],[6,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,6],[27,8],[28,17],[28,18],0,[18,29],[[30,18],29],[[6,18],29],[[7,18],29],[17,31],[[6,17],31],[[7,17],31],[[[10,[32]],17],31],[18,31],[[6,18],31],[[7,18],31],[[[10,[32]],18],31],[[[5,[33,33]],34]],[[16,34]],[[17,34]],[[18,34]],[[19,34]],[[6,18],31],[[6,17],31],[[7,18],31],[[7,17],31],[[10,18]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,35],[6,36],[7,36],[7,36],[5,20],[[15,37],20],[14,20],[[15,37],20],[14,20],0,0,0,[[[39,[38]],28],30],[[],28],[30,28],[6,28],[7,28],[17,28],[18,28],[14,14],0,0,0,0,0,[[],31],0,[[[5,[4]]],4],[14,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,28],[18,28],[19,28],0,[[40,[41,[38]]],40],[[[5,[[43,[38,42]],[43,[38,42]]]],[41,[38]]],[[5,[[43,[38,42]],[43,[38,42]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[[5,[32,32]]],40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,31,38,16,29]],[[[47,[45,46]],31,38,16]],[[31,48,49,16,29]],[[[47,[46]],31,48,49,16]],[[[50,[38]],29]],[[[47,[46]],[50,[38]]]],[[31,29],18],[[[47,[46]],31],18],[[[10,[31]],29]],[[[10,[31]]]],[[[47,[46]],[10,[31]]]],[[51,16,29]],[[[47,[46]],51,16]],[[45,51,52,16,29]],[[[47,[45,46]],51,52,16]],[[[53,[46]],31,48,49,49]],[[48,49,1,31]],[[[53,[46]],48,49,1,31]],[[31,29],18],[[[54,[46]],31,29],18],[[[55,[46,[41,[38]]]],31,29],18],[[[47,[46]],31],18],[[[47,[46]],31,29],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[[54,[56,46]]]],[[[54,[56]]]],[[[55,[56]]]],[[[53,[56,46]]]],[[[53,[[0,[46,56]]]]]],[[[47,[[0,[46,56]]]]]],[[[47,[56,46]]]],[52,52],[[[47,[[0,[4,46]]]]],[[47,[[0,[4,46]]]]]],[[]],[[]],[[]],[[]],[[[53,[46]]]],[[[53,[46]]]],[[[47,[46]]]],[[31,31,31,29],18],[[31,31,31]],[[[54,[46]],31,31,31,29],18],[[[55,[46,[41,[38]]]],31,31,31,29],18],[[[53,[46]],31,31,31],18],[[[53,[46]],31,31,31]],[[[47,[46]],31,31,31,29],18],[[[47,[46]],31,31,31],18],[[[53,[46]]],31],[[],52],[[],[[47,[[0,[46,57]]]]]],[20],[[[54,[46]],20]],[[[55,[46,[41,[38]]]],20]],[[[47,[46]],20]],[[[47,[46]],20]],[[52,52],20],[[[47,[[0,[21,46]]]],[47,[[0,[21,46]]]]],20],[[[5,[31]]]],[[[47,[58]],[39,[7]]]],[[45,38],[[54,[45]]]],[[[53,[46]],38],[[53,[[54,[46]]]]]],[[[47,[45,46]],38],[[47,[[54,[45,46]]]]]],[[52,22],25],[[52,22],25],[[[47,[[0,[26,46]]]],22],25],[[]],[[]],[[]],[[]],[[]],[[[47,[[0,[33,46]]]],34]],[38],[[[53,[46]],38]],[[[47,[46]]],46],[[[47,[46]]],46],[[]],[[]],[[]],[[]],[[]],[[[47,[46]]],46],[[31,29],18],[31],[[[54,[46]],31,29],18],[[[55,[46,[41,[38]]]],31,29],18],[[[53,[46]],31]],[[[53,[46]],31],18],[[[47,[46]],31,29],18],[[[47,[46]],31],18],[31],[[[53,[46]],31]],[[[53,[46]],31],18],[[46,38],[[54,[46]]]],[[],55],[46,[[53,[46]]]],[38,52],[[],[[47,[57,46]]]],[[],28],[[[54,[46]]],28],[[[55,[46,[41,[38]]]]],28],[[[47,[46]]],28],[[52,52],[[60,[59]]]],[[40,29]],[[[47,[46]],40]],[[31,31,29],18],[[31,31]],[[[54,[46]],31,31,29],18],[[[55,[46,[41,[38]]]],31,31,29],18],[[[53,[46]],31,31],18],[[[53,[46]],31,31]],[[[47,[46]],31,31,29],18],[[[47,[46]],31,31],18],[[48,49,1,48]],[[[53,[46]],48,49,1,48]],[[48,48,48]],[[[53,[46]],48,48,48]],[38],[[[53,[46]],38]],[48],[[[53,[46]],48]],[48],[[[53,[46]],48]],[[48,48]],[[[53,[46]],48,48]],[38],[[[53,[46]],38]],[[28,28]],[[28,28]],[[[54,[46]],28,28]],[[[55,[46,[41,[38]]]],28,28]],[[[53,[46]],28,28]],[[[53,[46]],28,28]],[[[47,[46]],28,28]],[[[47,[46]],28,28]],[[[54,[46]],38]],[55],[[[53,[[55,[46,[41,[38]]]]]],[41,[38]]]],[[31,31]],[[[53,[46]],31,31]],[31],[[[53,[46]],31]],[[48,48]],[[[53,[46]],48,48]],[48],[[[53,[46]],48]],[[]],[[]],[[],61],0,0,[[45,[41,[38]]],[[55,[45,[41,[38]]]]]],[[[53,[46]],[41,[38]]],[[53,[[55,[46,[41,[38]]]]]]]],[[[47,[45,46]],[41,[38]]],[[47,[[55,[45,46,[41,[38]]]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],[[],44],[38],[[[53,[46]],38]],[[28,28],[[47,[57,46]]]],[45,[[53,[45]]]],[[[47,[45,46]]],[[53,[45,46]]]],[46,[[47,[46]]]],0,0,0,0,0,0,0,[2,3],[[62,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,2],[[],62],[[[63,[4,4]]],[[63,[4,4]]]],[62,62],[[[64,[4,4]]],[[64,[4,4]]]],[35,35],[[[65,[4,4]]],[[65,[4,4]]]],[[]],[[]],[[]],[[]],[[]],[[62,17,17,18],19],[[],62],[[62,20],[[60,[19]]]],[[2,19],66],[[3,19],66],[[2,39,39],64],[63,64],[[[63,[26,26]],22],25],[[62,22],25],[[]],[[]],[[]],[[]],[[]],[[[63,[32,32]],17],31],[[[63,[32,32]],18],31],[[63,18]],[[63,17]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,35],[3,35],[63,35],[[62,18],19],[[],62],[64,[[60,[5]]]],[35,[[60,[66]]]],[[[65,[32,32]]],[[60,[40]]]],[[2,19],[[60,[19]]]],[[3,19],[[60,[19]]]],[[2,19],19],[[3,19],19],[[2,39,39],63],[[[64,[32,32]]],[[65,[32,32]]]],[[62,17,18],19],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],[[],44],[28,62],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[68,[67]]]],[38,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,67],[[69,[67]]]],[[[41,[38]],67],[[70,[67,[41,[38]]]]]],[[20,67],[[68,[67]]]],[[[71,[67]]],[[60,[40]]]],[[[69,[67]]],[[60,[40]]]],[[[70,[67,[41,[38]]]]],[[60,[40]]]],[[[68,[67]]],[[60,[40]]]],[67,[[68,[67]]]],[[[69,[67]]]],[[[41,[38]]],[[70,[[41,[38]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],[[[71,[67]]],67],0,0,0,0,0,0,0,0,0,[[38,38],31],[[38,38],72],[[38,38],48],0,0,0,0,0,0,0,0,0,[6,7],[[6,18],29],[[7,18],29],[[58,31,29],18],[[73,31,29],18],[[73,31,29],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,6],[73,6],[73,6],[[],74],[28,73],[58,58],[73,73],[36,36],[75,75],[76,76],[[]],[[]],[[]],[[]],[[]],[[58,31,31,31,29],18],[[73,31,31,31,29],18],[[73,31,31,31,29],18],[[],58],[[58,20]],[[73,20]],[[73,20]],[[58,[39,[7]]]],[[73,[39,[7]]]],[6,60],[7,60],[[76,22],25],[[75,38,77]],[[]],[[]],[[]],[[]],[[]],[[]],[6,76],[7,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,6],[7,20],[6,36],[7,36],[6,75],[7,75],[6,60],[7,60],[[58,31,29],18],[[73,31,29],18],[[73,31,29],18],[[],6],[[],58],[28,73],[78,60],[36,[[60,[40]]]],[75,60],[76,[[60,[66]]]],[58,28],[73,28],[73,28],[75,36],[[58,31,31,29],18],[[73,31,31,29],18],[[73,31,31,29],18],[[58,28,28]],[[73,28,28]],[[73,28,28]],[6,[[71,[78]]]],[7,[[71,[78]]]],[[],[[53,[58]]]],[[]],[[]],[[]],[[]],[[]],[[6,[41,[38]]],6],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[28,6],[[28,28],58],[58,[[53,[58]]]],0,0,0,0,0,[8,9],[[79,31,29],18],[[79,31],18],[[80,31,29],18],[[80,31,29],18],[[]],[[]],[[]],[[]],[[]],[[]],[79,28],[79,28],[80,28],[80,28],[8,79],[8],[81,81],[[]],[[79,31,31,31,29],18],[[79,31,31,31],18],[[80,31,31,31,29],18],[[80,31,31,31,29],18],[[79,20]],[[79,20]],[[80,20]],[[80,20]],[[]],[[]],[[]],[[8,28],7],[[9,28],7],[8,[[82,[28]]]],[9,[[82,[28]]]],[[]],[[]],[[]],[[]],[8,20],[9,20],[8,81],[9,81],[8,28],[9,28],[[79,31,29],18],[[79,31],18],[[80,31,29],18],[[80,31,29],18],[[8,28],80],[[],8],[81,[[60,[7]]]],[81,[[60,[7]]]],[79,28],[80,28],[[79,31,31],18],[[79,31,31,29],18],[[80,31,31,29],18],[[80,31,31,29],18],[[79,28,28]],[[79,28,28]],[[80,28,28]],[[80,28,28]],[[8,28,28,28]],[81],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[79,28],80],[[28,28,28],8],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[[84,[4]]],[[84,[4]]]],[[[85,[4]]],[[85,[4]]]],[86,86],[[]],[[]],[[]],[[]],0,0,[[10,19],5],[[11,19],66],[[]],[[]],[[]],[[]],[10,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,84],[11,83],[[[82,[87]],20],86],[83,[[60,[66]]]],[84,[[60,[5]]]],[[[85,[32]]],[[60,[40]]]],[86,[[60,[66]]]],[[[10,[32]]],[[85,[32]]]],0,0,[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],44],[[],44],[[],44],[[],44],0,0,0,0],"c":[],"p":[[3,"ArcFlags"],[3,"PathCommands"],[3,"PathCommandsSlice"],[8,"Clone"],[4,"Event"],[3,"Path"],[3,"PathSlice"],[3,"PathBuffer"],[3,"PathBufferSlice"],[3,"Polygon"],[3,"IdPolygon"],[4,"LineCap"],[4,"LineJoin"],[4,"Side"],[4,"FillRule"],[4,"Winding"],[3,"ControlPointId"],[3,"EndpointId"],[3,"EventId"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Debug"],[8,"IntoIterator"],[15,"usize"],[6,"Attributes"],[3,"AttributeSlice"],[6,"Point"],[8,"Position"],[8,"Hash"],[8,"Hasher"],[3,"Iter"],[3,"Iter"],[15,"i16"],[15,"f32"],[15,"slice"],[6,"PathEvent"],[8,"Transformation"],[3,"UnknownUnit"],[3,"Point2D"],[3,"TypeId"],[8,"Sized"],[8,"PathBuilder"],[3,"NoAttributes"],[6,"Vector"],[6,"Angle"],[3,"LineSegment"],[6,"Box2D"],[3,"BorderRadii"],[3,"WithSvg"],[3,"Flattened"],[3,"Transformed"],[8,"Build"],[8,"Default"],[3,"BuilderImpl"],[4,"Ordering"],[4,"Option"],[3,"String"],[3,"PathCommandsBuilder"],[3,"CommandsPathSlice"],[3,"Events"],[3,"PointEvents"],[6,"IdEvent"],[8,"Iterator"],[3,"FromPolyline"],[3,"Flattened"],[3,"Transformed"],[3,"NoAttributes"],[6,"Size"],[3,"BuilderWithAttributes"],[6,"Builder"],[3,"IterWithAttributes"],[3,"IdIter"],[8,"FnMut"],[3,"Reversed"],[3,"Builder"],[3,"BuilderWithAttributes"],[3,"Iter"],[3,"Range"],[3,"IdPolygonIter"],[3,"PolygonIter"],[3,"PathEvents"],[3,"PolygonIdIter"],[15,"u32"],[8,"AttributeStore"],[8,"PositionStore"],[13,"Begin"],[13,"End"],[13,"Quadratic"],[13,"Cubic"],[13,"Line"],[8,"SvgPathBuilder"],[8,"PathIterator"]]},\
"lyon_tessellation":{"doc":"Tessellation of 2D fill and stroke operations.","t":"GGNDNSSSSSSSSSSNNNNDDDIDEDDDIINENSNNNNENNEESNNNNNENNNNENDIDDDDIEGNNENDDEDNLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCAMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMAMLLLLKKLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMDIIIENDSIDDGIINDLLKLLKLLKLLLLLLLLLLLLLLLLLMLLLLLLKKLLFLLLLLLLLLMLLLGGGGGGGGGFFF","n":["AttributeIndex","Attributes","Bevel","BuffersBuilder","Butt","DEFAULT","DEFAULT","DEFAULT_FILL_RULE","DEFAULT_LINE_CAP","DEFAULT_LINE_JOIN","DEFAULT_LINE_WIDTH","DEFAULT_MITER_LIMIT","DEFAULT_SWEEP_ORIENTATION","DEFAULT_TOLERANCE","DEFAULT_TOLERANCE","Edge","Endpoint","ErrorCode","EvenOdd","EventQueue","EventQueueBuilder","FillBuilder","FillGeometryBuilder","FillOptions","FillRule","FillTessellator","FillVertex","FillVertex","FillVertexConstructor","GeometryBuilder","GeometryBuilder","GeometryBuilderError","Horizontal","INVALID","IncorrectActiveEdgeOrder","InsufficientNumberOfEdges","InsufficientNumberOfSpans","Internal","InternalError","InvalidNumberOfEdgesBelowVertex","InvalidVertex","LineCap","LineJoin","MINIMUM_MITER_LIMIT","MergeVertexOutside","Miter","MiterClip","Negative","NonZero","Orientation","PositionIsNaN","Positive","Round","Round","Side","Square","StrokeBuilder","StrokeGeometryBuilder","StrokeOptions","StrokeTessellator","StrokeVertex","StrokeVertex","StrokeVertexConstructor","TessellationError","TessellationResult","ToleranceIsNaN","TooManyVertices","UnsupportedParamater","UnsupportedParamater","VertexBuffers","VertexId","VertexSource","VertexSourceIterator","Vertical","abort_geometry","abort_geometry","add","add_circle","add_circle","add_fill_vertex","add_fill_vertex","add_rectangle","add_stroke_vertex","add_stroke_vertex","add_triangle","add_triangle","advancement","as_endpoint_id","begin","begin","begin","begin","begin_geometry","begin_geometry","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","builder","builder","builder_with_attributes","builder_with_attributes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cubic_bezier_segment","cubic_bezier_to","cubic_bezier_to","cubic_bezier_to","default","default","default","default","default","end","end","end","end","end_cap","end_geometry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","even_odd","fill_rule","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_path","from_path_with_ids","from_usize","geom","geometry_builder","handle_intersections","hash","hash","hash","indices","interpolated_attributes","interpolated_attributes","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_builder","into_iter","is_edge","is_endpoint","is_in","is_negative","is_out","is_positive","line_join","line_segment","line_to","line_to","line_to","line_width","line_width","math","miter_limit","new","new","new","new","new_vertex","new_vertex","next","non_zero","normal","num_attributes","num_attributes","num_attributes","offset","opposite","path","position","position","position_on_path","quadratic_bezier_segment","quadratic_bezier_to","quadratic_bezier_to","quadratic_bezier_to","reserve","reserve","reserve","reserve","reset","set_end_cap","set_line_join","set_logging","set_miter_limit","set_path","set_path_with_ids","set_start_cap","set_tolerance","side","source","source","sources","start_cap","sub","sweep_orientation","tessellate","tessellate","tessellate_circle","tessellate_circle","tessellate_ellipse","tessellate_ellipse","tessellate_path","tessellate_path","tessellate_polygon","tessellate_polygon","tessellate_rectangle","tessellate_rectangle","tessellate_with_ids","tessellate_with_ids","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_usize","tolerance","tolerance","tolerance","tolerance","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable_line_width","vertices","with_capacity","with_capacity","with_end_cap","with_fill_rule","with_intersections","with_line_cap","with_line_join","with_line_width","with_miter_limit","with_start_cap","with_sweep_orientation","with_tolerance","with_tolerance","with_variable_line_width","from","id","t","to","BuffersBuilder","FillGeometryBuilder","FillVertexConstructor","GeometryBuilder","GeometryBuilderError","InvalidVertex","InvertWinding","MAX","MaxIndex","NoOutput","Positions","SimpleBuffersBuilder","StrokeGeometryBuilder","StrokeVertexConstructor","TooManyVertices","VertexBuffers","abort_geometry","abort_geometry","add_fill_vertex","add_fill_vertex","add_fill_vertex","add_stroke_vertex","add_stroke_vertex","add_stroke_vertex","add_triangle","add_triangle","add_triangle","begin_geometry","begin_geometry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffers","default","end_geometry","end_geometry","from","from","from","indices","into","into","into","new","new","new","new_vertex","new_vertex","new_vertex","new_vertex","simple_builder","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertices","with_capacity","with_inverted_winding","with_vertex_offset","Angle","Box2D","Point","Rotation","Scale","Size","Transform","Translation","Vector","point","size","vector"],"q":[[0,"lyon_tessellation"],[475,"lyon_tessellation::VertexSource"],[479,"lyon_tessellation::geometry_builder"],[546,"lyon_tessellation::math"]],"d":["An alias for <code>usize</code>.","An alias for a slice of <code>f32</code> values.","A beveled corner is to be used to join path segments. The …","A temporary view on a <code>VertexBuffers</code> object which …","The stroke for each sub-path does not extend beyond its …","","","Default Fill rule.","","","","Default miter limit as defined by the SVG specification.","Default orientation.","","Default flattening tolerance.","","","","","A queue of sorted events for the fill tessellator’s …","","","A Geometry builder to interface with the <code>FillTessellator</code>.","Parameters for the fill tessellator.","The fill rule defines how to determine what is inside and …","A Context object that can tessellate fill operations for …","Extra vertex information from the <code>FillTessellator</code>, …","Extra vertex information from the <code>FillTessellator</code>, …","A trait specifying how to create vertex values.","An interface separating tessellators and other geometry …","","An error that can happen while generating geometry.","","","","","","","Describes an unexpected error happening during …","","","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","Minimum miter limit as defined by the SVG specification.","","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","","","Vertical or Horizontal.","","","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","The positive or negative side of a vector or segment.","At the end of each sub-path, the shape representing the …","A builder object that tessellates a stroked path via the …","A Geometry builder to interface with the <code>StrokeTessellator</code>.","Parameters for the tessellator.","A Context object that can tessellate stroke operations for …","Extra vertex information from the <code>StrokeTessellator</code> …","Extra vertex information from the <code>StrokeTessellator</code> …","A trait specifying how to create vertex values.","The fill tessellator’s error enumeration.","The fill tessellator’s result type.","","","","","Structure that holds the vertex and index data.","A virtual vertex offset in a geometry.","Where a vertex produced by a tessellator comes from in the …","An iterator over the sources of a given vertex.","","abort_geometry is called instead of end_geometry if an …","","","","","Inserts a vertex, providing its position, and optionally a …","","","Inserts a vertex, providing its position, and optionally a …","","Insert a triangle made of vertices that were added after …","","How far along the path this vertex is.","Returns the first endpoint that this vertex is on, if any.","","","","","Called at the beginning of a generation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tessellate directly from a sequence of <code>PathBuilder</code> …","Tessellate directly from a sequence of <code>PathBuilder</code> …","Tessellate directly from a sequence of <code>PathBuilder</code> …","Tessellate directly from a sequence of <code>PathBuilder</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What cap to use at the end of each sub-path.","Called at the end of a generation. Returns the number of …","","","","","","","","","","","","","","","","","","Set the fill rule.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an <code>EventQueue</code> from an iterator of path event and a …","Creates an <code>EventQueue</code> from an an iterator over endpoint …","","","Tools to help with generating vertex and index buffers.","A fast path to avoid some expensive operations if the path …","","","","","Fetch or interpolate the custom attribute values at this …","Computes and returns the custom attributes for this vertex.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","See the SVG specification.","","","","","The line width at this vertex.","Line width","f32 version of the lyon_geom types used everywhere. Most …","See the SVG specification.","","","Constructor.","","","","","","Normal at this vertex.","","","","","","","","The vertex position.","Position of this vertex on the path, unaffected by the …","","","","","","","","","","","","Enable/disable some verbose logging during the …","","","","","","Whether the vertex is on the positive or negative side of …","Returns the source of this vertex.","","Return an iterator over the sources of the vertex.","What cap to use at the start of each sub-path.","","Whether to perform a vertical or horizontal traversal of …","Compute the tessellation from a path iterator.","Compute the tessellation from a path iterator.","Tessellate a circle.","Tessellate the stroke for a circle.","Tessellate an ellipse.","Tessellate the stroke for an ellipse.","Compute the tessellation from a path slice.","Compute the tessellation from a path slice.","Tessellate a <code>Polygon</code>.","Tessellate the stroke for a <code>Polygon</code>.","Tessellate an axis-aligned rectangle.","Tessellate the stroke for an axis-aligned rectangle.","Compute the tessellation using an iterator over endpoint …","Compute the tessellation from a path iterator.","","","","","","","","","","","","","","","","","","","","","","","","Maximum allowed distance to the path when building an …","Maximum allowed distance to the path when building an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of a custom attribute defining a per-vertex factor …","","","","","","","","","","","","","","","","","","","","A temporary view on a <code>VertexBuffers</code> object which …","A Geometry builder to interface with the <code>FillTessellator</code>.","A trait specifying how to create vertex values.","An interface separating tessellators and other geometry …","An error that can happen while generating geometry.","","A wrapper for stroke and fill geometry builders that …","","Provides the maximum value of an index.","A geometry builder that does not output any geometry.","A simple vertex constructor that just takes the position.","A <code>BuffersBuilder</code> that takes the actual vertex type as …","A Geometry builder to interface with the <code>StrokeTessellator</code>.","A trait specifying how to create vertex values.","","Structure that holds the vertex and index data.","abort_geometry is called instead of end_geometry if an …","","Inserts a vertex, providing its position, and optionally a …","","","Inserts a vertex, providing its position, and optionally a …","","","Insert a triangle made of vertices that were added after …","","","Called at the beginning of a generation.","","","","","","","","","","Called at the end of a generation. Returns the number of …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Constructor","","","","","Creates a <code>SimpleBuffersBuilder</code>.","","","","","","","","","","","Constructor","Consumes self and returns a builder with opposite triangle …","","An angle in radians (f32).","Alias for <code>euclid::default::Box2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Scale&lt;f32&gt;</code>","Alias for <code>euclid::default::Size2D&lt;f32&gt;</code>.","Alias for <code>euclid::default::Transform2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Translation2D&lt;f32&gt;</code>","Alias for <code>euclid::default::Point2D&lt;f32&gt;</code>.","Shorthand for <code>Point::new(x, y)</code>.","Shorthand for <code>Size::new(x, y)</code>.","Shorthand for <code>Vector::new(x, y)</code>."],"i":[0,0,42,0,41,30,26,26,30,30,30,30,26,30,26,39,39,36,44,0,0,0,0,0,0,0,0,0,0,0,37,0,40,2,36,36,36,37,0,36,13,0,0,30,36,42,42,43,44,0,38,43,41,42,0,41,0,0,0,0,0,0,0,0,0,38,13,0,37,0,0,0,0,40,67,5,2,7,7,27,5,16,31,5,67,5,18,12,22,7,7,16,67,5,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,22,7,7,16,25,29,25,29,33,13,35,36,37,38,39,40,30,26,2,41,42,43,44,33,13,35,36,37,38,39,40,30,26,2,41,42,43,44,22,7,7,16,25,35,29,30,26,22,7,7,16,30,67,13,36,37,38,39,40,30,26,2,41,42,43,44,13,36,2,26,26,13,13,35,36,36,37,37,38,38,39,40,30,26,2,41,42,43,44,22,25,12,7,5,16,18,33,13,35,29,36,37,37,37,38,39,40,30,26,2,2,2,2,41,42,43,44,23,23,2,0,0,26,13,36,2,35,12,18,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,23,33,39,39,44,43,44,43,30,22,7,7,16,18,30,0,30,23,22,25,29,15,19,33,26,18,7,7,16,2,43,0,12,18,18,22,7,7,16,23,22,7,7,23,16,16,25,16,22,22,16,22,18,18,37,12,30,2,26,25,29,25,29,25,29,25,29,25,29,25,29,25,29,43,33,13,35,36,37,38,39,40,30,26,2,41,42,43,44,13,36,37,38,2,30,26,30,26,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,22,25,12,7,5,16,18,33,13,35,29,36,37,38,39,40,30,26,2,41,42,43,44,30,35,23,22,30,26,26,30,30,30,30,30,26,30,26,30,76,77,76,76,0,0,0,0,0,13,0,4,0,0,0,0,0,0,13,0,67,68,27,68,69,31,68,69,67,68,69,67,68,68,70,69,68,70,69,5,69,67,68,68,70,69,35,68,70,69,5,69,35,15,19,70,70,0,68,70,69,68,70,69,68,70,69,35,35,5,5,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[5,[[0,[1,[3,[2]],4]]]]]],[[2,6],2],[[7,8,9,10,11]],[[7,8,9,10,11]],[12,[[14,[2,13]]]],[[[5,[[0,[1,[3,[2]],4]],15]],12],[[14,[2,13]]]],[[16,17,10,11]],[18,[[14,[2,13]]]],[[[5,[[0,[1,[3,[2]],4]],19]],18],[[14,[2,13]]]],[[2,2,2]],[[[5,[[0,[1,[3,[2]],4]]]],2,2,2]],[18,9],[12,[[21,[20]]]],[[22,8,20]],[[7,8,11],20],[[7,8,11],20],[[16,8,11],20],[[]],[[[5,[[0,[1,[3,[2]],4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,23],[7,24],[7,24],[16,24],[[25,26,27],[[28,[7]]]],[[29,30,31],[[28,[16]]]],[[25,32,26,27],7],[[29,32,30,31],16],[33,33],[13,13],[[[35,[34,34]]],[[35,[34,34]]]],[36,36],[37,37],[38,38],[39,39],[40,40],[30,30],[26,26],[2,2],[41,41],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,8,8,8,20]],[[7,8,8,8,11],20],[[7,8,8,8,11],20],[[16,8,8,8,11],20],[[],25],[[],[[35,[45,45]]]],[[],29],[[],30],[[],26],[[22,8,20]],[[7,46]],[[7,46]],[[16,46]],0,[[]],[[13,13],46],[[36,36],46],[[37,37],46],[[38,38],46],[[39,39],46],[[40,40],46],[[30,30],46],[[26,26],46],[[2,2],46],[[41,41],46],[[42,42],46],[[43,43],46],[[44,44],46],[[],46],[[],46],[[],46],[[],26],0,[[13,47],48],[[13,47],48],[[[35,[49,49]],47],48],[[36,47],48],[[36,47],48],[[37,47],48],[[37,47],48],[[38,47],48],[[38,47],48],[[39,47],48],[[40,47],48],[[30,47],48],[[26,47],48],[[2,47],48],[[41,47],[[14,[50]]]],[[42,47],[[14,[50]]]],[[43,47],[[14,[50]]]],[[44,47],[[14,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,37],[13,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,2],[51,2],[52,2],[[]],[[]],[[]],[[]],[[9,53],23],[[9,40,53,54],23],[32,2],0,0,0,[[13,55]],[[36,55]],[[2,55]],0,[12,11],[18,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,9],22],[[]],[39,46],[39,46],[[44,56],46],[43,46],[[44,56],46],[43,46],0,[[22,8,20,9,9]],[[7,8,11],20],[[7,8,11],20],[[16,8,11],20],[18,9],0,0,0,[[],23],[9,22],[[],25],[[],29],[12],[18],[33,[[21,[39]]]],[[],26],[18,57],[7,32],[7,32],[16,32],[2,6],[43,43],0,[12,8],[18,8],[18,8],[[22,8,8,20]],[[7,8,8,11],20],[[7,8,8,11],20],[[16,8,8,11],20],[[23,32]],[[22,32]],[[7,32,32]],[[7,32,32]],[23],[[16,41]],[[16,42]],[[25,46]],[[16,9]],[[22,9,40,53]],[[22,9,40,53,54]],[[16,41]],[[22,9]],[18,43],[18,39],[37,[[21,[58]]]],[12,33],0,[[2,6],2],0,[[25,53,26,27],24],[[29,53,30,31],24],[[25,8,9,26,27],24],[[29,8,9,30,31],24],[[25,8,57,59,10,26,27],24],[[29,8,57,59,10,30,31],24],[[25,[61,[60]],26,27],24],[[29,[61,[60]],30,31],24],[[25,[62,[8]],26,27],24],[[29,[62,[8]],30,31],24],[[25,17,26,27],24],[[29,17,30,31],24],[[25,53,54,[21,[63]],26,27],24],[[29,53,54,[21,[63]],30,31],24],[43,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],64],[[],64],[[],64],[2,32],[9,30],[9,26],0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],0,0,[32,23],[[32,9],22],[[30,41],30],[[26,44],26],[[26,46],26],[[30,41],30],[[30,42],30],[[30,9],30],[[30,9],30],[[30,41],30],[[26,40],26],[[30,9],30],[[26,9],26],[[30,66],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[68,[67]]]],[12,[[14,[2,13]]]],[[[68,[27]],12],[[14,[2,13]]]],[[69,12],[[14,[2,13]]]],[18,[[14,[2,13]]]],[[[68,[31]],18],[[14,[2,13]]]],[[69,18],[[14,[2,13]]]],[[2,2,2]],[[[68,[67]],2,2,2]],[[69,2,2,2]],[[]],[[[68,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[5,35],[[],69],[[]],[[[68,[67]]]],[[]],[[]],[[]],0,[[]],[[]],[[]],[35,5],[[],69],[[],35],[12],[18],[[70,12],8],[[70,18],8],[[[35,[8,52]]],71],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],65],[[],65],[[],65],0,[[32,32],35],[5,[[68,[5]]]],[[5,6],5],0,0,0,0,0,0,0,0,0,[[9,9],[[73,[9,72]]]],[[9,9],[[74,[9,72]]]],[[9,9],[[75,[9,72]]]]],"c":[],"p":[[8,"Add"],[3,"VertexId"],[8,"From"],[8,"MaxIndex"],[3,"BuffersBuilder"],[15,"u32"],[3,"FillBuilder"],[6,"Point"],[15,"f32"],[4,"Winding"],[6,"Attributes"],[3,"FillVertex"],[4,"GeometryBuilderError"],[4,"Result"],[8,"FillVertexConstructor"],[3,"StrokeBuilder"],[6,"Box2D"],[3,"StrokeVertex"],[8,"StrokeVertexConstructor"],[3,"EndpointId"],[4,"Option"],[3,"EventQueueBuilder"],[3,"EventQueue"],[6,"TessellationResult"],[3,"FillTessellator"],[3,"FillOptions"],[8,"FillGeometryBuilder"],[3,"NoAttributes"],[3,"StrokeTessellator"],[3,"StrokeOptions"],[8,"StrokeGeometryBuilder"],[15,"usize"],[3,"VertexSourceIterator"],[8,"Clone"],[3,"VertexBuffers"],[4,"InternalError"],[4,"TessellationError"],[4,"UnsupportedParamater"],[4,"VertexSource"],[4,"Orientation"],[4,"LineCap"],[4,"LineJoin"],[4,"Side"],[4,"FillRule"],[8,"Default"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[15,"i32"],[15,"u16"],[8,"IntoIterator"],[8,"PositionStore"],[8,"Hasher"],[15,"i16"],[6,"Vector"],[8,"Error"],[6,"Angle"],[3,"PathSlice"],[8,"Into"],[3,"Polygon"],[8,"AttributeStore"],[3,"String"],[3,"TypeId"],[6,"AttributeIndex"],[8,"GeometryBuilder"],[3,"InvertWinding"],[3,"NoOutput"],[3,"Positions"],[6,"SimpleBuffersBuilder"],[3,"UnknownUnit"],[3,"Point2D"],[3,"Size2D"],[3,"Vector2D"],[13,"Edge"],[13,"Endpoint"]]},\
"malloc_buf":{"doc":"","t":"DLLLLLLLLL","n":["MallocBuffer","borrow","borrow_mut","deref","from","into","new","try_from","try_into","type_id"],"q":[[0,"malloc_buf"]],"d":["A type that represents a <code>malloc</code>’d chunk of memory.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs a new <code>MallocBuffer</code> for a <code>malloc</code>’d buffer with …","","",""],"i":[0,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,2],[[]],[[]],[3,[[5,[[1,[4]]]]]],[[],6],[[],6],[[],7]],"c":[],"p":[[3,"MallocBuffer"],[15,"slice"],[15,"usize"],[8,"Copy"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":"DDDALLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFAFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLAAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLFFFFAAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLL","n":["Memchr","Memchr2","Memchr3","arch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","aarch64","all","neon","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","is_equal","is_equal_raw","is_prefix","is_suffix","memchr","packedpair","rabinkarp","shiftor","twoway","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","new","new","new","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","HeuristicFrequencyRank","Pair","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find_prefilter","fmt","fmt","from","from","index1","index2","into","into","new","new","pair","rank","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_indices","with_pair","with_ranker","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","find_raw","fmt","fmt","from","from","into","into","new","new","rfind","rfind_raw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Finder","borrow","borrow_mut","find","fmt","from","into","new","try_from","try_into","type_id","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","fmt","fmt","from","from","into","into","new","new","rfind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_forward_with_ranker","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"memchr"],[66,"memchr::arch"],[68,"memchr::arch::aarch64"],[69,"memchr::arch::aarch64::neon"],[71,"memchr::arch::aarch64::neon::memchr"],[182,"memchr::arch::aarch64::neon::packedpair"],[201,"memchr::arch::all"],[210,"memchr::arch::all::memchr"],[315,"memchr::arch::all::packedpair"],[350,"memchr::arch::all::rabinkarp"],[380,"memchr::arch::all::shiftor"],[391,"memchr::arch::all::twoway"],[419,"memchr::memmem"]],"d":["An iterator over all occurrences of a single byte in a …","An iterator over all occurrences of two possible bytes in …","An iterator over all occurrences of three possible bytes …","A module with low-level architecture dependent routines.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Search for the first occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the first occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Search for the last occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the last occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","","","","","","","","","","","","","","","","","","","","","","Vector algorithms for the <code>aarch64</code> target.","Contains architecture independent routines.","Algorithms for the <code>aarch64</code> target using 128-bit vectors …","This module defines 128-bit vector implementations of …","A 128-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Like <code>count</code>, but accepts and returns raw pointers.","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to neon vectors and routines …","Create a new finder specific to neon vectors and routines …","Create a new finder specific to neon vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 128-bit vector …","","","","","Execute a search using neon vectors and routines.","Execute a search using neon vectors and routines.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","Compare corresponding bytes in <code>x</code> and <code>y</code> for equality.","Compare <code>n</code> bytes at the given pointers for equality.","Returns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.","Returns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.","Provides architecture independent implementations of <code>memchr</code>…","Provides an architecture independent implementation of the …","An implementation of the Rabin-Karp substring search …","An implementation of the Shift-Or substring search …","An implementation of the Two-Way substring search algorithm…","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of the needle in the given …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of one of the …","Returns an iterator over all occurrences of one of the …","Create a new searcher that finds occurrences of the byte …","Create a new searcher that finds occurrences of the two …","Create a new searcher that finds occurrences of the three …","","","","","","","Return the last occurrence of the needle in the given …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An architecture independent “packed pair” finder.","This trait allows the user to customize the heuristic used …","A pair of byte offsets into a needle to use as a predicate.","","","","","","","","","Run this finder on the given haystack as a prefilter.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the first offset of the pair.","Returns the second offset of the pair.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new prefilter that reports possible locations …","Create a new pair of offsets from the given needle.","Returns the pair of offsets (into the needle) used to …","Return the heuristic frequency rank of the given byte. A …","","","","","","","","","Create a new pair using the offsets given for the needle …","Create a new prefilter using the pair given.","Create a new pair of offsets from the given needle and …","A forward substring searcher using the Rabin-Karp …","A reverse substring searcher using the Rabin-Karp …","","","","","","","","","Return the first occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>find</code>, but accepts and returns raw pointers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Rabin-Karp forward searcher for the given …","Create a new Rabin-Karp reverse searcher for the given …","Return the last occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","A forward substring searcher using the Shift-Or algorithm.","","","Return the first occurrence of the needle given to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Shift-Or forward searcher for the given <code>needle</code>…","","","","A forward substring searcher that uses the Two-Way …","A reverse substring searcher that uses the Two-Way …","","","","","","","","","Returns the first occurrence of <code>needle</code> in the given …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a searcher that finds occurrences of the given …","Create a searcher that finds occurrences of the given …","Returns the last occurrence of <code>needle</code> in the given <code>haystack</code>…","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a forward finder using the given needle and a custom …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,13,13,15,17,13,15,17,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,14,16,18,13,15,17,13,15,17,13,15,17,13,15,17,14,16,18,14,16,18,13,15,17,13,15,17,14,16,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,24,25,26,27,22,23,24,25,26,27,22,23,24,25,26,27,22,23,24,25,26,27,22,23,22,22,24,26,22,24,26,22,23,24,25,26,27,22,23,24,25,26,27,22,23,24,25,26,27,23,25,27,22,24,26,22,24,26,23,25,27,23,25,27,22,24,26,22,24,26,23,25,27,22,23,24,25,26,27,22,23,24,25,26,27,22,23,24,25,26,27,22,23,24,25,26,27,0,0,0,28,21,28,21,28,21,28,21,28,28,21,28,21,21,21,28,21,28,21,28,29,28,21,28,21,28,21,28,21,21,28,21,0,0,30,31,30,31,30,31,30,31,30,30,30,31,30,31,30,31,30,31,31,31,30,31,30,31,30,31,30,31,0,32,32,32,32,32,32,32,32,32,32,0,0,33,34,33,34,33,34,33,34,33,33,34,33,34,33,34,33,34,34,33,34,33,34,33,34,33,34,40,0,0,0,0,0,40,0,35,36,40,41,42,35,36,37,40,41,42,35,36,37,37,37,37,40,35,36,37,40,35,36,37,40,37,0,35,0,35,40,41,42,35,36,37,40,41,42,35,36,37,40,41,42,35,36,37,41,42,41,42,35,36,35,36,35,36,37,41,42,37,0,36,0,36,41,40,35,36,37,40,41,42,35,36,37,40,41,42,35,36,37,40,41,42,35,36,37],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[1,4],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],3],[[7,[8,[7]]],1],0,[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[10,[2]]]],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],[[10,[3]]]],[[7,[8,[7]]],[[10,[1]]]],[[7,[8,[7]]],1],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],3],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1],[2],[3],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[13,[8,[7]]],4],[14,4],[[13,7,7],4],[[13,[8,[7]]],[[9,[4]]]],[[15,[8,[7]]],[[9,[4]]]],[[17,[8,[7]]],[[9,[4]]]],[[13,7,7],[[9,[7]]]],[[15,7,7],[[9,[7]]]],[[17,7,7],[[9,[7]]]],[[13,5],6],[[14,5],6],[[15,5],6],[[16,5],6],[[17,5],6],[[18,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[13,[8,[7]]],14],[[15,[8,[7]]],16],[[17,[8,[7]]],18],[7,[[9,[13]]]],[[7,7],[[9,[15]]]],[[7,7,7],[[9,[17]]]],[7,13],[[7,7],15],[[7,7,7],17],[14,[[9,[4]]]],[16,[[9,[4]]]],[18,[[9,[4]]]],[14,[[9,[4]]]],[16,[[9,[4]]]],[18,[[9,[4]]]],[[13,[8,[7]]],[[9,[4]]]],[[15,[8,[7]]],[[9,[4]]]],[[17,[8,[7]]],[[9,[4]]]],[[13,7,7],[[9,[7]]]],[[15,7,7],[[9,[7]]]],[[17,7,7],[[9,[7]]]],[14],[16],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[20,20],[[]],[[20,[8,[7]],[8,[7]]],[[9,[4]]]],[[20,[8,[7]]],[[9,[4]]]],[[20,5],6],[[]],[[]],[[],19],[20,4],[[[8,[7]]],[[9,[20]]]],[20,21],[[]],[[],11],[[],11],[[],12],[[[8,[7]],21],[[9,[20]]]],[[[8,[7]],[8,[7]]],19],[[7,7,4],19],[[[8,[7]],[8,[7]]],19],[[[8,[7]],[8,[7]]],19],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[22,[8,[7]]],4],[23,4],[[22,7,7],4],[[22,[8,[7]]],[[9,[4]]]],[[24,[8,[7]]],[[9,[4]]]],[[26,[8,[7]]],[[9,[4]]]],[[22,7,7],[[9,[7]]]],[[24,7,7],[[9,[7]]]],[[26,7,7],[[9,[7]]]],[[22,5],6],[[23,5],6],[[24,5],6],[[25,5],6],[[26,5],6],[[27,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,[8,[7]]],23],[[24,[8,[7]]],25],[[26,[8,[7]]],27],[7,22],[[7,7],24],[[7,7,7],26],[23,[[9,[4]]]],[25,[[9,[4]]]],[27,[[9,[4]]]],[23,[[9,[4]]]],[25,[[9,[4]]]],[27,[[9,[4]]]],[[22,[8,[7]]],[[9,[4]]]],[[24,[8,[7]]],[[9,[4]]]],[[26,[8,[7]]],[[9,[4]]]],[[22,7,7],[[9,[7]]]],[[24,7,7],[[9,[7]]]],[[26,7,7],[[9,[7]]]],[23],[25],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,[[]],[[]],[[]],[[]],[28,28],[21,21],[[]],[[]],[[28,[8,[7]]],[[9,[4]]]],[[28,5],6],[[21,5],6],[[]],[[]],[21,7],[21,7],[[]],[[]],[[[8,[7]]],[[9,[28]]]],[[[8,[7]]],[[9,[21]]]],[28,21],[7,7],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[8,[7]],7,7],[[9,[21]]]],[[[8,[7]],21],[[9,[28]]]],[[[8,[7]],29],[[9,[21]]]],0,0,[[]],[[]],[[]],[[]],[30,30],[31,31],[[]],[[]],[[30,[8,[7]],[8,[7]]],[[9,[4]]]],[[30,7,7,7,7],[[9,[7]]]],[[30,5],6],[[31,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],30],[[[8,[7]]],31],[[31,[8,[7]],[8,[7]]],[[9,[4]]]],[[31,7,7,7,7],[[9,[7]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,[[]],[[]],[[32,[8,[7]]],[[9,[4]]]],[[32,5],6],[[]],[[]],[[[8,[7]]],[[9,[32]]]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[]],[[]],[33,33],[34,34],[[]],[[]],[[33,[8,[7]],[8,[7]]],[[9,[4]]]],[[33,5],6],[[34,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],33],[[[8,[7]]],34],[[34,[8,[7]],[8,[7]]],[[9,[4]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,[35,35],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,[0,[38,[39,[[8,[7]]]]]]],35],[[37,29,[0,[38,[39,[[8,[7]]]]]]],35],[[37,[0,[38,[39,[[8,[7]]]]]]],36],[40,40],[35,35],[36,36],[37,37],[[]],[[]],[[]],[[]],[[],40],[[],37],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[35,[8,[7]]],[[9,[4]]]],[[[8,[7]],[0,[38,[39,[[8,[7]]]]]]],41],[[35,[8,[7]]],41],[[40,5],6],[[41,5],6],[[42,5],6],[[35,5],6],[[36,5],6],[[37,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,41],[42,42],[35,35],[36,36],[35,[[8,[7]]]],[36,[[8,[7]]]],[[[0,[38,[39,[[8,[7]]]]]]],35],[[[0,[38,[39,[[8,[7]]]]]]],36],[[],37],[41,[[9,[4]]]],[42,[[9,[4]]]],[[37,40],37],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[36,[39,[[8,[7]]]]],[[9,[4]]]],[[[8,[7]],[0,[38,[39,[[8,[7]]]]]]],42],[[36,[8,[7]]],42],[41],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12]],"c":[],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[15,"usize"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[15,"bool"],[3,"Finder"],[3,"Pair"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[8,"HeuristicFrequencyRank"],[3,"Finder"],[3,"FinderRev"],[3,"Finder"],[3,"Finder"],[3,"FinderRev"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[8,"Sized"],[8,"AsRef"],[4,"Prefilter"],[3,"FindIter"],[3,"FindRevIter"]]},\
"metal":{"doc":"","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDDDDDDDDDNSSNNNNNNNNNNDDDDDDDSDDNDDDNNNNNDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNDDDDNSNNDDDDDDDDSNNNNNDNDDDDDSNEERSSDDDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNSDDDDDDNNNNDDNNDDSNNDDDDDDDDDDDDDDNSSNNDNDDDDDDDNNNNNNNNNNNNNNNNNNNNNNSNDDDDNNNDDNSNNNSSSSDDNDDNNNNNNNNNNNNNNDDNNSDDNNSNNNNNNNNNNNNNNNNNNNNNNSNDDDDDDDDDNDNNNNSNNNNNNNNNNNNNNNNNNNNNSSSDDDDNNNNNDDDDDDDDDDNNNNNNNNNNNNNNNNNDDDDDDNNNNNNNNNNNNDDNNNNNNDDNNNEEEEEDEDDEDEEEEEEEEEEEEEEEEEDEEEEEEEEEEEDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDDEEEEEEEEEEEDEEEEEEEEEDEEEEEEEEEEEEEEEDEEEEDEEEEEEDEEEEEEEEEEEEEEDERRRRDDRRDDEEEEEEDEEDDEEEEEEEEEEEEEEDEEEEEEEEEDEENNNNNNNNDDNDDDDNNNNSNNDGEDGENNNSNNNNNNSSSSSNNNNDDNNNNNNNNNSNNNNNNNNNNNNNDDNNNNNNNNDDDDDSNNNNDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNSDDDDDDDDDDDDDDDDDDDDDDDDDDDDSNNSDDNSSNNNDDDDNNSSNDDDDNNNNNNNNNNNNNNNNNNNNNNNNNNNDDNDDSSSSSNNNDDDDDDNDNNDDDNNNNNNNNNNSNNNNNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNNNNNSDDDDDDDDDDDDDNNSSNNNNNNMLLLLMMMLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNNNNNNNNNNNNNNNNNLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLBNNNNNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLBLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLBLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMLLLLLLLLLMMMLLLMMMLLMMMMMM","n":["A1BGR5Unorm","A8Unorm","ABGR4Unorm","ASTC_10x10_HDR","ASTC_10x10_LDR","ASTC_10x10_sRGB","ASTC_10x5_HDR","ASTC_10x5_LDR","ASTC_10x5_sRGB","ASTC_10x6_HDR","ASTC_10x6_LDR","ASTC_10x6_sRGB","ASTC_10x8_HDR","ASTC_10x8_LDR","ASTC_10x8_sRGB","ASTC_12x10_HDR","ASTC_12x10_LDR","ASTC_12x10_sRGB","ASTC_12x12_HDR","ASTC_12x12_LDR","ASTC_12x12_sRGB","ASTC_4x4_HDR","ASTC_4x4_LDR","ASTC_4x4_sRGB","ASTC_5x4_HDR","ASTC_5x4_LDR","ASTC_5x4_sRGB","ASTC_5x5_HDR","ASTC_5x5_LDR","ASTC_5x5_sRGB","ASTC_6x5_HDR","ASTC_6x5_LDR","ASTC_6x5_sRGB","ASTC_6x6_HDR","ASTC_6x6_LDR","ASTC_6x6_sRGB","ASTC_8x5_HDR","ASTC_8x5_LDR","ASTC_8x5_sRGB","ASTC_8x6_HDR","ASTC_8x6_LDR","ASTC_8x6_sRGB","ASTC_8x8_HDR","ASTC_8x8_LDR","ASTC_8x8_sRGB","AccelerationStructure","AccelerationStructureBoundingBoxGeometryDescriptor","AccelerationStructureBoundingBoxGeometryDescriptorRef","AccelerationStructureCommandEncoder","AccelerationStructureCommandEncoderRef","AccelerationStructureDescriptor","AccelerationStructureDescriptorRef","AccelerationStructureGeometryDescriptor","AccelerationStructureGeometryDescriptorRef","AccelerationStructureRef","AccelerationStructureTriangleGeometryDescriptor","AccelerationStructureTriangleGeometryDescriptorRef","Add","All","Alpha","Always","Apple1","Apple2","Apple3","Apple4","Apple5","Apple6","Apple7","Apple8","Apple9","Argument","ArgumentArray","ArgumentArrayRef","ArgumentDescriptor","ArgumentDescriptorRef","ArgumentEncoder","ArgumentEncoderRef","ArgumentInfo","ArgumentRef","Array","Array","ArrayRef","ArrayType","ArrayTypeRef","AtBlitBoundary","AtDispatchBoundary","AtDrawBoundary","AtStageBoundary","AtTileDispatchBoundary","Attribute","AttributeDescriptor","AttributeDescriptorArray","AttributeDescriptorArrayRef","AttributeDescriptorRef","AttributeRef","Automatic","B5G6R5Unorm","BC1_RGBA","BC1_RGBA_sRGB","BC2_RGBA","BC2_RGBA_sRGB","BC3_RGBA","BC3_RGBA_sRGB","BC4_RSnorm","BC4_RUnorm","BC5_RGSnorm","BC5_RGUnorm","BC6H_RGBFloat","BC6H_RGBUfloat","BC7_RGBAUnorm","BC7_RGBAUnorm_sRGB","BGR10A2Unorm","BGR10_XR","BGR10_XR_SRGB","BGR5A1Unorm","BGRA10_XR","BGRA10_XR_SRGB","BGRA8Unorm","BGRA8Unorm_sRGB","BGRG422","Back","BinaryArchive","BinaryArchiveDescriptor","BinaryArchiveDescriptorRef","BinaryArchiveRef","Blacklisted","Blend","BlendAlpha","BlendColor","BlitCommandEncoder","BlitCommandEncoderRef","BlitPassDescriptor","BlitPassDescriptorRef","BlitPassSampleBufferAttachmentDescriptor","BlitPassSampleBufferAttachmentDescriptorArray","BlitPassSampleBufferAttachmentDescriptorArrayRef","BlitPassSampleBufferAttachmentDescriptorRef","Blue","Bool","Bool2","Bool3","Bool4","Boolean","Buffer","Buffer","BufferLayoutDescriptor","BufferLayoutDescriptorArray","BufferLayoutDescriptorArrayRef","BufferLayoutDescriptorRef","BufferRef","BufferTypeInfo","BuiltIn","CAMetalDrawable","CAMetalLayer","COUNTER_DONT_SAMPLE","CPUCacheModeDefaultCache","CPUCacheModeWriteCombined","CaptureDescriptor","CaptureDescriptorRef","CaptureManager","CaptureManagerRef","CaptureScope","CaptureScopeRef","Char","Char","Char","Char2","Char2","Char2","Char2Normalized","Char2Normalized","Char3","Char3","Char3","Char3Normalized","Char3Normalized","Char4","Char4","Char4","Char4Normalized","Char4Normalized","CharNormalized","CharNormalized","Clamp","ClampToBorderColor","ClampToEdge","ClampToZero","Clear","Clip","Clockwise","Color","CommandBuffer","CommandBufferRef","CommandEncoder","CommandEncoderRef","CommandQueue","CommandQueueRef","Committed","Common1","Common2","Common3","CommonCounter","CommonCounterRef","CompilationFailure","CompileFailure","CompileOptions","CompileOptionsRef","CompileToBinary","CompileWarning","Completed","ComputeCommandEncoder","ComputeCommandEncoderRef","ComputePassDescriptor","ComputePassDescriptorRef","ComputePassSampleBufferAttachmentDescriptor","ComputePassSampleBufferAttachmentDescriptorArray","ComputePassSampleBufferAttachmentDescriptorArrayRef","ComputePassSampleBufferAttachmentDescriptorRef","ComputePipelineDescriptor","ComputePipelineDescriptorRef","ComputePipelineReflection","ComputePipelineReflectionRef","ComputePipelineState","ComputePipelineStateRef","Concurrent","ConcurrentDispatch","ConcurrentDispatchThreads","Constant","Constant","Counter","CounterClockwise","CounterRef","CounterSampleBuffer","CounterSampleBufferDescriptor","CounterSampleBufferDescriptorRef","CounterSampleBufferRef","CounterSet","CounterSetRef","Counting","Cube","CubeArray","CustomSampleDepthStore","D1","D1Array","D2","D2Array","D2Multisample","D2MultisampleArray","D3","DecrementClamp","DecrementWrap","Default","Default","Default","DefaultCache","DependencyLoadFailure","Depth16Unorm","Depth24Unorm_Stencil8","Depth32Float","Depth32Float_Stencil8","DepthFromDepthStencil","DepthResolvedSample","DepthStencilDescriptor","DepthStencilDescriptorRef","DepthStencilState","DepthStencilStateRef","DestinationAlpha","DestinationColor","DeveloperTools","Device","DeviceRef","DeviceRemoved","DisableTriangleCulling","Disabled","DontCare","DontCare","Draw","DrawIndexed","DrawIndexedPatches","DrawPatches","Drawable","DrawableRef","Dynamic","DynamicLibrary","DynamicLibraryRef","EAC_R11Snorm","EAC_R11Unorm","EAC_RG11Snorm","EAC_RG11Unorm","EAC_RGBA8","EAC_RGBA8_sRGB","ETC2_RGB8","ETC2_RGB8A1","ETC2_RGB8A1_sRGB","ETC2_RGB8_sRGB","Empty","Enqueued","Equal","Error","Event","EventRef","Executable","External","FailOnBinaryArchiveMiss","Fence","FenceRef","FileNotFound","Fill","Filter","Float","Float","Float","Float2","Float2","Float2","Float2x2","Float2x3","Float2x4","Float3","Float3","Float3","Float3x2","Float3x3","Float3x4","Float4","Float4","Float4","Float4x2","Float4x3","Float4x4","Fragment","Fragment","Front","Function","FunctionConstant","FunctionConstantRef","FunctionConstantValues","FunctionConstantValuesRef","FunctionDescriptor","FunctionDescriptorRef","FunctionHandle","FunctionHandleRef","FunctionNotFound","FunctionRef","GBGR422","GpuTraceDocument","Greater","GreaterEqual","Green","Half","Half","Half","Half2","Half2","Half2","Half2x2","Half2x3","Half2x4","Half3","Half3","Half3","Half3x2","Half3x3","Half3x4","Half4","Half4","Half4","Half4x2","Half4x3","Half4x4","HazardTrackingModeDefault","HazardTrackingModeTracked","HazardTrackingModeUntracked","Heap","HeapDescriptor","HeapDescriptorRef","HeapRef","Imageblock","ImageblockData","Immutable","IncrementClamp","IncrementWrap","IndirectCommandBuffer","IndirectCommandBufferDescriptor","IndirectCommandBufferDescriptorRef","IndirectCommandBufferRef","IndirectComputeCommand","IndirectComputeCommandRef","IndirectRenderCommand","IndirectRenderCommandRef","InstanceAccelerationStructureDescriptor","InstanceAccelerationStructureDescriptorRef","Int","Int","Int","Int1010102Normalized","Int1010102Normalized","Int2","Int2","Int2","Int3","Int3","Int3","Int4","Int4","Int4","Internal","Internal","Intersection","IntersectionFunctionDescriptor","IntersectionFunctionDescriptorRef","IntersectionFunctionTable","IntersectionFunctionTableDescriptor","IntersectionFunctionTableDescriptorRef","IntersectionFunctionTableRef","Invalid","Invalid","Invalid","InvalidFile","InvalidResource","Invert","Inward","Keep","KeepCurrent","Kernel","Less","LessEqual","Library","LibraryRef","Line","Line","LineStrip","Linear","Linear","Lines","LinkedFunctions","LinkedFunctionsRef","Load","Lossless","Lossy","MTLAccelerationStructure","MTLAccelerationStructureBoundingBoxGeometryDescriptor","MTLAccelerationStructureCommandEncoder","MTLAccelerationStructureDescriptor","MTLAccelerationStructureGeometryDescriptor","MTLAccelerationStructureInstanceDescriptor","MTLAccelerationStructureInstanceDescriptorType","MTLAccelerationStructureInstanceOptions","MTLAccelerationStructureSizes","MTLAccelerationStructureTriangleGeometryDescriptor","MTLAccelerationStructureUserIDInstanceDescriptor","MTLArgument","MTLArgumentAccess","MTLArgumentArray","MTLArgumentBuffersTier","MTLArgumentDescriptor","MTLArgumentEncoder","MTLArgumentType","MTLArrayType","MTLAttribute","MTLAttributeDescriptor","MTLAttributeDescriptorArray","MTLAttributeFormat","MTLBinaryArchive","MTLBinaryArchiveDescriptor","MTLBlendFactor","MTLBlendOperation","MTLBlitCommandEncoder","MTLBlitOption","MTLBlitPassDescriptor","MTLBlitPassSampleBufferAttachmentDescriptor","MTLBlitPassSampleBufferAttachmentDescriptorArray","MTLBuffer","MTLBufferLayoutDescriptor","MTLBufferLayoutDescriptorArray","MTLCPUCacheMode","MTLCaptureDescriptor","MTLCaptureDestination","MTLCaptureManager","MTLCaptureScope","MTLClearColor","MTLColorWriteMask","MTLCommandBuffer","MTLCommandBufferError","MTLCommandBufferStatus","MTLCommandEncoder","MTLCommandQueue","MTLCommonCounter","MTLCommonCounterSet","MTLCompareFunction","MTLCompileOptions","MTLComputeCommandEncoder","MTLComputePassDescriptor","MTLComputePassSampleBufferAttachmentDescriptor","MTLComputePassSampleBufferAttachmentDescriptorArray","MTLComputePipelineDescriptor","MTLComputePipelineReflection","MTLComputePipelineState","MTLCounter","MTLCounterSampleBuffer","MTLCounterSampleBufferDescriptor","MTLCounterSamplingPoint","MTLCounterSet","MTLCullMode","MTLDataType","MTLDepthClipMode","MTLDepthStencilDescriptor","MTLDepthStencilState","MTLDevice","MTLDeviceLocation","MTLDispatchType","MTLDrawIndexedPrimitivesIndirectArguments","MTLDrawPrimitivesIndirectArguments","MTLDrawable","MTLDynamicLibrary","MTLDynamicLibraryError","MTLEvent","MTLFeatureSet","MTLFence","MTLFunction","MTLFunctionConstant","MTLFunctionConstantValues","MTLFunctionDescriptor","MTLFunctionHandle","MTLFunctionOptions","MTLFunctionType","MTLGPUFamily","MTLHazardTrackingMode","MTLHeap","MTLHeapDescriptor","MTLHeapType","MTLIndexType","MTLIndirectCommandBuffer","MTLIndirectCommandBufferDescriptor","MTLIndirectCommandType","MTLIndirectComputeCommand","MTLIndirectRenderCommand","MTLInstanceAccelerationStructureDescriptor","MTLIntersectionFunctionDescriptor","MTLIntersectionFunctionTable","MTLIntersectionFunctionTableDescriptor","MTLLanguageVersion","MTLLibrary","MTLLibraryError","MTLLibraryType","MTLLinkedFunctions","MTLLoadAction","MTLMeshRenderPipelineDescriptor","MTLMultisampleStencilResolveFilter","MTLMutability","MTLOrigin","MTLParallelRenderCommandEncoder","MTLPatchType","MTLPipelineBufferDescriptor","MTLPipelineBufferDescriptorArray","MTLPipelineOption","MTLPixelFormat","MTLPrimitiveAccelerationStructureDescriptor","MTLPrimitiveTopologyClass","MTLPrimitiveType","MTLPurgeableState","MTLReadWriteTextureTier","MTLRegion","MTLRenderCommandEncoder","MTLRenderPassAttachmentDescriptor","MTLRenderPassColorAttachmentDescriptor","MTLRenderPassColorAttachmentDescriptorArray","MTLRenderPassDepthAttachmentDescriptor","MTLRenderPassDescriptor","MTLRenderPassSampleBufferAttachmentDescriptor","MTLRenderPassSampleBufferAttachmentDescriptorArray","MTLRenderPassStencilAttachmentDescriptor","MTLRenderPipelineColorAttachmentDescriptor","MTLRenderPipelineColorAttachmentDescriptorArray","MTLRenderPipelineDescriptor","MTLRenderPipelineReflection","MTLRenderPipelineState","MTLRenderStages","MTLResource","MTLResourceCPUCacheModeMask","MTLResourceCPUCacheModeShift","MTLResourceHazardTrackingModeMask","MTLResourceHazardTrackingModeShift","MTLResourceID","MTLResourceOptions","MTLResourceStorageModeMask","MTLResourceStorageModeShift","MTLResourceUsage","MTLSamplePosition","MTLSamplerAddressMode","MTLSamplerBorderColor","MTLSamplerDescriptor","MTLSamplerMinMagFilter","MTLSamplerMipFilter","MTLSamplerState","MTLScissorRect","MTLSharedEvent","MTLSharedEventListener","MTLSize","MTLSizeAndAlign","MTLSparseTextureRegionAlignmentMode","MTLStageInputOutputDescriptor","MTLStencilDescriptor","MTLStencilOperation","MTLStepFunction","MTLStorageMode","MTLStoreAction","MTLStructMember","MTLStructMemberArray","MTLStructType","MTLTexture","MTLTextureCompressionType","MTLTextureDescriptor","MTLTextureType","MTLTextureUsage","MTLTriangleFillMode","MTLVertexAttribute","MTLVertexAttributeDescriptor","MTLVertexAttributeDescriptorArray","MTLVertexBufferLayoutDescriptor","MTLVertexBufferLayoutDescriptorArray","MTLVertexDescriptor","MTLVertexFormat","MTLVertexStepFunction","MTLViewport","MTLVisibilityResultMode","MTLWinding","Mac1","Mac2","MacCatalyst1","MacCatalyst2","Managed","Max","Memoryless","Memoryless","MeshRenderPipelineDescriptor","MeshRenderPipelineDescriptorRef","Metal3","MetalDrawable","MetalDrawableRef","MetalLayer","MetalLayerRef","Min","MirrorClampToEdge","MirrorRepeat","Motion","Msaa","MultisampleResolve","Mutable","NSArray","NSInteger","NSObject","NSRange","NSUInteger","NSURL","Nearest","Nearest","Never","NonOpaque","NonVolatile","None","None","None","None","None","None","None","None","None","None","NotEnqueued","NotEqual","NotMipmapped","NotPermitted","NsObject","NsObjectRef","One","OneMinusBlendAlpha","OneMinusBlendColor","OneMinusDestinationAlpha","OneMinusDestinationColor","OneMinusSource1Alpha","OneMinusSource1Color","OneMinusSourceAlpha","OneMinusSourceColor","Opaque","OpaqueBlack","OpaqueWhite","OutOfMemory","Outward","PVRTC_RGBA_2BPP","PVRTC_RGBA_2BPP_sRGB","PVRTC_RGBA_4BPP","PVRTC_RGBA_4BPP_sRGB","PVRTC_RGB_2BPP","PVRTC_RGB_2BPP_sRGB","PVRTC_RGB_4BPP","PVRTC_RGB_4BPP_sRGB","PageFault","ParallelRenderCommandEncoder","ParallelRenderCommandEncoderRef","PerInstance","PerInstance","PerPatch","PerPatch","PerPatchControlPoint","PerPatchControlPoint","PerVertex","PerVertex","PipelineBufferDescriptor","PipelineBufferDescriptorArray","PipelineBufferDescriptorArrayRef","PipelineBufferDescriptorRef","PixelFormatCapabilities","PixelFormatView","Placement","Point","Point","Pointer","PrimitiveAccelerationStructureDescriptor","PrimitiveAccelerationStructureDescriptorRef","Private","Quad","R16Float","R16Sint","R16Snorm","R16Snorm","R16Uint","R16Unorm","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Snorm","R8Uint","R8Unorm","R8Unorm","R8Unorm_sRGB","RG11B10Float","RG11B10Float","RG16Float","RG16Sint","RG16Snorm","RG16Snorm","RG16Uint","RG16Unorm","RG16Unorm","RG32Float","RG32Sint","RG32Uint","RG8Sint","RG8Snorm","RG8Snorm","RG8Uint","RG8Unorm","RG8Unorm","RG8Unorm_sRGB","RGB10A2Uint","RGB10A2Unorm","RGB10A2Unorm","RGB9E5Float","RGB9E5Float","RGBA16Float","RGBA16Sint","RGBA16Snorm","RGBA16Snorm","RGBA16Uint","RGBA16Unorm","RGBA16Unorm","RGBA32Float","RGBA32Sint","RGBA32Uint","RGBA8Sint","RGBA8Snorm","RGBA8Snorm","RGBA8Uint","RGBA8Unorm","RGBA8Unorm","RGBA8Unorm_sRGB","RGBA8Unorm_sRGB","Read","ReadOnly","ReadWrite","Red","RenderCommandEncoder","RenderCommandEncoderRef","RenderPassAttachmentDescriptor","RenderPassAttachmentDescriptorRef","RenderPassColorAttachmentDescriptor","RenderPassColorAttachmentDescriptorArray","RenderPassColorAttachmentDescriptorArrayRef","RenderPassColorAttachmentDescriptorRef","RenderPassDepthAttachmentDescriptor","RenderPassDepthAttachmentDescriptorRef","RenderPassDescriptor","RenderPassDescriptorRef","RenderPassSampleBufferAttachmentDescriptor","RenderPassSampleBufferAttachmentDescriptorArray","RenderPassSampleBufferAttachmentDescriptorArrayRef","RenderPassSampleBufferAttachmentDescriptorRef","RenderPassStencilAttachmentDescriptor","RenderPassStencilAttachmentDescriptorRef","RenderPipelineColorAttachmentDescriptor","RenderPipelineColorAttachmentDescriptorArray","RenderPipelineColorAttachmentDescriptorArrayRef","RenderPipelineColorAttachmentDescriptorRef","RenderPipelineDescriptor","RenderPipelineDescriptorRef","RenderPipelineReflection","RenderPipelineReflectionRef","RenderPipelineState","RenderPipelineStateRef","RenderTarget","Repeat","Replace","Resolve","Resource","ResourceRef","ReverseSubtract","RowLinearPVRTC","Sample","Sample0","Sampler","Sampler","SamplerDescriptor","SamplerDescriptorRef","SamplerState","SamplerStateRef","Scheduled","Serial","ShaderRead","ShaderWrite","Shared","SharedEvent","SharedEventListener","SharedEventListenerRef","SharedEventRef","Short","Short","Short","Short2","Short2","Short2","Short2Normalized","Short2Normalized","Short3","Short3","Short3","Short3Normalized","Short3Normalized","Short4","Short4","Short4","Short4Normalized","Short4Normalized","ShortNormalized","ShortNormalized","Slot","Source1Alpha","Source1Color","SourceAlpha","SourceAlphaSaturated","SourceColor","Sparse","StageInputOutputDescriptor","StageInputOutputDescriptorRef","Stencil8","StencilDescriptor","StencilDescriptorRef","StencilFromDepthStencil","StorageModeManaged","StorageModeMemoryless","StorageModePrivate","StorageModeShared","Store","StoreAndMultisampleResolve","Struct","StructMember","StructMemberArray","StructMemberArrayRef","StructMemberRef","StructType","StructTypeRef","Subtract","Texture","Texture","Texture","TextureDescriptor","TextureDescriptorRef","TextureRef","ThreadPositionInGridX","ThreadPositionInGridXIndexed","ThreadPositionInGridY","ThreadPositionInGridYIndexed","ThreadgroupMemory","Tier1","Tier1","Tier2","Tier2","TierNone","Tile","Timeout","Tracked","TransparentBlack","Triangle","Triangle","Triangle","TriangleFrontFacingWindingCounterClockwise","TriangleStrip","UChar","UChar","UChar","UChar2","UChar2","UChar2","UChar2Normalized","UChar2Normalized","UChar3","UChar3","UChar3","UChar3Normalized","UChar3Normalized","UChar4","UChar4","UChar4","UChar4Normalized","UChar4Normalized","UChar4Normalized_BGRA","UChar4Normalized_BGRA","UCharNormalized","UCharNormalized","UInt","UInt","UInt","UInt1010102Normalized","UInt1010102Normalized","UInt16","UInt2","UInt2","UInt2","UInt3","UInt3","UInt3","UInt32","UInt4","UInt4","UInt4","URL","URLRef","UShort","UShort","UShort","UShort2","UShort2","UShort2","UShort2Normalized","UShort2Normalized","UShort3","UShort3","UShort3","UShort3Normalized","UShort3Normalized","UShort4","UShort4","UShort4","UShort4Normalized","UShort4Normalized","UShortNormalized","UShortNormalized","Unknown","Unknown","UnresolvedInstallName","Unspecified","Unspecified","Unsupported","Unsupported","Untracked","UserID","V1_0","V1_1","V1_2","V2_0","V2_1","V2_2","V2_3","V2_4","Vertex","Vertex","VertexAmplificationViewMapping","VertexAttribute","VertexAttributeDescriptor","VertexAttributeDescriptorArray","VertexAttributeDescriptorArrayRef","VertexAttributeDescriptorRef","VertexAttributeRef","VertexBufferLayoutDescriptor","VertexBufferLayoutDescriptorArray","VertexBufferLayoutDescriptorArrayRef","VertexBufferLayoutDescriptorRef","VertexDescriptor","VertexDescriptorRef","Visible","Volatile","Write","Write","WriteCombined","WriteOnly","X24_Stencil8","X32_Stencil8","Zero","Zero","_impl","a1_bgr5_unorm_capabilities","a8_unorm_capabilities","abgr4_unorm_capabilities","absolute_string","acceleration_structure_index","acceleration_structure_index","acceleration_structure_size","acceleration_structure_sizes_with_descriptor","access","add_completed_handler","add_compute_pipeline_functions_with_descriptor","add_debug_marker","add_render_pipeline_functions_with_descriptor","add_scheduled_handler","align","alignment","all","all","all","all","all","all","all","all","all","all","all","all","allocated_size","alpha","alpha_blend_operation","argument_buffers_support","arguments","array_length","array_length","array_length","array_type","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","astc_pixel_formats_capabilities","attribute_index","attribute_index","attribute_type","attribute_type","attributes","attributes","b5_g6_r5_unorm_capabilities","back_face_stencil","baseInstance","baseInstance","baseVertex","bc_pixel_formats_capabilities","begin_scope","bgr10_a2_unorm_capabilities","bgr10_xr_capabilities","bgr10_xr_srgb_capabilities","bgr5_a1_unorm_capabilities","bgra10_xr_capabilities","bgra10_xr_srgb_capabilities","bgra8_unorm_capabilities","bgra8_unorm_srgb_capabilities","bgrg422_capabilities","binary_archives","binary_archives","binary_functions","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitflags","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blit_command_encoder_with_descriptor","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_alignment","buffer_data_size","buffer_data_type","buffer_index","buffer_index","buffer_offset","buffer_stride","buffer_struct_type","buffers","build_acceleration_structure","build_scratch_buffer_size","clear_barrier","clear_color","clear_depth","clear_stencil","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color_attachments","color_attachments","color_attachments","command_types","commit","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compression_type","compute_command_encoder_with_descriptor","compute_command_encoder_with_dispatch_type","compute_function","concurrent_dispatch_threadgroups","concurrent_dispatch_threads","conforms_to_protocol","constant_data","constant_values","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contents","contents_scale","copy_and_compact_acceleration_structure","copy_from_buffer","copy_from_buffer_to_texture","copy_from_texture","copy_from_texture_to_buffer","copy_indirect_command_buffer","copy_texture_buffer_alignment","count","count","counter_set","counter_sets","cpu_cache_mode","cpu_cache_mode","cpu_cache_mode","cpu_cache_mode","current_allocated_size","current_allocated_size","d24_s8_supported","data_type","data_type","default","default","default","default","default","default","default","default","default","default_capture_scope","default_raster_sample_count","depth","depth","depth","depth16_unorm_capabilities","depth24_unorm_stencil8_capabilities","depth32_float_capabilities","depth32_float_stencil8_capabilities","depth_attachment","depth_attachment_pixel_format","depth_attachment_pixel_format","depth_compare_function","depth_failure_operation","depth_plane","depth_stencil_pass_operation","depth_write_enabled","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descriptor","descriptor","descriptor","descriptor","destination","destination_alpha_blend_factor","destination_rgb_blend_factor","device","device","device","device","device","device","device","device","device","device","device","device","device","device","did_modify_range","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dispatch_queue_t","dispatch_thread_groups","dispatch_thread_groups_indirect","dispatch_threads","display_sync_enabled","draw_indexed_patches","draw_indexed_primitives","draw_indexed_primitives","draw_indexed_primitives_indirect","draw_indexed_primitives_instanced","draw_indexed_primitives_instanced_base_instance","draw_mesh_threadgroups","draw_mesh_threadgroups_with_indirect_buffer","draw_mesh_threads","draw_patches","draw_primitives","draw_primitives","draw_primitives_indirect","draw_primitives_instanced","draw_primitives_instanced_base_instance","drawable_id","drawable_size","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eac_etc_pixel_formats_capabilities","element_array_type","element_struct_type","element_type","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","encode_signal_event","encode_wait_for_event","encoded_length","end_encoding","end_of_encoder_sample_index","end_of_encoder_sample_index","end_of_fragment_sample_index","end_of_vertex_sample_index","end_scope","enqueue","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_commands_in_buffer","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fill_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreign_types","format","format","fragment_arguments","fragment_buffers","fragment_buffers","fragment_function","fragment_function","framebuffer_only","framebuffer_only","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_owned_slice","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_queue_handle","from_slice","front_face_stencil","function_constants_dictionary","function_handle_with_function","function_names","function_type","function_type","functions","gbgr422_capabilities","generate_mipmaps","get_bytes","get_bytes_in_slice","get_function","gpu_address","gpu_resource_id","green","has_unified_memory","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hazard_tracking_mode","hazard_tracking_mode","hazard_tracking_mode","heap","heap_buffer_size_and_align","heap_offset","heap_texture_size_and_align","heap_type","heap_type","height","height","height","height","height","iOS_GPUFamily1_v1","iOS_GPUFamily1_v2","iOS_GPUFamily1_v3","iOS_GPUFamily1_v4","iOS_GPUFamily1_v5","iOS_GPUFamily2_v1","iOS_GPUFamily2_v2","iOS_GPUFamily2_v3","iOS_GPUFamily2_v4","iOS_GPUFamily2_v5","iOS_GPUFamily3_v1","iOS_GPUFamily3_v2","iOS_GPUFamily3_v3","iOS_GPUFamily3_v4","iOS_GPUFamily4_v1","iOS_GPUFamily4_v2","iOS_GPUFamily5_v1","imageblock_memory_length_for_dimensions","index","index","indexCount","indexStart","index_buffer_index","index_type","indirect_compute_command_at_index","indirect_render_command_at_index","inherit_buffers","inherit_pipeline_state","input_primitive_topology","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_signpost","insert_libraries","install_name","install_name","install_name","instanceCount","instanceCount","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection_function_table_offset","intersection_function_table_offset","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_active","is_active","is_active","is_aliasable","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_alpha_to_coverage_enabled","is_alpha_to_coverage_enabled","is_alpha_to_one_enabled","is_alpha_to_one_enabled","is_blending_enabled","is_capturing","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_fast_math_enabled","is_headless","is_low_power","is_opaque","is_patch_control_point_data","is_patch_control_point_data","is_patch_data","is_patch_data","is_rasterization_enabled","is_rasterization_enabled","is_removable","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","label","language_version","layouts","layouts","length","length","level","libraries","libraries_as_nsarray","library_type","library_type","linked_functions","load_action","location","location","location_number","log","macOS_GPUFamily1_v1","macOS_GPUFamily1_v2","macOS_GPUFamily1_v3","macOS_GPUFamily1_v4","macOS_GPUFamily2_v1","macOS_ReadWriteTextureTier2","make_aliasable","mask","mask","max_1d_texture_size","max_2d_texture_size","max_3d_texture_size","max_argument_buffer_sampler_count","max_array_layers","max_available_size_with_alignment","max_buffer_argument_entries","max_buffer_length","max_buffer_length","max_call_stack_depth","max_color_render_targets","max_constant_buffer_function_memory_allocation","max_cube_map_texture_size","max_fragment_buffer_bind_count","max_fragment_input_components","max_fragment_inputs","max_function_constants","max_inline_constant_buffer_length","max_inlined_constant_data_buffers","max_kernel_buffer_bind_count","max_point_primitive_size","max_raster_order_groups","max_sampler_state_argument_entries","max_tessellation_factor","max_texture_argument_entries","max_threadgroup_memory_argument_entries","max_threadgroup_memory_length","max_threads_per_threadgroup","max_threads_per_threadgroup","max_total_color_render_target_size","max_total_threadgroup_memory_allocation","max_total_threadgroups_per_mesh_grid","max_total_threads_per_mesh_threadgroup","max_total_threads_per_object_threadgroup","max_total_threads_per_threadgroup","max_total_threads_per_threadgroup","max_total_tile_memory_allocation","max_transfer_rate","max_vertex_amplification_count","max_vertex_amplification_count","max_vertex_attributes","max_vertex_buffer_bind_count","max_viewports_and_scissor_rectangles","max_visibility_query_offset","maximum_drawable_count","member_from_name","members","memory_barrier_with_resources","mesh_buffers","mesh_function","mesh_threadgroup_size_is_multiple_of_thread_execution_width","min_buffer_offset_alignment","minimum_linear_texture_alignment_for_pixel_format","minimum_texture_buffer_alignment_for_pixel_format","mipmap_level_count","mipmap_level_count","mutability","name","name","name","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_1d","new_2d","new_3d","new_acceleration_structure_command_encoder","new_acceleration_structure_with_size","new_argument_encoder","new_argument_encoder","new_argument_encoder_for_buffer","new_binary_archive_with_descriptor","new_blit_command_encoder","new_buffer","new_buffer","new_buffer_with_bytes_no_copy","new_buffer_with_data","new_buffer_with_offset","new_capture_scope_with_command_queue","new_capture_scope_with_device","new_command_buffer","new_command_buffer_with_unretained_references","new_command_queue","new_command_queue_with_max_command_buffer_count","new_compute_command_encoder","new_compute_pipeline_state","new_compute_pipeline_state_with_function","new_compute_pipeline_state_with_reflection","new_counter_sample_buffer_with_descriptor","new_default_library","new_depth_stencil_state","new_dynamic_library","new_dynamic_library_with_url","new_event","new_fence","new_function_with_descriptor","new_heap","new_indirect_command_buffer_with_descriptor","new_intersection_function_table_with_descriptor","new_intersection_function_with_descriptor","new_library_with_data","new_library_with_file","new_library_with_source","new_mesh_render_pipeline_state","new_mesh_render_pipeline_state_with_reflection","new_parallel_render_command_encoder","new_remote_buffer_view_for_device","new_render_command_encoder","new_render_pipeline_state","new_render_pipeline_state_with_reflection","new_sampler","new_shared_event","new_texture","new_texture","new_texture_buffer_alignment","new_texture_view","new_texture_view_from_slice","new_texture_with_descriptor","new_texture_with_offset","new_with_string","next_drawable","not","not","not","not","not","not","not","not","not","not","not","notify","objc","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_at","object_buffers","object_function","object_threadgroup_size_is_multiple_of_thread_execution_width","offset","offset","offset","optimize_contents_for_cpu_access","optimize_contents_for_cpu_access_slice_level","optimize_contents_for_gpu_access","optimize_contents_for_gpu_access_slice_level","optimize_indirect_command_buffer","options","options","options","options","origin","originX","originY","output_url","parent_relative_level","parent_relative_slice","parent_texture","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","paste","patch_control_point_count","patch_type","path","payload_memory_length","pixel_format","pixel_format","pixel_format","pixel_format","pop_debug_group","pop_debug_group","preprocessor_macros","present","present_drawable","presents_with_transaction","preserve_invariance","push_debug_group","push_debug_group","pvrtc_pixel_formats_capabilities","r16_float_capabilities","r16_sint_capabilities","r16_snorm_capabilities","r16_uint_capabilities","r16_unorm_capabilities","r32_float_capabilities","r32_sint_capabilities","r32_uint_capabilities","r8_sint_capabilities","r8_snorm_capabilities","r8_uint_capabilities","r8_unorm_capabilities","r8_unorm_srgb_capabilities","raster_order_groups_supported","raster_sample_count","raster_sample_count","read_mask","read_write_texture_support","recommended_max_working_set_size","red","refit_scratch_buffer_size","registry_id","remote_storage_buffer","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_all_animations","remove_all_debug_markers","renderTargetArrayIndexOffset","render_command_encoder","render_target_array_length","render_target_height","render_target_width","replace_region","replace_region_in_slice","required","reset","reset","reset","reset","reset","reset","reset","reset_commands_in_buffer","reset_with_range","resolve_counters","resolve_depth_plane","resolve_level","resolve_slice","resolve_texture","resource_options","resource_options","resource_options","resource_options","rg11_b10_float_capabilities","rg16_float_capabilities","rg16_sint_capabilities","rg16_snorm_capabilities","rg16_uint_capabilities","rg16_unorm_capabilities","rg32_float_capabilities","rg32_sint_capabilities","rg32_uint_capabilities","rg8_sint_capabilities","rg8_snorm_capabilities","rg8_uint_capabilities","rg8_unorm_capabilities","rg8_unorm_srgb_capabilities","rgb10_a2_uint_capabilities","rgb10_a2_unorm_capabilities","rgb9_e5_float_capabilities","rgb_blend_operation","rgba16_float_capabilities","rgba16_sint_capabilities","rgba16_snorm_capabilities","rgba16_uint_capabilities","rgba16_unorm_capabilities","rgba32_float_capabilities","rgba32_sint_capabilities","rgba32_uint_capabilities","rgba8_sint_capabilities","rgba8_snorm_capabilities","rgba8_uint_capabilities","rgba8_unorm_capabilities","rgba8_unorm_srgb_capabilities","root_resource","sample_buffer","sample_buffer","sample_buffer","sample_buffer_attachments","sample_buffer_attachments","sample_buffer_attachments","sample_count","sample_count","sample_count","sample_count","sample_counters_in_buffer","sample_counters_in_buffer","sample_counters_in_buffer","sample_timestamps","serialize_to_url","serialize_to_url","set","set","set","set","set","set","set","set","set","set","set","set_acceleration_structure","set_access","set_address_mode_r","set_address_mode_s","set_address_mode_t","set_alpha_blend_operation","set_alpha_to_coverage_enabled","set_alpha_to_coverage_enabled","set_alpha_to_one_enabled","set_alpha_to_one_enabled","set_argument_buffer","set_argument_buffer_to_element","set_array_length","set_array_length","set_back_face_stencil","set_barrier","set_binary_archives","set_binary_archives","set_binary_functions","set_blend_color","set_blending_enabled","set_border_color","set_bounding_box_buffer","set_bounding_box_count","set_buffer","set_buffer","set_buffer_index","set_buffer_index","set_buffers","set_buffers","set_bytes","set_capture_command_queue","set_capture_device","set_capture_scope","set_clear_color","set_clear_depth","set_clear_stencil","set_command_types","set_compare_function","set_compression_type","set_compute_function","set_compute_pipeline_state","set_compute_pipeline_state","set_constant_value_at_index","set_constant_value_with_name","set_constant_values","set_constant_values_with_range","set_contents_scale","set_counter_set","set_cpu_cache_mode","set_cpu_cache_mode","set_cull_mode","set_data_type","set_default_capture_scope","set_default_raster_sample_count","set_depth","set_depth_attachment","set_depth_attachment_pixel_format","set_depth_attachment_pixel_format","set_depth_bias","set_depth_clip_mode","set_depth_compare_function","set_depth_failure_operation","set_depth_plane","set_depth_stencil_pass_operation","set_depth_stencil_state","set_depth_write_enabled","set_destination","set_destination_alpha_blend_factor","set_destination_rgb_blend_factor","set_device","set_display_sync_enabled","set_drawable_size","set_edge_antialiasing_mask","set_end_of_encoder_sample_index","set_end_of_encoder_sample_index","set_end_of_fragment_sample_index","set_end_of_vertex_sample_index","set_fast_math_enabled","set_format","set_format","set_fragment_acceleration_structure","set_fragment_buffer","set_fragment_buffer","set_fragment_buffer_offset","set_fragment_buffers","set_fragment_bytes","set_fragment_function","set_fragment_function","set_fragment_intersection_function_table","set_fragment_sampler_state","set_fragment_sampler_state_with_lod","set_fragment_sampler_states","set_fragment_texture","set_fragment_textures","set_framebuffer_only","set_front_face_stencil","set_front_facing_winding","set_function","set_function_count","set_functions","set_geometry_descriptors","set_height","set_index","set_index_buffer","set_index_buffer_index","set_index_buffer_offset","set_index_type","set_index_type","set_indirect_command_buffer","set_indirect_command_buffers","set_inherit_buffers","set_inherit_pipeline_state","set_input_primitive_topology","set_insert_libraries","set_install_name","set_instance_count","set_instance_descriptor_buffer","set_instance_descriptor_buffer_offset","set_instance_descriptor_stride","set_instance_descriptor_type","set_instanced_acceleration_structures","set_intersection_function_table","set_intersection_function_table_offset","set_kernel_buffer","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_label","set_language_version","set_level","set_libraries","set_libraries_nsarray","set_library_type","set_linked_functions","set_load_action","set_lod_average","set_lod_max_clamp","set_lod_min_clamp","set_mag_filter","set_masks_to_bounds","set_max_anisotropy","set_max_call_stack_depth","set_max_fragment_buffer_bind_count","set_max_kernel_buffer_bind_count","set_max_total_threadgroups_per_mesh_grid","set_max_total_threads_per_mesh_threadgroup","set_max_total_threads_per_object_threadgroup","set_max_total_threads_per_threadgroup","set_max_vertex_amplification_count","set_max_vertex_amplification_count","set_max_vertex_buffer_bind_count","set_maximum_drawable_count","set_mesh_buffer","set_mesh_buffer_offset","set_mesh_buffers","set_mesh_bytes","set_mesh_function","set_mesh_sampler_state","set_mesh_sampler_state_with_lod","set_mesh_sampler_states","set_mesh_texture","set_mesh_textures","set_mesh_threadgroup_size_is_multiple_of_thread_execution_width","set_min_filter","set_mip_filter","set_mipmap_level_count","set_mipmap_level_count_for_size","set_mutability","set_name","set_normalized_coordinates","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_at","set_object_buffer","set_object_buffer_offset","set_object_buffers","set_object_bytes","set_object_function","set_object_sampler_state","set_object_sampler_state_with_lod","set_object_sampler_states","set_object_texture","set_object_textures","set_object_threadgroup_memory_length","set_object_threadgroup_size_is_multiple_of_thread_execution_width","set_offset","set_offset","set_opaque","set_opaque","set_options","set_output_url","set_payload_memory_length","set_pixel_format","set_pixel_format","set_pixel_format","set_preprocessor_macros","set_presents_with_transaction","set_preserve_invariance","set_primitive_data_buffer","set_primitive_data_element_size","set_primitive_data_stride","set_purgeable_state","set_purgeable_state","set_raster_sample_count","set_raster_sample_count","set_rasterization_enabled","set_rasterization_enabled","set_read_mask","set_render_pipeline_state","set_render_pipeline_state","set_render_pipeline_state","set_render_pipeline_states","set_render_target_array_length","set_render_target_height","set_render_target_width","set_resolve_depth_plane","set_resolve_level","set_resolve_slice","set_resolve_texture","set_resource_options","set_rgb_blend_operation","set_sample_buffer","set_sample_buffer","set_sample_buffer","set_sample_count","set_sample_count","set_sample_count","set_sampler_state","set_sampler_state","set_sampler_state_with_lod","set_sampler_states","set_sampler_states","set_scissor_rect","set_signaled_value","set_size","set_slice","set_source_alpha_blend_factor","set_source_rgb_blend_factor","set_specialized_name","set_stage_in_region","set_stage_input_descriptor","set_start_of_encoder_sample_index","set_start_of_encoder_sample_index","set_start_of_fragment_sample_index","set_start_of_vertex_sample_index","set_stencil_attachment","set_stencil_attachment_pixel_format","set_stencil_attachment_pixel_format","set_stencil_compare_function","set_stencil_failure_operation","set_stencil_front_back_reference_value","set_stencil_reference_value","set_stencil_resolve_filter","set_step_function","set_step_function","set_step_rate","set_step_rate","set_storage_mode","set_storage_mode","set_storage_mode","set_store_action","set_stride","set_stride","set_support_adding_binary_functions","set_support_argument_buffers","set_support_indirect_command_buffers","set_support_indirect_command_buffers","set_texture","set_texture","set_texture","set_texture_type","set_texture_type","set_textures","set_textures","set_thread_group_size_is_multiple_of_thread_execution_width","set_threadgroup_memory_length","set_threadgroup_memory_length","set_transformation_matrix_buffer","set_transformation_matrix_buffer_offset","set_triangle_count","set_triangle_fill_mode","set_url","set_usage","set_vertex_acceleration_structure","set_vertex_amplification_count","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer_offset","set_vertex_buffer_offset","set_vertex_buffers","set_vertex_bytes","set_vertex_descriptor","set_vertex_format","set_vertex_function","set_vertex_intersection_function_table","set_vertex_sampler_state","set_vertex_sampler_state_with_lod","set_vertex_sampler_states","set_vertex_stride","set_vertex_texture","set_vertex_textures","set_viewport","set_visibility_result_buffer","set_visibility_result_mode","set_wants_extended_dynamic_range_content","set_width","set_write_mask","set_write_mask","shared","signaled_value","size","size","size","size","size","slice","source_alpha_blend_factor","source_rgb_blend_factor","specialized_name","stage_input_attributes","stage_input_descriptor","start_capture","start_capture_with_command_queue","start_capture_with_device","start_capture_with_scope","start_of_encoder_sample_index","start_of_encoder_sample_index","start_of_fragment_sample_index","start_of_vertex_sample_index","static_threadgroup_memory_length","status","stencil8_capabilities","stencil_attachment","stencil_attachment_pixel_format","stencil_attachment_pixel_format","stencil_compare_function","stencil_failure_operation","stencil_resolve_filter","step_function","step_function","step_rate","step_rate","stop_capture","storage_mode","storage_mode","storage_mode","storage_mode","storage_mode","store_action","stride","stride","stride","struct_type","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","support_adding_binary_functions","support_indirect_command_buffers","support_indirect_command_buffers","support_indirect_command_buffers","supports_16_bit_unsigned_integer_coordinates","supports_32bit_MSAA","supports_32bit_float_filtering","supports_BC_texture_compression","supports_argument_buffers","supports_array_of_samplers","supports_array_of_textures","supports_astc_pixel_formats","supports_base_vertex_instance_drawing","supports_bc_pixel_formats","supports_binary_archive","supports_border_color","supports_combined_msaa_store_and_resolve_action","supports_counter_sampling","supports_counting_occlusion_query","supports_cube_map_texture_arrays","supports_deferred_store_action","supports_depth_16_pixel_format","supports_destination","supports_device_notifications","supports_dual_source_blending","supports_dynamic_libraries","supports_eac_etc_pixel_formats","supports_extended_range_pixel_formats","supports_extract_insert_and_reverse_bits","supports_family","supports_feature_set","supports_function_buffer_read_writes","supports_function_pointers","supports_function_specialization","supports_function_texture_read_writes","supports_imageblock_sample_coverage_control","supports_imageblocks","supports_indirect_buffers","supports_layered_rendering","supports_linear_textures","supports_memoryless_render_targets","supports_metal_kit","supports_metal_performance_shaders","supports_msaa_blits","supports_msaa_depth_resolve","supports_multiple_viewports","supports_non_uniform_threadgroup_size","supports_post_depth_coverage","supports_programmable_blending","supports_programmable_sample_positions","supports_pull_model_interpolation","supports_pvrtc_pixel_formats","supports_quad_scoped_permute_operations","supports_query_texture_LOD","supports_raster_order_groups","supports_raytracing","supports_resource_heaps","supports_sampler_lod_clamp","supports_sampler_max_anisotropy","supports_shader_barycentric_coordinates","supports_simd_barrier","supports_srgb_writes","supports_stencil_feedback","supports_stencil_resolve","supports_stencil_texture_views","supports_tessellation","supports_texture_barriers","supports_texture_sample_count","supports_threadgroup_sharing","supports_tile_shaders","supports_uniform_type","supports_vertex_amplification_count","supports_wide_color_pixel_format","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","synchronize_resource","system_default","texture","texture","texture_data_type","texture_type","texture_type","texture_type","thread_execution_width","thread_group_size_is_multiple_of_thread_execution_width","threadgroup_memory_alignment","threadgroup_memory_data_size","threadgroup_memory_length_alignment","tile_arguments","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","transformation_matrix","transformation_matrix","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tvOS_GPUFamily1_v1","tvOS_GPUFamily1_v2","tvOS_GPUFamily1_v3","tvOS_GPUFamily1_v4","tvOS_GPUFamily2_v1","tvOS_GPUFamily2_v2","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","union","update_fence","update_fence","update_fence","url","usage","usage","use_heap","use_heap","use_heap_at","use_heaps","use_heaps","use_resource","use_resource","use_resource_at","use_resources","use_resources","used_size","user_id","vertexCount","vertexStart","vertex_arguments","vertex_attributes","vertex_buffers","vertex_descriptor","vertex_function","viewportArrayIndexOffset","visibility_result_buffer","wait_for_fence","wait_for_fence","wait_for_fence","wait_until_completed","wait_until_scheduled","wants_extended_dynamic_range_content","width","width","width","width","width","write_compacted_acceleration_structure_size","write_mask","write_mask","x","x","x","x24_stencil8_capabilities","x32_stencil8_capabilities","y","y","y","z","zfar","znear"],"q":[[0,"metal"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A borrowed reference to a …","","A borrowed reference to a …","","A borrowed reference to a <code>AccelerationStructureDescriptor</code>.","","A borrowed reference to a …","A borrowed reference to a <code>AccelerationStructure</code>.","","A borrowed reference to a …","","","","","","","","","","","","","","","","A borrowed reference to a <code>ArgumentArray</code>.","","A borrowed reference to a <code>ArgumentDescriptor</code>.","","A borrowed reference to a <code>ArgumentEncoder</code>.","An option that requests argument information for buffers, …","A borrowed reference to a <code>Argument</code>.","","","","","A borrowed reference to a <code>ArrayType</code>.","","","","","","","","","A borrowed reference to a <code>AttributeDescriptorArray</code>.","A borrowed reference to a <code>AttributeDescriptor</code>.","A borrowed reference to a <code>Attribute</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A borrowed reference to a <code>BinaryArchiveDescriptor</code>.","A borrowed reference to a <code>BinaryArchive</code>.","","","","","","A borrowed reference to a <code>BlitCommandEncoder</code>.","","A borrowed reference to a <code>BlitPassDescriptor</code>.","","","A borrowed reference to a …","A borrowed reference to a …","","","","","","","","","","","A borrowed reference to a <code>BufferLayoutDescriptorArray</code>.","A borrowed reference to a <code>BufferLayoutDescriptor</code>.","A borrowed reference to a <code>Buffer</code>.","An option that requests detailed buffer type information …","","See …","","See …","","","","A borrowed reference to a <code>CaptureDescriptor</code>.","","A borrowed reference to a <code>CaptureManager</code>.","","A borrowed reference to a <code>CaptureScope</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A borrowed reference to a <code>CommandBuffer</code>.","","A borrowed reference to a <code>CommandEncoder</code>.","","A borrowed reference to a <code>CommandQueue</code>.","","","","","","A borrowed reference to a <code>CommonCounter</code>.","","","","A borrowed reference to a <code>CompileOptions</code>.","","","","","A borrowed reference to a <code>ComputeCommandEncoder</code>.","","A borrowed reference to a <code>ComputePassDescriptor</code>.","","","A borrowed reference to a …","A borrowed reference to a …","","A borrowed reference to a <code>ComputePipelineDescriptor</code>.","","A borrowed reference to a <code>ComputePipelineReflection</code>.","","A borrowed reference to a <code>ComputePipelineState</code>.","","","","","","","","A borrowed reference to a <code>Counter</code>.","","","A borrowed reference to a <code>CounterSampleBufferDescriptor</code>.","A borrowed reference to a <code>CounterSampleBuffer</code>.","","A borrowed reference to a <code>CounterSet</code>.","","","","","","","","","","","","","","","","","","","","","","","…","","","A borrowed reference to a <code>DepthStencilDescriptor</code>.","","A borrowed reference to a <code>DepthStencilState</code>.","","","","","A borrowed reference to a <code>Device</code>.","","","","","","","","","","","A borrowed reference to a <code>Drawable</code>.","","","A borrowed reference to a <code>DynamicLibrary</code>.","","","","","","","","","","","","","","","","A borrowed reference to a <code>Event</code>.","","","An option that specifies that Metal should create the …","","A borrowed reference to a <code>Fence</code>.","Only available on (macos(10.12), ios(10.0))","","","","","","","","","","","","","","","","","","","","","","","","","The fragment rendering stage.","","","","A borrowed reference to a <code>FunctionConstant</code>.","","A borrowed reference to a <code>FunctionConstantValues</code>.","","A borrowed reference to a <code>FunctionDescriptor</code>.","","A borrowed reference to a <code>FunctionHandle</code>.","Only available on (macos(10.12), ios(10.0))","A borrowed reference to a <code>Function</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on macos(10.13), ios(10.0)","Only available on macos(10.15), ios(13.0)","Only available on macos(10.13), ios(10.0)","","","A borrowed reference to a <code>HeapDescriptor</code>.","A borrowed reference to a <code>Heap</code>.","","","","","","","","A borrowed reference to a <code>IndirectCommandBufferDescriptor</code>.","A borrowed reference to a <code>IndirectCommandBuffer</code>.","","A borrowed reference to a <code>IndirectComputeCommand</code>.","","A borrowed reference to a <code>IndirectRenderCommand</code>.","","A borrowed reference to a …","","","","","","","","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","A borrowed reference to a <code>IntersectionFunctionDescriptor</code>.","","","A borrowed reference to a …","A borrowed reference to a <code>IntersectionFunctionTable</code>.","","","","","","","","","","","","","","A borrowed reference to a <code>Library</code>.","","","","","","","","A borrowed reference to a <code>LinkedFunctions</code>.","","","","","","","","","","See …","","See …","","","https://developer.apple.com/documentation/metal/mtlargument","See …","TODO: Find documentation link.","See …","See …","See …","See …","See …","Only available on (macos(10.12), ios(10.0))","See …","See …","See …","macOS 11.0+ iOS 14.0+","macOS 11.0+ iOS 14.0+","See …","See …","See …","…","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","Only available on (macos(11.0), ios(14.0))","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","Only available on (macos(11.0), ios(14.0))","See …","Available on macOS 10.11+, iOS 8.0+, tvOS 9.0+","See …","See …","Only available on (macos(10.12), ios(10.0))","See …","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","See …","Available on macOS 10.15+, iOS 13.0+","Only available on macos(10.15), ios(13.0)","See …","See …","Only available on macos(10.15), ios(13.0)","See …","See …","See …","See …","See …","See …","","Only available on (macos(11.0), ios(14.0))","","","See …","See …","See …","Only available on (macos(11.0), ios(14.0))","macOS 11.0+ iOS 14.0+","See …","See …","See …","See …","See …","See …","Only available on (macos(10.12), ios(10.0)","See …","See …","Options that determine how Metal prepares the pipeline.","See …","","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","Important!","See …","See …","See …","See …","See …","See …","See …","See …","The render stages at which a synchronization command is …","See …","","","","","","See …","","","Options that describe how a graphics or compute function …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See https://developer.apple.com/documentation/metal/mtlsize","See …","Only available on (macos(11.0), macCatalyst(14.0), …","See …","See …","See …","See …","See …","See …","See …","","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","See …","","","","","","","","Only available on macos(11.0), macCatalyst(14.0), ios(10.0)","","A borrowed reference to a <code>MeshRenderPipelineDescriptor</code>.","","","A borrowed reference to a <code>MetalDrawable</code>.","","A borrowed reference to a <code>MetalLayer</code>.","","","","","","","","See …","See …","","See …","See …","See …","","","","","","","","","","","","Do not provide any reflection information.","…","","","","","","","","A borrowed reference to a <code>NsObject</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A borrowed reference to a <code>ParallelRenderCommandEncoder</code>.","","","","","","","","","","","A borrowed reference to a <code>PipelineBufferDescriptorArray</code>.","A borrowed reference to a <code>PipelineBufferDescriptor</code>.","","","","","","","","A borrowed reference to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An option that enables reading from the resource.","","","","","A borrowed reference to a <code>RenderCommandEncoder</code>.","","A borrowed reference to a <code>RenderPassAttachmentDescriptor</code>.","","","A borrowed reference to a …","A borrowed reference to a …","","A borrowed reference to a …","","A borrowed reference to a <code>RenderPassDescriptor</code>.","","","A borrowed reference to a …","A borrowed reference to a …","","A borrowed reference to a …","","","A borrowed reference to a …","A borrowed reference to a …","","A borrowed reference to a <code>RenderPipelineDescriptor</code>.","","A borrowed reference to a <code>RenderPipelineReflection</code>.","","A borrowed reference to a <code>RenderPipelineState</code>.","","","","","","A borrowed reference to a <code>Resource</code>.","","…","An option that enables sampling from the resource.","","","","","A borrowed reference to a <code>SamplerDescriptor</code>.","","A borrowed reference to a <code>SamplerState</code>.","","","","","","","","A borrowed reference to a <code>SharedEventListener</code>.","A borrowed reference to a <code>SharedEvent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on macos(11.0), macCatalyst(14.0)","","A borrowed reference to a <code>StageInputOutputDescriptor</code>.","","","A borrowed reference to a <code>StencilDescriptor</code>.","…","","","","","","","","","","A borrowed reference to a <code>StructMemberArray</code>.","A borrowed reference to a <code>StructMember</code>.","","A borrowed reference to a <code>StructType</code>.","","","","","","A borrowed reference to a <code>TextureDescriptor</code>.","A borrowed reference to a <code>Texture</code>.","","","","","","","","","","","The tile rendering stage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A borrowed reference to a <code>URL</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","available on macOS 11.0+, iOS 14.0+","available on macOS 12.0+, iOS 15.0+","","The vertex rendering stage.","See …","","","","A borrowed reference to a <code>VertexAttributeDescriptorArray</code>.","A borrowed reference to a <code>VertexAttributeDescriptor</code>.","A borrowed reference to a <code>VertexAttribute</code>.","","","A borrowed reference to a <code>VertexBufferLayoutDescriptorArray</code>…","A borrowed reference to a <code>VertexBufferLayoutDescriptor</code>.","","A borrowed reference to a <code>VertexDescriptor</code>.","Only available on (macos(11.0), ios(14.0))","","","An option that enables writing to the resource.","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Only available on macOS 10.13+ &amp; iOS 10.11+","","","","An array of objects that describe the arguments of a …macos(11.0), ios(14.0)); Marshal to Rust Vec","API_AVAILABLE(macos(11.0), ios(14.0)); Marshal to Rust Vec","Marshal to Rust Vec","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …he bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","See …","","","","","","","","","","","","Only available on macos(10.13), iosee …","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags valuen array of objects that describe the arguments of a …","","","","","framebufferOnly Apple Docs","framebufferOnly Apple Docs","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","","","Marshal to Rust Vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on macos(10.15), ios(13.0)","Only available on macos(10.15), ios(13.0)","Only available on macos(10.15), ios(13.0)","Only available on macos(10.13), ios(10.0)","","Only available on macos(10.15), ios(13.0)","","Only available on macos(10.15), ios(13.0)","Only available on macos(10.15), ios(13.0)","","","","","","","","","","","","","","","","","","","","","","","Only available on (ios(11.0), macos(11.0), …","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","API_AVAILABLE(macos(11.0), ios(14.0)); Marshal to Rust Vec","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Only available on macos(10.13), ios(10.0)","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","","","","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","Only available on (macos(10.12), ios(10.0)","Only available on (macos(10.12), ios(10.0))","Only available on (macos(10.12), ios(10.0)","Only available on (macos(10.12), ios(10.0))","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","Only available on (macos(10.12), ios(10.0))","","","","","","","","","","","","","Only available on (macos(10.11), ios(9.0))","","","","","","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","API_AVAILABLE(macos(11.0), ios(14.0));","","","","","","","","","","","","Only available on macos(10.13), ios(10.0)","","","","","","","","","","","Only available on (macos(10.14), ios(12.0), tvos(12.0))","API_AVAILABLE(macos(11.0), ios(14.0));","","","","","","","","","","","","","","","","","","","","","","","","","API_AVAILABLE(macos(10.14), ios(12.0));","","","","","","","","","","","","","Encodes a barrier so that changes to a set of resources …","","","","","","","","","","","","","","","","","","","","","","","","Creates a default blit command pass descriptor with no …","","","Creates a default compute pass descriptor with no …","","","","","","","","","","","","","","","","","","","Creates a default render pass descriptor with no …","","","","","","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","","","","","Only available on macOS 10.15+ &amp; iOS 13.0+","","","","","","","","","","Synchronously creates a compute pipeline state object and …","","","","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","","","Only available on (macos(11.0), ios(14.0))","","","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","","","","Only available on (macos(13.0), ios(16.0))","Only available on (macos(13.0), ios(16.0))","","Only available on (macos(10.15), NOT available on (ios)","","","Synchronously creates a render pipeline state object and …","","","","","If this function returns <code>None</code> but linear textures are …","","","","Only available on macOS 10.15+ &amp; iOS 13.0+","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Schedules a notification handler to be called after the …","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","","","","","See …","","","","","","","","","","","","","","","","","Only available on (macos(10.12), ios(10.0))","Only available on (macos(10.12), ios(10.0))","","","","","","","","","","","","","Only available on (macos(11.0), macCatalyst(14.0), …","","","","","","","","","","","","","","","","","","","","","","","","","","Only available on macos(10.15), NOT available on (ios)","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","See: …","","","","","Only available on macos(10.15), ios(13.0)","Only available on macos(10.15), ios(13.0)","Only available on macos(10.15), ios(13.0)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DEPRECATED - aliases rasterSampleCount property","","","See: …","See: …","See: …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Only available in (macos(11.0), ios(14.0))","","","","","","","","","","","","","","","","API_AVAILABLE(macos(11.0), ios(14.0)); Marshal from Rust …","API_AVAILABLE(macos(11.0), ios(14.0)); Marshal from Rust …","Marshal from Rust slice","","","","","","","","","","","","","See …","See …","See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See …","","","","","","","","","","","","","","Only available in (macos(12.0), ios(15.0))","","","","","","","","Only available in (macos(12.0), ios(15.0))","","","","","","","","","","","Marshal from Rust slice","","","","","","","","","","","","","","Marshal from Rust slice","Only available on (macos(11.0), ios(14.0))","","","","","","","Only available in (macos(11.0), ios(14.0))","","","","","","","","","Only available on (macos(10.12), ios(10.0))","","","","","","","","","","Only available on (macos(10.11), ios(9.0))","","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","API_AVAILABLE(macos(11.0), ios(14.0));","","","","","","","","API_AVAILABLE(macos(11.0), ios(14.0));","","","","","","API_AVAILABLE(macos(10.14), ios(12.0));","","","","","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","","","","","","","","","","","","","","","","","","","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","Only available in (macos(13.0), ios(16.0))","","","","","","","See …","","","","","","","Only available on (macos(11.0), macCatalyst(14.0), …","","","","","","","","","","","","","","","","","","","","","","","","","","","","DEPRECATED - aliases rasterSampleCount property","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","API_AVAILABLE(macos(11.0), ios(14.0));","","API_AVAILABLE(ios(13.0),macos(11.0));","","","","","","","","","","","","","","","","","","Only available in (macos(12.0), ios(15.0))","","","","","","","","","","","","Only available in (macos(12.0), ios(15.0))","","","","","","","","","","","","","","","","","","","","","","","","","Only available on (macos(10.12), ios(10.0))","","Starts capturing with the capture session defined by a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","API_AVAILABLE(macos(11.0), ios(14.0));","API_AVAILABLE(ios(13.0),macos(11.0));","Only available on (ios(13.0), macos(11.0))","","","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","Only available on (macos(11.0), ios(14.0))","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","","","","See …","","","Only available on (macos(11.0), ios(14.0))","","","","","","","","","","","","","","","","","","","","","","","","","Only available on (macos(11.0), ios(14.0))","","","Only available on (macos(11.0), ios(14.0))","","Only available on (macos(11.0), ios(14.0))","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","An array of objects that describe the arguments of a tile …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","Adds the resources in a heap to the render pass.","Specifies that a heap containing resources in an argument …","Adds the resources in a heap to the render pass, …","Adds the resources in an array of heaps to the render …","Specifies that an array of heaps containing resources in …","Adds an untracked resource to the render pass.","Specifies that a resource in an argument buffer can be …","Adds an untracked resource to the render pass, specifying …","Adds an array of untracked resources to the render pass, …","Specifies that an array of resources in an argument buffer …","","","","","An array of objects that describe the arguments of a …","Only available on (macos(10.12), ios(10.0))","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,0,0,0,0,0,0,0,0,0,0,0,0,36,29,29,365,367,367,367,367,367,367,367,367,367,0,0,0,0,0,0,0,23,0,0,350,0,0,0,370,370,370,370,370,0,0,0,0,0,0,384,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,375,0,0,0,0,362,2,393,393,0,0,0,0,0,0,0,0,29,350,350,350,350,374,0,359,0,0,0,0,0,23,368,0,0,0,30,30,0,0,0,0,0,0,350,391,414,350,391,414,391,414,350,391,414,391,414,350,391,414,391,414,391,414,377,405,405,405,396,377,376,2,0,0,0,0,0,0,361,367,367,367,0,0,390,389,0,0,28,389,361,0,0,0,0,0,0,0,0,0,0,0,0,0,0,363,27,27,392,415,0,376,0,0,0,0,0,0,0,374,407,407,397,407,407,407,407,407,407,407,366,366,356,395,401,399,390,364,364,364,364,26,437,0,0,0,0,393,393,360,0,0,362,22,374,396,397,27,27,27,27,0,0,388,0,0,364,364,364,364,364,364,364,364,364,364,398,361,365,361,0,0,388,368,23,0,0,389,378,2,350,391,414,350,391,414,350,350,350,350,391,414,350,350,350,350,391,414,350,350,350,386,32,375,0,0,0,0,0,0,0,0,0,389,0,364,360,365,365,29,350,391,414,350,391,414,350,350,350,350,391,414,350,350,350,350,391,414,350,350,350,30,30,30,0,0,0,0,359,359,395,366,366,0,0,0,0,0,0,0,0,0,0,350,391,414,391,414,350,391,414,350,391,414,350,391,414,362,389,386,0,0,0,0,0,0,364,391,414,390,362,366,371,366,398,386,365,365,0,0,372,394,372,403,404,378,0,0,396,408,408,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,367,367,367,367,400,36,362,400,0,0,367,0,0,0,0,36,405,405,356,2,397,395,0,0,0,0,0,0,403,404,365,22,398,350,362,375,385,390,22,23,26,28,29,361,365,404,362,0,0,393,393,393,393,393,393,393,393,393,22,406,406,362,371,364,364,364,364,364,364,364,364,362,0,0,392,415,392,415,392,415,392,415,0,0,0,0,0,33,384,372,394,350,0,0,400,385,364,364,350,364,364,350,364,364,364,364,364,350,364,364,350,364,364,350,364,364,364,350,364,364,350,364,364,364,364,364,350,364,364,350,364,364,364,350,364,350,364,364,364,350,364,364,350,364,364,364,364,364,350,364,364,350,364,350,364,31,9,9,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,405,366,2,0,0,36,26,31,437,350,359,0,0,0,0,361,363,33,33,400,0,0,0,0,350,391,414,350,391,414,391,414,350,391,414,391,414,350,391,414,391,414,391,414,368,393,393,393,393,393,384,0,0,364,0,0,26,30,30,30,30,397,397,350,0,0,0,0,0,0,36,0,350,359,0,0,0,392,392,392,392,359,37,369,37,369,369,32,362,401,406,372,385,394,22,372,350,391,414,350,391,414,391,414,350,391,414,391,414,350,391,414,391,414,391,414,391,414,350,391,414,391,414,373,350,391,414,350,391,414,373,350,391,414,0,0,350,391,414,350,391,414,391,414,350,391,414,391,414,350,391,414,391,414,391,414,397,33,390,368,394,389,390,401,356,387,387,387,387,387,387,387,387,386,32,0,0,0,0,0,0,0,0,0,0,0,0,0,386,398,2,31,399,9,364,364,366,393,413,1,1,1,3,357,358,7,5,8,10,12,17,12,10,402,20,22,2,23,24,26,27,28,29,30,31,32,33,34,354,35,5,38,40,41,42,43,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,241,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,1,143,145,143,145,173,238,1,114,381,382,382,1,89,1,1,1,1,1,1,1,1,1,13,19,168,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,0,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,22,22,2,2,23,23,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,10,354,242,241,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,45,46,47,47,48,49,49,50,22,356,357,358,51,51,6,52,52,53,54,54,55,56,56,57,58,58,59,60,60,61,62,62,63,64,64,65,66,66,67,68,68,69,350,359,9,70,70,43,71,71,72,73,73,74,75,75,40,76,76,8,77,77,78,79,79,80,81,81,82,83,83,84,85,85,17,360,86,86,87,88,88,89,90,90,91,361,362,363,92,92,10,93,93,94,95,95,96,97,97,98,99,99,100,364,101,101,102,103,103,104,105,105,106,107,107,108,109,109,110,365,366,111,111,112,113,113,114,115,115,116,1,367,368,2,37,369,370,371,23,7,24,24,5,117,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,119,120,121,121,122,123,123,124,125,125,126,127,127,128,129,129,20,384,130,130,131,132,132,133,27,134,134,135,136,136,137,138,138,139,140,140,141,385,142,142,143,144,144,145,386,146,146,147,28,148,148,149,150,150,151,152,152,153,154,154,155,387,156,156,157,388,158,158,159,389,160,160,161,390,162,162,163,164,164,165,166,166,12,167,167,168,391,392,169,169,13,170,170,171,172,172,173,174,174,175,176,176,177,178,178,179,180,180,181,393,36,29,394,182,182,35,183,183,184,185,185,39,186,186,38,187,187,188,189,189,19,190,190,191,192,192,193,395,194,194,195,196,196,197,396,397,354,198,198,199,200,200,201,202,202,203,204,204,205,206,206,207,208,208,209,210,210,211,212,212,213,398,399,400,401,30,31,402,214,214,34,403,404,405,406,215,215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,32,407,408,33,227,227,41,228,228,42,409,410,411,412,413,414,415,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,3,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,45,46,47,47,48,49,49,50,22,356,357,358,51,51,6,52,52,53,54,54,55,56,56,57,58,58,59,60,60,61,62,62,63,64,64,65,66,66,67,68,68,69,350,359,9,70,70,43,71,71,72,73,73,74,75,75,40,76,76,8,77,77,78,79,79,80,81,81,82,83,83,84,85,85,17,360,86,86,87,88,88,89,90,90,91,361,362,363,92,92,10,93,93,94,95,95,96,97,97,98,99,99,100,364,101,101,102,103,103,104,105,105,106,107,107,108,109,109,110,365,366,111,111,112,113,113,114,115,115,116,1,367,368,2,37,369,370,371,23,7,24,24,5,117,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,119,120,121,121,122,123,123,124,125,125,126,127,127,128,129,129,20,384,130,130,131,132,132,133,27,134,134,135,136,136,137,138,138,139,140,140,141,385,142,142,143,144,144,145,386,146,146,147,28,148,148,149,150,150,151,152,152,153,154,154,155,387,156,156,157,388,158,158,159,389,160,160,161,390,162,162,163,164,164,165,166,166,12,167,167,168,391,392,169,169,13,170,170,171,172,172,173,174,174,175,176,176,177,178,178,179,180,180,181,393,36,29,394,182,182,35,183,183,184,185,185,39,186,186,38,187,187,188,189,189,19,190,190,191,192,192,193,395,194,194,195,196,196,197,396,397,354,198,198,199,200,200,201,202,202,203,204,204,205,206,206,207,208,208,209,210,210,211,212,212,213,398,399,400,401,30,31,402,214,214,34,403,404,405,406,215,215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,32,407,408,33,227,227,41,228,228,42,409,410,411,412,413,414,415,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,3,42,8,8,8,177,234,42,42,8,13,65,7,141,201,203,205,241,18,45,47,49,22,356,357,358,51,52,54,56,58,60,62,64,66,68,350,359,9,70,71,73,75,76,77,79,81,83,85,360,86,88,90,361,362,363,92,93,95,97,99,364,101,103,105,107,109,365,366,111,113,115,1,367,368,2,37,369,370,371,23,7,24,117,372,373,374,375,376,377,378,26,379,380,381,382,383,119,121,123,125,127,129,384,130,132,27,134,136,138,140,385,142,144,386,146,28,148,150,152,154,387,156,388,158,389,160,390,162,164,166,167,391,392,169,170,172,174,176,178,180,393,36,29,394,182,183,185,186,187,189,190,192,395,194,196,396,397,354,198,200,202,204,206,208,210,212,398,399,400,401,30,31,402,214,403,404,405,406,215,217,219,221,223,225,32,407,408,33,227,228,409,410,411,412,413,414,415,229,231,233,235,237,239,241,18,45,47,49,22,356,357,358,51,52,54,56,58,60,62,64,66,68,350,359,9,70,71,73,75,76,77,79,81,83,85,360,86,88,90,361,362,363,92,93,95,97,99,364,101,103,105,107,109,365,366,111,113,115,1,367,368,2,37,369,370,371,23,7,24,117,372,373,374,375,376,377,378,26,379,380,381,382,383,119,121,123,125,127,129,384,130,132,27,134,136,138,140,385,142,144,386,146,28,148,150,152,154,387,156,388,158,389,160,390,162,164,166,167,391,392,169,170,172,174,176,178,180,393,36,29,394,182,183,185,186,187,189,190,192,395,194,196,396,397,354,198,200,202,204,206,208,210,212,398,399,400,401,30,31,402,214,403,404,405,406,215,217,219,221,223,225,32,407,408,33,227,228,409,410,411,412,413,414,415,229,231,233,235,237,239,22,2,23,26,27,28,387,29,30,31,32,33,188,19,213,135,10,22,2,23,26,27,28,29,30,31,32,33,41,10,10,13,141,141,48,20,149,22,2,23,26,27,28,29,30,31,32,33,17,50,65,126,126,126,126,126,1,72,39,102,5,131,133,34,41,5,131,5,43,147,22,357,358,395,409,410,411,412,413,91,213,41,42,410,1,1,1,1,213,188,19,114,112,199,112,114,241,45,46,47,49,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,81,83,85,17,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,122,123,124,125,126,127,128,129,130,132,134,136,137,138,140,142,144,146,148,150,151,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,201,202,203,204,205,206,208,210,212,214,34,215,217,219,221,222,223,225,227,228,42,229,231,233,235,237,239,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,52,58,60,62,87,35,35,50,94,116,131,153,155,161,163,12,191,34,218,220,226,17,22,2,23,26,27,28,29,30,31,32,33,0,128,128,128,50,139,124,139,124,124,124,124,124,124,139,124,139,124,124,124,118,50,241,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,1,40,40,40,22,2,23,26,27,28,29,30,31,32,33,10,10,20,120,84,100,209,209,89,10,22,356,357,358,350,359,9,360,361,362,363,364,365,366,1,367,368,2,37,369,370,371,23,7,372,373,374,375,376,377,378,26,384,27,385,386,28,387,388,389,390,391,392,393,36,29,394,395,398,399,400,401,30,31,402,403,404,405,406,32,407,408,33,409,410,411,412,413,414,415,22,356,350,359,9,360,361,362,363,364,365,366,1,367,368,2,37,369,370,371,23,7,372,373,374,375,376,377,378,26,384,27,385,386,28,387,388,389,390,391,392,393,36,29,394,395,398,399,400,401,30,31,402,403,404,405,406,32,407,408,33,409,410,411,413,414,415,124,22,2,23,26,27,28,29,30,31,32,33,126,45,46,47,48,49,50,22,22,22,22,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,2,2,2,2,37,369,370,371,23,23,23,23,23,7,24,5,117,118,372,373,374,375,376,377,378,26,26,26,26,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,27,27,27,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,28,28,28,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,29,29,29,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,30,30,30,30,31,31,31,31,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,32,32,32,32,407,408,33,33,33,33,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,0,177,234,184,188,19,188,19,50,42,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,46,47,47,47,47,47,48,49,50,22,356,357,358,51,51,51,6,52,53,54,55,56,56,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,119,119,119,119,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,198,198,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,214,214,214,214,214,34,403,404,405,406,215,216,217,218,219,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,22,2,23,26,27,28,29,30,31,32,33,22,22,2,2,23,23,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,241,241,45,47,49,51,52,54,56,58,60,62,64,66,68,70,71,73,75,76,77,79,81,83,85,86,88,90,92,93,95,97,99,101,103,105,107,109,111,113,115,24,117,119,121,123,125,127,129,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,167,169,170,172,174,176,178,180,182,183,185,186,187,189,190,192,194,196,198,200,202,204,206,208,210,212,214,215,217,219,221,223,225,227,228,229,231,233,235,237,239,223,241,114,155,171,161,153,155,168,1,126,42,42,161,17,42,354,5,22,356,350,359,9,360,361,362,363,364,365,366,1,367,368,2,37,369,370,371,23,7,372,373,374,375,376,377,378,26,384,27,385,386,28,387,388,389,390,391,392,393,36,29,394,395,398,399,400,401,30,31,402,403,404,405,406,32,407,408,33,409,410,411,413,414,415,131,133,34,34,5,34,5,131,133,41,42,379,380,410,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,171,8,147,382,382,173,173,137,137,135,135,19,22,2,23,26,27,28,29,30,31,32,33,120,13,159,161,163,381,382,22,2,23,26,27,28,29,30,31,32,33,357,358,22,2,23,26,27,28,29,30,31,32,33,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,46,47,48,49,50,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,22,2,23,26,27,28,29,30,31,32,33,8,143,145,34,22,2,23,26,27,28,29,30,31,32,33,188,19,188,19,35,91,22,2,23,26,27,28,29,30,31,32,33,159,5,5,50,143,145,143,145,188,19,5,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,89,10,94,102,114,116,120,131,155,161,163,12,13,171,188,19,191,34,216,218,226,159,173,238,17,18,199,159,159,159,161,13,199,5,18,5,0,1,1,1,1,1,1,34,357,358,1,1,1,5,1,131,1,1,5,13,1,1,1,135,1,1,1,1,1,135,1,1,1,1,1,1,5,1,5,1,1,188,188,188,13,171,1,5,188,19,1,135,1,1,50,74,74,128,188,188,188,1,5,5,41,42,197,43,8,108,5,143,145,147,149,153,155,18,49,66,77,79,83,86,95,99,101,111,113,132,134,148,156,158,164,167,169,172,187,189,354,200,208,212,215,227,410,229,233,237,411,411,411,10,5,5,155,20,5,10,5,131,5,5,131,91,91,94,94,5,5,10,5,5,5,5,5,5,5,5,5,5,161,5,5,171,161,5,5,5,5,5,10,17,10,5,5,5,5,5,131,1,42,42,17,131,239,50,22,2,23,26,27,28,29,30,31,32,33,222,0,72,82,98,175,179,39,193,195,207,211,232,236,188,188,188,43,177,234,126,126,126,126,126,149,155,357,358,411,380,380,87,42,42,42,22,2,23,26,27,28,387,29,30,31,32,33,0,155,155,3,188,50,35,41,42,10,120,159,118,10,50,159,10,120,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,188,19,112,5,5,354,7,5,17,22,2,23,26,27,28,29,30,31,32,33,50,17,383,122,213,213,213,42,42,147,139,141,13,173,188,19,238,126,137,126,199,199,199,199,131,133,34,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,1,1,1,1,1,1,1,1,1,1,1,1,1,42,84,100,209,80,96,213,102,19,41,42,124,126,128,5,163,12,22,2,23,26,27,28,29,30,31,32,33,128,78,216,216,216,35,188,19,188,19,20,20,78,41,114,141,13,19,168,124,35,216,61,61,128,20,177,234,128,20,128,87,87,87,201,203,205,135,216,41,13,128,141,157,157,149,157,50,102,133,41,124,78,91,213,41,213,188,19,124,124,114,112,199,112,124,114,87,35,35,50,50,50,50,84,100,209,209,159,177,234,124,124,139,124,124,124,188,19,124,124,124,124,124,124,50,114,124,69,67,168,53,41,78,59,173,59,59,173,20,20,135,135,19,13,159,63,63,63,63,63,63,128,57,141,10,94,102,114,120,131,155,161,163,12,13,188,19,34,216,226,159,199,159,159,159,13,199,216,216,216,216,50,216,13,135,135,188,188,188,13,188,19,135,50,124,124,124,124,188,124,124,124,124,124,188,216,216,41,41,197,149,216,82,98,175,179,193,195,207,211,232,236,124,124,124,124,188,124,124,124,124,124,124,188,177,234,50,57,149,87,188,50,35,41,159,50,159,57,57,57,131,34,188,19,188,19,112,124,20,139,20,213,213,213,199,199,199,199,41,35,84,100,209,102,19,41,128,20,128,128,20,124,222,133,199,35,35,149,141,13,84,100,209,209,213,188,19,112,112,124,124,205,181,230,181,230,102,133,41,199,181,230,13,216,13,19,128,20,199,78,41,128,20,13,128,141,59,59,59,124,165,41,124,124,59,124,139,59,124,124,124,19,59,19,124,124,124,124,59,124,124,124,213,124,50,41,112,35,90,222,131,133,137,402,411,199,35,35,149,155,13,91,91,91,91,84,100,209,209,171,10,1,213,188,19,112,112,205,181,230,181,230,91,102,131,133,34,41,199,40,181,230,43,22,2,23,26,27,28,29,30,31,32,33,22,2,23,26,27,28,29,30,31,32,33,13,13,171,19,1,5,5,5,1,1,1,1,1,1,1,1,1,5,1,1,1,1,91,1,1,5,1,1,1,5,5,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,5,1,5,1,1,1,5,1,1,1,1,1,1,1,5,1,1,1,5,1,22,2,23,26,27,28,29,30,31,32,33,126,24,46,199,8,8,41,42,171,13,8,8,1,184,241,353,18,45,46,47,48,49,50,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,22,2,23,26,27,28,29,30,31,32,33,357,358,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,46,47,48,49,50,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,46,47,48,49,50,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,1,1,1,1,1,1,8,242,241,353,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,44,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,439,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,437,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,18,45,46,47,48,49,50,22,356,357,358,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,350,359,9,70,43,71,72,73,74,75,40,76,8,77,78,79,80,81,82,83,84,85,17,360,86,87,88,89,90,91,361,362,363,92,10,93,94,95,96,97,98,99,100,364,101,102,103,104,105,106,107,108,109,110,365,366,111,112,113,114,115,116,1,367,368,2,37,369,370,371,23,7,24,5,117,118,372,373,374,375,376,377,378,26,379,380,381,382,383,119,120,121,122,123,124,125,126,127,128,129,20,384,130,131,132,133,27,134,135,136,137,138,139,140,141,385,142,143,144,145,386,146,147,28,148,149,150,151,152,153,154,155,387,156,157,388,158,159,389,160,161,390,162,163,164,165,166,12,167,168,391,392,169,13,170,171,172,173,174,175,176,177,178,179,180,181,393,36,29,394,182,35,183,184,185,39,186,38,187,188,189,19,190,191,192,193,395,194,195,196,197,396,397,354,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,398,399,400,401,30,31,402,214,34,403,404,405,406,215,216,217,218,219,220,221,222,223,224,225,226,32,407,408,33,227,41,228,42,409,410,411,412,413,414,415,229,230,231,232,233,234,235,236,237,238,239,3,22,2,23,26,27,28,29,30,31,32,33,124,126,128,165,41,42,124,128,124,124,128,124,128,124,124,128,131,358,381,381,184,155,19,19,19,383,213,124,126,128,10,10,50,41,42,379,380,410,65,112,35,379,409,412,1,1,379,409,412,409,380,380],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[1,2],[3,4],0,0,0,[[5,6],7],[8,9],[[10,11]],[[12,13],[[16,[14,15]]]],[[17,4,18]],[[12,19],[[16,[14,15]]]],[[10,11]],0,[20,21],[[],22],[[],2],[[],23],[[],[[25,[24]]]],[[],26],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],33],[34,21],0,[35,36],[5,37],[38,39],[40,21],[41,21],[42,21],[43,44],[45,46],[47,48],[49,50],[51,6],[52,53],[54,55],[56,57],[58,59],[60,61],[62,63],[64,65],[66,67],[68,69],[70,43],[71,72],[73,74],[75,40],[76,8],[77,78],[79,80],[81,82],[83,84],[85,17],[86,87],[88,89],[90,91],[92,10],[93,94],[95,96],[97,98],[99,100],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112],[113,114],[115,116],[24,5],[117,118],[119,120],[121,122],[123,124],[125,126],[127,128],[129,20],[130,131],[132,133],[134,135],[136,137],[138,139],[140,141],[142,143],[144,145],[146,147],[148,149],[150,151],[152,153],[154,155],[156,157],[158,159],[160,161],[162,163],[164,165],[166,12],[167,168],[169,13],[170,171],[172,173],[174,175],[176,177],[178,179],[180,181],[182,35],[183,184],[185,39],[186,38],[187,188],[189,19],[190,191],[192,193],[194,195],[196,197],[198,199],[200,201],[202,203],[204,205],[206,207],[208,209],[210,211],[212,213],[214,34],[215,216],[217,218],[219,220],[221,222],[223,224],[225,226],[227,41],[228,42],[229,230],[231,232],[233,234],[235,236],[237,238],[239,3],[[[241,[240]]],242],[45,243],[47,244],[49,245],[51,246],[52,247],[54,248],[56,249],[58,250],[60,251],[62,252],[64,253],[66,254],[68,255],[70,256],[71,257],[73,258],[75,44],[76,259],[77,260],[79,261],[81,262],[83,263],[85,264],[86,265],[88,266],[90,267],[92,268],[93,269],[95,270],[97,271],[99,272],[101,273],[103,274],[105,275],[107,276],[109,277],[111,278],[113,279],[115,280],[24,281],[117,282],[119,283],[121,284],[123,285],[125,286],[127,287],[129,288],[130,289],[132,290],[134,291],[136,292],[138,293],[140,294],[142,295],[144,296],[146,297],[148,298],[150,299],[152,300],[154,301],[156,302],[158,303],[160,304],[162,305],[164,306],[166,307],[167,308],[169,309],[170,310],[172,311],[174,312],[176,313],[178,314],[180,315],[182,316],[183,317],[185,318],[186,319],[187,320],[189,321],[190,322],[192,323],[194,324],[196,325],[198,326],[200,327],[202,328],[204,329],[206,330],[208,331],[210,332],[212,333],[214,334],[215,335],[217,336],[219,337],[221,338],[223,339],[225,340],[227,341],[228,342],[229,343],[231,344],[233,345],[235,346],[237,347],[239,348],[45,46],[47,48],[49,50],[51,6],[52,53],[54,55],[56,57],[58,59],[60,61],[62,63],[64,65],[66,67],[68,69],[70,43],[71,72],[73,74],[75,40],[76,8],[77,78],[79,80],[81,82],[83,84],[85,17],[86,87],[88,89],[90,91],[92,10],[93,94],[95,96],[97,98],[99,100],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112],[113,114],[115,116],[24,5],[117,118],[119,120],[121,122],[123,124],[125,126],[127,128],[129,20],[130,131],[132,133],[134,135],[136,137],[138,139],[140,141],[142,143],[144,145],[146,147],[148,149],[150,151],[152,153],[154,155],[156,157],[158,159],[160,161],[162,163],[164,165],[166,12],[167,168],[169,13],[170,171],[172,173],[174,175],[176,177],[178,179],[180,181],[182,35],[183,184],[185,39],[186,38],[187,188],[189,19],[190,191],[192,193],[194,195],[196,197],[198,199],[200,201],[202,203],[204,205],[206,207],[208,209],[210,211],[212,213],[214,34],[215,216],[217,218],[219,220],[221,222],[223,224],[225,226],[227,41],[228,42],[229,230],[231,232],[233,234],[235,236],[237,238],[239,3],[1,2],[143,349],[145,349],[143,350],[145,350],[173,[[351,[175]]]],[238,236],[1,2],[114,[[351,[112]]]],0,0,0,[1,2],[89],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[13,[[25,[166]]]],[19,[[25,[166]]]],[168,[[25,[154]]]],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],0,[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],[22,352],[22,352],[2,352],[2,352],[23,21],[23,21],[26,21],[26,21],[27,21],[27,21],[28,21],[28,21],[29,21],[29,21],[30,21],[30,21],[31,21],[31,21],[32,21],[32,21],[33,21],[33,21],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],[[10,80],126],0,[[]],[[[241,[240]]],[[353,[240]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,46],[[]],[[]],[[]],[47,48],[[]],[[]],[49,50],[[]],[[]],[[]],[[]],[[]],[51,6],[[]],[[]],[[]],[52,53],[[]],[54,55],[[]],[[]],[[]],[56,57],[[]],[58,59],[[]],[[]],[[]],[60,61],[[]],[62,63],[[]],[[]],[[]],[64,65],[[]],[66,67],[[]],[[]],[[]],[68,69],[[]],[[]],[[]],[[]],[[]],[70,43],[[]],[[]],[71,72],[[]],[[]],[73,74],[[]],[75,40],[[]],[[]],[76,8],[[]],[[]],[[]],[77,78],[[]],[79,80],[[]],[[]],[81,82],[[]],[[]],[[]],[83,84],[[]],[85,17],[[]],[[]],[[]],[[]],[86,87],[[]],[[]],[88,89],[[]],[90,91],[[]],[[]],[[]],[[]],[[]],[[]],[92,10],[[]],[[]],[93,94],[[]],[[]],[95,96],[[]],[97,98],[[]],[[]],[99,100],[[]],[[]],[[]],[101,102],[[]],[[]],[[]],[103,104],[[]],[105,106],[[]],[[]],[[]],[107,108],[[]],[[]],[109,110],[[]],[[]],[[]],[111,112],[[]],[[]],[113,114],[[]],[[]],[[]],[115,116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,5],[[]],[[]],[117,118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,120],[[]],[[]],[121,122],[[]],[[]],[[]],[123,124],[[]],[[]],[125,126],[[]],[127,128],[[]],[[]],[[]],[129,20],[[]],[[]],[130,131],[[]],[[]],[132,133],[[]],[[]],[[]],[[]],[134,135],[[]],[[]],[136,137],[[]],[138,139],[[]],[[]],[[]],[140,141],[[]],[[]],[[]],[142,143],[[]],[[]],[144,145],[[]],[[]],[[]],[146,147],[[]],[[]],[[]],[148,149],[[]],[[]],[150,151],[[]],[[]],[152,153],[[]],[[]],[154,155],[[]],[[]],[[]],[156,157],[[]],[[]],[[]],[158,159],[[]],[[]],[160,161],[[]],[[]],[[]],[[]],[162,163],[[]],[164,165],[[]],[[]],[166,12],[[]],[[]],[167,168],[[]],[[]],[[]],[[]],[169,13],[[]],[[]],[170,171],[[]],[[]],[172,173],[[]],[[]],[174,175],[[]],[[]],[176,177],[[]],[[]],[[]],[178,179],[[]],[[]],[180,181],[[]],[[]],[[]],[[]],[[]],[182,35],[[]],[[]],[183,184],[[]],[[]],[185,39],[[]],[[]],[[]],[186,38],[[]],[187,188],[[]],[[]],[[]],[189,19],[[]],[190,191],[[]],[[]],[192,193],[[]],[[]],[[]],[[]],[194,195],[[]],[[]],[196,197],[[]],[[]],[[]],[[]],[[]],[198,199],[[]],[200,201],[[]],[[]],[[]],[202,203],[[]],[204,205],[[]],[[]],[206,207],[[]],[[]],[208,209],[[]],[[]],[[]],[210,211],[[]],[212,213],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,34],[[]],[[]],[[]],[[]],[[]],[[]],[215,216],[[]],[217,218],[[]],[[]],[219,220],[[]],[[]],[221,222],[[]],[[]],[223,224],[[]],[[]],[[]],[225,226],[[]],[[]],[[]],[[]],[[]],[227,41],[[]],[[]],[[]],[228,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,230],[[]],[231,232],[[]],[[]],[[]],[233,234],[[]],[235,236],[[]],[[]],[237,238],[[]],[[]],[[]],[239,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,46],[[]],[[]],[47,48],[[]],[[]],[49,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,6],[[]],[52,53],[[]],[[]],[54,55],[[]],[[]],[56,57],[[]],[[]],[[]],[58,59],[[]],[60,61],[[]],[[]],[[]],[62,63],[[]],[64,65],[[]],[[]],[[]],[66,67],[[]],[68,69],[[]],[[]],[[]],[[]],[[]],[[]],[70,43],[[]],[71,72],[[]],[[]],[[]],[73,74],[[]],[[]],[75,40],[[]],[76,8],[[]],[[]],[77,78],[[]],[[]],[[]],[79,80],[[]],[81,82],[[]],[[]],[[]],[83,84],[[]],[[]],[85,17],[[]],[[]],[[]],[86,87],[[]],[[]],[88,89],[[]],[90,91],[[]],[[]],[[]],[[]],[[]],[92,10],[[]],[[]],[93,94],[[]],[[]],[[]],[95,96],[[]],[[]],[97,98],[[]],[99,100],[[]],[[]],[[]],[101,102],[[]],[[]],[103,104],[[]],[[]],[[]],[105,106],[[]],[107,108],[[]],[[]],[109,110],[[]],[[]],[[]],[[]],[111,112],[[]],[[]],[113,114],[[]],[[]],[115,116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,5],[[]],[[]],[[]],[117,118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,120],[[]],[[]],[121,122],[[]],[[]],[[]],[123,124],[[]],[125,126],[[]],[[]],[[]],[127,128],[[]],[129,20],[[]],[[]],[[]],[130,131],[[]],[[]],[132,133],[[]],[[]],[[]],[[]],[134,135],[[]],[[]],[136,137],[[]],[[]],[138,139],[[]],[140,141],[[]],[[]],[[]],[142,143],[[]],[[]],[[]],[144,145],[[]],[[]],[[]],[146,147],[[]],[[]],[148,149],[[]],[[]],[150,151],[[]],[[]],[[]],[152,153],[[]],[[]],[154,155],[[]],[[]],[156,157],[[]],[[]],[[]],[[]],[158,159],[[]],[[]],[[]],[160,161],[[]],[[]],[162,163],[[]],[[]],[[]],[164,165],[[]],[[]],[166,12],[[]],[167,168],[[]],[[]],[[]],[[]],[[]],[169,13],[[]],[170,171],[[]],[[]],[[]],[172,173],[[]],[[]],[174,175],[[]],[176,177],[[]],[[]],[178,179],[[]],[[]],[[]],[180,181],[[]],[[]],[[]],[[]],[[]],[182,35],[[]],[[]],[[]],[183,184],[[]],[185,39],[[]],[[]],[186,38],[[]],[[]],[187,188],[[]],[[]],[189,19],[[]],[[]],[[]],[190,191],[[]],[192,193],[[]],[[]],[[]],[194,195],[[]],[[]],[196,197],[[]],[[]],[[]],[[]],[[]],[[]],[198,199],[[]],[[]],[200,201],[[]],[202,203],[[]],[[]],[[]],[204,205],[[]],[206,207],[[]],[[]],[208,209],[[]],[[]],[[]],[210,211],[[]],[212,213],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,34],[[]],[[]],[[]],[[]],[[]],[[]],[215,216],[[]],[[]],[[]],[217,218],[[]],[219,220],[[]],[[]],[[]],[221,222],[[]],[223,224],[[]],[[]],[225,226],[[]],[[]],[[]],[[]],[[]],[[]],[227,41],[[]],[[]],[228,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,230],[[]],[231,232],[[]],[[]],[[]],[233,234],[[]],[[]],[235,236],[[]],[237,238],[[]],[[]],[[]],[239,3],[[]],[42,[[351,[17]]]],[8,21],[8,21],[8,350],[177,21],[234,21],[42,21],[42,21],[8,74],[13,[[351,[195]]]],[[65,55,6,17,21]],0,[141],[201,354],[203,355],[205,352],[[[241,[240]]],[[241,[240]]]],[18,18],[45,45],[47,47],[49,49],[22,22],[356,356],[357,357],[358,358],[51,51],[52,52],[54,54],[56,56],[58,58],[60,60],[62,62],[64,64],[66,66],[68,68],[350,350],[359,359],[9,9],[70,70],[71,71],[73,73],[75,75],[76,76],[77,77],[79,79],[81,81],[83,83],[85,85],[360,360],[86,86],[88,88],[90,90],[361,361],[362,362],[363,363],[92,92],[93,93],[95,95],[97,97],[99,99],[364,364],[101,101],[103,103],[105,105],[107,107],[109,109],[365,365],[366,366],[111,111],[113,113],[115,115],[1,1],[367,367],[368,368],[2,2],[37,37],[369,369],[370,370],[371,371],[23,23],[7,7],[24,24],[117,117],[372,372],[373,373],[374,374],[375,375],[376,376],[377,377],[378,378],[26,26],[379,379],[380,380],[381,381],[382,382],[383,383],[119,119],[121,121],[123,123],[125,125],[127,127],[129,129],[384,384],[130,130],[132,132],[27,27],[134,134],[136,136],[138,138],[140,140],[385,385],[142,142],[144,144],[386,386],[146,146],[28,28],[148,148],[150,150],[152,152],[154,154],[387,387],[156,156],[388,388],[158,158],[389,389],[160,160],[390,390],[162,162],[164,164],[166,166],[167,167],[391,391],[392,392],[169,169],[170,170],[172,172],[174,174],[176,176],[178,178],[180,180],[393,393],[36,36],[29,29],[394,394],[182,182],[183,183],[185,185],[186,186],[187,187],[189,189],[190,190],[192,192],[395,395],[194,194],[196,196],[396,396],[397,397],[354,354],[198,198],[200,200],[202,202],[204,204],[206,206],[208,208],[210,210],[212,212],[398,398],[399,399],[400,400],[401,401],[30,30],[31,31],[402,402],[214,214],[403,403],[404,404],[405,405],[406,406],[215,215],[217,217],[219,219],[221,221],[223,223],[225,225],[32,32],[407,407],[408,408],[33,33],[227,227],[228,228],[409,409],[410,410],[411,411],[412,412],[413,413],[414,414],[415,415],[229,229],[231,231],[233,233],[235,235],[237,237],[239,239],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,22],416],[[2,2],416],[[23,23],416],[[26,26],416],[[27,27],416],[[28,28],416],[[387,387],416],[[29,29],416],[[30,30],416],[[31,31],416],[[32,32],416],[[33,33],416],[188,193],[19,193],[213,207],[135,27],[10],[22,22],[2,2],[23,23],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[41,408],[[10,96],128],[[10,363],128],[13,[[351,[155]]]],[[141,410,410]],[[141,410,410]],[48,[[16,[14,15]]]],[[20,21],417],[149,157],[[22,22],14],[[2,2],14],[[23,23],14],[[26,26],14],[[27,27],14],[[28,28],14],[[29,29],14],[[30,30],14],[[31,31],14],[[32,32],14],[[33,33],14],[17,417],[50,418],[[65,55,55]],[[126,17,21,17,21,21]],[[126,17,21,21,21,410,42,21,21,409,26]],[[126,42,21,21,409,410,42,21,21,409]],[[126,42,21,21,409,410,17,21,21,21,26]],[[126,137,18,137,21]],[1,352],[72,21],[39,21],[102,108],[5,[[25,[107]]]],[131,399],[133,399],[34,399],[41,399],[5,21],[131,21],[5,14],[43,350],[147,350],[[],22],[[],357],[[],358],[[],395],[[],409],[[],410],[[],411],[[],412],[[],413],[91,[[351,[89]]]],[213,21],[41,21],[42,21],0,[1,2],[1,2],[1,2],[1,2],[213,[[351,[203]]]],[188,364],[19,364],[114,365],[112,366],[199,21],[112,366],[114,14],[[[241,[240]]],[[353,[240]]]],[45,46],[46],[47,48],[49,50],[51,6],[6],[52,53],[53],[54,55],[55],[56,57],[57],[58,59],[59],[60,61],[61],[62,63],[63],[64,65],[65],[66,67],[67],[68,69],[69],[70,43],[71,72],[73,74],[75,40],[76,8],[77,78],[79,80],[81,82],[83,84],[85,17],[17],[86,87],[88,89],[90,91],[92,10],[93,94],[95,96],[97,98],[99,100],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112],[113,114],[115,116],[24,5],[117,118],[119,120],[121,122],[122],[123,124],[124],[125,126],[126],[127,128],[128],[129,20],[130,131],[132,133],[134,135],[136,137],[137],[138,139],[140,141],[142,143],[144,145],[146,147],[148,149],[150,151],[151],[152,153],[154,155],[156,157],[158,159],[160,161],[162,163],[164,165],[166,12],[167,168],[169,13],[170,171],[172,173],[174,175],[176,177],[178,179],[180,181],[182,35],[183,184],[185,39],[186,38],[187,188],[189,19],[190,191],[192,193],[194,195],[196,197],[198,199],[200,201],[201],[202,203],[203],[204,205],[205],[206,207],[208,209],[210,211],[212,213],[214,34],[34],[215,216],[217,218],[219,220],[221,222],[222],[223,224],[225,226],[227,41],[228,42],[42],[229,230],[231,232],[233,234],[235,236],[237,238],[239,3],[45,46],[47,48],[49,50],[51,6],[52,53],[54,55],[56,57],[58,59],[60,61],[62,63],[64,65],[66,67],[68,69],[70,43],[71,72],[73,74],[75,40],[76,8],[77,78],[79,80],[81,82],[83,84],[85,17],[86,87],[88,89],[90,91],[92,10],[93,94],[95,96],[97,98],[99,100],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112],[113,114],[115,116],[24,5],[117,118],[119,120],[121,122],[123,124],[125,126],[127,128],[129,20],[130,131],[132,133],[134,135],[136,137],[138,139],[140,141],[142,143],[144,145],[146,147],[148,149],[150,151],[152,153],[154,155],[156,157],[158,159],[160,161],[162,163],[164,165],[166,12],[167,168],[169,13],[170,171],[172,173],[174,175],[176,177],[178,179],[180,181],[182,35],[183,184],[185,39],[186,38],[187,188],[189,19],[190,191],[192,193],[194,195],[196,197],[198,199],[200,201],[202,203],[204,205],[206,207],[208,209],[210,211],[212,213],[214,34],[215,216],[217,218],[219,220],[221,222],[223,224],[225,226],[227,41],[228,42],[229,230],[231,232],[233,234],[235,236],[237,238],[239,3],[[],52],[[],58],[[],60],[[],62],[87,360],[35,393],[35,393],[50,5],[94,5],[116,5],[131,5],[153,5],[155,5],[161,5],[163,5],[12,5],[191,5],[34,5],[218,5],[220,5],[226,5],[[17,18]],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],0,[[128,410,410]],[[128,17,21,410]],[[128,410,410]],[50,14],[[139,21,21,21,17,21,17,21,21,21,17,21,21]],[[124,372,21,373,17,21]],[[139,372,21,373,17,21,21,21,21]],[[124,372,373,17,21,17,21]],[[124,372,21,373,17,21,21]],[[124,372,21,373,17,21,21,419,21]],[[124,410,410,410]],[[124,17,21,410,410]],[[124,410,410,410]],[[139,21,21,21,17,21,21,21,17,21,21]],[[124,372,21,21]],[[139,372,21,21,21,21]],[[124,372,17,21]],[[124,372,21,21,21]],[[124,372,21,21,21,21]],[118,21],[50,420],[[[241,[240]]]],[45],[47],[49],[51],[52],[54],[56],[58],[60],[62],[64],[66],[68],[70],[71],[73],[75],[76],[77],[79],[81],[83],[85],[86],[88],[90],[92],[93],[95],[97],[99],[101],[103],[105],[107],[109],[111],[113],[115],[24],[117],[119],[121],[123],[125],[127],[129],[130],[132],[134],[136],[138],[140],[142],[144],[146],[148],[150],[152],[154],[156],[158],[160],[162],[164],[166],[167],[169],[170],[172],[174],[176],[178],[180],[182],[183],[185],[186],[187],[189],[190],[192],[194],[196],[198],[200],[202],[204],[206],[208],[210],[212],[214],[215],[217],[219],[221],[223],[225],[227],[228],[229],[231],[233],[235],[237],[239],[1,2],[40,44],[40,258],[40,350],[[],22],[[],2],[[],23],[[],26],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],33],[[10,220,349]],[[10,220,349]],[20,21],[120],[84,21],[100,21],[209,21],[209,21],[89],[10],[[22,22],14],[[356,356],14],[[357,357],14],[[358,358],14],[[350,350],14],[[359,359],14],[[9,9],14],[[360,360],14],[[361,361],14],[[362,362],14],[[363,363],14],[[364,364],14],[[365,365],14],[[366,366],14],[[1,1],14],[[367,367],14],[[368,368],14],[[2,2],14],[[37,37],14],[[369,369],14],[[370,370],14],[[371,371],14],[[23,23],14],[[7,7],14],[[372,372],14],[[373,373],14],[[374,374],14],[[375,375],14],[[376,376],14],[[377,377],14],[[378,378],14],[[26,26],14],[[384,384],14],[[27,27],14],[[385,385],14],[[386,386],14],[[28,28],14],[[387,387],14],[[388,388],14],[[389,389],14],[[390,390],14],[[391,391],14],[[392,392],14],[[393,393],14],[[36,36],14],[[29,29],14],[[394,394],14],[[395,395],14],[[398,398],14],[[399,399],14],[[400,400],14],[[401,401],14],[[30,30],14],[[31,31],14],[[402,402],14],[[403,403],14],[[404,404],14],[[405,405],14],[[406,406],14],[[32,32],14],[[407,407],14],[[408,408],14],[[33,33],14],[[409,409],14],[[410,410],14],[[411,411],14],[[412,412],14],[[413,413],14],[[414,414],14],[[415,415],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[124,137,18]],[[22,421]],[[2,421]],[[23,421]],[[26,421]],[[27,421]],[[28,421]],[[29,421]],[[30,421]],[[31,421]],[[32,421]],[[33,421]],[[126,17,18,422]],[[45,423],424],[[46,423],424],[[47,423],424],[[48,423],424],[[49,423],424],[[50,423],424],[[22,423],424],[[22,423],424],[[22,423],424],[[22,423],424],[[22,423],424],[[356,423],424],[[357,423],424],[[358,423],424],[[51,423],424],[[6,423],424],[[52,423],424],[[53,423],424],[[54,423],424],[[55,423],424],[[56,423],424],[[57,423],424],[[58,423],424],[[59,423],424],[[60,423],424],[[61,423],424],[[62,423],424],[[63,423],424],[[64,423],424],[[65,423],424],[[66,423],424],[[67,423],424],[[68,423],424],[[69,423],424],[[350,423],424],[[359,423],424],[[9,423],424],[[70,423],424],[[43,423],424],[[71,423],424],[[72,423],424],[[73,423],424],[[74,423],424],[[75,423],424],[[40,423],424],[[76,423],424],[[8,423],424],[[77,423],424],[[78,423],424],[[79,423],424],[[80,423],424],[[81,423],424],[[82,423],424],[[83,423],424],[[84,423],424],[[85,423],424],[[17,423],424],[[360,423],424],[[86,423],424],[[87,423],424],[[88,423],424],[[89,423],424],[[90,423],424],[[91,423],424],[[361,423],424],[[362,423],424],[[363,423],424],[[92,423],424],[[10,423],424],[[93,423],424],[[94,423],424],[[95,423],424],[[96,423],424],[[97,423],424],[[98,423],424],[[99,423],424],[[100,423],424],[[364,423],424],[[101,423],424],[[102,423],424],[[103,423],424],[[104,423],424],[[105,423],424],[[106,423],424],[[107,423],424],[[108,423],424],[[109,423],424],[[110,423],424],[[365,423],424],[[366,423],424],[[111,423],424],[[112,423],424],[[113,423],424],[[114,423],424],[[115,423],424],[[116,423],424],[[1,423],424],[[367,423],424],[[368,423],424],[[2,423],424],[[2,423],424],[[2,423],424],[[2,423],424],[[2,423],424],[[37,423],424],[[369,423],424],[[370,423],424],[[371,423],424],[[23,423],424],[[23,423],424],[[23,423],424],[[23,423],424],[[23,423],424],[[7,423],424],[[24,423],424],[[5,423],424],[[117,423],424],[[118,423],424],[[372,423],424],[[373,423],424],[[374,423],424],[[375,423],424],[[376,423],424],[[377,423],424],[[378,423],424],[[26,423],424],[[26,423],424],[[26,423],424],[[26,423],424],[[26,423],424],[[379,423],424],[[380,423],424],[[381,423],424],[[382,423],424],[[383,423],424],[[119,423],424],[[120,423],424],[[121,423],424],[[122,423],424],[[123,423],424],[[124,423],424],[[125,423],424],[[126,423],424],[[127,423],424],[[128,423],424],[[129,423],424],[[20,423],424],[[384,423],424],[[130,423],424],[[131,423],424],[[132,423],424],[[133,423],424],[[27,423],424],[[27,423],424],[[27,423],424],[[27,423],424],[[27,423],424],[[134,423],424],[[135,423],424],[[136,423],424],[[137,423],424],[[138,423],424],[[139,423],424],[[140,423],424],[[141,423],424],[[385,423],424],[[142,423],424],[[143,423],424],[[144,423],424],[[145,423],424],[[386,423],424],[[146,423],424],[[147,423],424],[[28,423],424],[[28,423],424],[[28,423],424],[[28,423],424],[[28,423],424],[[148,423],424],[[149,423],424],[[150,423],424],[[151,423],424],[[152,423],424],[[153,423],424],[[154,423],424],[[155,423],424],[[387,423],424],[[156,423],424],[[157,423],424],[[388,423],424],[[158,423],424],[[159,423],424],[[389,423],424],[[160,423],424],[[161,423],424],[[390,423],424],[[162,423],424],[[163,423],424],[[164,423],424],[[165,423],424],[[166,423],424],[[12,423],424],[[167,423],424],[[168,423],424],[[391,423],424],[[392,423],424],[[169,423],424],[[13,423],424],[[170,423],424],[[171,423],424],[[172,423],424],[[173,423],424],[[174,423],424],[[175,423],424],[[176,423],424],[[177,423],424],[[178,423],424],[[179,423],424],[[180,423],424],[[181,423],424],[[393,423],424],[[36,423],424],[[29,423],424],[[29,423],424],[[29,423],424],[[29,423],424],[[29,423],424],[[394,423],424],[[182,423],424],[[35,423],424],[[183,423],424],[[184,423],424],[[185,423],424],[[39,423],424],[[186,423],424],[[38,423],424],[[187,423],424],[[188,423],424],[[189,423],424],[[19,423],424],[[190,423],424],[[191,423],424],[[192,423],424],[[193,423],424],[[395,423],424],[[194,423],424],[[195,423],424],[[196,423],424],[[197,423],424],[[396,423],424],[[397,423],424],[[354,423],424],[[198,423],424],[[199,423],424],[[200,423],424],[[201,423],424],[[202,423],424],[[203,423],424],[[204,423],424],[[205,423],424],[[206,423],424],[[207,423],424],[[208,423],424],[[209,423],424],[[210,423],424],[[211,423],424],[[212,423],424],[[213,423],424],[[398,423],424],[[399,423],424],[[400,423],424],[[401,423],424],[[30,423],424],[[30,423],424],[[30,423],424],[[30,423],424],[[30,423],424],[[31,423],424],[[31,423],424],[[31,423],424],[[31,423],424],[[31,423],424],[[402,423],424],[[214,423],424],[[34,423],424],[[403,423],424],[[404,423],424],[[405,423],424],[[406,423],424],[[215,423],424],[[216,423],424],[[217,423],424],[[218,423],424],[[219,423],424],[[220,423],424],[[221,423],424],[[222,423],424],[[223,423],424],[[224,423],424],[[225,423],424],[[226,423],424],[[32,423],424],[[32,423],424],[[32,423],424],[[32,423],424],[[32,423],424],[[407,423],424],[[408,423],424],[[33,423],424],[[33,423],424],[[33,423],424],[[33,423],424],[[33,423],424],[[227,423],424],[[41,423],424],[[228,423],424],[[42,423],424],[[409,423],424],[[410,423],424],[[411,423],424],[[412,423],424],[[413,423],424],[[414,423],424],[[415,423],424],[[229,423],424],[[230,423],424],[[231,423],424],[[232,423],424],[[233,423],424],[[234,423],424],[[235,423],424],[[236,423],424],[[237,423],424],[[238,423],424],[[239,423],424],[[3,423],424],0,[177,391],[234,414],[184,39],[188,[[351,[195]]]],[19,[[351,[195]]]],[188,[[351,[155]]]],[19,[[351,[155]]]],[50,14],[42,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,47],[56,47],[51,47],[66,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,51],[[]],[52,51],[[]],[[]],[[]],[[]],[[]],[58,56],[60,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,119],[121,119],[127,119],[125,119],[123,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,198],[202,198],[[]],[200,198],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,214],[136,214],[228,214],[[]],[68,214],[54,214],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[221,219],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[352,[[351,[22]]]],[352,[[351,[2]]]],[21,[[351,[23]]]],[21,[[351,[26]]]],[21,[[351,[27]]]],[21,[[351,[28]]]],[21,[[351,[29]]]],[21,[[351,[30]]]],[21,[[351,[31]]]],[21,[[351,[32]]]],[21,[[351,[33]]]],[352,22],[352,22],[352,2],[352,2],[21,23],[21,23],[21,26],[21,26],[21,27],[21,27],[21,28],[21,28],[21,29],[21,29],[21,30],[21,30],[21,31],[21,31],[21,32],[21,32],[21,33],[21,33],[352,22],[352,2],[21,23],[21,26],[21,27],[21,28],[21,29],[21,30],[21,31],[21,32],[21,33],[421,22],[421,2],[421,23],[421,26],[421,27],[421,28],[421,29],[421,30],[421,31],[421,32],[421,33],[4,[[351,[22]]]],[4,[[351,[2]]]],[4,[[351,[23]]]],[4,[[351,[26]]]],[4,[[351,[27]]]],[4,[[351,[28]]]],[4,[[351,[29]]]],[4,[[351,[30]]]],[4,[[351,[31]]]],[4,[[351,[32]]]],[4,[[351,[33]]]],[[[425,[240]]],[[353,[240]]]],[242,[[241,[240]]]],[243,45],[244,47],[245,49],[246,51],[247,52],[248,54],[249,56],[250,58],[251,60],[252,62],[253,64],[254,66],[255,68],[256,70],[257,71],[258,73],[44,75],[259,76],[260,77],[261,79],[262,81],[263,83],[264,85],[265,86],[266,88],[267,90],[268,92],[269,93],[270,95],[271,97],[272,99],[273,101],[274,103],[275,105],[276,107],[277,109],[278,111],[279,113],[280,115],[281,24],[282,117],[283,119],[284,121],[285,123],[286,125],[287,127],[288,129],[289,130],[290,132],[291,134],[292,136],[293,138],[294,140],[295,142],[296,144],[297,146],[298,148],[299,150],[300,152],[301,154],[302,156],[303,158],[304,160],[305,162],[306,164],[307,166],[308,167],[309,169],[310,170],[311,172],[312,174],[313,176],[314,178],[315,180],[316,182],[317,183],[318,185],[319,186],[320,187],[321,189],[322,190],[323,192],[324,194],[325,196],[326,198],[327,200],[328,202],[329,204],[330,206],[331,208],[332,210],[333,212],[334,214],[335,215],[336,217],[337,219],[338,221],[339,223],[340,225],[341,227],[342,228],[343,229],[344,231],[345,233],[346,235],[347,237],[348,239],[426,223],[425,[[353,[240]]]],[114,[[351,[112]]]],[155,427],[[171,155],[[351,[153]]]],[161,[[25,[15]]]],[153,386],[155,386],[168,[[25,[154]]]],[1,2],[[126,42]],[[42,417,21,411,21]],[[42,417,21,21,411,21,21]],[[161,4,[351,[156]]],[[16,[154,15]]]],[17,349],[42,413],0,[5,14],[[22,428]],[[356,428]],[[350,428]],[[359,428]],[[9,428]],[[360,428]],[[361,428]],[[362,428]],[[363,428]],[[364,428]],[[365,428]],[[366,428]],[[1,428]],[[367,428]],[[368,428]],[[2,428]],[[37,428]],[[369,428]],[[370,428]],[[371,428]],[[23,428]],[[7,428]],[[372,428]],[[373,428]],[[374,428]],[[375,428]],[[376,428]],[[377,428]],[[378,428]],[[26,428]],[[384,428]],[[27,428]],[[385,428]],[[386,428]],[[28,428]],[[387,428]],[[388,428]],[[389,428]],[[390,428]],[[391,428]],[[392,428]],[[393,428]],[[36,428]],[[29,428]],[[394,428]],[[395,428]],[[398,428]],[[399,428]],[[400,428]],[[401,428]],[[30,428]],[[31,428]],[[402,428]],[[403,428]],[[404,428]],[[405,428]],[[406,428]],[[32,428]],[[407,428]],[[408,428]],[[33,428]],[[409,428]],[[410,428]],[[411,428]],[[413,428]],[[414,428]],[[415,428]],[131,401],[133,401],[34,401],[34,131],[[5,21,30],402],[34,21],[[5,41],402],[131,384],[133,384],[41,21],[42,21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[171,410],21],[8,21],[147,21],0,0,[173,21],[173,373],[[137,21],141],[[137,21],139],[135,14],[135,14],[19,394],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],[[120,4]],[13,[[25,[162]]]],[159,4],[161,[[351,[4]]]],[163,4],0,0,[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],0,0,[[22,22],14],[[2,2],14],[[23,23],14],[[26,26],14],[[27,27],14],[[28,28],14],[[29,29],14],[[30,30],14],[[31,31],14],[[32,32],14],[[33,33],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22],[2],[23],[26],[27],[28],[29],[30],[31],[32],[33],[8,14],[143,14],[145,14],[34,14],[22,14],[2,14],[23,14],[26,14],[27,14],[28,14],[29,14],[30,14],[31,14],[32,14],[33,14],[188,14],[19,14],[188,14],[19,14],[35,14],[91,14],[22,14],[2,14],[23,14],[26,14],[27,14],[28,14],[29,14],[30,14],[31,14],[32,14],[33,14],[159,14],[5,14],[5,14],[50,14],[143,14],[145,14],[143,14],[145,14],[188,14],[19,14],[5,14],[22,[[429,[22]]]],[2,[[429,[2]]]],[23,[[429,[23]]]],[26,[[429,[26]]]],[27,[[429,[27]]]],[28,[[429,[28]]]],[29,[[429,[29]]]],[30,[[429,[30]]]],[31,[[429,[31]]]],[32,[[429,[32]]]],[33,[[429,[33]]]],[22,[[430,[22]]]],[2,[[430,[2]]]],[23,[[430,[23]]]],[26,[[430,[26]]]],[27,[[430,[27]]]],[28,[[430,[28]]]],[29,[[430,[29]]]],[30,[[430,[30]]]],[31,[[430,[31]]]],[32,[[430,[32]]]],[33,[[430,[33]]]],[89,4],[10,4],[94,4],[102,4],[114,4],[116,4],[120,4],[131,4],[155,4],[161,4],[163,4],[12,4],[13,4],[171,4],[188,4],[19,4],[191,4],[34,4],[216,4],[218,4],[226,4],[159,387],[173,[[351,[179]]]],[238,232],[17,349],0,[199,21],[159,[[25,[162]]]],[159,[[353,[162]]]],[159,388],[161,388],[13,168],[199,396],[5,368],0,[5,21],0,0,0,0,0,0,0,[34],0,0,[1,352],[1,352],[1,352],[5,21],[1,352],[[131,21],21],[1,352],[1,352],[5,21],[13,21],[1,352],[1,[[351,[352]]]],[1,352],[135,21],[1,352],[1,352],[1,352],[1,352],[1,352],[135,21],[1,352],[1,352],[1,352],[1,352],[1,352],[1,352],[5,21],[1,352],[5,410],[1,[[351,[352]]]],[1,352],[188,21],[188,21],[188,21],[13,21],[171,21],[1,352],[5,349],[188,21],[19,21],[1,352],[135,21],[1,352],[1,352],[50,21],[[74,4],[[351,[43]]]],[74,72],[[128,[425,[34]]]],[188,[[351,[195]]]],[188,[[351,[155]]]],[188,14],[1,352],[[5,364],21],[[5,364],21],[41,21],[42,21],[197,395],[43,4],[8,4],[108,4],[5,4],[143,4],[145,4],[147,4],[149,4],[153,4],[155,4],[[21,21],18],[[],49],[[],66],[[],78],[[],80],[[],83],[[],86],[[],96],[[],99],[[],101],[[],111],[[],113],[[],132],[[],134],[[],148],[[],156],[[],158],[[],164],[[],167],[[],169],[[],173],[[],187],[[],189],[[355,355,355,355],354],[[],200],[[],208],[[],213],[[],215],[[],227],[[21,21,21],410],[[],229],[[],233],[[],238],[[21,21],411],[[21,21,21,21],411],[[21,21,21,21,21,21],411],[10,65],[[5,21],54],[[5,[353,[77]]],129],[[155,21],129],[[20,21],129],[[5,165],[[16,[166,15]]]],[10,126],[[5,349,30],85],[[131,349,30],[[351,[85]]]],[[5,417,21,30,[351,[11]]],85],[[5,417,21,30],85],[[131,349,30,349],[[351,[85]]]],[[91,94],88],[[91,5],88],[94,10],[94,10],[5,93],[[5,21],93],[10,128],[[5,13],[[16,[170,15]]]],[[5,155],[[16,[170,15]]]],[[5,13,23],[[16,[15]]]],[[5,102],[[16,[103,15]]]],[5,160],[[5,114],115],[[5,161],[[16,[162,15]]]],[[5,3],[[16,[162,15]]]],[5,219],[5,225],[[161,149],[[16,[154,15]]]],[[5,133],130],[[5,135,21,30],136],[[171,67],68],[[161,151],[[16,[154,15]]]],[[5,[425,[422]]],[[16,[160,15]]]],[[5,[432,[431]]],[[16,[160,15]]]],[[5,4,159],[[16,[160,15]]]],[[5,188],[[16,[190,15]]]],[[5,188,23],[[16,[15]]]],[[10,213],122],[[17,5],85],[[10,213],124],[[5,19],[[16,[190,15]]]],[[5,19,23],[[16,[15]]]],[[5,216],217],[5,221],[[5,41],228],[[131,41],[[351,[228]]]],[1,[[351,[352]]]],[[42,364],228],[[42,364,407,18,18],228],[[17,41,349,349],228],[[131,41,349],[[351,[228]]]],[4,239],[50,[[351,[46]]]],[22,22],[2,2],[23,23],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[222,224,349,433]],0,[[72,21],[[351,[43]]]],[[82,21],[[351,[84]]]],[[98,21],[[351,[100]]]],[[175,21],[[351,[177]]]],[[179,21],[[351,[181]]]],[[39,21],[[351,[8]]]],[[193,21],[[351,[35]]]],[[195,21],[[351,[197]]]],[[207,21],[[351,[201]]]],[[211,21],[[351,[209]]]],[[232,21],[[351,[230]]]],[[236,21],[[351,[234]]]],[188,[[351,[195]]]],[188,[[351,[155]]]],[188,14],[43,21],[177,21],[234,21],[[126,42]],[[126,42,21,21]],[[126,42]],[[126,42,21,21]],[[126,137,18]],[149,28],[155,28],0,0,0,0,0,[87,431],[42,21],[42,21],[42,[[351,[42]]]],[[22,22],[[351,[416]]]],[[2,2],[[351,[416]]]],[[23,23],[[351,[416]]]],[[26,26],[[351,[416]]]],[[27,27],[[351,[416]]]],[[28,28],[[351,[416]]]],[[387,387],[[351,[416]]]],[[29,29],[[351,[416]]]],[[30,30],[[351,[416]]]],[[31,31],[[351,[416]]]],[[32,32],[[351,[416]]]],[[33,33],[[351,[416]]]],0,[155,21],[155,385],[3,4],[188,21],[50,364],[35,364],[41,364],[42,364],[10],[120],[159,427],[118],[[10,118]],[50,14],[159,14],[[10,4]],[[120,4]],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[5,14],[188,21],[19,21],[112,352],[5,369],[5,349],0,0,[5,349],[17,17],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],[50],[17],0,[122,124],[213,21],[213,21],[213,21],[[42,411,21,417,21]],[[42,411,21,21,417,21,21]],[147,14],[139],[141],[13],[173],[188],[19],[238],[[126,137,18]],[[137,18]],[[126,104,18,17,21]],[199,21],[199,21],[199,21],[199,[[351,[42]]]],[131,30],[133,30],[34,30],[41,30],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[35,36],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[42,[[351,[34]]]],[84,104],[100,104],[209,104],[80,82],[96,98],[213,211],[102,349],[19,21],[41,21],[42,21],[[124,104,21,14]],[[126,104,21,14]],[[128,104,21,14]],[[5,349,349]],[[163,3],[[16,[14,15]]]],[[12,3],[[16,[14,15]]]],[[22,22,14]],[[2,2,14]],[[23,23,14]],[[26,26,14]],[[27,27,14]],[[28,28,14]],[[29,29,14]],[[30,30,14]],[[31,31,14]],[[32,32,14]],[[33,33,14]],[[128,21,[351,[55]]]],[[78,9]],[[216,405]],[[216,405]],[[216,405]],[[35,36]],[[188,14]],[[19,14]],[[188,14]],[[19,14]],[[20,17,21]],[[20,21,17,21]],[[78,21]],[[41,21]],[[114,[351,[112]]]],[141],[[13,[425,[12]]]],[[19,[425,[12]]]],[[168,[425,[155]]]],[[124,434,434,434,434]],[[35,14]],[[216,406]],[[61,[351,[17]]]],[[61,21]],[[128,21,[351,[17]],21]],[[20,21,17,21]],[[177,21]],[[234,21]],[[128,21,[425,[[351,[17]]]],[425,[21]]]],[[20,21,[425,[17]],[425,[21]]]],[[128,21,21,417]],[[87,94]],[[87,5]],[[87,89]],[[201,354]],[[203,355]],[[205,352]],[[135,27]],[[216,365]],[[41,408]],[[13,[351,[155]]]],[[128,171]],[[141,171]],[[157,435,350,21]],[[157,435,350,4]],[[149,157]],[[157,435,350,18]],[[50,418]],[[102,108]],[[133,399]],[[41,399]],[[124,375]],[[78,350]],[[91,89]],[[213,21]],[[41,21]],[[213,[351,[203]]]],[[188,364]],[[19,364]],[[124,434,434,434]],[[124,377]],[[114,365]],[[112,366]],[[199,21]],[[112,366]],[[124,116]],[[114,14]],[[87,360]],[[35,393]],[[35,393]],[[50,5]],[[50,14]],[[50,420]],[[50,349]],[[84,21]],[[100,21]],[[209,21]],[[209,21]],[[159,14]],[[177,391]],[[234,414]],[[124,21,[351,[55]]]],[[124,21,[351,[17]],21]],[[139,21,[351,[17]],21]],[[124,21,21]],[[124,21,[425,[[351,[17]]]],[425,[21]]]],[[124,21,21,417]],[[188,[351,[155]]]],[[19,[351,[155]]]],[[124,21,[351,[69]]]],[[124,21,[351,[218]]]],[[124,21,[351,[218]],[436,[434]]]],[[124,21,[425,[[351,[218]]]]]],[[124,21,[351,[42]]]],[[124,21,[425,[[351,[42]]]]]],[[50,14]],[[114,[351,[112]]]],[[124,376]],[[69,153,21]],[[67,21]],[[168,[425,[155]]]],[[53,[353,[56]]]],[[41,21]],[[78,21]],[[59,[351,[17]]]],[[173,21]],[[59,21]],[[59,373]],[[173,373]],[[20,21,137]],[[20,21,[425,[137]]]],[[135,14]],[[135,14]],[[19,394]],[[13,[425,[163]]]],[[159,4]],[[63,21]],[[63,17]],[[63,21]],[[63,21]],[[63,356]],[[63,[353,[54]]]],[[128,21,[351,[69]]]],[[57,21]],[[141,21,[351,[17]],21]],[[10,4]],[[94,4]],[[102,4]],[[114,4]],[[120,4]],[[131,4]],[[155,4]],[[161,4]],[[163,4]],[[12,4]],[[13,4]],[[188,4]],[[19,4]],[[34,4]],[[216,4]],[[226,4]],[[159,387]],[[199,21]],[[159,[425,[163]]]],[[159,[353,[162]]]],[[159,388]],[[13,168]],[[199,396]],[[216,14]],[[216,434]],[[216,434]],[[216,403]],[[50,14]],[[216,21]],[[13,21]],[[135,21]],[[135,21]],[[188,21]],[[188,21]],[[188,21]],[[13,21]],[[188,21]],[[19,21]],[[135,21]],[[50,21]],[[124,21,[351,[17]],21]],[[124,21,21]],[[124,21,[425,[[351,[17]]]],[425,[21]]]],[[124,21,21,417]],[[188,[351,[155]]]],[[124,21,[351,[218]]]],[[124,21,[351,[218]],[436,[434]]]],[[124,21,[425,[[351,[218]]]]]],[[124,21,[351,[42]]]],[[124,21,[425,[[351,[42]]]]]],[[188,14]],[[216,403]],[[216,404]],[[41,21]],[[41,410]],[[197,395]],[[149,4]],[[216,14]],[[82,21,[351,[84]]]],[[98,21,[351,[100]]]],[[175,21,[351,[177]]]],[[179,21,[351,[181]]]],[[193,21,[351,[35]]]],[[195,21,[351,[197]]]],[[207,21,[351,[201]]]],[[211,21,[351,[209]]]],[[232,21,[351,[230]]]],[[236,21,[351,[234]]]],[[124,21,[351,[17]],21]],[[124,21,21]],[[124,21,[425,[[351,[17]]]],[425,[21]]]],[[124,21,21,417]],[[188,[351,[155]]]],[[124,21,[351,[218]]]],[[124,21,[351,[218]],[436,[434]]]],[[124,21,[425,[[351,[218]]]]]],[[124,21,[351,[42]]]],[[124,21,[425,[[351,[42]]]]]],[[124,21,21]],[[188,14]],[[177,21]],[[234,21]],[[50,14]],[[57,14]],[[149,28]],[[87,[432,[431]]]],[[188,21]],[[50,364]],[[35,364]],[[41,364]],[[159,427]],[[50,14]],[[159,14]],[[57,[351,[17]]]],[[57,21]],[[57,21]],[[131,398],398],[[34,398],398],[[188,21]],[[19,21]],[[188,14]],[[19,14]],[[112,352]],[[124,191]],[[20,21,191]],[[139,191]],[[20,21,[425,[191]]]],[[213,21]],[[213,21]],[[213,21]],[[199,21]],[[199,21]],[[199,21]],[[199,[351,[42]]]],[[41,30]],[[35,36]],[[84,104]],[[100,104]],[[209,104]],[[102,349]],[[19,21]],[[41,21]],[[128,21,[351,[218]]]],[[20,21,218]],[[128,21,[351,[218]],[436,[434]]]],[[128,21,[425,[[351,[218]]]]]],[[20,21,[425,[218]]]],[[124,379]],[[222,349]],[[133,21]],[[199,21]],[[35,393]],[[35,393]],[[149,4]],[[141,411]],[[13,[351,[173]]]],[[84,21]],[[100,21]],[[209,21]],[[209,21]],[[213,[351,[205]]]],[[188,364]],[[19,364]],[[112,365]],[[112,366]],[[124,352,352]],[[124,352]],[[205,437]],[[181,392]],[[230,415]],[[181,21]],[[230,21]],[[102,400]],[[133,400]],[[41,400]],[[199,397]],[[181,21]],[[230,21]],[[13,14]],[[216,14]],[[13,14]],[[19,14]],[[128,21,[351,[42]]]],[[20,21,42]],[[199,[351,[42]]]],[[78,407]],[[41,407]],[[128,21,[425,[[351,[42]]]]]],[[20,21,[425,[42]]]],[[13,14]],[[128,21,21]],[[141,21,21]],[[59,[351,[17]]]],[[59,21]],[[59,21]],[[124,378]],[[165,3]],[[41,33]],[[124,21,[351,[55]]]],[[124,21,[351,[[425,[383]]]]]],[[59,[351,[17]]]],[[124,21,[351,[17]],21]],[[139,21,[351,[17]],21]],[[59,21]],[[124,21,21]],[[124,21,[425,[[351,[17]]]],[425,[21]]]],[[124,21,21,417]],[[19,[351,[238]]]],[[59,391]],[[19,[351,[155]]]],[[124,21,[351,[69]]]],[[124,21,[351,[218]]]],[[124,21,[351,[218]],[436,[434]]]],[[124,21,[425,[[351,[218]]]]]],[[59,21]],[[124,21,[351,[42]]]],[[124,21,[425,[[351,[42]]]]]],[[124,380]],[[213,[351,[17]]]],[[124,374,21]],[[50,14]],[[41,21]],[[112,352]],[[35,29]],[[],91],[222,349],[131,21],[133,21],[137,21],0,0,[199,21],[35,393],[35,393],[149,4],[155,[[241,[144]]]],[13,[[351,[173]]]],[[91,87],[[16,[15]]]],[[91,94]],[[91,5]],[[91,89]],[84,21],[100,21],[209,21],[209,21],[171,21],[10,361],[1,2],[213,[[351,[205]]]],[188,364],[19,364],[112,365],[112,366],[205,437],[181,392],[230,415],[181,21],[230,21],[91],[102,400],[131,400],[133,400],[34,400],[41,400],[199,397],[40,21],[181,21],[230,21],[43,258],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],[13,14],[13,14],[171,14],[19,14],[1,14],[5,14],[5,14],[5,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[5,370],14],[1,14],[1,14],[1,14],[1,14],[[91,360],14],[1,14],[1,14],[5,14],[1,14],[1,14],[1,14],[[5,367],14],[[5,1],14],[1,14],[5,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[5,14],[1,14],[1,14],[5,14],[1,14],[5,14],[1,14],[1,14],[1,14],[5,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[5,21],14],[1,14],[1,14],[1,14],[[5,21],14],[1,14],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[126,34]],[[],[[351,[24]]]],[46,42],[199,[[351,[42]]]],[8,350],[8,407],[41,407],[42,407],[171,21],[13,14],[8,21],[8,21],[1,352],[184,39],[[]],[[[353,[240]]],[[241,[240]]]],[[]],[[]],[46,45],[[]],[48,47],[[]],[50,49],[[]],[[]],[[]],[[]],[[]],[6,51],[[]],[53,52],[[]],[55,54],[[]],[57,56],[[]],[59,58],[[]],[61,60],[[]],[63,62],[[]],[65,64],[[]],[67,66],[[]],[69,68],[[]],[[]],[[]],[[]],[43,70],[[]],[72,71],[[]],[74,73],[[]],[40,75],[[]],[8,76],[[]],[78,77],[[]],[80,79],[[]],[82,81],[[]],[84,83],[[]],[17,85],[[]],[[]],[87,86],[[]],[89,88],[[]],[91,90],[[]],[[]],[[]],[[]],[10,92],[[]],[94,93],[[]],[96,95],[[]],[98,97],[[]],[100,99],[[]],[[]],[102,101],[[]],[104,103],[[]],[106,105],[[]],[108,107],[[]],[110,109],[[]],[[]],[[]],[112,111],[[]],[114,113],[[]],[116,115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,24],[[]],[118,117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,119],[[]],[122,121],[[]],[124,123],[[]],[126,125],[[]],[128,127],[[]],[20,129],[[]],[[]],[131,130],[[]],[133,132],[[]],[[]],[135,134],[[]],[137,136],[[]],[139,138],[[]],[141,140],[[]],[[]],[143,142],[[]],[145,144],[[]],[[]],[147,146],[[]],[[]],[149,148],[[]],[151,150],[[]],[153,152],[[]],[155,154],[[]],[[]],[157,156],[[]],[[]],[159,158],[[]],[[]],[161,160],[[]],[[]],[163,162],[[]],[165,164],[[]],[12,166],[[]],[168,167],[[]],[[]],[[]],[13,169],[[]],[171,170],[[]],[173,172],[[]],[175,174],[[]],[177,176],[[]],[179,178],[[]],[181,180],[[]],[[]],[[]],[[]],[[]],[35,182],[[]],[184,183],[[]],[39,185],[[]],[38,186],[[]],[188,187],[[]],[19,189],[[]],[191,190],[[]],[193,192],[[]],[[]],[195,194],[[]],[197,196],[[]],[[]],[[]],[[]],[199,198],[[]],[201,200],[[]],[203,202],[[]],[205,204],[[]],[207,206],[[]],[209,208],[[]],[211,210],[[]],[213,212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,214],[[]],[[]],[[]],[[]],[[]],[216,215],[[]],[218,217],[[]],[220,219],[[]],[222,221],[[]],[224,223],[[]],[226,225],[[]],[[]],[[]],[[]],[[]],[41,227],[[]],[42,228],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[230,229],[[]],[232,231],[[]],[234,233],[[]],[236,235],[[]],[238,237],[[]],[3,239],[[22,22]],[[2,2]],[[23,23]],[[26,26]],[[27,27]],[[28,28]],[[29,29]],[[30,30]],[[31,31]],[[32,32]],[[33,33]],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[8,359],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[],438],[[22,22],22],[[2,2],2],[[23,23],23],[[26,26],26],[[27,27],27],[[28,28],28],[[29,29],29],[[30,30],30],[[31,31],31],[[32,32],32],[[33,33],33],[[124,226,32]],[[126,226]],[[128,226]],[165,3],[41,33],[42,33],[[124,131]],[[128,131]],[[124,131,32]],[[124,[425,[131]],32]],[[128,[425,[131]]]],[[124,34,31]],[[128,34,31]],[[124,34,31,32]],[[124,[425,[34]],31,32]],[[128,[425,[34]],31]],[131,21],0,0,0,[184,39],[155,[[241,[142]]]],[19,[[351,[195]]]],[19,[[351,[238]]]],[19,[[351,[155]]]],0,[213,[[351,[17]]]],[[124,226,32]],[[126,226]],[[128,226]],[10],[10],[50,14],[41,21],[42,21],0,0,0,[[65,55,17,21]],[112,352],[35,29],0,0,0,[1,2],[1,2],0,0,0,0,0,0],"c":[144,377,378,451,457,517,825,888,896,4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,4643,5216,5217,5218,5219,5220,5221,5554,7194,7195,7196,7197,7198,7199,7623,7628],"p":[[4,"MTLFeatureSet"],[3,"PixelFormatCapabilities"],[3,"URLRef"],[15,"str"],[3,"DeviceRef"],[3,"AccelerationStructureDescriptorRef"],[3,"MTLAccelerationStructureSizes"],[3,"ArgumentRef"],[4,"MTLArgumentAccess"],[3,"CommandBufferRef"],[3,"Block"],[3,"BinaryArchiveRef"],[3,"ComputePipelineDescriptorRef"],[15,"bool"],[3,"String"],[4,"Result"],[3,"BufferRef"],[3,"NSRange"],[3,"RenderPipelineDescriptorRef"],[3,"ArgumentEncoderRef"],[6,"NSUInteger"],[3,"MTLAccelerationStructureInstanceOptions"],[3,"MTLPipelineOption"],[3,"Device"],[3,"Vec"],[3,"MTLBlitOption"],[3,"MTLIndirectCommandType"],[3,"MTLFunctionOptions"],[3,"MTLColorWriteMask"],[3,"MTLResourceOptions"],[3,"MTLResourceUsage"],[3,"MTLRenderStages"],[3,"MTLTextureUsage"],[3,"ResourceRef"],[3,"RenderPipelineColorAttachmentDescriptorRef"],[4,"MTLBlendOperation"],[4,"MTLArgumentBuffersTier"],[3,"ComputePipelineReflectionRef"],[3,"ArgumentArrayRef"],[3,"ArrayTypeRef"],[3,"TextureDescriptorRef"],[3,"TextureRef"],[3,"StructMemberRef"],[4,"MTLArrayType"],[3,"MetalDrawable"],[3,"MetalDrawableRef"],[3,"NsObject"],[3,"NsObjectRef"],[3,"MetalLayer"],[3,"MetalLayerRef"],[3,"AccelerationStructureDescriptor"],[3,"PrimitiveAccelerationStructureDescriptor"],[3,"PrimitiveAccelerationStructureDescriptorRef"],[3,"AccelerationStructure"],[3,"AccelerationStructureRef"],[3,"AccelerationStructureGeometryDescriptor"],[3,"AccelerationStructureGeometryDescriptorRef"],[3,"AccelerationStructureTriangleGeometryDescriptor"],[3,"AccelerationStructureTriangleGeometryDescriptorRef"],[3,"AccelerationStructureBoundingBoxGeometryDescriptor"],[3,"AccelerationStructureBoundingBoxGeometryDescriptorRef"],[3,"InstanceAccelerationStructureDescriptor"],[3,"InstanceAccelerationStructureDescriptorRef"],[3,"AccelerationStructureCommandEncoder"],[3,"AccelerationStructureCommandEncoderRef"],[3,"IntersectionFunctionTableDescriptor"],[3,"IntersectionFunctionTableDescriptorRef"],[3,"IntersectionFunctionTable"],[3,"IntersectionFunctionTableRef"],[3,"StructMember"],[3,"StructMemberArray"],[3,"StructMemberArrayRef"],[3,"StructType"],[3,"StructTypeRef"],[3,"ArrayType"],[3,"Argument"],[3,"ArgumentDescriptor"],[3,"ArgumentDescriptorRef"],[3,"BlitPassDescriptor"],[3,"BlitPassDescriptorRef"],[3,"BlitPassSampleBufferAttachmentDescriptorArray"],[3,"BlitPassSampleBufferAttachmentDescriptorArrayRef"],[3,"BlitPassSampleBufferAttachmentDescriptor"],[3,"BlitPassSampleBufferAttachmentDescriptorRef"],[3,"Buffer"],[3,"CaptureDescriptor"],[3,"CaptureDescriptorRef"],[3,"CaptureScope"],[3,"CaptureScopeRef"],[3,"CaptureManager"],[3,"CaptureManagerRef"],[3,"CommandBuffer"],[3,"CommandQueue"],[3,"CommandQueueRef"],[3,"ComputePassDescriptor"],[3,"ComputePassDescriptorRef"],[3,"ComputePassSampleBufferAttachmentDescriptorArray"],[3,"ComputePassSampleBufferAttachmentDescriptorArrayRef"],[3,"ComputePassSampleBufferAttachmentDescriptor"],[3,"ComputePassSampleBufferAttachmentDescriptorRef"],[3,"CounterSampleBufferDescriptor"],[3,"CounterSampleBufferDescriptorRef"],[3,"CounterSampleBuffer"],[3,"CounterSampleBufferRef"],[3,"Counter"],[3,"CounterRef"],[3,"CounterSet"],[3,"CounterSetRef"],[3,"CommonCounter"],[3,"CommonCounterRef"],[3,"StencilDescriptor"],[3,"StencilDescriptorRef"],[3,"DepthStencilDescriptor"],[3,"DepthStencilDescriptorRef"],[3,"DepthStencilState"],[3,"DepthStencilStateRef"],[3,"Drawable"],[3,"DrawableRef"],[3,"CommandEncoder"],[3,"CommandEncoderRef"],[3,"ParallelRenderCommandEncoder"],[3,"ParallelRenderCommandEncoderRef"],[3,"RenderCommandEncoder"],[3,"RenderCommandEncoderRef"],[3,"BlitCommandEncoder"],[3,"BlitCommandEncoderRef"],[3,"ComputeCommandEncoder"],[3,"ComputeCommandEncoderRef"],[3,"ArgumentEncoder"],[3,"Heap"],[3,"HeapRef"],[3,"HeapDescriptor"],[3,"HeapDescriptorRef"],[3,"IndirectCommandBufferDescriptor"],[3,"IndirectCommandBufferDescriptorRef"],[3,"IndirectCommandBuffer"],[3,"IndirectCommandBufferRef"],[3,"IndirectRenderCommand"],[3,"IndirectRenderCommandRef"],[3,"IndirectComputeCommand"],[3,"IndirectComputeCommandRef"],[3,"VertexAttribute"],[3,"VertexAttributeRef"],[3,"Attribute"],[3,"AttributeRef"],[3,"FunctionConstant"],[3,"FunctionConstantRef"],[3,"FunctionDescriptor"],[3,"FunctionDescriptorRef"],[3,"IntersectionFunctionDescriptor"],[3,"IntersectionFunctionDescriptorRef"],[3,"FunctionHandle"],[3,"FunctionHandleRef"],[3,"Function"],[3,"FunctionRef"],[3,"FunctionConstantValues"],[3,"FunctionConstantValuesRef"],[3,"CompileOptions"],[3,"CompileOptionsRef"],[3,"Library"],[3,"LibraryRef"],[3,"DynamicLibrary"],[3,"DynamicLibraryRef"],[3,"BinaryArchiveDescriptor"],[3,"BinaryArchiveDescriptorRef"],[3,"BinaryArchive"],[3,"LinkedFunctions"],[3,"LinkedFunctionsRef"],[3,"ComputePipelineDescriptor"],[3,"ComputePipelineState"],[3,"ComputePipelineStateRef"],[3,"StageInputOutputDescriptor"],[3,"StageInputOutputDescriptorRef"],[3,"AttributeDescriptorArray"],[3,"AttributeDescriptorArrayRef"],[3,"AttributeDescriptor"],[3,"AttributeDescriptorRef"],[3,"BufferLayoutDescriptorArray"],[3,"BufferLayoutDescriptorArrayRef"],[3,"BufferLayoutDescriptor"],[3,"BufferLayoutDescriptorRef"],[3,"RenderPipelineColorAttachmentDescriptor"],[3,"RenderPipelineReflection"],[3,"RenderPipelineReflectionRef"],[3,"ArgumentArray"],[3,"ComputePipelineReflection"],[3,"MeshRenderPipelineDescriptor"],[3,"MeshRenderPipelineDescriptorRef"],[3,"RenderPipelineDescriptor"],[3,"RenderPipelineState"],[3,"RenderPipelineStateRef"],[3,"RenderPipelineColorAttachmentDescriptorArray"],[3,"RenderPipelineColorAttachmentDescriptorArrayRef"],[3,"PipelineBufferDescriptorArray"],[3,"PipelineBufferDescriptorArrayRef"],[3,"PipelineBufferDescriptor"],[3,"PipelineBufferDescriptorRef"],[3,"RenderPassAttachmentDescriptor"],[3,"RenderPassAttachmentDescriptorRef"],[3,"RenderPassColorAttachmentDescriptor"],[3,"RenderPassColorAttachmentDescriptorRef"],[3,"RenderPassDepthAttachmentDescriptor"],[3,"RenderPassDepthAttachmentDescriptorRef"],[3,"RenderPassStencilAttachmentDescriptor"],[3,"RenderPassStencilAttachmentDescriptorRef"],[3,"RenderPassColorAttachmentDescriptorArray"],[3,"RenderPassColorAttachmentDescriptorArrayRef"],[3,"RenderPassSampleBufferAttachmentDescriptor"],[3,"RenderPassSampleBufferAttachmentDescriptorRef"],[3,"RenderPassSampleBufferAttachmentDescriptorArray"],[3,"RenderPassSampleBufferAttachmentDescriptorArrayRef"],[3,"RenderPassDescriptor"],[3,"RenderPassDescriptorRef"],[3,"Resource"],[3,"SamplerDescriptor"],[3,"SamplerDescriptorRef"],[3,"SamplerState"],[3,"SamplerStateRef"],[3,"Event"],[3,"EventRef"],[3,"SharedEvent"],[3,"SharedEventRef"],[3,"SharedEventListener"],[3,"SharedEventListenerRef"],[3,"Fence"],[3,"FenceRef"],[3,"TextureDescriptor"],[3,"Texture"],[3,"VertexBufferLayoutDescriptor"],[3,"VertexBufferLayoutDescriptorRef"],[3,"VertexBufferLayoutDescriptorArray"],[3,"VertexBufferLayoutDescriptorArrayRef"],[3,"VertexAttributeDescriptor"],[3,"VertexAttributeDescriptorRef"],[3,"VertexAttributeDescriptorArray"],[3,"VertexAttributeDescriptorArrayRef"],[3,"VertexDescriptor"],[3,"VertexDescriptorRef"],[3,"URL"],[8,"ForeignType"],[3,"Array"],[3,"NSArray"],[4,"CAMetalDrawable"],[4,"NSObject"],[4,"CAMetalLayer"],[4,"MTLAccelerationStructureDescriptor"],[4,"MTLPrimitiveAccelerationStructureDescriptor"],[4,"MTLAccelerationStructure"],[4,"MTLAccelerationStructureGeometryDescriptor"],[4,"MTLAccelerationStructureTriangleGeometryDescriptor"],[4,"MTLAccelerationStructureBoundingBoxGeometryDescriptor"],[4,"MTLInstanceAccelerationStructureDescriptor"],[4,"MTLAccelerationStructureCommandEncoder"],[4,"MTLIntersectionFunctionTableDescriptor"],[4,"MTLIntersectionFunctionTable"],[4,"MTLStructMember"],[4,"MTLStructMemberArray"],[4,"MTLStructType"],[4,"MTLArgument"],[4,"MTLArgumentDescriptor"],[4,"MTLBlitPassDescriptor"],[4,"MTLBlitPassSampleBufferAttachmentDescriptorArray"],[4,"MTLBlitPassSampleBufferAttachmentDescriptor"],[4,"MTLBuffer"],[4,"MTLCaptureDescriptor"],[4,"MTLCaptureScope"],[4,"MTLCaptureManager"],[4,"MTLCommandBuffer"],[4,"MTLCommandQueue"],[4,"MTLComputePassDescriptor"],[4,"MTLComputePassSampleBufferAttachmentDescriptorArray"],[4,"MTLComputePassSampleBufferAttachmentDescriptor"],[4,"MTLCounterSampleBufferDescriptor"],[4,"MTLCounterSampleBuffer"],[4,"MTLCounter"],[4,"MTLCounterSet"],[4,"MTLCommonCounter"],[4,"MTLStencilDescriptor"],[4,"MTLDepthStencilDescriptor"],[4,"MTLDepthStencilState"],[4,"MTLDevice"],[4,"MTLDrawable"],[4,"MTLCommandEncoder"],[4,"MTLParallelRenderCommandEncoder"],[4,"MTLRenderCommandEncoder"],[4,"MTLBlitCommandEncoder"],[4,"MTLComputeCommandEncoder"],[4,"MTLArgumentEncoder"],[4,"MTLHeap"],[4,"MTLHeapDescriptor"],[4,"MTLIndirectCommandBufferDescriptor"],[4,"MTLIndirectCommandBuffer"],[4,"MTLIndirectRenderCommand"],[4,"MTLIndirectComputeCommand"],[4,"MTLVertexAttribute"],[4,"MTLAttribute"],[4,"MTLFunctionConstant"],[4,"MTLFunctionDescriptor"],[4,"MTLIntersectionFunctionDescriptor"],[4,"MTLFunctionHandle"],[4,"MTLFunction"],[4,"MTLFunctionConstantValues"],[4,"MTLCompileOptions"],[4,"MTLLibrary"],[4,"MTLDynamicLibrary"],[4,"MTLBinaryArchiveDescriptor"],[4,"MTLBinaryArchive"],[4,"MTLLinkedFunctions"],[4,"MTLComputePipelineDescriptor"],[4,"MTLComputePipelineState"],[4,"MTLStageInputOutputDescriptor"],[4,"MTLAttributeDescriptorArray"],[4,"MTLAttributeDescriptor"],[4,"MTLBufferLayoutDescriptorArray"],[4,"MTLBufferLayoutDescriptor"],[4,"MTLRenderPipelineColorAttachmentDescriptor"],[4,"MTLRenderPipelineReflection"],[4,"MTLArgumentArray"],[4,"MTLComputePipelineReflection"],[4,"MTLMeshRenderPipelineDescriptor"],[4,"MTLRenderPipelineDescriptor"],[4,"MTLRenderPipelineState"],[4,"MTLRenderPipelineColorAttachmentDescriptorArray"],[4,"MTLPipelineBufferDescriptorArray"],[4,"MTLPipelineBufferDescriptor"],[4,"MTLRenderPassAttachmentDescriptor"],[4,"MTLRenderPassColorAttachmentDescriptor"],[4,"MTLRenderPassDepthAttachmentDescriptor"],[4,"MTLRenderPassStencilAttachmentDescriptor"],[4,"MTLRenderPassColorAttachmentDescriptorArray"],[4,"MTLRenderPassSampleBufferAttachmentDescriptor"],[4,"MTLRenderPassSampleBufferAttachmentDescriptorArray"],[4,"MTLRenderPassDescriptor"],[4,"MTLResource"],[4,"MTLSamplerDescriptor"],[4,"MTLSamplerState"],[4,"MTLEvent"],[4,"MTLSharedEvent"],[4,"MTLSharedEventListener"],[4,"MTLFence"],[4,"MTLTextureDescriptor"],[4,"MTLTexture"],[4,"MTLVertexBufferLayoutDescriptor"],[4,"MTLVertexBufferLayoutDescriptorArray"],[4,"MTLVertexAttributeDescriptor"],[4,"MTLVertexAttributeDescriptorArray"],[4,"MTLVertexDescriptor"],[4,"NSURL"],[15,"u64"],[4,"MTLDataType"],[4,"Option"],[15,"u32"],[3,"ArrayRef"],[3,"MTLClearColor"],[15,"f64"],[4,"MTLAccelerationStructureInstanceDescriptorType"],[3,"MTLAccelerationStructureInstanceDescriptor"],[3,"MTLAccelerationStructureUserIDInstanceDescriptor"],[4,"MTLArgumentType"],[4,"MTLCaptureDestination"],[4,"MTLCommandBufferStatus"],[4,"MTLCommandBufferError"],[4,"MTLDispatchType"],[4,"MTLPixelFormat"],[4,"MTLCompareFunction"],[4,"MTLStencilOperation"],[4,"MTLGPUFamily"],[4,"MTLDeviceLocation"],[4,"MTLReadWriteTextureTier"],[4,"MTLCounterSamplingPoint"],[4,"MTLSparseTextureRegionAlignmentMode"],[4,"MTLPrimitiveType"],[4,"MTLIndexType"],[4,"MTLVisibilityResultMode"],[4,"MTLCullMode"],[4,"MTLWinding"],[4,"MTLDepthClipMode"],[4,"MTLTriangleFillMode"],[3,"MTLScissorRect"],[3,"MTLViewport"],[3,"MTLDrawPrimitivesIndirectArguments"],[3,"MTLDrawIndexedPrimitivesIndirectArguments"],[3,"VertexAmplificationViewMapping"],[4,"MTLHeapType"],[4,"MTLPatchType"],[4,"MTLFunctionType"],[4,"MTLLanguageVersion"],[4,"MTLLibraryType"],[4,"MTLLibraryError"],[4,"MTLDynamicLibraryError"],[4,"MTLAttributeFormat"],[4,"MTLStepFunction"],[4,"MTLBlendFactor"],[4,"MTLPrimitiveTopologyClass"],[4,"MTLMutability"],[4,"MTLLoadAction"],[4,"MTLStoreAction"],[4,"MTLPurgeableState"],[4,"MTLCPUCacheMode"],[4,"MTLStorageMode"],[4,"MTLHazardTrackingMode"],[3,"MTLSizeAndAlign"],[4,"MTLSamplerMinMagFilter"],[4,"MTLSamplerMipFilter"],[4,"MTLSamplerAddressMode"],[4,"MTLSamplerBorderColor"],[4,"MTLTextureType"],[4,"MTLTextureCompressionType"],[3,"MTLOrigin"],[3,"MTLSize"],[3,"MTLRegion"],[3,"MTLSamplePosition"],[3,"MTLResourceID"],[4,"MTLVertexFormat"],[4,"MTLVertexStepFunction"],[4,"Ordering"],[4,"c_void"],[6,"CGFloat"],[6,"NSInteger"],[3,"CGSize"],[8,"IntoIterator"],[15,"u8"],[3,"Formatter"],[6,"Result"],[15,"slice"],[6,"dispatch_queue_t"],[3,"Object"],[8,"Hasher"],[3,"Iter"],[3,"IterNames"],[3,"Path"],[8,"AsRef"],[3,"RcBlock"],[15,"f32"],[6,"c_void"],[3,"Range"],[4,"MTLMultisampleStencilResolveFilter"],[3,"TypeId"],[4,"MTLCommonCounterSet"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":"NNNENNNEEGECCNNNNNNNNNDNNNNLLLLLLLLLLMMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLCLMLLLLLLLLLLLLLLLLLLLLLNNENNNNLLLLFFALLLLLLALLLLNDEDNNNNNNNNNNNNEELLLLLLLLLLLLLLLLLFFFLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRFNNDNNNNNELLLLLLAFFFFFLLLLLLLLLLLMMALLLLLLLLDRLLLLFLLALLLLLLRRRRRDDDIDLLLLLLLLLLLLLLFLLLLLLLLKLLLLLLLLLLLLLLLLL","n":["Block","Buf","Data","DataFormat","ErrNo","Finish","Full","MZError","MZFlush","MZResult","MZStatus","MZ_ADLER32_INIT","MZ_DEFAULT_WINDOW_BITS","Mem","NeedDict","None","Ok","Param","Partial","Raw","Stream","StreamEnd","StreamResult","Sync","Version","ZLibIgnoreChecksum","Zlib","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_consumed","bytes_written","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deflate","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_window_bits","hash","hash","hash","hash","hash","inflate","into","into","into","into","into","mz_adler32_oxide","new","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_window_bits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BestCompression","BestSpeed","CompressionLevel","DefaultCompression","DefaultLevel","NoCompression","UberCompression","borrow","borrow_mut","clone","clone_into","compress_to_vec","compress_to_vec_zlib","core","eq","equivalent","fmt","from","hash","into","stream","to_owned","try_from","try_into","type_id","BadParam","CallbackFunc","CompressionStrategy","CompressorOxide","Default","Done","Filtered","Finish","Fixed","Full","HuffmanOnly","None","Okay","PutBufFailed","RLE","Sync","TDEFLFlush","TDEFLStatus","adler32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","compress_to_output","create_comp_flags_from_zip_params","data_format","default","deflate_flags","eq","eq","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","new","new","prev_return_status","put_buf_func","reset","set_compression_level","set_compression_level_raw","set_format_and_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TDEFL_COMPUTE_ADLER32","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_RAW_BLOCKS","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_WRITE_ZLIB_HEADER","deflate","Adler32Mismatch","BadParam","DecompressError","Done","Failed","FailedCannotMakeProgress","HasMoreOutput","NeedsMoreInput","TINFLStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","core","decompress_slice_iter_to_slice","decompress_to_vec","decompress_to_vec_with_limit","decompress_to_vec_zlib","decompress_to_vec_zlib_with_limit","eq","equivalent","fmt","fmt","fmt","from","from","from_i32","hash","into","into","output","status","stream","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DecompressorOxide","TINFL_LZ_DICT_SIZE","adler32","adler32_header","borrow","borrow_mut","decompress","default","from","inflate_flags","init","into","new","try_from","try_into","type_id","TINFL_FLAG_COMPUTE_ADLER32","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_IGNORE_ADLER32","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","FullReset","InflateState","MinReset","ResetPolicy","ZeroReset","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompressor","default","from","from","from","from","inflate","into","into","into","into","last_status","new","new_boxed","new_boxed_with_window_bits","reset","reset","reset","reset","reset","reset_as","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"miniz_oxide"],[109,"miniz_oxide::deflate"],[134,"miniz_oxide::deflate::core"],[225,"miniz_oxide::deflate::core::deflate_flags"],[233,"miniz_oxide::deflate::stream"],[234,"miniz_oxide::inflate"],[277,"miniz_oxide::inflate::core"],[293,"miniz_oxide::inflate::core::inflate_flags"],[298,"miniz_oxide::inflate::stream"]],"d":["Not implemented.","Buffer-related error.","Error in inflation; see <code>inflate::stream::inflate()</code> for …","How compressed data is wrapped.","Unused","Attempt to flush the remaining data and end the stream.","Same as <code>Sync</code>, but resets the compression dictionary so …","A list of miniz failed status codes.","A list of flush types.","<code>Result</code> alias for all miniz status codes both successful …","A list of miniz successful status codes.","","","Unused","Unused","Don’t force any flushing. Used when more input data is …","Operation succeeded.","Bad parameters.","Zlib partial flush. Currently treated as <code>Sync</code>.","Raw DEFLATE.","General stream error.","Operation succeeded and end of deflate stream was found.","A structure containing the result of a call to the inflate …","Finish compressing the currently buffered data, and output …","Unused","Zlib wrapped but ignore and don’t compute the adler32 …","Wrapped using the zlib format.","","","","","","","","","","","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","","","","","","","","","","","This module contains functionality for compression.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","This module contains functionality for decompression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an MZFlush value from an integer value.","The return status of the call.","","","","","","","","","","","","","","","","","","","","","","Slow/high compression. Do a lot of checks to try to find …","Fast compression. Uses a special compression routine that …","How much processing the compressor should do to compress …","Use the default compression level.","Default compromise between speed and compression.","Don’t do any compression, only output uncompressed …","Even more checks, can be very slow.","","","","","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","Streaming compression functionality.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Extra streaming compression functionality.","","","","","Usage error.","Callback function and user used in <code>compress_to_output</code>.","Strategy setting for compression.","Main compression struct.","Don’t use any of the special strategies.","Compression succeeded and the deflate stream was ended.","Only use matches that are at least 5 bytes long.","Try to flush everything and end the deflate stream.","Only use static/fixed blocks. (Blocks using the default …","Same as <code>Sync</code>, but reset the dictionary so that the …","Don’t look for matches, only huffman encode the literals.","Normal operation.","Compression succeeded normally.","Error putting data into output buffer.","Only look for matches with a distance of 1, i.e do …","Try to flush all the current data and output an empty raw …","A list of deflate flush types.","Return status of compression.","Get the adler32 checksum of the currently encoded data.","","","","","","","","","","","","","","","","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used by …","Returns whether the compressor is wrapping the data in a …","Initialize the compressor with a level of 4, zlib wrapper …","","","","","","","","Get the raw compressor flags.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CompressorOxide</code> with the given flags.","","Get the return status of the previous <code>compress</code> call with …","","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","","","","","","","","","","","","","","","","","","","Should we compute the adler32 checksum.","Only use matches that are at least 6 bytes long.","Force the compressor to only output raw/uncompressed …","Force the compressor to only output static blocks. (Blocks …","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Whether to use a zlib wrapper.","Try to compress from input to output with the given …","The decompression went fine, but the adler32 checksum did …","The output buffer is an invalid size; consider the <code>flags</code> …","Struct return when decompress_to_vec functions fail.","Finished decompression without issues.","Failed to decompress due to invalid data.","More input data was expected, but the caller indicated …","There is still pending data that didn’t fit in the …","The decompressor needs more input data to continue …","Return status codes.","","","","","","","Streaming decompression functionality.","Decompress one or more source slices from an iterator into …","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data (with a zlib wrapper) …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The currently decompressed data if any.","Decompressor status on failure. See TINFLStatus for …","Extra streaming decompression functionality.","","","","","","","","","Main decompression struct.","","Returns the adler32 checksum of the currently decompressed …","Returns the adler32 that was read from the zlib header if …","","","Main decompression function. Keeps decompressing data from …","Create a new tinfl_decompressor with all fields set to 0.","Returns the argument unchanged.","Flags to <code>decompress()</code> to control how inflation works.","Set the current state to <code>Start</code>.","Calls <code>U::from(self)</code>.","Create a new tinfl_decompressor with all fields set to 0.","","","","Calculate the adler32 checksum of the output data even if …","There will be more input that hasn’t been given to the …","Ignore adler32 checksum even if we are inflating a zlib …","Should we try to parse a zlib header?","The output buffer should not wrap around.","Full reset of the state, including zeroing memory.","A struct that compbines a decompressor with extra data for …","Resets state, without performing expensive ops (e.g. …","Tag that determines reset policy of InflateState","Resets state and zero memory, continuing to use the same …","","","","","","","","","Access the innner decompressor.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the status of the last call to <code>inflate</code> with this …","Create a new state.","Create a new state on the heap.","Create a new state using miniz/zlib style window bits …","Performs reset","","","","Reset the decompressor without re-allocating memory, using …","Resets the state according to specified policy.","","","","","","","","","","","",""],"i":[1,3,3,0,3,1,1,0,0,0,0,0,0,3,2,1,2,3,1,4,3,2,0,1,3,4,4,1,2,3,4,5,1,2,3,4,5,5,5,1,2,3,4,5,1,2,3,4,5,0,1,2,3,4,5,1,2,3,4,5,5,1,2,3,4,5,9,9,1,2,3,4,5,4,1,2,3,4,5,0,1,2,3,4,5,0,1,5,1,2,3,4,5,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,14,14,0,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,0,14,14,14,14,22,0,0,0,20,22,20,21,20,21,20,21,22,22,20,21,0,0,18,18,37,20,21,22,18,37,20,21,22,20,21,22,20,21,22,0,0,0,18,18,0,20,21,22,20,21,22,18,20,21,22,18,37,20,21,21,22,20,21,22,18,37,20,21,22,18,21,18,37,18,18,18,18,20,21,22,18,37,20,21,22,18,37,20,21,22,18,37,20,21,22,0,0,0,0,0,0,0,0,0,24,24,0,24,24,24,24,24,0,24,27,24,27,24,24,0,0,0,0,0,0,24,24,24,27,27,24,27,24,24,24,27,27,27,0,24,27,24,27,24,27,24,27,0,0,30,30,30,30,0,30,30,0,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,33,34,35,31,33,34,35,31,31,31,33,34,35,31,0,33,34,35,31,31,31,31,31,36,33,34,35,31,31,33,34,35,31,33,34,35,31,33,34,35,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[1,1],6],[[2,2],6],[[3,3],6],[[4,4],6],[[5,5],6],[[],6],[[],6],[[],6],[[],6],[[],6],[3,5],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[5,7],8],[5,9],[5,9],[[]],[[]],[[]],[[]],[[]],[10,4],[[1,11]],[[2,11]],[[3,11]],[[4,11]],[[5,11]],0,[[]],[[]],[[]],[[]],[[]],0,[10,[[12,[1,3]]]],0,[[]],[[]],[[]],[[]],[[]],[4,10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[[16,[15]],15],[[17,[15]]]],[[[16,[15]],15],[[17,[15]]]],0,[[14,14],6],[[],6],[[14,7],8],[[]],[[14,11]],[[]],0,[[]],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[18,[16,[15]],[16,[15]],21]],[[18,[16,[15]],21,23]],[[10,10,10],19],[18,4],[[],18],0,[[20,20],6],[[21,21],6],[[22,22],6],[[],6],[[],6],[[],6],[18,10],[[20,7],8],[[21,7],8],[[22,7],8],[[]],[[]],[[]],[[]],[1,21],[[]],[[20,11]],[[21,11]],[[22,11]],[[]],[[]],[[]],[[]],[[]],[19,18],[10,[[12,[21,3]]]],[18,22],0,[18],[[18,14]],[[18,15]],[[18,4,15]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,[[18,[16,[15]],[16,[15]],1],5],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[24,24],[[]],0,[[[16,[15]],25,6,6],[[12,[26,24]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[[16,[15]]],[[12,[[17,[15]],27]]]],[[[16,[15]],26],[[12,[[17,[15]],27]]]],[[24,24],6],[[],6],[[24,7],8],[[27,7],8],[[27,7],8],[[]],[[]],[10,[[28,[24]]]],[[24,11]],[[]],[[]],0,0,0,[[]],[[],29],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,[30,[[28,[19]]]],[30,[[28,[19]]]],[[]],[[]],[[30,[16,[15]],[16,[15]],26,19]],[[],30],[[]],0,[30],[[]],[[],30],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,30],[[],31],[[]],[[]],[[]],[[]],[[31,[16,[15]],[16,[15]],1],5],[[]],[[]],[[]],[[]],[31,24],[4,31],[4,[[32,[31]]]],[10,[[32,[31]]]],[31],[[33,31]],[[34,31]],[[35,31]],[[31,4]],[[31,36]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13]],"c":[],"p":[[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"MZResult"],[15,"i32"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[4,"CompressionLevel"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"CompressorOxide"],[15,"u32"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[8,"FnMut"],[4,"TINFLStatus"],[8,"Iterator"],[15,"usize"],[3,"DecompressError"],[4,"Option"],[3,"String"],[3,"DecompressorOxide"],[3,"InflateState"],[3,"Box"],[3,"MinReset"],[3,"ZeroReset"],[3,"FullReset"],[8,"ResetPolicy"],[3,"CallbackFunc"]]},\
"mint":{"doc":"Mint - Math interoperability standard types.","t":"DDDDDDDDDDEEEIEEEQDDDDDDDDDDDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["ColumnMatrix2","ColumnMatrix2x3","ColumnMatrix2x4","ColumnMatrix3","ColumnMatrix3x2","ColumnMatrix3x4","ColumnMatrix4","ColumnMatrix4x2","ColumnMatrix4x3","EulerAngles","ExtraXYZ","ExtraZXZ","ExtraZYX","IntoMint","IntraXYZ","IntraZXZ","IntraZYX","MintType","Point2","Point3","Quaternion","RowMatrix2","RowMatrix2x3","RowMatrix2x4","RowMatrix3","RowMatrix3x2","RowMatrix3x4","RowMatrix4","RowMatrix4x2","RowMatrix4x3","Vector2","Vector3","Vector4","a","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","from_slice","from_slice","from_slice","from_slice","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","marker","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","s","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v","w","w","w","w","w","w","w","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","z","z","z","z","z","z","z","z","z","z","z","z","z","z","z"],"q":[[0,"mint"]],"d":["","","","","","","","","","Abstract set of Euler angles in 3D space. The basis of …","Extrinsic rotation around X, then Y, then Z axis.","Extrinsic rotation around Z, then X, then Z axis.","Extrinsic rotation around Z, then Y, then X axis.","Defines which mint type a given type is associated with. …","Intrinsic rotation around X, then Y, then Z axis.","Intrinsic rotation around Z, then X, then Z axis.","Intrinsic rotation around Z, then Y, then X axis.","The mint type that this type is associated with.","","","Standard quaternion represented by the scalar and vector …","","","","","","","","","","","","","First angle of rotation in range [-pi, pi] (<em>pitch</em>).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Second angle of rotation around in range [-pi/2, pi/2] (<em>yaw</em>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Third angle of rotation in range [-pi, pi] (<em>roll</emeturns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Marker for the phantom basis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Scalar part of a quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector part of a quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,1,1,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,21,22,23,24,25,1,1,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,21,22,23,24,25,27,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,27,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,1,1,1,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,27,27,27,27,27,27,27,27,28,29,30,31,32,33,21,21,21,22,22,22,23,23,24,24,24,25,25,25,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,27,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,20,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,21,22,23,24,25,20,8,9,10,13,16,19,23,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,5,6,7,8,9,10,12,13,15,16,18,19,22,23,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[2]]]],[1,2],[3,[[2,[2]]]],[3,2],[4,2],[4,[[2,[2]]]],[5,2],[5,[[2,[2]]]],[6,[[2,[2]]]],[6,2],[7,2],[7,[[2,[2]]]],[8,[[2,[2]]]],[8,2],[9,2],[9,[[2,[2]]]],[10,2],[10,[[2,[2]]]],[11,[[2,[2]]]],[11,2],[12,[[2,[2]]]],[12,2],[13,2],[13,[[2,[2]]]],[14,[[2,[2]]]],[14,2],[15,[[2,[2]]]],[15,2],[16,2],[16,[[2,[2]]]],[17,2],[17,[[2,[2]]]],[18,[[2,[2]]]],[18,2],[19,[[2,[2]]]],[19,2],[20,2],[21,2],[22,2],[23,2],[24,2],[25,2],[1,2],[1,[[2,[2]]]],[3,2],[3,[[2,[2]]]],[4,[[2,[2]]]],[4,2],[5,2],[5,[[2,[2]]]],[6,2],[6,[[2,[2]]]],[7,2],[7,[[2,[2]]]],[8,2],[8,[[2,[2]]]],[9,[[2,[2]]]],[9,2],[10,2],[10,[[2,[2]]]],[11,2],[11,[[2,[2]]]],[12,[[2,[2]]]],[12,2],[13,[[2,[2]]]],[13,2],[14,2],[14,[[2,[2]]]],[15,[[2,[2]]]],[15,2],[16,[[2,[2]]]],[16,2],[17,[[2,[2]]]],[17,2],[18,2],[18,[[2,[2]]]],[19,[[2,[2]]]],[19,2],[20,2],[21,2],[22,2],[23,2],[24,2],[25,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[1,[26]]],[[1,[26]]]],[[[3,[26]]],[[3,[26]]]],[[[4,[26]]],[[4,[26]]]],[[[5,[26]]],[[5,[26]]]],[[[6,[26]]],[[6,[26]]]],[[[7,[26]]],[[7,[26]]]],[[[8,[26]]],[[8,[26]]]],[[[9,[26]]],[[9,[26]]]],[[[10,[26]]],[[10,[26]]]],[[[11,[26]]],[[11,[26]]]],[[[12,[26]]],[[12,[26]]]],[[[13,[26]]],[[13,[26]]]],[[[14,[26]]],[[14,[26]]]],[[[15,[26]]],[[15,[26]]]],[[[16,[26]]],[[16,[26]]]],[[[17,[26]]],[[17,[26]]]],[[[18,[26]]],[[18,[26]]]],[[[19,[26]]],[[19,[26]]]],[[[20,[26]]],[[20,[26]]]],[[[27,[26,26]]],[[27,[26,26]]]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[[21,[26]]],[[21,[26]]]],[[[22,[26]]],[[22,[26]]]],[[[23,[26]]],[[23,[26]]]],[[[24,[26]]],[[24,[26]]]],[[[25,[26]]],[[25,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1,[34]],[1,[34]]],35],[[[3,[34]],[3,[34]]],35],[[[4,[34]],[4,[34]]],35],[[[5,[34]],[5,[34]]],35],[[[6,[34]],[6,[34]]],35],[[[7,[34]],[7,[34]]],35],[[[8,[34]],[8,[34]]],35],[[[9,[34]],[9,[34]]],35],[[[10,[34]],[10,[34]]],35],[[[11,[34]],[11,[34]]],35],[[[12,[34]],[12,[34]]],35],[[[13,[34]],[13,[34]]],35],[[[14,[34]],[14,[34]]],35],[[[15,[34]],[15,[34]]],35],[[[16,[34]],[16,[34]]],35],[[[17,[34]],[17,[34]]],35],[[[18,[34]],[18,[34]]],35],[[[19,[34]],[19,[34]]],35],[[[20,[34]],[20,[34]]],35],[[[27,[34,34]],[27,[34,34]]],35],[[28,28],35],[[29,29],35],[[30,30],35],[[31,31],35],[[32,32],35],[[33,33],35],[[[21,[34]],[21,[34]]],35],[[[22,[34]],[22,[34]]],35],[[[23,[34]],[23,[34]]],35],[[[24,[34]],[24,[34]]],35],[[[25,[34]],[25,[34]]],35],[36,[[38,[[1,[37]]]]]],[36,[[38,[[3,[37]]]]]],[36,[[38,[[4,[37]]]]]],[36,[[38,[[5,[37]]]]]],[36,[[38,[[6,[37]]]]]],[36,[[38,[[7,[37]]]]]],[36,[[38,[[8,[37]]]]]],[36,[[38,[[9,[37]]]]]],[36,[[38,[[10,[37]]]]]],[36,[[38,[[11,[37]]]]]],[36,[[38,[[12,[37]]]]]],[36,[[38,[[13,[37]]]]]],[36,[[38,[[14,[37]]]]]],[36,[[38,[[15,[37]]]]]],[36,[[38,[[16,[37]]]]]],[36,[[38,[[17,[37]]]]]],[36,[[38,[[18,[37]]]]]],[36,[[38,[[19,[37]]]]]],[36,[[38,[[20,[37]]]]]],[36,[[38,[[27,[37]]]]]],[36,[[38,[[21,[37]]]]]],[36,[[38,[[22,[37]]]]]],[36,[[38,[[23,[37]]]]]],[36,[[38,[[24,[37]]]]]],[36,[[38,[[25,[37]]]]]],[[[1,[39]],[1,[39]]],40],[[[3,[39]],[3,[39]]],40],[[[4,[39]],[4,[39]]],40],[[[5,[39]],[5,[39]]],40],[[[6,[39]],[6,[39]]],40],[[[7,[39]],[7,[39]]],40],[[[8,[39]],[8,[39]]],40],[[[9,[39]],[9,[39]]],40],[[[10,[39]],[10,[39]]],40],[[[11,[39]],[11,[39]]],40],[[[12,[39]],[12,[39]]],40],[[[13,[39]],[13,[39]]],40],[[[14,[39]],[14,[39]]],40],[[[15,[39]],[15,[39]]],40],[[[16,[39]],[16,[39]]],40],[[[17,[39]],[17,[39]]],40],[[[18,[39]],[18,[39]]],40],[[[19,[39]],[19,[39]]],40],[[[20,[39]],[20,[39]]],40],[[[27,[39,39]],[27,[39,39]]],40],[[28,28],40],[[29,29],40],[[30,30],40],[[31,31],40],[[32,32],40],[[33,33],40],[[[21,[39]],[21,[39]]],40],[[[22,[39]],[22,[39]]],40],[[[23,[39]],[23,[39]]],40],[[[24,[39]],[24,[39]]],40],[[[25,[39]],[25,[39]]],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[1,[41]],42],43],[[[3,[41]],42],43],[[[4,[41]],42],43],[[[5,[41]],42],43],[[[6,[41]],42],43],[[[7,[41]],42],43],[[[8,[41]],42],43],[[[9,[41]],42],43],[[[10,[41]],42],43],[[[11,[41]],42],43],[[[12,[41]],42],43],[[[13,[41]],42],43],[[[14,[41]],42],43],[[[15,[41]],42],43],[[[16,[41]],42],43],[[[17,[41]],42],43],[[[18,[41]],42],43],[[[19,[41]],42],43],[[[20,[41]],42],43],[[[27,[41,41]],42],43],[[28,42],43],[[29,42],43],[[30,42],43],[[31,42],43],[[32,42],43],[[33,42],43],[[[21,[41]],42],43],[[[22,[41]],42],43],[[[23,[41]],42],43],[[[24,[41]],42],43],[[[25,[41]],42],43],[[[2,[2]]],1],[[]],[[[2,[26]]],[[1,[26]]]],[11,1],[12,3],[[[2,[2]]],3],[[]],[[[2,[26]]],[[3,[26]]]],[[]],[[[2,[2]]],4],[13,4],[[[2,[26]]],[[4,[26]]]],[[[2,[26]]],[[5,[26]]]],[[]],[14,5],[[[2,[2]]],5],[[[2,[2]]],6],[[[2,[26]]],[[6,[26]]]],[15,6],[[]],[[[2,[26]]],[[7,[26]]]],[[]],[16,7],[[[2,[2]]],7],[[[2,[2]]],8],[[[2,[26]]],[[8,[26]]]],[[]],[18,8],[[[2,[26]]],[[9,[26]]]],[[[2,[2]]],9],[[]],[17,9],[[[2,[26]]],[[10,[26]]]],[19,10],[[[2,[2]]],10],[[]],[[[2,[2]]],11],[[]],[[[2,[26]]],[[11,[26]]]],[1,11],[3,12],[[]],[[[2,[26]]],[[12,[26]]]],[[[2,[2]]],12],[[[2,[2]]],13],[[[2,[26]]],[[13,[26]]]],[4,13],[[]],[5,14],[[[2,[26]]],[[14,[26]]]],[[]],[[[2,[2]]],14],[[]],[6,15],[[[2,[26]]],[[15,[26]]]],[[[2,[2]]],15],[[[2,[2]]],16],[7,16],[[[2,[26]]],[[16,[26]]]],[[]],[[]],[[[2,[2]]],17],[[[2,[26]]],[[17,[26]]]],[9,17],[8,18],[[[2,[26]]],[[18,[26]]]],[[]],[[[2,[2]]],18],[[[2,[2]]],19],[[]],[10,19],[[[2,[26]]],[[19,[26]]]],[[]],[2,20],[[[27,[29]]],[[27,[32]]]],[[[27,[30]]],[[27,[31]]]],[[[27,[31]]],[[27,[30]]]],[2,27],[[[27,[28]]],[[27,[33]]]],[[[27,[32]]],[[27,[29]]]],[[[27,[33]]],[[27,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,21],[24,21],[[]],[[]],[25,22],[2,22],[2,23],[[]],[2,24],[21,24],[[]],[22,25],[2,25],[[]],[[[44,[26]]],[[21,[26]]]],[[[44,[26]]],[[22,[26]]]],[[[44,[26]]],[[23,[26]]]],[[[44,[26]]],[[24,[26]]]],[[[44,[26]]],[[25,[26]]]],[[[1,[45]],46]],[[[3,[45]],46]],[[[4,[45]],46]],[[[5,[45]],46]],[[[6,[45]],46]],[[[7,[45]],46]],[[[8,[45]],46]],[[[9,[45]],46]],[[[10,[45]],46]],[[[11,[45]],46]],[[[12,[45]],46]],[[[13,[45]],46]],[[[14,[45]],46]],[[[15,[45]],46]],[[[16,[45]],46]],[[[17,[45]],46]],[[[18,[45]],46]],[[[19,[45]],46]],[[[20,[45]],46]],[[[27,[45,45]],46]],[[28,46]],[[29,46]],[[30,46]],[[31,46]],[[32,46]],[[33,46]],[[[21,[45]],46]],[[[22,[45]],46]],[[[23,[45]],46]],[[[24,[45]],46]],[[[25,[45]],46]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[1,[47]],[1,[47]]],[[48,[35]]]],[[[3,[47]],[3,[47]]],[[48,[35]]]],[[[4,[47]],[4,[47]]],[[48,[35]]]],[[[5,[47]],[5,[47]]],[[48,[35]]]],[[[6,[47]],[6,[47]]],[[48,[35]]]],[[[7,[47]],[7,[47]]],[[48,[35]]]],[[[8,[47]],[8,[47]]],[[48,[35]]]],[[[9,[47]],[9,[47]]],[[48,[35]]]],[[[10,[47]],[10,[47]]],[[48,[35]]]],[[[11,[47]],[11,[47]]],[[48,[35]]]],[[[12,[47]],[12,[47]]],[[48,[35]]]],[[[13,[47]],[13,[47]]],[[48,[35]]]],[[[14,[47]],[14,[47]]],[[48,[35]]]],[[[15,[47]],[15,[47]]],[[48,[35]]]],[[[16,[47]],[16,[47]]],[[48,[35]]]],[[[17,[47]],[17,[47]]],[[48,[35]]]],[[[18,[47]],[18,[47]]],[[48,[35]]]],[[[19,[47]],[19,[47]]],[[48,[35]]]],[[[20,[47]],[20,[47]]],[[48,[35]]]],[[[27,[47,47]],[27,[47,47]]],[[48,[35]]]],[[28,28],[[48,[35]]]],[[29,29],[[48,[35]]]],[[30,30],[[48,[35]]]],[[31,31],[[48,[35]]]],[[32,32],[[48,[35]]]],[[33,33],[[48,[35]]]],[[[21,[47]],[21,[47]]],[[48,[35]]]],[[[22,[47]],[22,[47]]],[[48,[35]]]],[[[23,[47]],[23,[47]]],[[48,[35]]]],[[[24,[47]],[24,[47]]],[[48,[35]]]],[[[25,[47]],[25,[47]]],[[48,[35]]]],0,[[[1,[49]],50],38],[[[3,[49]],50],38],[[[4,[49]],50],38],[[[5,[49]],50],38],[[[6,[49]],50],38],[[[7,[49]],50],38],[[[8,[49]],50],38],[[[9,[49]],50],38],[[[10,[49]],50],38],[[[11,[49]],50],38],[[[12,[49]],50],38],[[[13,[49]],50],38],[[[14,[49]],50],38],[[[15,[49]],50],38],[[[16,[49]],50],38],[[[17,[49]],50],38],[[[18,[49]],50],38],[[[19,[49]],50],38],[[[20,[49]],50],38],[[[27,[49]],50],38],[[[21,[49]],50],38],[[[22,[49]],50],38],[[[23,[49]],50],38],[[[24,[49]],50],38],[[[25,[49]],50],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"RowMatrix2"],[15,"array"],[3,"RowMatrix2x3"],[3,"RowMatrix2x4"],[3,"RowMatrix3x2"],[3,"RowMatrix3"],[3,"RowMatrix3x4"],[3,"RowMatrix4x3"],[3,"RowMatrix4x2"],[3,"RowMatrix4"],[3,"ColumnMatrix2"],[3,"ColumnMatrix2x3"],[3,"ColumnMatrix2x4"],[3,"ColumnMatrix3x2"],[3,"ColumnMatrix3"],[3,"ColumnMatrix3x4"],[3,"ColumnMatrix4x2"],[3,"ColumnMatrix4x3"],[3,"ColumnMatrix4"],[3,"Quaternion"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Point2"],[3,"Point3"],[8,"Clone"],[3,"EulerAngles"],[4,"IntraXYZ"],[4,"IntraZXZ"],[4,"IntraZYX"],[4,"ExtraXYZ"],[4,"ExtraZXZ"],[4,"ExtraZYX"],[8,"Ord"],[4,"Ordering"],[8,"Deserializer"],[8,"Deserialize"],[4,"Result"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"slice"],[8,"Hash"],[8,"Hasher"],[8,"PartialOrd"],[4,"Option"],[8,"Serialize"],[8,"Serializer"],[3,"TypeId"],[8,"IntoMint"]]},\
"naga":{"doc":"Universal shader translator.","t":"NNNNNNNNENNNNDNNENNNNNNNNNENNRDNNNNNNNEENNDNNNNENNNGNNNNNNNNNNEDNNNNNNNNNNNNNNNNNNEENNNNNDNDNNNNNNNENNNNGGGGNNNNNNNNNNNNNDNDNDNDNNNNNDNNNNNEENENNNNNNNNENNNNNSNNNNNNENNNNDNNNNNNNNNENNNNNNNNDNNNNNNNNNNNNENNNNNNNNNNNENNNNNNNNNNNNNNNNNNDNNENNNNNEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSNNENNNENNENENNNNNNNNDDGDNNENNNDENNDNNNDENENNNNNNDENNSNNENNDNNNNNNNENNNNSNDNNNNNNNSNNNNNLLLLLLLLMLAMMMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMMMMLLMMMMMMMMMLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMALLMMLLLMLLLLLLLMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLAMLLLLMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMSSSSSSDSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLALLLLLLLLLLLLASSSGSSSSSNSSSNNNESSDNSSSNSSSNNSDDDSSRRSSSDNNDENDDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLMMMMEDGNEGDENNNGNNNNDDNGDNNNNNNNNNNNNNNDMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLMMMAMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMENENNNEENENNDNNNNNNNNNNNNNMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLNSENNNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLANNNNNNNNNNNNNNNNNNNNNNNNNNNDEENNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNENNNENNNNNNNNNNNNDNNNNNNNNENNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLARDNNNCCNNDENNSDNNGNDSNNNNNNNDNNNNNCCNNNNNNNNNNNNNNNNNNDEDNNNSNEDNNSNNRNNDESNNNNNNSNDNENNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLALMLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLMMMMMMMDENNEEENNNNNNNFMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLSNNNNNNSSNNNNSSSSSSSSEDNNNNNENNNNENENNSSSENNSSNNENNNNNNNEDNSSNNNNEDDNESSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENESSNNNNNNNNNNNNDNNNNNNNNNNNNNNSSNNSSSNNNSSSSSDNNNNNNEDSNNDDNNNNSEDDESSNNNNNNLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["Abs","AccelerationStructure","Access","AccessIndex","Acos","Acosh","Add","Add","AddressSpace","All","And","And","Any","Arena","Array","ArrayLength","ArraySize","As","Asin","Asinh","Atan","Atan2","Atanh","Atomic","Atomic","AtomicCompareExchangeWeakResult","AtomicFunction","AtomicResult","Auto","BOOL_WIDTH","Barrier","Barrier","BaseInstance","BaseVertex","Bgra8Unorm","Bi","Bias","Binary","BinaryOperator","Binding","BindingArray","BitwiseNot","Block","Block","Bool","Bool","Break","BuiltIn","BuiltIn","ByName","ByNameOrId","Bytes","Call","CallResult","Ceil","Center","Centroid","Clamp","ClipDistance","Coarse","Compose","Compute","ConservativeDepth","Constant","Constant","Constant","Continue","Cos","Cosh","CountLeadingZeros","CountOneBits","CountTrailingZeros","Cross","Cube","CullDistance","D1","D2","D3","Default","Degrees","Depth","Derivative","DerivativeAxis","DerivativeControl","Determinant","Distance","Divide","Dot","Dynamic","EarlyDepthTest","Emit","EntryPoint","Equal","Exact","Exchange","ExclusiveOr","ExclusiveOr","Exp","Exp2","Expression","ExtractBits","F32","F64","FaceForward","FastHashMap","FastHashSet","FastIndexMap","FastIndexSet","FindLsb","FindMsb","Fine","Flat","Float","Floor","Fma","Fract","FragDepth","Fragment","Frexp","FrexpResult","FrontFacing","Function","Function","FunctionArgument","FunctionArgument","FunctionResult","GlobalInvocationId","GlobalVariable","GlobalVariable","Gradient","Greater","GreaterEqual","GreaterEqual","Handle","Handle","I32","I32","If","Image","ImageClass","ImageDimension","ImageLoad","ImageQuery","ImageQuery","ImageSample","ImageStore","InclusiveOr","InclusiveOr","Initialize","InsertBits","InstanceIndex","Interpolation","Inverse","InverseSqrt","IsInf","IsNan","Kill","LOAD","Ldexp","Length","Less","LessEqual","LessEqual","Linear","Literal","Literal","Load","LocalInvocationId","LocalInvocationIndex","LocalVariable","LocalVariable","Location","Log","Log2","LogicalAnd","LogicalNot","LogicalOr","Loop","Math","MathFunction","Matrix","Max","Max","Min","Min","Mix","Modf","ModfResult","Module","Modulo","Multiply","Negate","None","None","Normalize","NotEqual","NumLayers","NumLevels","NumSamples","NumWorkGroups","Outer","Override","Pack2x16float","Pack2x16snorm","Pack2x16unorm","Pack4x8snorm","Pack4x8unorm","Perspective","PointCoord","PointSize","Pointer","Position","Pow","PredeclaredType","PrimitiveIndex","Private","Proceed","PushConstant","Quad","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","Radians","Range","RayQuery","RayQuery","RayQueryFunction","RayQueryGetIntersection","RayQueryProceedResult","Reflect","Refract","Relational","RelationalFunction","ResourceBinding","Return","ReverseBits","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Round","STORAGE","STORE","Sample","SampleIndex","SampleLevel","SampleMask","Sampled","Sampler","Sampling","Saturate","Scalar","ScalarKind","Select","ShaderStage","ShiftLeft","ShiftRight","Sign","Sin","Sinh","Sint","Size","SmoothStep","SourceLocation","Span","SpanContext","SpecialTypes","Splat","Sqrt","Statement","Step","Storage","Storage","StorageAccess","StorageFormat","Store","Struct","StructMember","Subtract","Subtract","Switch","SwitchCase","SwitchValue","Swizzle","SwizzleComponent","Tan","Tanh","Terminate","Transpose","Tri","Trunc","Type","TypeInner","U32","U32","UNDEFINED","Uint","Unary","UnaryOperator","Unchanged","Uniform","UniqueArena","Unpack2x16float","Unpack2x16snorm","Unpack2x16unorm","Unpack4x8snorm","Unpack4x8unorm","ValuePointer","Vector","VectorSize","Vertex","VertexIndex","ViewIndex","W","WORK_GROUP","Width","WithSpan","WorkGroup","WorkGroupId","WorkGroupSize","WorkGroupUniformLoad","WorkGroupUniformLoadResult","X","X","XYZW","Y","Y","Z","Zero","ZeroValue","access","all","all","and_then","append","append","apply_default_interpolation","argument_count","arguments","as_inner","back","binding","binding","binding","binding","binding","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_form","check_contains_handle","check_contains_handle","check_contains_range","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","complement","complement","component_type","components","conservative","const_expressions","constants","contains","contains","cull","default","default","default","default","default","default","default","default","default","deref","deref_mut","difference","difference","early_depth_test","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","empty","empty","entry_points","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expressions","extend","extend","extend","extend_block","fall_through","fetch_if","fetch_if_or_append","fetch_or_append","first_and_last","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_index","from_iter","from_iter","from_name","from_name","from_vec","from_zero_based_index_range","front","function","functions","generate_predeclared_type","generate_ray_desc_type","generate_ray_intersection_type","get","get_handle","get_mut","get_span","get_span","global_variables","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","implicit_derivatives","index","index","index","index","index","index_mut","indexable_length","init","init","init","inner","insert","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_other","is_all","is_all","is_atomic_pointer","is_defined","is_dynamic_index","is_dynamically_sized","is_empty","is_empty","is_empty","is_empty","is_empty","is_mipmapped","is_multisampled","is_numeric","is_terminator","iter","iter","iter","iter","iter_mut","iter_names","iter_names","keywords","len","len","len","length","line_number","line_position","local_variables","location","location","name","name","name","name","name","name","name","name","named_expressions","needs_pre_emit","new","new","new","new","new","new","new_from_bounds","next","not","not","offset","offset","one","originating_global","override","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer_space","predeclared_types","proc","push","range_from","ray_desc","ray_intersection","remove","remove","replace","result","scalar_kind","scalar_kind","scalar_width","set","set","size","source","space","span_iter","span_iter_mut","spans","special_types","splice","stage","sub","sub","sub_assign","sub_assign","subsume","symmetric_difference","symmetric_difference","to_built_in","to_ctx","to_indexable_length","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range","to_string","toggle","toggle","total_span","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","ty_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","union","union","until","valid","value","width","with_capacity","with_context","with_span","workgroup_size","zero","zero_based_index_range","access","compare","interpolation","location","sampling","second_blend_source","invariant","accept","arg","arg1","arg2","arg3","argument","array_index","array_index","axis","base","base","committed","comparison","components","condition","convert","coordinate","coordinate","ctrl","depth_ref","expr","expr","expr","fun","fun","gather","image","image","image","index","index","kind","left","level","level","offset","op","op","pattern","pointer","query","query","reject","right","sample","sampler","size","size","ty","ty","ty","value","vector","access","format","kind","multi","multi","level","kind","size","size","width","width","width","acceleration_structure","descriptor","result","x","y","accept","arguments","array_index","body","break_if","cases","condition","continuing","coordinate","fun","fun","function","image","pointer","pointer","pointer","query","reject","result","result","result","selector","value","value","value","value","arrayed","base","base","base","class","columns","comparison","dim","kind","kind","kind","kind","members","rows","size","size","size","size","space","space","span","stride","width","width","width","width","width","CULL_BACK_FACING","CULL_FRONT_FACING","CULL_NO_OPAQUE","CULL_OPAQUE","NO_OPAQUE","OPAQUE","RayFlag","SKIP_AABBS","SKIP_CLOSEST_HIT_SHADER","SKIP_TRIANGLES","TERMINATE_ON_FIRST_HIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","complement","contains","default","difference","empty","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","glsl","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","msl","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","wgsl","ADJUST_COORDINATE_SPACE","ARRAY_OF_ARRAYS","BUFFER_STORAGE","BindingMap","CLIP_DISTANCE","COMPUTE_SHADER","CONSERVATIVE_DEPTH","CUBE_TEXTURES_ARRAY","CULL_DISTANCE","Custom","DOUBLE_TYPE","DUAL_SOURCE_BLENDING","DYNAMIC_ARRAY_SIZE","Desktop","Embedded","EntryPointNotFound","Error","FORCE_POINT_SIZE","FULL_IMAGE_FORMATS","Features","FmtError","IMAGE_LOAD_STORE","IMAGE_SIZE","INCLUDE_UNUSED_ITEMS","ImageMultipleSamplers","MULTISAMPLED_TEXTURES","MULTISAMPLED_TEXTURE_ARRAYS","MULTI_VIEW","MissingFeatures","MultiplePushConstants","NOPERSPECTIVE_QUALIFIER","Options","PipelineOptions","ReflectionInfo","SAMPLE_QUALIFIER","SAMPLE_VARIABLES","SUPPORTED_CORE_VERSIONS","SUPPORTED_ES_VERSIONS","TEXTURE_LEVELS","TEXTURE_SAMPLES","TEXTURE_SHADOW_LOD","TextureMapping","UnsupportedExternal","UnsupportedScalar","VaryingLocation","Version","VersionNotSupported","Writer","WriterFlags","all","all","binding_map","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","difference","difference","empty","empty","entry_point","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","hash","index","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","location","multiview","new","new_gles","not","not","partial_cmp","remove","remove","sampler","set","set","shader_stage","source","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","texture","texture_mapping","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniforms","union","union","varying","version","write","writer_flags","zero_initialize_workgroup_memory","is_webgl","version","BindSamplerTarget","BindTarget","BindingMap","CapabilityNotSupported","EntryPointError","EntryPointResourceMap","EntryPointResources","Error","FeatureNotImplemented","Format","Inline","InlineSamplerIndex","MissingBindTarget","MissingBinding","MissingPushConstants","MissingSizesBuffer","Options","PipelineOptions","Resource","Slot","TranslationInfo","UnimplementedBindTarget","UnsupportedArrayOf","UnsupportedArrayOfType","UnsupportedAttribute","UnsupportedBinaryOp","UnsupportedBuiltIn","UnsupportedCall","UnsupportedCompose","UnsupportedFunction","UnsupportedRWStorageTexture","UnsupportedRayTracing","UnsupportedWriteableStorageBuffer","UnsupportedWriteableStorageTexture","Validation","Writer","allow_and_force_point_size","binding_array_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_check_policies","buffer","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","entry_point_names","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fake_missing_bindings","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","inline_samplers","into","into","into","into","into","into","into","into","into","lang_version","mutable","new","per_entry_point_map","push_constant_buffer","resources","sampler","sampler","sizes_buffer","source","spirv_cross_compatibility","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_string","zero_initialize_workgroup_memory","Address","Always","BorderColor","ClampToBorder","ClampToEdge","ClampToZero","CompareFunc","Coord","Equal","Filter","Greater","GreaterEqual","InlineSampler","Less","LessEqual","Linear","MirroredRepeat","Nearest","Never","Normalized","NotEqual","OpaqueBlack","OpaqueWhite","Pixel","Repeat","TransparentBlack","address","as_str","as_str","as_str","as_str","as_str","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_func","coord","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","lod_clamp","mag_filter","max_anisotropy","min_filter","mip_filter","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Custom","EXPLICIT_TYPES","Error","FmtError","Unimplemented","UnsupportedMathFunction","UnsupportedRelationalFunction","Writer","WriterFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","complement","contains","difference","empty","eq","equivalent","equivalent","equivalent","extend","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","new","not","remove","set","source","sub","sub_assign","symmetric_difference","to_owned","to_string","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","write","write_string","SymbolTable","Typifier","add","add_root","borrow","borrow","borrow_mut","borrow_mut","default","default","fmt","fmt","from","from","get","glsl","grow","index","into","into","invalidate","lookup","new","pop_scope","push_scope","register_type","reset","try_from","try_from","try_into","try_into","type_id","type_id","wgsl","AddAssign","Ampersand","AndAssign","Assign","Bang","BoolConstant","BoolLiteral","Break","Buffer","Caret","Case","Colon","Comma","Const","Continue","Core","Dash","Decrement","Default","Discard","DivAssign","Do","Dot","Else","EndOfFile","Eof","Equal","Error","ErrorKind","ExpectedToken","FloatConstant","FloatLiteral","For","Frontend","GreaterEqual","High","Identifier","Identifier","If","In","InOut","Increment","IntConstant","IntLiteral","InternalError","Interpolation","InvalidProfile","InvalidToken","InvalidVersion","Invariant","Layout","LeftAngle","LeftBrace","LeftBracket","LeftParen","LeftShift","LeftShiftAssign","LessEqual","LogicalAnd","LogicalOr","LogicalXor","Low","Medium","MemoryQualifier","ModAssign","MulAssign","NotEqual","NotImplemented","Options","OrAssign","Out","Percent","Plus","Precision","Precision","PrecisionQualifier","PreprocessorError","Profile","Question","Restrict","Return","RightAngle","RightBrace","RightBracket","RightParen","RightShift","RightShiftAssign","Sampling","SemanticError","Semicolon","ShaderMetadata","Shared","Slash","Star","Struct","SubAssign","Switch","Tilde","Token","TokenValue","TypeName","TypeName","Uniform","UnknownField","UnknownLayoutQualifier","UnknownType","UnknownVariable","UnsupportedMatrixTypeInStd140","VariableAlreadyDeclared","VerticalBar","Void","While","XorAssign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","defines","early_fragment_tests","eq","eq","eq","eq","extensions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","kind","meta","metadata","parse","profile","stage","stage","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","workgroup_size","Frontend","ParseError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","emit_to_stderr","emit_to_stderr_with_path","emit_to_string","emit_to_string_with_path","fmt","fmt","from","from","into","into","labels","location","message","new","parse","parse_str","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","wgsl","RESERVED","Alignment","ArrayLength","ArrayLengthDynamic","Atomic","BoundsCheckPolicies","BoundsCheckPolicy","Call","Constant","ConstantEvaluator","ConstantEvaluatorError","Derivative","DivisionByZero","EIGHT","Emitter","EntryPoint","EntryPointArgument","EntryPointIndex","EntryPointLocal","ExpressionConstnessTracker","FOUR","Function","FunctionArg","FunctionArgument","FunctionArgumentNotFound","FunctionLocal","FunctionNotDefined","FunctionReturnsVoid","GlobalCtx","GlobalVariable","GlobalVariable","Handle","ImageExpression","IncompatibleOperands","IndexableLength","IndexableLengthError","InvalidAccess","InvalidAccessBase","InvalidAccessIndex","InvalidAccessIndexTy","InvalidArrayElementType","InvalidArrayLengthArg","InvalidBinaryOpArgs","InvalidCastArg","InvalidClamp","InvalidImage","InvalidMathArg","InvalidMathArgCount","InvalidPointer","InvalidScalar","InvalidStructMemberType","InvalidSubAccess","InvalidUnaryOpArg","InvalidVector","LayoutError","LayoutErrorInner","Layouter","Literal","Load","LocalVariable","MIN_UNIFORM","MissingSpecialType","NameKey","Namer","NonPowerOfTwoWidth","NotImplemented","ONE","OutOfBoundsIndex","Overflow","POINTER_SPAN","RayQueryExpression","RemainderByZero","ResolveContext","ResolveError","SIXTEEN","ShiftedMoreThan32Bits","SplatScalarOnly","StructMember","SubexpressionsAreNotConstant","SwizzleOutOfBounds","SwizzleVectorOnly","TWO","Type","TypeLayout","TypeNotConstructible","TypeResolution","Value","WorkGroupUniformLoadResult","alignment","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_or","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","const_expressions","constants","constants","default","default","default","ensure_block_returns","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flatten_compose","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_glsl_function","for_glsl_module","for_wgsl_function","for_wgsl_module","force_non_const","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arena","from_width","functions","global_vars","handle","hash","hash","hash","index","index","inner","inner_with","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_aligned","is_const","is_running","local_vars","mul","mul","new","new","partial_cmp","reset","resolve","round_up","size","source","special_types","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_stride","to_string","to_string","to_string","to_string","to_string","try_eval_and_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","update","with_locals","expr","expr","index","indexed","indexed","name","ty","BoundsCheckPolicies","BoundsCheckPolicy","Dynamic","Expression","GuardedIndex","IndexableLength","IndexableLengthError","InvalidArrayLength","Known","Known","ReadZeroSkipWrite","Restrict","TypeNotIndexable","Unchecked","access_needs_check","binding_array","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","choose_policy","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","default","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_checked_indexes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","image_load","image_store","index","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ARGUMENT","Alignment","Argument","Argument","ArgumentCount","ArgumentType","ArrayStride","BINDINGS","BLOCKS","BindingArrayBaseTypeNotStruct","BindingCollision","BindingCollision","BreakOutsideOfLoopOrSwitch","CLIP_DISTANCE","COMPUTE","CONSTANTS","CONSTRUCTIBLE","CONTROL_FLOW_UNIFORMITY","COPY","CUBE_ARRAY_TEXTURES","CULL_DISTANCE","CallError","Capabilities","ComparisonSamplingMismatch","ComponentCount","ComponentType","Compose","Compose","ComposeError","Conflict","ConflictingCaseType","ConflictingSwitchCase","ConstExpression","ConstExpressionError","Constant","ConstantError","ContinueOutsideOfLoop","Corrupted","DATA","DERIVATIVE","DUAL_SOURCE_BLENDING","Disalignment","DoesntExist","DuplicateBuiltIn","EARLY_DEPTH_TEST","EXPRESSIONS","EmptyStruct","EntryPoint","EntryPointError","ExpectedBindingArrayType","ExpectedGlobalOrArgument","ExpectedGlobalVariable","ExpectedImageType","ExpectedSamplerType","Expression","ExpressionAlreadyInScope","ExpressionError","ExpressionInfo","ExpressionMismatch","FLOAT64","FRAGMENT","ForbiddenStageOperations","Function","Function","FunctionArgumentDoesntExist","FunctionError","FunctionInfo","GlobalUse","GlobalVariable","GlobalVariableError","HOST_SHAREABLE","IMPLICIT_LEVEL","IO_SHAREABLE","IndexMustBeConstant","IndexOutOfBounds","IndexableLength","Infinity","InitializerNotAllowed","InitializerType","InitializerType","InstructionsAfterReturn","InvalidAccelerationStructure","InvalidArgumentPointerSpace","InvalidArgumentType","InvalidArgumentType","InvalidArrayBaseType","InvalidArrayStride","InvalidArrayType","InvalidAtomic","InvalidAtomicResultType","InvalidAtomicWidth","InvalidAttributeInStage","InvalidBaseType","InvalidBinaryOperandTypes","InvalidBinding","InvalidBooleanVector","InvalidBuiltInStage","InvalidBuiltInType","InvalidCall","InvalidCastArgument","InvalidData","InvalidDepthReference","InvalidDepthSampleLevel","InvalidDerivative","InvalidDynamicArray","InvalidFloatArgument","InvalidGatherComponent","InvalidGatherDimension","InvalidGatherLevel","InvalidGlobalUsage","InvalidHandle","InvalidIfType","InvalidImageArrayIndex","InvalidImageArrayIndexType","InvalidImageClass","InvalidImageCoordinateType","InvalidImageOtherIndex","InvalidImageOtherIndexType","InvalidImageStore","InvalidIndexType","InvalidInputAttributeInStage","InvalidIntegerInterpolation","InvalidInterpolation","InvalidLocationAttributeCombination","InvalidLocationsWhileDualSourceBlending","InvalidPointerBase","InvalidPointerToUnsized","InvalidPointerType","InvalidRayDescriptor","InvalidRayQueryExpression","InvalidRayQueryType","InvalidRayQueryType","InvalidReturnSpot","InvalidReturnType","InvalidSampleLevelBiasType","InvalidSampleLevelExactType","InvalidSampleLevelGradientType","InvalidSampleOffset","InvalidSelectTypes","InvalidSplatType","InvalidSplatType","InvalidStorePointer","InvalidStoreTypes","InvalidStoreValue","InvalidSwitchType","InvalidSwizzleComponent","InvalidType","InvalidType","InvalidType","InvalidType","InvalidUnaryOperandType","InvalidUsage","InvalidVectorType","InvalidWorkGroupUniformLoadResultType","LastCaseFallTrough","Layouter","Literal","Literal","LiteralError","LocalVariable","LocalVariableError","MULTISAMPLED_SHADING","MULTIVIEW","MemberMissingBinding","MemberOffset","MemberOffsetAfterStruct","MemberOutOfBounds","MemberOverlap","MissingBinding","MissingCapabilities","MissingCapability","MissingDefaultCase","MissingInterpolation","MissingTypeFlags","MissingVertexOutputPosition","ModuleInfo","MoreThanOnePushConstantUsed","MultipleDefaultCases","NaN","NegativeIndex","NonConst","NonConstInitializer","NonConstructibleReturnType","NonConstructibleType","NonHostShareable","NonUniformControlFlow","NonUniformWorkgroupUniformLoad","NotIOShareableType","NotInScope","OutOfRangeWorkgroupSize","PRIMITIVE_INDEX","PUSH_CONSTANT","PipelineInputRegularFunction","PipelineOutputRegularFunction","QUERY","RAY_QUERY","READ","Result","ResultAlreadyInScope","ResultValue","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SAMPLER_NON_UNIFORM_INDEXING","SIZED","STORAGE_TEXTURE_16BIT_NORM_FORMATS","STRUCT_LAYOUTS","ShaderStages","StorageAddressSpaceWriteOnlyNotSupported","StructSpan","Type","Type","Type","Type","TypeError","TypeFlags","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UnexpectedEarlyDepthTest","UnexpectedWorkgroupSize","Uniformity","UniformityRequirements","UnsizedMember","UnsupportedCapability","UnsupportedCapability","UnsupportedSpecializedArrayLength","VERTEX","ValidationError","ValidationFlags","Validator","VaryingError","WORK_GROUP_BARRIER","WRITE","Width","Width","WidthError","WorkgroupUniformLoadExpressionMismatch","WorkgroupUniformLoadInvalidPointer","WrongArgumentCount","all","all","all","all","all","all","available_stages","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_literal_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","default","default","difference","difference","difference","difference","difference","difference","dominates_global_use","dual_source_blending","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expression_count","extend","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","get_entry_point","global_variable_count","index","index","index","index","index","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","may_kill","new","non_uniform_result","not","not","not","not","not","not","ref_count","remove","remove","remove","remove","remove","remove","requirements","reset","sampling_set","set","set","set","set","set","set","source","source","source","source","source","source","source","source","source","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniformity","uniformity","union","union","union","union","union","union","validate","validate_literal","index","index","required","required","seen","seen_expression","source","expected","given","index","alignment","alignment","alignment","expected","index","index","index","offset","offset","span","stride","location","location_mask","has_ref","image","sampler","error","function","handle","handle","index","index","name","name","name","name","pointer","source","source","space","value","required","seen","base","expected","index","index","offset","offset","size","space","span","stride","handle","handle","handle","handle","handle","name","name","name","name","name","source","source","source","source","source","source","stage","attribute","location","location"],"q":[[0,"naga"],[1471,"naga::AddressSpace"],[1472,"naga::AtomicFunction"],[1473,"naga::Binding"],[1477,"naga::BuiltIn"],[1478,"naga::Expression"],[1531,"naga::ImageClass"],[1536,"naga::ImageQuery"],[1537,"naga::PredeclaredType"],[1543,"naga::RayQueryFunction"],[1546,"naga::SampleLevel"],[1548,"naga::Statement"],[1574,"naga::TypeInner"],[1601,"naga::back"],[1671,"naga::back::glsl"],[1936,"naga::back::glsl::Version"],[1938,"naga::back::msl"],[2120,"naga::back::msl::sampler"],[2262,"naga::back::wgsl"],[2349,"naga::front"],[2383,"naga::front::glsl"],[2601,"naga::front::wgsl"],[2634,"naga::keywords"],[2635,"naga::keywords::wgsl"],[2636,"naga::proc"],[2945,"naga::proc::ResolveError"],[2952,"naga::proc::index"],[3042,"naga::valid"],[3881,"naga::valid::CallError"],[3888,"naga::valid::ComposeError"],[3891,"naga::valid::Disalignment"],[3902,"naga::valid::EntryPointError"],[3904,"naga::valid::ExpressionError"],[3907,"naga::valid::FunctionError"],[3922,"naga::valid::GlobalVariableError"],[3924,"naga::valid::TypeError"],[3934,"naga::valid::ValidationError"],[3951,"naga::valid::VaryingError"]],"d":["","Opaque object representing an acceleration structure of …","Array access with a computed index.","Access the same types as <code>Access</code>, plus <code>Struct</code> with a known …","","","","","Addressing space of variables.","","","","","An arena holding some kind of component (e.g., type, …","Homogenous list of elements.","Get the length of an array. The expression must resolve to …","Size of an array.","Cast a simple type to another kind.","","","","","","Atomic scalar.","Atomic function.","","Function on an atomic value.","Result of an atomic operation.","","Width of a boolean type, in bytes.","Memory barrier flags.","Synchronize invocations within the work group. The <code>Barrier</code> …","","","","2D vector","","Apply a binary operator.","Operation that can be applied on two values.","Describes how an input/output variable is to be bound.","Array of bindings.","","A code block is a vector of statements, with maybe a …","A block containing more statements, to be executed …","Boolean type.","","Exits the innermost enclosing <code>Loop</code> or <code>Switch</code>.","Built-in inputs and outputs.","Built-in shader variable.","","","Number of bytes per scalar.","Calls a function.","Result of calling another function.","","Interpolate the value at the center of the pixel.","Interpolate the value at a point that lies within all …","","","","Composite expression.","","Enables adjusting depth without disabling early Z.","Constant value.","The array size is constant.","Constant value.","Skips to the <code>continuing</code> block of the innermost enclosing …","","","","","","","Cube map","","1D image","2D image","3D image","","","Depth comparison image.","Compute the derivative on an axis.","Axis on which to compute a derivative.","Hint at which precision to compute a derivative.","","","","","The array size can change at runtime.","Early fragment tests.","Emit a range of expressions, visible to all statements …","The main function for a pipeline stage.","","","","","","","","An expression that can be evaluated to obtain a value.","","May not be NaN or infinity.","May not be NaN or infinity.","","Hash map that is faster but not resilient to DoS attacks.","Hash set that is faster but not resilient to DoS attacks.","Insertion-order-preserving hash map (<code>IndexMap&lt;K, V&gt;</code>), but …","Insertion-order-preserving hash set (<code>IndexSet&lt;K&gt;</code>), but …","","","","Indicates that no interpolation will be performed.","Floating point type.","","","","","","","","","A function defined in the module.","Function locals.","A function argument.","Reference a function parameter, by its index.","A function result.","","Variable defined at module level.","Reference a global variable.","","","Shader may rewrite depth only with a value greater than …","","A strongly typed reference to an arena item.","Opaque handles, such as samplers and images.","","","Conditionally executes one of two blocks, based on the …","Possibly multidimensional array of texels.","Sub-class of the image type.","The number of dimensions an image has.","Load a texel from an image.","Type of an image query.","Query information from an image.","Sample a point from a sampled or a depth image.","Stores a texel value to an image.","","","Initialize the <code>RayQuery</code> object.","","","The interpolation qualifier of a binding or struct field.","","","","","Aborts the current shader execution.","Storage can be used as a source for load ops.","","","","Shader may rewrite depth smaller than one that would have …","","Indicates that linear, non-perspective, correct …","","Literal.","Load a value indirectly.","","","Variable defined at function level.","Reference a local variable.","Indexed location.","","","","","","Executes a block repeatedly.","Call a math function","Built-in shader function for math.","Matrix of floats.","","","","","","","","Shader module.","Equivalent of the WGSL’s <code>%</code> operator or SPIR-V’s <code>OpFRem</code>","","","","","","","Get the number of array layers.","Get the number of mipmap levels.","Get the number of samples.","","","","","","","","","The value will be interpolated in a perspective-correct …","","","Pointer to another type.","","","Return types predeclared for the frexp, modf, and …","","Private data, per invocation, mutable.","Start or continue the query given by the statement’s …","Push constants.","4D vector","","","","","","","","","","","","","","A strongly typed range of handles.","Locally used handle for ray queries.","","An operation that a <code>RayQuery</code> statement applies to its <code>query</code>…","Return an intersection found by <code>query</code>.","Result of a <code>Proceed</code> <code>RayQuery</code> statement.","","","Call a relational function.","Built-in shader function for testing relation between …","Pipeline binding information for global resources.","Returns from the function (possibly with a value).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Barrier affects all <code>AddressSpace::Storage</code> accesses.","Storage can be used as a target for store ops.","Interpolate the value at each sample location. In …","","Sampling modifier to control the level of detail.","","Regular sampled image.","Can be used to sample values from images.","The sampling qualifiers of a binding or struct field.","","Number of integral or floating-point kind.","Primitive type for a scalar.","Select between two values based on a condition.","Stage of the programmable pipeline.","","Right shift carries the sign of signed integers only.","","","","Signed integer type.","Get the size at the specified level.","","A human-readable representation for a span, tailored for …","A source code span, used for error reporting.","A source code span together with “context”, a …","Set of special types that can be optionally generated by …","Splat scalar into a vector.","","Instructions which make up an executable block.","","Storage buffer data, potentially mutable.","Storage image.","Flags describing an image.","Image storage format.","Stores a value at an address.","User-defined structure.","Member of a user-defined structure.","","","Conditionally executes one of multiple blocks, based on …","A case for a switch statement.","The value of the switch case.","Vector swizzle.","Component selection for a vector swizzle.","","","","","3D vector","","A data type declared in the module.","Enum with additional information, depending on the kind of …","","","","Unsigned integer type.","Apply an unary operator.","Operation that can be applied on a single value.","Shader may not rewrite depth value.","Uniform buffer data.","An arena whose elements are guaranteed to be unique.","","","","","","Pointer to a scalar or vector.","Vector of numbers.","Number of components in a vector.","","","","","Barrier affects all <code>AddressSpace::WorkGroup</code> accesses.","","Wrapper class for <code>Error</code>, augmenting it with a list of …","Workgroup shared data, mutable.","","","Load uniformly from a uniform pointer in the workgroup …","Result of a <code>WorkGroupUniformLoad</code> statement.","","","","","","","","Zero value of a type.","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Convert inner error into another type. Joins span …","Adds a new value to the arena, returning a typed handle.","","Apply the usual default interpolation for <code>ty</code> to <code>binding</code>.","","Information about function argument.","","Backend functions that export shader <code>Module</code>s into binary …","For I/O structs, defines the binding.","Binding number within the group.","For resources, defines the binding point.","For entry points, an argument has to have a binding unless …","For entry points, the result has to have a binding unless …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Body of the case.","Block of instructions comprising the body of the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the canonical form of <code>self</code>, or <code>None</code> if it’s …","Assert that <code>handle</code> is valid for this arena.","Assert that <code>handle</code> is valid for this arena.","Assert that <code>range</code> is valid for this arena.","Clears the arena keeping all allocations","Clears the arena, keeping all allocations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Constant expressions and override expressions used by this …","Arena for the constants defined in this module.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Early depth test for fragment stages.","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Entry points.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare <code>self</code> and <code>rhs</code> as types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expressions used inside this function.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","If true, the control flow continues to the next case in …","Fetch a handle to an existing type.","Adds a value with a custom check for uniqueness: returns a …","Adds a value with a check for uniqueness, where the check …","return the first and last handles included in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","Construct a <code>Range</code> that covers the zero-based indices in …","Frontend parsers that consume binary and text shaders and …","The entrance function.","Arena for the functions defined in this module.","Populate this module’s <code>SpecialTypes::predeclared_types</code> …","Populate this module’s <code>SpecialTypes::ray_desc</code> type.","Populate this module’s <code>SpecialTypes::ray_intersection</code> …","Return this arena’s handle for <code>value</code>, if present.","Return this arena’s value at <code>handle</code>, if that is a valid …","Get a mutable reference to an element in the arena.","","Return the span associated with <code>handle</code>.","Arena for the global variables defined in this module.","The bind group index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the zero-based index of this handle.","","","","","","Return the length of a subscriptable type.","The value of the constant.","Initial value for this variable.","Initial value for this variable.","Inner structure that depends on the kind of the type.","Insert a new value into the arena.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner vector.","Reverse of <code>Self::new</code>, discards span information and …","","","","","Convert inner error using <code>From</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Check whether <code>self</code> was defined or is a default/unknown span","Return true if this expression is a dynamic array index, …","","Returns <code>true</code> if the arena contains no elements.","Return <code>true</code> if the arena contains no elements.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","Returns true if the statement directly terminates the …","Returns an iterator over the items stored in this arena, …","Returns an iterator over the items stored in this arena, …","Yield a set of contained flags values.","Yield a set of contained flags values.","Returns a iterator over the items stored in this arena, …","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Lists of reserved keywords for each shading language with …","Returns the current number of items stored in this arena.","Return the current number of items stored in this arena.","","Length in code units (in bytes) of the span.","1-based line number.","1-based column of the start of this span","Local variables defined and used in the function.","Return a <code>SourceLocation</code> for this span in the provided …","Return a <code>SourceLocation</code> for our first span, if we have one.","","The name of the type, if any.","","Name of the variable, if any.","Name of the variable, if any.","Name of the argument, if any.","Name of the function, if any.","Name of this entry point, visible externally.","Map of expressions that have associated variable names","Returns true if the expression is considered emitted at …","Create a new arena with no initial capacity allocated.","Create a new arena with no initial capacity allocated.","","Creates a new <code>Span</code> from a range of byte indices","Create a new <code>WithSpan</code> from an <code>Error</code>, containing no spans.","","Return a range enclosing handles <code>first</code> through <code>last</code>, …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","0-based Offset in code units (in bytes) of the start of …","Offset from the beginning from the struct.","","Return the global variable being accessed by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types for predeclared wgsl types instantiated on demand.","<code>Module</code> processing functionality.","","Get the range of handles from a particular number of …","Type for <code>RayDesc</code>.","Type for <code>RayIntersection</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Replace an old value with a new value.","The result of this function, if any.","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Get the size of this type.","","How this variable is to be stored.","","","Iterator over stored <code>SpanContext</code>s.","Dictionary of special type handles.","","Shader stage.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Modifies <code>self</code> to contain the smallest <code>Span</code> possible that …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a range if the span is not unknown","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the smallest <code>Span</code> possible that contains all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the field.","","The type of this variable.","The type of this variable.","Type of the argument.","Type of the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arena for the types defined in this module.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns a new <code>Span</code> starting at <code>self</code> and ending at <code>other</code>","Shader validator.","Value, upon which the case is considered true.","","","Add a <code>SpanContext</code>.","Add a new span with description.","Workgroup size for compute stages","","Return the zero-based index range covered by <code>self</code>.","","","","","","Indicates the 2nd input to the blender when dual-source …","","","","","","","","","The index into an arrayed image. If the <code>arrayed</code> flag in …","","","","","","","Boolean expression","If provided, converts to the specified byte width. …","","The coordinate of the texel we wish to load. This must be …","","","","","Source expression, which can only be a scalar or a vector.","","","If Some(), this operation is a gather operation on the …","","The image to load a texel from. This must have type <code>Image</code>. …","","","","Target scalar kind.","","","A level of detail, for mipmapped images.","Expression handle lives in const_expressions","","","","","","","","","A sample index, for multisampled <code>Sampled</code> and <code>Depth</code> images.","","","","","","The type of the result","","","","","Kind of values to sample.","Multi-sampled image.","Multi-sampled depth image.","If <code>None</code>, the base level is considered.","","","","","","","The acceleration structure within which this query should …","A struct of detailed parameters for the ray query.","","","","","","","","","","","","","Function to run on the atomic.","The specific operation we’re performing on <code>query</code>.","","","","Pointer to an atomic value.","This must be of type <code>Pointer</code> in the <code>WorkGroup</code> address space","The <code>RayQuery</code> object this statement operates on.","","<code>AtomicResult</code> expression representing this function’s …","The <code>WorkGroupUniformLoadResult</code> expression representing …","","","","","","Value to use in the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ray flags, for a <code>RayDesc</code>’s <code>flags</code> field.","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Backend for GLSL (OpenGL Shading Language).","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Backend for MSL (Metal Shading Language).","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Backend for WGSL (WebGPU Shading Language).","Flip output Y and extend Z from (0, 1) to (-1, 1).","","Buffer address space support.","Mapping between resources and bindings.","","","","","","","8 byte floats.","Dual source blending","Arrays with a dynamic length.","<code>core</code> GLSL.","<code>es</code> GLSL.","The entry point couldn’t be found.","A GLSL compilation error.","Emit <code>PointSize</code> output builtin to vertex shaders, which is …","More image formats.","Structure used to encode additions to GLSL that aren’t …","A error occurred while writing to the output.","Image load and early depth tests.","Image size query","Include unused global variables, constants and functions. …","A image was used with multiple samplers, which isn’t …","","","","The specified <code>Version</code> doesn’t have all required <code>Features</code>.","<code>AddressSpace::PushConstant</code> was used more than once in the …","Interpolation and auxiliary qualifiers.","Configuration used in the <code>Writer</code>.","A subset of options meant to be changed per pipeline.","Reflection info for texture mappings and uniforms.","","Sample ID.","List of supported <code>core</code> GLSL versions.","List of supported <code>es</code> GLSL versions.","Texture levels query","Texture samples query","Supports GL_EXT_texture_shadow_lod on the host, which …","Mapping between a texture and its sampler, if it exists.","A call was made to an unsupported external.","A scalar with an unsupported width was requested.","","A GLSL version.","The specified <code>Version</code> isn’t supported.","Writer responsible for all code generation.","Configuration flags for the <code>Writer</code>.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Map of resources association to binding locations.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The name of the entry point.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","The index which can be used for dual source blending. This …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The location of the global. This corresponds to …","How many views to render to, if doing multiview rendering.","Creates a new <code>Writer</code> instance.","Create a new gles version","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Handle to the associated sampler global variable, if it …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The stage of the entry point.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Handle to the image global variable.","Mapping between texture names and variables/samplers.","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping between uniform variables and names.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Mapping between names and attribute locations.","The GLSL version to be used.","Writes the <code>Module</code> as glsl to the output","Configuration flags for the <code>Writer</code>.","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","A subset of options that are meant to be changed per …","","","Information about a translated module that is required for …","","","","","","","","","","","","","","","","Allow <code>BuiltIn::PointSize</code> and inject it if doesn’t exist.","If the binding is an unsized binding array, this overrides …","","","","","","","","","","","","","","","","","","","Bounds checking policies.","","","","","","","","","","","","","","","","","","Mapping of the entry point names. Each item in the array …","","","","","","","","","","","","","","","","","","","","","","Don’t panic on missing bindings, instead generate …","Finishes writing and returns the output.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Samplers to be inlined into the code.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","(Major, Minor) target version of the Metal Shading …","","Creates a new <code>Writer</code> instance.","Map of entry-point resources, indexed by entry point …","","","","","The slot of a buffer that contains an array of <code>u32</code>, one …","","Make it possible to link different stages via SPIRV-Cross.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Should workgroup variables be zero initialized (by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Always annotate the type information instead of inferring.","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Structure responsible for managing variable lookups and …","A table of types for an <code>Arena&lt;Expression&gt;</code>.","Adds a new variable to the current scope.","Adds a new variable to the root scope.","","","","","Constructs a new symbol table with a root scope","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Frontend for GLSL (OpenGL Shading Language).","Grow this typifier until it contains a type for <code>expr_handle</code>…","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Recompute the type resolution for <code>expr_handle</code>.","Perform a lookup for a variable named <code>name</code>.","","Removes the current lexical scope and all its variables","Adds a new lexical scope.","Add an expression’s type to an <code>Arena&lt;Type&gt;</code>.","","","","","","","","Frontend for WGSL (WebGPU Shading Language).","","","","","","","A boolean literal was expected.","","","","","","","","","The <code>core</code> profile, default when no profile is specified.","","","","","","","","","Whilst parsing as encountered an unexpected EOF.","The end of file was expected.","","Error returned during shader parsing.","Information about the cause of an error.","One of the expected tokens returned in <code>InvalidToken</code>.","","A float literal was expected.","","The <code>Frontend</code> is the central structure of the GLSL frontend.","","<code>highp</code> precision","An identifier was expected.","","","","","","","An integer literal was expected.","The parser entered an illegal state and exited","","The shader specified an unsupported or invalid profile.","Whilst parsing an unexpected token was encountered.","The shader requested an unsupported or invalid version.","","","","","","","","","","","","","<code>lowp</code> precision","<code>mediump</code> precision","A <code>glsl</code> memory qualifier such as <code>writeonly</code>","","","","A specific feature is not yet implemented.","Per-shader options passed to <code>parse</code>.","","","","","A precision hint used in GLSL declarations.","","","An error was returned by the preprocessor.","The GLSL profile used by a shader.","","","","","","","","","","","A semantic error was detected in the shader.","","Additional information about the GLSL shader.","","","","","","","","A specific token was expected.","A token passed from the lexing used in the parsing.","A type was expected.","","","A reference to a non existent member of a type was made.","An unknown layout qualifier was used.","A reference to a type that wasn’t declared was used.","A reference to a variable that wasn’t declared was used.","Unsupported matrix of the form matCx2","A variable with the same name already exists in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Preprocesor definitions to be used, akin to having","Whether or not early fragment tests where requested by the …","","","","","The shader can request extensions via the <code>#extension</code> …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Holds the information about the error itself.","Holds information about the range of the source code where …","Returns additional information about the parsed shader …","Parses a shader either outputting a shader <code>Module</code> or a …","The GLSL profile specified in the shader through the use …","The shader stage in the pipeline.","The shader stage in the pipeline, passed to the <code>parse</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The GLSL version specified in the shader through the use …","The workgroup size for compute shaders, defaults to <code>[1; 3]</code> …","","","","","","","","","Emits a summary of the error to standard error stream.","Emits a summary of the error to standard error stream.","Emits a summary of the error to a string.","Emits a summary of the error to a string.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a <code>SourceLocation</code> for the first label in the error …","","","","","","","","","","","","","","Keywords for WGSL (WebGPU Shading Language).","","A newtype struct where its only valid values are powers of …","","","","","","","","A context for evaluating constant expressions.","","","","","Helper class to emit expressions","","","","","","","","","","","","","","","","","A type stored in the associated arena.","","","","","","","","","","","","","","","","","","","","","","","","","Helper processor that derives the sizes of all types.","","","","","","","This processor assigns names to all the things in a module …","","","","","","","","","","","","","","","","","","","","Size and alignment information for a type.","","The result of computing an expression’s type.","A free-floating <code>TypeInner</code>, representing a type that may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a new identifier based on <code>label_raw</code>.","","Remove all entries from this <code>Layouter</code>, retaining storage.","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that the given block has return statements at the …","","","","","","","","","","","","","","","Return an iterator over the individual components …","","","","","","","","","","","","","","","","","","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Return a <code>ConstantEvaluator</code> that will add expressions to …","Forces the the expression to not be const","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Panics","","","","","","","Definitions for index bounds checking.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether or not <code>n</code> is a multiple of this alignment.","","","","","","","","","","Determine the type of <code>expr</code>.","Round <code>n</code> up to the nearest alignment boundary.","","","","","","","","","","","","","Produce the stride as if this type is a base of an array.","","","","","","Try to evaluate <code>expr</code> at compile time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend this <code>Layouter</code> with layouts for any new entries in …","Initialize a resolve context from the module.","","","","","","","","Policies for injecting bounds checks during code …","How should code generated by Naga do bounds checks?","The number of elements is determined at runtime.","","An index that may be statically known, or may need to be …","The number of elements in an indexable type.","","","","Values of this type always have the given number of …","Out-of-bounds reads return zero, and writes have no effect.","Replace out-of-bounds indexes with some arbitrary …","","Naga adds no checks to indexing operations. Generate the …","Determine whether <code>index</code> is statically known to be in …","How should the generated code handle binding array indexes …","","","","","","","","","","","How should the generated code handle array, vector, or …","Determine which policy applies to <code>base</code>.","","","","","","","","","Return <code>true</code> if any of <code>self</code>’s policies are <code>policy</code>.","","","","","","","","","","","","Build a set of expressions used as indices, to cache in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","How should the generated code handle image texel loads …","How should the generated code handle image texel stores …","How should the generated code handle array, vector, or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","This type can be passed as a function argument.","","","","","","","Group, binding, and location attributes.","Statements and blocks of them.","","","","","Support for [<code>Builtin::ClipDistance</code>].","","Constants.","A WGSL constructible type.","Uniformity of control flow for operations that require it.","The data can be copied around.","Support for arrayed cube textures.","Support for [<code>Builtin::CullDistance</code>].","","Allowed IR capabilities.","","","","","","","","","","","","","","","","Can be used for data variables.","","Support for generating two sources for blending from …","","","","Support for <code>early_depth_test</code>.","Expressions.","","","","","","","","","","","","","","Float values with width = 8.","","","","","","","","Indicates how a global variable is used.","","","Can be used for host-shareable structures.","","Can be be used for user-defined IO between pipeline stages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin::SampleIndex</code>] and [<code>Sampling::Sample</code>].","Support for [<code>BuiltIn::ViewIndex</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for [<code>Builtin:PrimitiveIndex</code>].","Support for [<code>AddressSpace:PushConstant</code>].","","","The information about the data is queried.","Support for ray queries and acceleration structures.","Data will be read from the variable.","","","","Support for non-uniform indexing of sampled textures and …","Support for non-uniform indexing of samplers.","The data type has a size known by pipeline creation time.","Support for 16-bit normalized storage texture formats.","Host-shareable structure layouts.","Validation flags.","","","","","","","","Flags associated with <code>Type</code>s by <code>Validator</code>.","Support for non-uniform indexing of uniform buffers and …","","","Uniform control flow characteristics.","Kinds of expressions that require uniform control flow.","","","","","","","Validation flags.","","","","Data will be written to the variable.","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Set of shader stages where calling this function is valid.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Indicates that the function is using dual source blending.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Function may kill the invocation.","Construct a new validator instance.","A child expression with non-uniform result.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","If this expression requires uniform control flow, store …","Reset the validator internals","All pairs of (texture, sampler) globals that may be used …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uniformity characteristics.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Check the given module to be valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[12,11,52,52,12,12,44,45,0,48,44,45,48,0,11,52,0,52,12,12,12,12,12,11,56,61,0,52,49,0,0,56,27,27,35,28,49,52,0,0,11,43,0,56,29,37,56,0,10,38,38,0,56,52,12,32,32,12,27,46,52,26,0,0,30,52,56,12,12,12,12,12,12,34,27,34,34,34,53,12,36,52,0,0,12,12,44,12,30,0,56,0,44,49,45,44,45,12,12,0,12,37,37,12,0,0,0,0,12,12,46,31,29,12,12,12,27,26,12,61,27,0,1,0,52,0,27,0,52,49,44,25,44,0,1,37,53,56,11,0,0,52,0,52,52,56,44,45,55,12,27,0,12,12,48,48,56,2,12,12,44,25,44,31,0,52,52,27,27,0,52,10,12,12,44,43,44,56,52,0,11,45,12,45,12,12,12,61,0,44,44,43,38,46,12,44,50,50,50,27,12,0,12,12,12,12,12,31,27,27,11,27,12,0,27,1,55,1,28,35,35,35,35,35,35,35,35,35,35,35,35,12,0,11,56,0,52,52,12,12,52,0,0,56,12,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,12,3,2,32,27,0,27,36,11,0,12,11,0,52,0,44,44,12,12,12,29,50,12,0,0,0,0,52,12,0,12,1,36,0,0,56,11,0,44,45,56,0,0,52,0,12,12,55,12,28,12,0,0,37,53,7,29,52,0,25,1,0,12,12,12,12,12,11,11,0,26,27,27,51,3,47,0,1,27,27,56,52,47,51,51,47,51,51,49,52,1,2,3,4,6,9,10,12,59,4,0,33,40,41,57,58,2,3,2,3,2,3,2,3,2,2,3,3,2,3,2,3,54,59,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,11,6,16,6,6,16,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,8,24,25,26,1,27,28,29,30,31,32,34,2,35,36,40,43,44,45,46,47,48,12,8,24,25,26,1,27,28,29,30,31,32,34,2,35,36,40,43,44,45,46,47,48,12,2,3,11,11,24,63,63,2,3,9,6,16,9,7,2,3,59,62,63,9,9,2,3,60,4,4,4,4,2,3,63,8,7,23,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,43,44,45,46,47,48,12,49,50,51,3,52,53,61,8,8,8,23,23,23,24,24,24,25,25,25,26,26,26,1,1,1,27,27,27,28,28,28,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,2,2,2,35,35,35,36,36,36,15,15,15,11,11,11,11,37,37,37,10,10,10,40,40,40,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,48,48,48,12,12,12,3,3,3,53,53,53,61,61,61,59,9,2,3,9,54,6,6,6,21,8,21,6,16,9,7,23,4,4,24,25,26,1,27,28,29,30,31,32,33,34,2,2,2,2,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,3,3,3,3,52,53,54,55,56,57,58,59,60,61,62,63,8,21,6,16,9,9,7,7,7,23,4,24,25,26,1,27,28,29,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,2,3,2,2,3,3,2,3,51,2,3,2,3,9,21,0,60,63,63,63,63,16,16,6,6,16,63,40,8,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,10,40,43,44,45,46,47,48,12,53,61,49,8,6,6,16,51,6,11,39,41,42,15,16,2,3,2,3,2,3,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,6,4,21,9,2,3,4,2,3,11,7,52,11,6,16,9,2,3,36,36,29,56,6,16,2,3,6,2,3,0,6,16,9,23,23,23,59,7,4,33,15,39,41,42,57,59,60,59,52,6,16,9,7,4,37,21,21,2,3,23,33,37,59,39,8,24,25,26,1,27,28,29,30,31,32,34,2,35,36,37,40,43,44,45,46,47,48,12,51,11,62,0,9,6,62,62,2,3,16,59,11,37,11,2,3,11,4,41,9,9,4,63,9,60,2,3,2,3,7,2,3,10,63,30,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,7,4,2,3,7,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,6,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,33,39,41,42,57,58,37,8,21,6,16,9,7,23,4,24,25,26,1,27,28,29,30,31,32,33,34,2,35,36,15,11,37,38,39,10,40,41,42,43,44,45,46,47,48,12,49,50,51,3,52,53,54,55,56,57,58,59,60,61,62,63,63,2,3,7,0,54,37,9,4,4,60,37,21,188,189,190,190,190,190,191,192,193,193,193,193,194,195,196,197,198,199,200,201,202,192,203,195,196,197,195,204,197,203,194,193,195,195,196,205,198,199,203,206,195,196,195,204,206,207,208,205,200,192,206,196,195,209,207,202,201,210,209,207,211,211,212,212,213,214,215,216,217,215,216,217,218,218,219,220,220,221,222,223,224,224,225,221,224,223,226,227,222,223,228,226,229,227,221,226,229,222,225,230,228,223,226,231,232,233,234,231,235,236,231,237,238,239,240,241,235,238,240,233,234,232,240,241,233,237,238,235,239,240,98,98,98,98,98,98,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,98,98,98,98,98,98,98,98,98,0,98,98,98,98,98,98,98,98,98,98,98,98,0,100,99,99,0,99,99,99,99,99,107,99,99,99,101,101,107,0,100,99,0,107,99,99,100,107,99,99,99,107,107,99,0,0,0,99,99,0,0,99,99,100,0,107,107,0,0,107,0,0,99,100,102,99,100,99,100,99,100,99,100,99,99,100,100,99,100,99,100,112,99,101,100,102,103,105,106,104,107,112,99,101,100,102,103,105,106,104,107,99,101,100,102,103,104,99,101,100,102,103,104,99,100,99,100,102,99,100,99,100,103,99,101,100,103,99,99,99,100,100,100,103,103,103,99,100,99,99,99,99,99,101,101,100,100,100,100,100,102,103,105,106,104,107,107,112,99,101,100,102,103,105,106,104,107,107,99,100,99,99,100,100,99,100,99,100,99,100,103,105,99,100,99,100,99,100,112,99,101,100,102,103,105,106,104,107,99,100,99,100,99,100,99,100,99,100,105,103,112,101,99,100,101,99,100,104,99,100,103,107,99,100,99,100,99,100,104,106,99,101,100,102,103,104,101,107,99,100,112,99,101,100,102,103,105,106,104,107,112,99,101,100,102,103,105,106,104,107,112,99,101,100,102,103,105,106,104,107,106,99,100,106,102,112,102,102,242,242,0,0,0,121,0,0,0,0,121,121,114,0,117,117,117,117,0,0,114,0,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,119,115,120,122,114,115,116,121,117,118,119,120,122,114,115,116,121,117,118,119,118,115,114,115,116,117,118,119,114,115,116,117,118,119,115,116,118,119,122,114,115,116,117,118,119,114,114,114,115,115,115,116,116,116,118,118,118,119,119,119,118,120,114,115,116,121,121,117,117,118,119,120,122,114,115,116,121,121,117,118,119,114,115,116,118,119,118,120,122,114,115,116,121,117,118,119,118,115,120,118,116,116,0,115,116,121,118,115,114,115,116,117,118,119,121,117,120,122,114,115,116,121,117,118,119,120,122,114,115,116,121,117,118,119,120,122,114,115,116,121,117,118,119,120,0,118,0,127,0,124,124,124,0,0,127,0,127,127,0,127,127,126,124,126,127,123,127,125,125,123,124,125,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,128,128,123,124,125,126,127,128,123,124,125,126,127,128,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,128,128,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,128,128,128,128,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,131,129,0,131,131,131,131,0,0,129,129,129,129,129,129,129,129,129,130,129,131,130,129,131,129,129,129,129,129,129,129,129,129,129,129,130,129,129,129,129,129,131,131,130,129,131,131,129,129,129,129,129,129,129,129,129,130,129,131,129,129,129,129,129,130,129,129,129,131,129,129,129,129,131,129,130,129,131,130,129,131,130,129,131,129,130,0,0,0,132,132,132,133,132,133,132,133,132,133,132,133,133,0,133,133,132,133,133,132,133,132,132,133,133,132,133,132,133,132,133,0,143,143,143,143,143,143,142,143,143,143,143,143,143,143,143,139,143,143,143,143,143,143,143,143,144,142,143,0,0,0,143,142,143,0,143,138,142,143,143,143,143,143,143,142,144,143,144,144,144,143,143,143,143,143,143,143,143,143,143,143,143,138,138,143,143,143,143,144,0,143,143,143,143,0,143,143,144,0,143,143,143,143,143,143,143,143,143,143,144,143,0,143,143,143,143,143,143,143,142,0,142,143,143,144,144,144,144,144,144,143,143,143,143,138,139,142,144,145,143,146,140,141,138,139,142,144,145,143,146,140,141,138,139,138,139,140,141,146,140,138,139,142,143,140,138,139,142,142,144,144,145,145,143,146,140,141,138,139,142,142,144,144,145,143,146,146,140,141,138,139,142,144,145,143,146,140,141,145,145,141,141,140,146,140,138,139,142,144,145,138,139,142,144,145,143,146,140,141,138,139,142,144,145,143,146,140,141,138,139,142,144,145,143,146,140,141,140,140,0,0,149,148,149,148,148,148,148,148,148,148,148,148,149,148,149,148,148,148,148,149,149,0,148,148,148,149,148,149,148,149,148,0,0,0,147,147,147,0,0,147,157,0,0,147,147,152,0,157,157,0,157,0,152,157,147,157,135,157,135,135,0,147,157,65,147,135,0,0,135,147,147,147,154,147,147,147,147,135,147,147,135,135,154,135,147,135,0,0,0,147,147,147,152,135,0,0,154,147,152,135,147,0,147,147,0,0,152,147,147,157,147,147,147,152,157,0,147,0,65,147,153,134,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,150,150,151,147,152,153,154,155,65,135,92,147,152,153,154,155,65,135,92,152,152,92,134,92,156,151,150,0,152,153,154,155,157,65,135,152,152,152,157,157,157,156,0,158,159,147,147,156,152,152,153,151,154,154,155,155,157,65,135,135,158,158,158,158,159,134,158,159,147,147,156,152,152,153,151,154,155,157,150,65,135,92,159,152,134,134,65,152,153,157,0,151,155,65,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,152,159,156,134,152,152,159,152,152,150,134,152,153,147,134,156,147,152,153,154,155,65,135,92,153,147,152,154,155,135,158,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,155,134,158,159,147,156,152,153,151,154,155,157,150,65,135,92,134,92,151,134,243,244,243,244,245,246,245,0,0,83,162,0,0,0,84,162,83,164,164,84,164,0,111,164,111,162,84,83,164,111,162,84,83,111,111,164,111,162,84,164,111,162,84,111,164,111,164,111,84,164,164,164,111,111,111,0,164,111,162,84,84,83,164,111,162,84,83,164,111,111,111,111,164,111,162,84,83,164,111,162,84,84,164,111,162,84,83,164,111,162,84,83,164,111,162,84,83,168,180,177,182,177,177,183,169,169,184,181,182,179,170,171,169,168,169,168,170,170,0,0,175,174,174,175,176,0,182,179,179,186,0,186,0,179,186,168,166,170,0,175,181,170,169,184,186,0,175,175,175,175,175,179,179,0,0,177,170,171,182,182,186,175,0,0,0,186,0,168,166,168,175,175,175,160,180,178,180,179,179,179,175,179,184,184,175,179,175,184,181,175,175,180,175,181,181,179,175,184,175,175,175,184,175,175,175,175,182,186,179,175,175,175,175,175,175,179,175,181,182,181,181,182,184,184,175,179,179,175,179,179,179,175,175,175,175,175,175,176,179,179,179,179,175,178,180,181,185,175,180,175,175,179,186,175,176,0,179,0,170,170,181,183,183,184,184,181,175,184,179,181,180,182,0,182,179,160,175,176,178,179,185,183,179,179,181,175,182,170,170,179,179,167,170,167,182,177,177,170,170,168,170,169,0,180,183,174,175,176,186,0,0,170,182,182,0,0,183,180,181,184,171,0,0,0,0,166,167,176,160,184,179,179,175,166,167,168,169,170,171,163,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,166,167,167,168,168,169,169,170,170,171,171,166,167,168,169,170,171,166,167,168,169,170,171,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,0,166,172,167,173,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,185,186,166,172,167,173,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,185,186,166,167,168,169,170,171,166,167,168,169,170,171,169,170,166,167,168,169,170,171,163,163,166,167,168,169,170,171,166,167,168,169,170,171,166,166,166,167,167,167,168,168,168,169,169,169,170,170,170,171,171,171,163,166,167,168,169,170,171,166,166,166,166,166,172,167,167,167,167,167,173,163,174,174,175,175,176,176,160,160,177,177,178,178,179,179,180,180,181,181,182,182,168,168,168,168,168,183,183,184,184,169,169,169,169,169,170,170,170,170,170,171,171,171,171,171,110,187,185,185,186,186,166,172,167,173,163,174,175,175,175,175,175,176,176,176,176,160,177,178,179,180,181,182,182,182,168,183,184,169,170,171,110,187,185,186,186,166,167,168,169,170,171,166,166,167,167,168,168,169,169,170,170,171,171,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,110,163,163,163,110,110,110,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,163,187,172,166,167,168,169,170,171,173,166,167,168,169,170,171,172,187,163,166,167,168,169,170,171,175,176,160,177,179,180,182,184,186,166,167,168,169,170,171,166,167,168,169,170,171,166,167,168,169,170,171,166,172,167,173,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,185,186,174,175,176,160,177,178,179,180,181,182,183,184,185,186,166,167,168,169,170,171,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,173,166,172,167,173,163,174,175,176,160,177,178,179,180,181,182,168,183,184,169,170,171,110,187,185,186,173,163,166,167,168,169,170,171,187,187,247,248,249,248,249,248,247,250,250,251,252,253,254,255,254,255,256,254,255,253,252,257,258,259,259,259,260,260,261,262,263,264,262,263,264,265,266,261,262,264,266,267,267,268,269,270,271,270,271,271,268,271,269,272,273,274,275,276,272,274,275,276,277,272,273,274,275,276,277,277,278,279,278],"fc":[],"p":[[4,"AddressSpace"],[3,"StorageAccess"],[3,"Barrier"],[3,"WithSpan"],[8,"FnOnce"],[3,"Arena"],[3,"Span"],[3,"Handle"],[3,"Block"],[4,"Binding"],[4,"TypeInner"],[4,"MathFunction"],[15,"usize"],[15,"u32"],[3,"Type"],[3,"UniqueArena"],[4,"Option"],[4,"Result"],[8,"Eq"],[8,"Hash"],[3,"Range"],[8,"Clone"],[3,"SourceLocation"],[3,"EarlyDepthTest"],[4,"ConservativeDepth"],[4,"ShaderStage"],[4,"BuiltIn"],[4,"VectorSize"],[4,"ScalarKind"],[4,"ArraySize"],[4,"Interpolation"],[4,"Sampling"],[3,"StructMember"],[4,"ImageDimension"],[4,"StorageFormat"],[4,"ImageClass"],[4,"Literal"],[4,"Override"],[3,"Constant"],[3,"ResourceBinding"],[3,"GlobalVariable"],[3,"LocalVariable"],[4,"UnaryOperator"],[4,"BinaryOperator"],[4,"AtomicFunction"],[4,"DerivativeControl"],[4,"DerivativeAxis"],[4,"RelationalFunction"],[4,"SampleLevel"],[4,"ImageQuery"],[4,"SwizzleComponent"],[4,"Expression"],[4,"SwitchValue"],[3,"SwitchCase"],[4,"RayQueryFunction"],[4,"Statement"],[3,"FunctionArgument"],[3,"FunctionResult"],[3,"Function"],[3,"EntryPoint"],[4,"PredeclaredType"],[3,"SpecialTypes"],[3,"Module"],[4,"Ordering"],[4,"TypeResolution"],[15,"bool"],[8,"RangeBounds"],[15,"slice"],[8,"Error"],[15,"str"],[3,"String"],[8,"IntoIterator"],[8,"Fn"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Display"],[3,"Vec"],[3,"Range"],[3,"Location"],[8,"Hasher"],[4,"IndexableLength"],[4,"IndexableLengthError"],[3,"Iter"],[8,"From"],[8,"DoubleEndedIterator"],[3,"Iter"],[3,"IterNames"],[15,"u8"],[6,"Bytes"],[3,"GlobalCtx"],[8,"Iterator"],[8,"ExactSizeIterator"],[3,"TypeId"],[6,"SpanContext"],[8,"ToString"],[3,"RayFlag"],[3,"Features"],[3,"WriterFlags"],[4,"Version"],[3,"Options"],[3,"PipelineOptions"],[3,"TextureMapping"],[3,"VaryingLocation"],[3,"ReflectionInfo"],[4,"Error"],[3,"Error"],[8,"Write"],[3,"ModuleInfo"],[3,"BoundsCheckPolicies"],[3,"Writer"],[15,"u16"],[4,"BindSamplerTarget"],[3,"BindTarget"],[3,"EntryPointResources"],[4,"EntryPointError"],[3,"Options"],[3,"PipelineOptions"],[3,"Writer"],[4,"Error"],[3,"TranslationInfo"],[4,"Coord"],[4,"Address"],[4,"BorderColor"],[4,"Filter"],[4,"CompareFunc"],[3,"InlineSampler"],[3,"WriterFlags"],[3,"Writer"],[4,"Error"],[3,"SymbolTable"],[3,"Typifier"],[3,"ResolveContext"],[4,"ResolveError"],[8,"Sized"],[8,"Borrow"],[4,"Precision"],[4,"Profile"],[3,"ShaderMetadata"],[3,"Frontend"],[4,"ExpectedToken"],[4,"TokenValue"],[4,"ErrorKind"],[3,"Error"],[3,"Options"],[4,"ConstantEvaluatorError"],[3,"ParseError"],[3,"Frontend"],[3,"Namer"],[3,"Layouter"],[3,"Alignment"],[3,"TypeLayout"],[4,"LayoutErrorInner"],[3,"LayoutError"],[3,"Emitter"],[4,"NameKey"],[3,"ConstantEvaluator"],[3,"ExpressionConstnessTracker"],[4,"LiteralError"],[6,"FastHashMap"],[4,"GuardedIndex"],[3,"FunctionInfo"],[4,"BoundsCheckPolicy"],[3,"BitSet"],[3,"UniformityRequirements"],[3,"GlobalUse"],[3,"TypeFlags"],[3,"ValidationFlags"],[3,"Capabilities"],[3,"ShaderStages"],[3,"Uniformity"],[3,"ExpressionInfo"],[4,"ComposeError"],[4,"ExpressionError"],[4,"ConstExpressionError"],[4,"CallError"],[4,"LocalVariableError"],[4,"FunctionError"],[4,"GlobalVariableError"],[4,"VaryingError"],[4,"EntryPointError"],[4,"Disalignment"],[4,"TypeError"],[4,"ConstantError"],[4,"ValidationError"],[3,"Validator"],[13,"Storage"],[13,"Exchange"],[13,"Location"],[13,"Position"],[13,"Select"],[13,"Math"],[13,"Relational"],[13,"ImageSample"],[13,"ImageLoad"],[13,"Derivative"],[13,"Access"],[13,"AccessIndex"],[13,"RayQueryGetIntersection"],[13,"AtomicResult"],[13,"Compose"],[13,"As"],[13,"Unary"],[13,"ImageQuery"],[13,"Binary"],[13,"Swizzle"],[13,"Load"],[13,"Splat"],[13,"WorkGroupUniformLoadResult"],[13,"Storage"],[13,"Sampled"],[13,"Depth"],[13,"Size"],[13,"AtomicCompareExchangeWeakResult"],[13,"ModfResult"],[13,"FrexpResult"],[13,"Initialize"],[13,"Proceed"],[13,"Gradient"],[13,"If"],[13,"Call"],[13,"ImageStore"],[13,"Loop"],[13,"Switch"],[13,"Atomic"],[13,"RayQuery"],[13,"Store"],[13,"WorkGroupUniformLoad"],[13,"Return"],[13,"Image"],[13,"Pointer"],[13,"Array"],[13,"BindingArray"],[13,"Matrix"],[13,"Sampler"],[13,"Scalar"],[13,"Vector"],[13,"Atomic"],[13,"ValuePointer"],[13,"Struct"],[13,"Embedded"],[13,"OutOfBoundsIndex"],[13,"InvalidAccess"],[13,"InvalidSubAccess"],[13,"FunctionNotDefined"],[13,"Argument"],[13,"ArgumentType"],[13,"ArgumentCount"],[13,"ComponentCount"],[13,"ComponentType"],[13,"ArrayStride"],[13,"StructSpan"],[13,"MemberOffset"],[13,"MemberOffsetAfterStruct"],[13,"UnsizedMember"],[13,"InvalidIntegerInterpolation"],[13,"InvalidLocationsWhileDualSourceBlending"],[13,"ComparisonSamplingMismatch"],[13,"InvalidCall"],[13,"Expression"],[13,"LocalVariable"],[13,"InvalidArgumentType"],[13,"InvalidArgumentPointerSpace"],[13,"PipelineInputRegularFunction"],[13,"InvalidStoreTypes"],[13,"MissingTypeFlags"],[13,"InvalidPointerToUnsized"],[13,"InvalidArrayStride"],[13,"MemberOverlap"],[13,"MemberOutOfBounds"],[13,"Type"],[13,"ConstExpression"],[13,"Constant"],[13,"GlobalVariable"],[13,"Function"],[13,"EntryPoint"],[13,"InvalidLocationAttributeCombination"],[13,"BindingCollision"]]},\
"naga_oil":{"doc":"","t":"AAANDDDDCCCNNNDDNDDEEENNNLMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMLLLLLLLLLLLLLLLLLLLLLFLLLLMMLLLLLLLLLLLMMMLMMMLMMMMMAALMMMMMMMLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLIDLLLLLLKLLLDENNNNENNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMFFDDDLLLLLLLMMLLLLLLLMMLLLMLMLLLLLLLLLNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDLLLLLLLLLLLLLLLLLLLLLLNNNEDNLLLLLLLLLLLLLLLLLLLL","n":["compose","derive","redirect","Bool","ComposableModule","ComposableModuleDefinition","ComposableModuleDescriptor","Composer","ComposerError","ComposerErrorInner","ErrSource","Glsl","GlslFragment","GlslVertex","ImportDefWithOffset","ImportDefinition","Int","NagaModuleDescriptor","OwnedShaderDefs","ShaderDefValue","ShaderLanguage","ShaderType","UInt","Wgsl","Wgsl","add_composable_module","additional_imports","additional_imports","as_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comment_strip_iter","contains_module","decorated_name","decorated_name","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","file_path","file_path","file_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_preprocessor_data","hash","hash","hash","hash","import","imports","into","into","into","into","into","into","into","into","into","into","into","items","language","language","make_naga_module","module_index","module_sets","name","non_validating","override_functions","owned_constants","owned_functions","owned_types","owned_vars","parse_imports","preprocess","remove_composable_module","sanitized_source","shader_defs","shader_defs","shader_defs","shader_type","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenizer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","validate","virtual_functions","with_capabilities","CommentReplaceExt","CommentReplaceIter","borrow","borrow_mut","from","into","into_iter","next","replace_comments","try_from","try_into","type_id","ComposerError","ComposerErrorInner","Constructing","DecorationInSource","DefineInModule","ElseWithoutCondition","ErrSource","GlslBackError","GlslInvalidVersion","GlslParseError","HeaderValidationError","ImportNotFound","ImportParseError","InconsistentShaderDefValue","InvalidIdentifier","InvalidShaderDefComparisonValue","InvalidShaderDefDefinitionValue","Module","NoModuleName","NotEnoughEndIfs","OverrideNotVirtual","RedirectError","ShaderValidationError","TooManyEndIfs","UnknownShaderDef","UnknownShaderDefOperator","WgslBackError","WgslParseError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","emit_to_string","fmt","fmt","fmt","fmt","fmt","from","from","from","from","inner","into","into","into","offset","path","source","source","source","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","at","def","expected","name","name","operator","original","pos","pos","pos","pos","pos","shader_def_name","shader_def_name","value","value","defs","name","offset","offset","path","source","parse_imports","substitute_identifiers","PreprocessOutput","Preprocessor","PreprocessorMetaData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","defines","effective_defs","fmt","fmt","fmt","from","from","from","get_preprocessor_metadata","imports","imports","into","into","into","name","preprocess","preprocessed_source","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Identifier","Other","Token","Tokenizer","Whitespace","borrow","borrow","borrow_mut","borrow_mut","cmp","compare","eq","equivalent","equivalent","equivalent","fmt","from","from","hash","identifier","into","into","into_iter","new","next","partial_cmp","pos","try_from","try_from","try_into","try_into","type_id","type_id","expression_eq","DerivedModule","borrow","borrow_mut","clear_shader_source","default","fmt","from","import_const","import_const_expression","import_function","import_function_if_new","import_global","import_type","into","into_module_with_entrypoints","localize_function","map_function_handle","map_span","rename_type","set_shader_source","try_from","try_into","type_id","ArgumentMismatch","CircularReference","FunctionNotFound","RedirectError","Redirector","ReturnTypeMismatch","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","into_module","new","redirect_function","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"naga_oil"],[3,"naga_oil::compose"],[207,"naga_oil::compose::comment_strip_iter"],[219,"naga_oil::compose::error"],[284,"naga_oil::compose::error::ComposerErrorInner"],[300,"naga_oil::compose::error::ErrSource"],[306,"naga_oil::compose::parse_imports"],[308,"naga_oil::compose::preprocess"],[344,"naga_oil::compose::tokenizer"],[377,"naga_oil::compose::util"],[378,"naga_oil::derive"],[401,"naga_oil::redirect"]],"d":["","","","","","","","module composer. stores any modules that can be imported …","","","","","","","","","","","","","","","","","","add a composable module to the composer. all modules …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check if a module with the given name has been added","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get module name and all required imports (ignoring …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","build a naga shader module","","","","create a non-validating composer. validation errors in the …","","","","","","","","remove a composable module. also removes modules that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","specify capabilities to be used for naga module generation.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","replace WGSL and GLSL comments with whitespace characters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","format a Composer error","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","swap an already imported function for a new one. note span …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","redirect all calls to the function named <code>original</code> with …","","","","","","",""],"i":[0,0,0,8,0,0,0,0,0,0,0,6,7,7,0,0,8,0,0,0,0,0,8,6,7,1,2,17,2,6,7,8,9,16,3,10,11,1,2,17,6,7,8,9,16,3,10,11,1,2,17,1,6,7,8,9,10,11,6,7,8,9,10,11,0,1,1,16,6,7,8,9,16,10,1,2,17,6,7,8,9,10,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,0,3,2,17,6,7,8,9,16,3,10,11,1,6,6,7,8,9,16,3,10,11,1,2,17,0,6,7,8,9,10,16,6,7,8,9,16,3,10,11,1,2,17,10,3,2,1,1,1,3,1,16,16,16,16,16,0,0,1,3,3,2,17,17,2,17,6,7,8,9,10,11,0,6,7,8,9,16,3,10,11,1,2,17,6,7,8,9,16,3,10,11,1,2,17,6,7,8,9,16,3,10,11,1,2,17,0,1,16,1,0,0,24,24,24,24,24,24,49,24,24,24,0,0,25,26,26,26,0,26,26,26,26,26,26,26,26,26,26,25,26,26,26,26,26,26,26,26,26,26,25,4,26,25,4,26,4,25,4,4,26,26,25,4,26,26,4,25,4,26,25,25,25,4,26,4,4,26,25,4,26,25,4,26,25,4,26,50,51,52,53,54,55,50,55,56,52,53,54,56,52,52,54,57,57,57,58,58,58,0,0,0,0,0,33,34,35,33,34,35,33,34,34,33,34,35,33,34,35,33,34,35,33,34,35,34,33,35,33,34,35,33,34,35,33,34,35,36,36,0,0,36,38,36,38,36,36,36,36,36,36,36,36,38,36,36,36,38,36,38,38,38,36,36,38,36,38,36,38,36,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,27,27,27,0,0,27,47,27,47,27,27,27,47,27,47,27,47,47,47,27,47,27,47,27,47,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[3,4]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,12],13],[[[14,[12]],12],15],0,[[],6],[[],7],[[],8],[[],9],[[],16],[[],10],[[],1],[[],2],[[],17],[[6,6],13],[[7,7],13],[[8,8],13],[[9,9],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,[[6,18],19],[[7,18],19],[[8,18],19],[[9,18],19],[[16,18],19],[[3,18],19],[[10,18],19],[[11,18],19],[[1,18],19],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[[6,20]],[[7,20]],[[8,20]],[[9,20]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,17],[[5,[21,4]]]],0,0,0,[[],1],0,0,0,0,0,0,0,[[1,12]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,[[1,23],1],0,0,[[]],[[]],[[]],[[]],[[]],[24,14],[[],24],[[],5],[[],5],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[4,1],15],[[25,18],19],[[4,18],19],[[4,18],19],[[26,18],19],[[26,18],19],[[]],[[]],[[]],[27,26],0,[[]],[[]],[[]],[25,28],[[25,1],15],[[25,1],[[29,[15]]]],[4,[[14,[30]]]],[26,[[14,[30]]]],0,[[],15],[[],15],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[12,[32,[15,[31,[15]]]]],5],[[12,28,[32,[15,[31,[15]]]],[32,[15,11]],13],[[5,[15,28]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],33],0,0,[[33,18],19],[[34,18],19],[[35,18],19],[[]],[[]],[[]],[[33,12,13],[[5,[34,26]]]],0,0,[[]],[[]],[[]],0,[[33,12,[32,[15,8]],13],[[5,[35,26]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],22],[[],22],[[],22],0,0,0,0,0,[[]],[[]],[[]],[[]],[[36,36],37],[[],37],[[36,36],13],[[],13],[[],13],[[],13],[[36,18],19],[[]],[[]],[[36,20]],[36,[[14,[12]]]],[[]],[[]],[[]],[[12,13],38],[38,14],[[36,36],[[14,[37]]]],[36,28],[[],5],[[],5],[[],5],[[],5],[[],22],[[],22],[[39,39],13],0,[[]],[[]],[40],[[],40],[[40,18],19],[[]],[[40,[42,[41]]],[[42,[41]]]],[[40,[42,[39]]],[[42,[39]]]],[[40,43,44],[[42,[43]]]],[[40,43,44],[[42,[43]]]],[[40,[42,[45]]],[[42,[45]]]],[[40,[42,[46]]],[[42,[46]]]],[[]],[40,21],[[40,43],43],[[40,[42,[43]]],[[42,[43]]]],[[40,44],44],[[40,[42,[46]],[14,[15]]],[[42,[46]]]],[[40,21,28]],[[],5],[[],5],[[],22],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[27,18],19],[[27,18],19],[[]],[[]],[[]],[[]],[47,[[5,[21,27]]]],[21,47],[[47,12,12,[48,[15]]],[[5,[27]]]],[[],15],[[],5],[[],5],[[],5],[[],5],[[],22],[[],22]],"c":[],"p":[[3,"Composer"],[3,"ComposableModuleDescriptor"],[3,"ComposableModuleDefinition"],[3,"ComposerError"],[4,"Result"],[4,"ShaderLanguage"],[4,"ShaderType"],[4,"ShaderDefValue"],[3,"OwnedShaderDefs"],[3,"ImportDefinition"],[3,"ImportDefWithOffset"],[15,"str"],[15,"bool"],[4,"Option"],[3,"String"],[3,"ComposableModule"],[3,"NagaModuleDescriptor"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[3,"Module"],[3,"TypeId"],[3,"Capabilities"],[3,"CommentReplaceIter"],[4,"ErrSource"],[4,"ComposerErrorInner"],[4,"RedirectError"],[15,"usize"],[4,"Cow"],[8,"Error"],[3,"Vec"],[3,"HashMap"],[3,"Preprocessor"],[3,"PreprocessorMetaData"],[3,"PreprocessOutput"],[4,"Token"],[4,"Ordering"],[3,"Tokenizer"],[4,"Expression"],[3,"DerivedModule"],[3,"Constant"],[3,"Handle"],[3,"Function"],[3,"Span"],[3,"GlobalVariable"],[3,"Type"],[3,"Redirector"],[3,"HashSet"],[8,"CommentReplaceExt"],[13,"InvalidIdentifier"],[13,"InconsistentShaderDefValue"],[13,"InvalidShaderDefComparisonValue"],[13,"OverrideNotVirtual"],[13,"InvalidShaderDefDefinitionValue"],[13,"UnknownShaderDefOperator"],[13,"UnknownShaderDef"],[13,"Module"],[13,"Constructing"]]},\
"nanorand":{"doc":"A library meant for fast, random number generation with …","t":"CAAAAAACDLLLLLLLLLLLLLLLLLLLLAFFFFFFIIKKCCCCCIICALLLLAKKLADGGGLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLF","n":["BufferedRng","buffer","crypto","entropy","gen","rand","tls","tls_rng","BufferedRng","borrow","borrow_mut","buffered","clone","clone_into","default","fill_bytes","from","into","into_inner","new","rand","read","read_to_end","read_to_string","reseed","to_owned","try_from","try_into","type_id","chacha","chacha_block","chacha_increment_counter","chacha_init","backup","rdseed","system","RandomGen","RandomRange","random","random_range","ChaCha","ChaCha12","ChaCha20","ChaCha8","Pcg64","Rng","SeedableRng","WyRand","chacha","fill","fill_bytes","generate","generate_range","pcg64","rand","reseed","shuffle","wyrand","ChaCha","ChaCha12","ChaCha20","ChaCha8","borrow","borrow_mut","clone","clone_into","default","fmt","fmt","from","into","new","new_key","rand","reseed","to_owned","to_string","try_from","try_into","type_id","Pcg64","borrow","borrow_mut","clone","clone_into","default","fmt","fmt","from","into","new","new_seed","rand","reseed","to_owned","to_string","try_from","try_into","type_id","WyRand","borrow","borrow_mut","clone","clone_into","default","fmt","fmt","from","into","new","new_seed","rand","reseed","to_owned","to_string","try_from","try_into","type_id","tls_rng"],"q":[[0,"nanorand"],[8,"nanorand::buffer"],[29,"nanorand::crypto"],[30,"nanorand::crypto::chacha"],[33,"nanorand::entropy"],[36,"nanorand::gen"],[40,"nanorand::rand"],[58,"nanorand::rand::chacha"],[80,"nanorand::rand::pcg64"],[99,"nanorand::rand::wyrand"],[118,"nanorand::tls"]],"d":["","Provides a buffered wrapper for RNGs, preventing bits from …","Implementation of cryptography, for CSPRNGs.","Sources for obtaining entropy.","Traits for generating types from an RNG.","RNG algorithms.","Provides a thread-local <code>WyRand</code> RNG.","","A buffered wrapper for any Rng implementation. It will …","","","Returns how many unused bytes are currently buffered.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the internal RNG, dropping the buffer.","Wraps a <code>Rng</code> InternalGenerator in a <code>BufferedRng</code> instance.","","","","","","","","","","Implementation of the ChaCha cryptographic primitives. …","Do one ChaCha round on the input data.","Increment the 64-bit counter of the internal ChaCha20 …","Initialize the ChaCha internal state, with a 256-bit key …","A backup entropy source, trying rdseed first, and if it …","A wrapper function for non-x86(64) platforms that do not …","Pull in system entropy using the <code>getrandom</code> crate. Uses …","A trait used for generating a random object with an RNG,","A trait used for generating a random number within a …","Return a random instance of the implementing type, from …","Return a ranged number of the implementing type, from the …","","","","","","A trait that represents a random number generator.","A trait that represents an RNG that can be reseeded from …","","Implementation of the ChaCha CSPRNG algorithm. More …","Fill an array with the specified type.","Fill an array of bytes with randomness.","Generates a random of the specified type, seeding from the …","Generates a random of the specified type, seeding from the …","Implementation of the Pcg64 PRNG algorithm. More details …","Generates a random sequence of bytes, seeding from the …","Re-seed the RNG with the specified bytes.","Shuffle a slice, using the RNG.","Implementation of the wyrand PRNG algorithm. More details …","An instance of the ChaCha random number generator. Seeded …","The ChaCha CSPRNG, with 12 rounds.","The ChaCha CSPRNG, with 20 rounds.","The ChaCha CSPRNG, with 8 rounds.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>ChaCha</code> instance, seeding from the system’s …","Create a new <code>ChaCha</code> instance, using the provided key and …","","","","","","","","An instance of the Pcg64 random number generator. Seeded …","","","","","Create a new <code>Pcg64</code> instance, seeding from the system’s …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Pcg64</code> instance, seeding from the system’s …","Create a new <code>Pcg64</code> instance, using a provided seed.","","","","","","","","An instance of the WyRand random number generator. Seeded …","","","","","Create a new <code>WyRand</code> instance, seeding from the system’s …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>WyRand</code> instance, seeding from the system’s …","Create a new <code>WyRand</code> instance, using a provided seed.","","","","","","","","Fetch a thread-local <code>WyRand</code>"],"i":[0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,20,21,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,13,1,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[[2,[1]]],3],[[[2,[[0,[4,1]]]]],[[2,[[0,[4,1]]]]]],[[]],[[],[[2,[[0,[1,5]]]]]],[[[2,[1]],[8,[[7,[6]]]]]],[[]],[[]],[[[2,[1]]],1],[1,[[2,[1]]]],[[[2,[1]]],[[9,[6]]]],[[[2,[1]],[7,[6]]],[[10,[3]]]],[[[2,[1]],[11,[6]]],[[10,[3]]]],[[[2,[1]],12],[[10,[3]]]],[[[2,[13]],[9,[6]]]],[[]],[[],14],[[],14],[[],15],0,[[[9,[16]]],[[9,[16]]]],[[[9,[16]]],17],[[[9,[6]],[9,[6]]],[[9,[16]]]],[[[7,[6]]]],[[[7,[6]]],[[18,[3]]]],[[[7,[6]]]],0,0,[[]],[19],0,0,0,0,0,0,0,0,0,[[[8,[[7,[20]]]]]],[[[8,[[7,[6]]]]]],[[],20],[[[19,[21]]],21],0,[[],[[9,[6]]]],[[[9,[6]]]],[[[8,[7]]]],0,0,0,0,0,[[]],[[]],[22,22],[[]],[[],22],[[22,23],24],[[22,23],24],[[]],[[]],[[],22],[[[9,[6]],[9,[6]]],22],[22,[[9,[6]]]],[[22,[9,[6]]]],[[]],[[],12],[[],14],[[],14],[[],15],0,[[]],[[]],[25,25],[[]],[[],25],[[25,23],24],[[25,23],24],[[]],[[]],[[],25],[26,25],[25,[[9,[6]]]],[[25,[9,[6]]]],[[]],[[],12],[[],14],[[],14],[[],15],0,[[]],[[]],[27,27],[[]],[[],27],[[27,23],24],[[27,23],24],[[]],[[]],[[],27],[28,27],[27,[[9,[6]]]],[[27,[9,[6]]]],[[]],[[],12],[[],14],[[],14],[[],15],0],"c":[],"p":[[8,"Rng"],[3,"BufferedRng"],[15,"usize"],[8,"Clone"],[8,"Default"],[15,"u8"],[15,"slice"],[8,"AsMut"],[15,"array"],[6,"Result"],[3,"Vec"],[3,"String"],[8,"SeedableRng"],[4,"Result"],[3,"TypeId"],[15,"u32"],[15,"bool"],[4,"Option"],[8,"RangeBounds"],[8,"RandomGen"],[8,"RandomRange"],[3,"ChaCha"],[3,"Formatter"],[6,"Result"],[3,"Pcg64"],[15,"u128"],[3,"WyRand"],[15,"u64"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":"IDIDIFKFKFLLLLFLLLLFLFKFLFKKLLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLLLMM","n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","equivalent","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"num_integer"]],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,14,5,14,5,0,4,4,5,5,0,2,0,2,0,2,0,2,2,5,5,2,2,5,14,5,0,2,5,0,2,14,5,14,2,2,2,0,2,0,2,0,14,14,2,0,4,2,0,4,4,5,14,5,14,5,14,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[]],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],[5,[7]]],6],[[],6],[[3,3],[[5,[3]]]],[[[0,[3,8]],[0,[3,8]]]],[[[5,[9]],10],11],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[[13,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]]],[[0,[[12,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]],2,3]]]],[2,[[14,[2]]]],[[[14,[[0,[2,3]]]]],[[15,[[0,[2,3]]]]]],[[3,3],3],[[4,16],4],[16],[[3,3],3],[4,4],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,0],"c":[],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Signed"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Add"],[15,"slice"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_rational":{"doc":"Rational numbers","t":"DDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","default","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":[[0,"num_rational"]],"d":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Returns zero","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,13,13,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,13,4],"f":[0,0,0,0,0,[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[0,[6,7]]],[[9,[[4,[[0,[2,3,8,7,1]]]]]]]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,10,11]]]],[4,[[0,[1,2,10,11]]]]],[[9,[[4,[[0,[1,2,10,11]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10,12]]]],[4,[[0,[1,2,10,12]]]]],[[9,[[4,[[0,[1,2,10,12]]]]]]]],[[[4,[1]]],[[4,[1]]]],[13,13],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],14],[[],[[4,[[0,[1,2]]]]]],[4],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],15],[[13,13],15],[[],15],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[16,1,2]]]],17],18],[[[4,[[0,[19,1,2]]]],17],18],[[[4,[[0,[20,1,2]]]],17],18],[[[4,[[0,[21,1,2]]]],17],18],[[[4,[[0,[22,1,2]]]],17],18],[[[4,[23]],17],18],[[[4,[[0,[24,1,2]]]],17],18],[[[4,[[0,[25,1,2]]]],17],18],[[13,17],18],[[13,17],18],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[]],[[]],[26,[[9,[[4,[27]]]]]],[26,[[9,[[4,[28]]]]]],[26,[[9,[[4,[29]]]]]],[26,[[9,[[4,[30]]]]]],[26,[[9,[[4,[31]]]]]],[26,[[9,[[4,[32]]]]]],[26,[[9,[[4,[33]]]]]],[26,[[9,[[4,[34]]]]]],[26,[[9,[[4,[35]]]]]],[26,[[9,[[4,[36]]]]]],[26,[[9,[[4,[37]]]]]],[26,[[9,[[4,[38]]]]]],[39,[[9,[[4,[30]]]]]],[39,[[9,[[4,[27]]]]]],[39,[[9,[[4,[38]]]]]],[39,[[9,[[4,[28]]]]]],[39,[[9,[[4,[32]]]]]],[39,[[9,[[4,[33]]]]]],[39,[[9,[[4,[29]]]]]],[39,[[9,[[4,[36]]]]]],[39,[[9,[[4,[37]]]]]],[39,[[9,[[4,[34]]]]]],[39,[[9,[[4,[31]]]]]],[39,[[9,[[4,[35]]]]]],[31,[[9,[[4,[33]]]]]],[31,[[9,[[4,[27]]]]]],[31,[[9,[[4,[38]]]]]],[31,[[9,[[4,[34]]]]]],[31,[[9,[[4,[36]]]]]],[31,[[9,[[4,[37]]]]]],[31,[[9,[[4,[30]]]]]],[31,[[9,[[4,[28]]]]]],[31,[[9,[[4,[35]]]]]],[31,[[9,[[4,[32]]]]]],[31,[[9,[[4,[31]]]]]],[31,[[9,[[4,[29]]]]]],[30,[[9,[[4,[34]]]]]],[30,[[9,[[4,[29]]]]]],[30,[[9,[[4,[35]]]]]],[30,[[9,[[4,[32]]]]]],[30,[[9,[[4,[28]]]]]],[30,[[9,[[4,[38]]]]]],[30,[[9,[[4,[27]]]]]],[30,[[9,[[4,[30]]]]]],[30,[[9,[[4,[36]]]]]],[30,[[9,[[4,[33]]]]]],[30,[[9,[[4,[37]]]]]],[30,[[9,[[4,[31]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[40,[[42,[[4,[[0,[41,1,2]]]],13]]]],[[40,28],[[42,[[4,[[0,[1,2]]]],13]]]],[29,[[9,[[4,[28]]]]]],[29,[[9,[[4,[30]]]]]],[29,[[9,[[4,[36]]]]]],[29,[[9,[[4,[31]]]]]],[29,[[9,[[4,[33]]]]]],[29,[[9,[[4,[29]]]]]],[29,[[9,[[4,[34]]]]]],[29,[[9,[[4,[27]]]]]],[29,[[9,[[4,[38]]]]]],[29,[[9,[[4,[35]]]]]],[29,[[9,[[4,[37]]]]]],[29,[[9,[[4,[32]]]]]],[27,[[9,[[4,[35]]]]]],[27,[[9,[[4,[36]]]]]],[27,[[9,[[4,[37]]]]]],[27,[[9,[[4,[38]]]]]],[27,[[9,[[4,[30]]]]]],[27,[[9,[[4,[27]]]]]],[27,[[9,[[4,[33]]]]]],[27,[[9,[[4,[29]]]]]],[27,[[9,[[4,[34]]]]]],[27,[[9,[[4,[32]]]]]],[27,[[9,[[4,[31]]]]]],[27,[[9,[[4,[28]]]]]],[[[4,[[0,[1,2,43]]]],44]],[[]],[4],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,45]]]]],[[4,[[0,[1,2,45]]]]]],[[[4,[[0,[1,2,45]]]]],[[4,[[0,[1,2,45]]]]]],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],4],[4],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[9,[14]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],38],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],28],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[37]]]]]],36],[[4,[[0,[1,2,[46,[37]]]]]]]],[[[4,[[0,[1,2,[46,[27]]]]]],30],[[4,[[0,[1,2,[46,[27]]]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[27]]]]]],30],[[4,[[0,[1,2,[46,[27]]]]]]]],[[[4,[[0,[1,2,[46,[29]]]]]],29],[[4,[[0,[1,2,[46,[29]]]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[37]]]]]],37],[[4,[[0,[1,2,[46,[37]]]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],34],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[29]]]]]],31],[[4,[[0,[1,2,[46,[29]]]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],32],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[27]]]]]],27],[[4,[[0,[1,2,[46,[27]]]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],28],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[29]]]]]],31],[[4,[[0,[1,2,[46,[29]]]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],33],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],32],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[29]]]]]],29],[[4,[[0,[1,2,[46,[29]]]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],34],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],35],[[4,[[0,[1,2,[46,[28]]]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[32]]]]]],38],[[4,[[0,[1,2,[46,[32]]]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[37]]]]]],36],[[4,[[0,[1,2,[46,[37]]]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[46,[27]]]]]],27],[[4,[[0,[1,2,[46,[27]]]]]]]],[[[4,[[0,[1,2,[46,[33]]]]]],33],[[4,[[0,[1,2,[46,[33]]]]]]]],[[[4,[[0,[1,2,[46,[37]]]]]],37],[[4,[[0,[1,2,[46,[37]]]]]]]],[[[4,[[0,[1,2,[46,[28]]]]]],35],[[4,[[0,[1,2,[46,[28]]]]]]]],[47,[[4,[[0,[2,1]]]]]],[47,[[4,[[0,[2,1]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[47,[[4,[[0,[2,1]]]]]],[47,[[4,[[0,[2,1]]]]]],[[[4,[36]]],[[9,[39]]]],[[[4,[30]]],[[9,[39]]]],[[[4,[33]]],[[9,[39]]]],[[[4,[37]]],[[9,[39]]]],[[[4,[38]]],[[9,[39]]]],[[[4,[32]]],[[9,[39]]]],[[[4,[34]]],[[9,[39]]]],[[[4,[28]]],[[9,[39]]]],[[[4,[27]]],[[9,[39]]]],[[[4,[35]]],[[9,[39]]]],[[[4,[34]]],[[9,[31]]]],[[[4,[38]]],[[9,[31]]]],[[[4,[28]]],[[9,[31]]]],[[[4,[27]]],[[9,[31]]]],[[[4,[32]]],[[9,[31]]]],[[[4,[36]]],[[9,[31]]]],[[[4,[30]]],[[9,[31]]]],[[[4,[35]]],[[9,[31]]]],[[[4,[33]]],[[9,[31]]]],[[[4,[37]]],[[9,[31]]]],[[[4,[35]]],[[9,[30]]]],[[[4,[33]]],[[9,[30]]]],[[[4,[30]]],[[9,[30]]]],[[[4,[34]]],[[9,[30]]]],[[[4,[32]]],[[9,[30]]]],[[[4,[37]]],[[9,[30]]]],[[[4,[36]]],[[9,[30]]]],[[[4,[38]]],[[9,[30]]]],[[[4,[27]]],[[9,[30]]]],[[[4,[28]]],[[9,[30]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[],48],[[],48],[[[4,[36]]],[[9,[29]]]],[[[4,[38]]],[[9,[29]]]],[[[4,[30]]],[[9,[29]]]],[[[4,[35]]],[[9,[29]]]],[[[4,[28]]],[[9,[29]]]],[[[4,[33]]],[[9,[29]]]],[[[4,[32]]],[[9,[29]]]],[[[4,[37]]],[[9,[29]]]],[[[4,[27]]],[[9,[29]]]],[[[4,[34]]],[[9,[29]]]],[[[4,[27]]],[[9,[27]]]],[[[4,[32]]],[[9,[27]]]],[[[4,[30]]],[[9,[27]]]],[[[4,[34]]],[[9,[27]]]],[[[4,[38]]],[[9,[27]]]],[[[4,[37]]],[[9,[27]]]],[[[4,[36]]],[[9,[27]]]],[[[4,[33]]],[[9,[27]]]],[[[4,[28]]],[[9,[27]]]],[[[4,[35]]],[[9,[27]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],42],[[],42],[[],42],[[],42],[[],49],[[],49],[[],[[4,[[0,[1,2]]]]]]],"c":[2],"p":[[8,"Clone"],[8,"Integer"],[8,"Signed"],[3,"Ratio"],[8,"NumAssign"],[8,"FloatCore"],[8,"NumCast"],[8,"Bounded"],[4,"Option"],[8,"CheckedMul"],[8,"CheckedAdd"],[8,"CheckedSub"],[3,"ParseRatioError"],[4,"Ordering"],[15,"bool"],[8,"Octal"],[3,"Formatter"],[6,"Result"],[8,"Display"],[8,"Binary"],[8,"LowerExp"],[8,"UpperExp"],[8,"Debug"],[8,"UpperHex"],[8,"LowerHex"],[15,"f32"],[15,"u64"],[15,"u32"],[15,"u128"],[15,"i64"],[15,"i128"],[15,"usize"],[15,"u16"],[15,"i16"],[15,"i32"],[15,"i8"],[15,"u8"],[15,"isize"],[15,"f64"],[15,"str"],[8,"FromStr"],[4,"Result"],[8,"Hash"],[8,"Hasher"],[8,"Neg"],[8,"Pow"],[8,"Iterator"],[3,"String"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACAACLLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[90,"num_traits::bounds"],[97,"num_traits::cast"],[132,"num_traits::float"],[243,"num_traits::identities"],[253,"num_traits::int"],[273,"num_traits::ops"],[281,"num_traits::ops::bytes"],[292,"num_traits::ops::checked"],[308,"num_traits::ops::euclid"],[314,"num_traits::ops::inv"],[317,"num_traits::ops::mul_add"],[322,"num_traits::ops::overflowing"],[328,"num_traits::ops::saturating"],[337,"num_traits::ops::wrapping"],[349,"num_traits::pow"],[354,"num_traits::real"],[402,"num_traits::sign"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,13,13,13,13,13,13,13,13,13,13,13,13,13,45,45,45,45,45,45,45,45,45,45,0,0,0,45,45,45,45,45,45,45,45,45,46,47,46,46,46,46,46,46,46,46,46,46,47,47,46,46,46,46,47,46,46,46,46,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,47,46,47,46,47,47,46,46,46,46,46,46,46,47,47,46,46,47,47,46,47,46,46,47,46,47,46,47,46,46,46,47,46,47,46,47,46,47,46,46,46,46,46,46,47,46,47,46,46,47,0,0,33,34,0,33,33,34,0,34,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,50,0,0,0,50,50,50,49,49,49,0,0,0,0,0,0,0,0,51,52,36,53,54,55,56,57,0,0,58,58,59,59,0,60,60,0,0,61,61,62,0,0,0,63,64,65,0,0,0,0,66,67,68,66,69,0,0,0,0,0,0,70,71,72,73,74,75,76,0,0,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,29]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[32,31],[[],31],[[],33],[[]],[[]],[[]],[[],34],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[35,33,36]],26],[[12,[[0,[35,33,36]]]]]],[[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]],26],[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38,38],[[]],[[38,38],38],[[]],[[],31],[[],31],[38,38],[[]]],"c":[],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized"],[8,"Div"],[8,"Add"],[4,"FpCategory"],[15,"bool"],[8,"PartialEq"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"PrimInt"],[8,"ToBytes"],[8,"FromBytes"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"]]},\
"obj":{"doc":"","t":"NNDNDNNNNDNDNNNDNEDEDDEEDNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLMMMMMLLLLLLMMMMMMMMMMMMMMLLLLMMMMLMMMLLLLLLLLMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMM","n":["ArgumentListFailure","F32","Group","I32","IndexTuple","InvalidInstruction","InvalidValue","Io","Io","LoadConfig","MalformedFaceGroup","Material","MissingMTLName","MissingMaterialName","MissingValue","Mtl","Mtl","MtlError","MtlLibsLoadError","MtlMissingType","Obj","ObjData","ObjError","ObjMaterial","Object","Ref","SimplePolygon","String","UnexpectedCommand","ZeroVertexNumber","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","d","data","default","default","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","groups","hash","hash","illum","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ka","kd","ke","km","ks","load","load_buf","load_buf_with_config","load_mtls","load_mtls_fn","load_with_config","map_bump","map_d","map_ka","map_kd","map_ke","map_ks","map_ns","map_refl","material","material_libs","materials","name","name","name","new","new","new","new","ni","normal","ns","objects","partial_cmp","path","polys","position","reload","reload_with","save","save","save_mtls","save_mtls_with_fn","source","source","strict","texture","tf","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","tr","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_to_buf","write_to_buf","command","group","line_number","line_number","line_number","line_number","line_number","list"],"q":[[0,"obj"],[256,"obj::ObjError"]],"d":["An argument list either has unparsable arguments or is …","f32","","i32","A tuple of position, texture and normal indices assigned …","Given instruction was not in .mtl spec.","Attempted to parse value, but failed.","","","Load configuration options.","One of the arguments to <code>f</code> is malformed.","The model of an a single Material as defined in the .mtl …","<code>mtllib</code> command issued, but no name was specified.","<code>newmtl</code> issued, but no name provided.","Instruction requires a value, but that value was not …","The data represented by the <code>mtllib</code> command.","A complete <code>Material</code> object loaded from a .mtl file in …","Errors parsing or loading a .mtl file.","Error loading individual material libraries.","Indicates type of a missing value","A struct used to store <code>Obj</code> data as well as its source …","The data model associated with each <code>Obj</code> file.","Errors parsing or loading a .obj file.","The data represented by the <code>usemtl</code> command.","","A reference to a material as a material name.","A a simple polygon with arbitrary many vertices.","String","Command found that is not in the .obj spec.","Vertices are referenced using positive 1-based indices or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data associated with this <code>Obj</code> file.","","","","","","","","","","","","Name of the .mtl file.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Groups belonging to this object.","","","","An index is used to tell groups apart that share the same …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Load an <code>Obj</code> file from the given path with the default load …","","","Loads the .mtl files referenced in the .obj file.","Loads the .mtl files referenced in the .obj file with user …","Load an <code>Obj</code> file from the given path using a custom load …","","","","","","","","","Material assigned to this group via the <code>usemtl ...</code> command …","The set of all <code>mtllib</code> references to .mtl files.","A list of loaded materials.","","Name of the object assigned by the <code>o ...</code> command in the …","Name of the group assigned by the <code>g ...</code> command in the <code>.obj</code>…","","Construct a new empty mtl lib with the given file name.","","","","A set of normals.","","A collection of associated objects indicated by <code>o</code>, as well …","","The path of the parent directory from which this file was …","A list of polygons appearing as <code>f ...</code> in the <code>.obj</code> file.","Vertex positions.","Load the mtl library from the given input buffer.","Load the mtl library from the input buffer generated by …","Save the current <code>ObjData</code> at the given file path as well as …","Save the current <code>Obj</code> at the given file path as well as any …","Save all material libraries referenced in this <code>Obj</code> to the …","Save all material libraries referenced in this <code>Obj</code> struct …","","","Expect a strict spec-compliant <code>.obj</code> format.","2D texture coordinates.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this <code>Obj</code> into the given writer.","","","","","","","",""],"i":[17,15,0,15,0,16,16,16,17,0,17,0,17,16,16,0,7,0,0,0,0,0,0,0,0,7,0,15,17,17,1,15,16,2,3,4,5,17,18,6,7,8,9,10,1,15,16,2,3,4,5,17,18,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,4,1,10,3,9,1,2,4,5,6,7,8,9,4,2,1,15,15,16,16,2,3,4,4,5,17,17,18,18,6,7,8,9,10,1,15,16,16,2,3,4,5,17,17,18,18,6,7,8,9,10,6,4,5,1,8,1,15,16,2,3,4,5,17,18,6,7,8,9,10,1,1,1,1,1,10,9,9,10,10,10,1,1,1,1,1,1,1,1,8,9,2,1,6,8,1,2,6,8,1,9,1,9,4,10,8,9,2,2,9,10,9,9,16,17,3,9,1,1,2,3,4,5,6,7,8,9,10,15,16,4,17,18,1,1,15,16,2,3,4,5,17,18,6,7,8,9,10,1,15,16,2,3,4,5,17,18,6,7,8,9,10,1,15,16,2,3,4,5,17,18,6,7,8,9,10,2,9,32,33,33,34,32,35,36,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],11],0,0,[[],3],[[],9],[[1,1],12],[[2,2],12],[[4,4],12],[[5,5],12],[[6,6],12],[[7,7],12],[[8,8],12],[[9,9],12],[[],12],0,[[1,13],14],[[15,13],14],[[15,13],14],[[16,13],14],[[16,13],14],[[2,13],14],[[3,13],14],[[4,13],14],[[4,13],14],[[5,13],14],[[17,13],14],[[17,13],14],[[18,13],14],[[18,13],14],[[6,13],14],[[7,13],14],[[8,13],14],[[9,13],14],[[10,13],14],[[]],[[]],[[]],[19,16],[[]],[[]],[[]],[[]],[[]],[19,17],[[]],[20,18],[[]],[[]],[[]],[[]],[[]],0,[[4,21]],[[5,21]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[23,[22]]],[[24,[10,17]]]],[25,[[24,[9,17]]]],[[25,3],[[24,[9,17]]]],[10,[[24,[18]]]],[[10,26],[[24,[18]]]],[[[23,[22]],3],[[24,[10,17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,1],[27,2],[27,6],[27,8],0,0,0,0,[[4,4],[[28,[11]]]],0,0,0,[[2,25],[[24,[2,16]]]],[[2,[23,[22]],26],[[24,[2,16]]]],[[9,[23,[22]]],[[24,[17]]]],[[10,[23,[22]]],[[24,[17]]]],[[9,[23,[22]]],[[24,[17]]]],[[9,22,26],[[24,[17]]]],[16,[[28,[29]]]],[17,[[28,[29]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[2,31],[[24,[19]]]],[[9,31],[[24,[17]]]],0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Material"],[3,"Mtl"],[3,"LoadConfig"],[3,"IndexTuple"],[3,"SimplePolygon"],[3,"Object"],[4,"ObjMaterial"],[3,"Group"],[3,"ObjData"],[3,"Obj"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"MtlMissingType"],[4,"MtlError"],[4,"ObjError"],[3,"MtlLibsLoadError"],[3,"Error"],[3,"Vec"],[8,"Hasher"],[3,"Path"],[8,"AsRef"],[4,"Result"],[8,"Read"],[8,"FnMut"],[3,"String"],[4,"Option"],[8,"Error"],[3,"TypeId"],[8,"Write"],[13,"UnexpectedCommand"],[13,"MalformedFaceGroup"],[13,"ArgumentListFailure"],[13,"MissingMTLName"],[13,"ZeroVertexNumber"]]},\
"objc":{"doc":"Objective-C Runtime bindings and wrapper for Rust.","t":"IIDQIIDCCLLLLLOLLALKKLLLLLLLLLKOAAOLLLLLLLLLLLLQQDIDQLLLLLLLLLLLLLLKLLLLLLLLLLLLLDDLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDGDDRDDDRLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLFFFFFFFLLLLLFFFFFFFFFFFFFFFFFFFFFLFFFFFFLLLFFLLLLLLLLLLLLLLLLLLLLLL","n":["Encode","EncodeArguments","Encoding","Encs","Message","MessageArguments","MessageError","__send_message","__send_super_message","as_str","borrow","borrow","borrow_mut","borrow_mut","class","clone","clone_into","declare","description","encode","encodings","eq","fmt","fmt","fmt","from","from","from_str","into","into","invoke","msg_send","rc","runtime","sel","send_message","send_message","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_message","verify_message","Args","Callee","ClassDecl","MethodImplementation","ProtocolDecl","Ret","add_class_method","add_class_method_description","add_ivar","add_method","add_method_description","add_protocol","add_protocol","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","imp","into","into","new","new","register","register","root","try_from","try_from","try_into","try_into","type_id","type_id","StrongPtr","WeakPtr","autorelease","autoreleasepool","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","drop","drop","fmt","from","from","into","into","load","new","new","retain","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","weak","BOOL","Class","Imp","Ivar","Method","NO","Object","Protocol","Sel","YES","adopted_protocols","adopted_protocols","argument_type","arguments_count","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class_addIvar","class_addMethod","class_addProtocol","class_conformsToProtocol","class_copyIvarList","class_copyMethodList","class_copyProtocolList","class_createInstance","class_getInstanceMethod","class_getInstanceSize","class_getInstanceVariable","class_getName","class_getSuperclass","classes","classes_count","clone","clone_into","conforms_to","conforms_to","encode","encode","encode","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ptr","get","get","get_ivar","get_mut_ivar","implementation","instance_method","instance_methods","instance_size","instance_variable","instance_variables","into","into","into","into","into","into","ivar_getName","ivar_getOffset","ivar_getTypeEncoding","metaclass","method_copyArgumentType","method_copyReturnType","method_exchangeImplementations","method_getImplementation","method_getName","method_getNumberOfArguments","method_setImplementation","name","name","name","name","name","objc_allocateClassPair","objc_allocateProtocol","objc_autorelease","objc_autoreleasePoolPop","objc_autoreleasePoolPush","objc_copyClassList","objc_copyProtocolList","objc_copyWeak","objc_destroyWeak","objc_disposeClassPair","objc_getClass","objc_getClassList","objc_getProtocol","objc_initWeak","objc_loadWeakRetained","objc_registerClassPair","objc_registerProtocol","objc_release","objc_retain","object_dispose","object_getClass","offset","protocol_addMethodDescription","protocol_addProtocol","protocol_conformsToProtocol","protocol_copyProtocolList","protocol_getName","protocol_isEqual","protocols","register","return_type","sel_getName","sel_registerName","set_ivar","superclass","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_encoding","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"objc"],[47,"objc::declare"],[81,"objc::rc"],[114,"objc::runtime"]],"d":["Types that have an Objective-C type encoding.","Types that represent a group of arguments, where each has …","An Objective-C type encoding.","The type as which the encodings for Self will be returned.","Types that may be sent Objective-C messages. For example: …","Types that may be used as the arguments of an Objective-C …","An error encountered while attempting to send a message.","","","Returns self as a <code>str</code>.","","","","","Gets a reference to a <code>Class</code>.","","","Functionality for declaring Objective-C classes.","","Returns the Objective-C type encoding for Self.","Returns the Objective-C type encodings for Self.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an <code>Encoding</code> from its string representation. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invoke an <code>Imp</code> with the given object, selector, and …","Sends a message to an object.","Utilities for reference counting Objective-C objects.","A Rust interface for the functionality of the Objective-C …","Registers a selector, returning a <code>Sel</code>.","Sends a message to self with the given selector and …","Sends a message to self with the given selector and …","","","","","","","","","Verifies that the argument and return types match the …","Verifies that the argument and return types match the …","The argument types of the method.","The callee type of the method.","A type for declaring a new class and adding new methods …","Types that can be used as the implementation of an …","A type for declaring a new protocol and adding new methods …","The return type of the method.","Adds a class method with the given name and implementation …","Adds a class method declaration with a given description …","Adds an ivar with type <code>T</code> and the provided name to self. …","Adds a method with the given name and implementation to …","Adds an instance method declaration with a given …","Adds a protocol to self. Panics if the protocol wasn’t …","Adds a requirement on another protocol.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns self as an <code>Imp</code> of a method.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a <code>ClassDecl</code> with the given name and superclass. …","Constructs a <code>ProtocolDecl</code> with the given name. Returns <code>None</code>…","Registers self, consuming it and returning a reference to …","Registers self, consuming it and returning a reference to …","Constructs a <code>ClassDecl</code> declaring a new root class with the …","","","","","","","A pointer that strongly references an object, ensuring it …","A pointer that weakly references an object, allowing to …","Autoreleases self, meaning that the object is not …","Execute <code>f</code> in the context of a new autorelease pool. The …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads the object self points to, returning a <code>StrongPtr</code>. If …","Constructs a <code>StrongPtr</code> to a newly created object that …","Constructs a <code>WeakPtr</code> to the given object. Unsafe because …","Retains the given object and constructs a <code>StrongPtr</code> to it. …","","","","","","","","","Returns a <code>WeakPtr</code> to self.","","A type that represents an Objective-C class.","A pointer to the start of a method implementation.","A type that represents an instance variable.","A type that represents a method in a class definition.","","A type that represents an instance of a class.","A type that represents an Objective-C protocol.","A type that represents a method selector.","","Get a list of the protocols to which this class conforms.","Get a list of the protocols to which this protocol …","Returns the <code>Encoding</code> of a single parameter type of self, or","Returns the number of arguments accepted by self.","Returns a pointer to the raw selector.","","","","","","","","","","","","","Returns the class of self.","","","","","","","","","","","","","","Obtains the list of registered class definitions.","Returns the total number of registered classes.","","","Checks whether this class conforms to the specified …","Checks whether this protocol conforms to the specified …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wraps a raw pointer to a selector into a <code>Sel</code> object.","Returns the class definition of a specified class, or <code>None</code> …","Returns the protocol definition of a specified protocol, …","Returns a reference to the ivar of self with the given …","Returns a mutable reference to the ivar of self with the …","Returns the implementation of self.","Returns a specified instance method for self, or <code>None</code> if …","Describes the instance methods implemented by self.","Returns the size of instances of self.","Returns the ivar for a specified instance variable of …","Describes the instance variables declared by self.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the metaclass of self.","","","","","","","","Returns the name of the method specified by self.","Returns the name of self.","Returns the name of self.","Returns the name of self.","Returns the name of self.","","","","","","","","","","","","","","","","","","","","","","Returns the offset of self.","","","","","","","Obtains the list of registered protocol definitions.","Registers a method with the Objective-C runtime system, …","Returns the <code>Encoding</code> of self’s return type.","","","Sets the value of the ivar of self with the given name. …","Returns the superclass of self, or <code>None</code> if self is a root …","","","","","","","","","","","","","","Returns the <code>Encoding</code> of self.","","","","","",""],"i":[0,0,0,32,0,0,0,0,0,1,1,3,1,3,0,1,1,0,3,29,32,1,1,3,3,1,3,1,1,3,12,0,0,0,0,33,33,1,3,1,3,1,3,1,3,33,33,17,17,0,0,0,17,16,18,16,16,18,16,18,16,18,16,18,16,16,18,17,16,18,16,18,16,18,16,16,18,16,18,16,18,0,0,22,0,22,24,22,24,22,24,22,24,22,22,24,22,22,24,22,24,24,22,24,22,22,24,22,24,22,24,22,24,22,0,0,0,0,0,0,0,0,0,0,20,19,26,26,9,9,30,26,20,19,8,9,30,26,20,19,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,9,9,20,19,9,20,20,8,8,9,20,19,9,20,19,9,20,19,8,9,30,26,20,19,8,9,20,19,8,8,26,20,20,20,20,20,9,30,26,20,19,8,0,0,0,20,0,0,0,0,0,0,0,9,30,26,20,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,19,9,26,0,0,8,20,9,9,30,26,20,19,8,9,30,26,20,19,8,30,9,30,26,20,19,8],"f":[0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],0,[1,1],[[]],0,[3,2],[[],1],[[]],[[1,1],4],[[1,5],6],[[3,5],6],[[3,5],6],[[]],[[]],[2,1],[[]],[[]],[[7,8,9],10],0,0,0,0,[[11,9,12],[[13,[10,3]]]],[[11,9,12],[[13,[10,3]]]],[[]],[[],14],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[11,9],[[13,[3]]]],[[11,9],[[13,[3]]]],0,0,0,0,0,0,[[16,9,17]],[[18,9,4]],[[16,2]],[[16,9,17]],[[18,9,4]],[[16,19]],[[18,19]],[[]],[[]],[[]],[[]],[16],[[]],[[]],[[],7],[[]],[[]],[[2,20],[[21,[16]]]],[2,[[21,[18]]]],[16,20],[18,19],[2,[[21,[16]]]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],0,0,[22,8],[23],[[]],[[]],[[]],[[]],[22,22],[24,24],[[]],[[]],[22,8],[22],[24],[[22,5],6],[[]],[[]],[[]],[[]],[24,22],[8,22],[8,24],[8,22],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[22,24],0,0,0,0,0,0,0,0,0,0,[20,[[25,[19]]]],[19,[[25,[19]]]],[[26,27],[[21,[1]]]],[26,27],[9,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[25,[20]]]],[[],27],[9,9],[[]],[[20,19],4],[[19,19],4],[[],1],[[],1],[[],1],[[],1],[[],1],[[9,9],4],[[20,20],4],[[19,19],4],[[],4],[[],4],[[],4],[[9,5],6],[[20,5],6],[[19,5],6],[[8,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[28,9],[2,[[21,[20]]]],[2,[[21,[19]]]],[[8,2],29],[[8,2],29],[26,7],[[20,9],[[21,[26]]]],[20,[[25,[26]]]],[20,27],[[20,2],[[21,[30]]]],[20,[[25,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[20,20],0,0,0,0,0,0,0,[9,2],[30,2],[26,9],[20,2],[19,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,31],0,0,0,0,0,0,[[],[[25,[19]]]],[2,9],[26,1],0,0,[[8,2,29]],[20,[[21,[20]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[30,1],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15]],"c":[],"p":[[3,"Encoding"],[15,"str"],[3,"MessageError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"Imp"],[3,"Object"],[3,"Sel"],[8,"Any"],[8,"Sized"],[8,"MessageArguments"],[4,"Result"],[3,"String"],[3,"TypeId"],[3,"ClassDecl"],[8,"MethodImplementation"],[3,"ProtocolDecl"],[3,"Protocol"],[3,"Class"],[4,"Option"],[3,"StrongPtr"],[8,"FnOnce"],[3,"WeakPtr"],[3,"MallocBuffer"],[3,"Method"],[15,"usize"],[6,"c_void"],[8,"Encode"],[3,"Ivar"],[15,"isize"],[8,"EncodeArguments"],[8,"Message"]]},\
"objc2":{"doc":"Objective-C interface and runtime bindings","t":"ICCCIIISCQKKKOAOCAOOCAOOOOAAOLLLLQQDIDDIISQDQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLNGDDDNQDDDGDEIDDDDGGDIDCLDDIDDDDRDDGDDGDGDDGCDDDQQQNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMDDIIDQDIQDIIDLLKLLKKLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDGDDRSDDDRSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ClassType","Encode","EncodeArguments","Encoding","Message","MessageArguments","MessageReceiver","NAME","RefEncode","Super","as_super","as_super_mut","class","class","declare","declare_class","encode","exception","extern_class","extern_methods","ffi","foundation","msg_send","msg_send_bool","msg_send_id","ns_string","rc","runtime","sel","send_message","send_message","send_super_message","send_super_message","Args","Callee","ClassBuilder","InnerIvarType","Ivar","IvarDrop","IvarType","MethodImplementation","NAME","Output","ProtocolBuilder","Ret","Type","add_class_method","add_class_method_description","add_ivar","add_method","add_method_description","add_protocol","add_protocol","add_static_ivar","as_mut","as_mut_ptr","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","consume","deref","deref_mut","drop","drop","eq","equivalent","fill_buf","finish","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","ge","gt","hash","into","into","into","into","into_future","into_iter","le","len","lt","ne","new","new","next","next_back","nth_back","partial_cmp","poll","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","register","register","root","seek","size_hint","source","stream_position","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","Exception","as_ref","borrow","borrow_mut","deref","fmt","fmt","from","into","to_string","try_from","try_into","type_id","Ascending","CGFloat","CGPoint","CGRect","CGSize","Descending","Item","MainThreadMarker","NSArray","NSAttributedString","NSAttributedStringKey","NSBundle","NSComparisonResult","NSCopying","NSData","NSDictionary","NSEnumerator","NSError","NSErrorDomain","NSErrorUserInfoKey","NSException","NSFastEnumeration","NSFastEnumerator","NSInteger","NSLocalizedDescriptionKey","NSMutableArray","NSMutableAttributedString","NSMutableCopying","NSMutableData","NSMutableDictionary","NSMutableSet","NSMutableString","NSNotFound","NSNumber","NSObject","NSPoint","NSProcessInfo","NSRange","NSRect","NSSet","NSSize","NSString","NSThread","NSTimeInterval","NSUInteger","NSUUID","NSValue","NSZone","Output","Output","Ownership","Same","ZERO","ZERO","ZERO","__from_inner","__from_inner","__from_inner","__from_inner","__from_inner","__into_inner","__into_inner","__into_inner","__into_inner","__into_inner","__to_mut","__to_mut","__to_mut","__to_mut","__to_mut","__to_ptr","__to_ptr","__to_ptr","__to_ptr","__to_ptr","__to_ref","__to_ref","__to_ref","__to_ref","__to_ref","abs","add_assign","as_bool","as_bytes","as_cgfloat","as_f32","as_f64","as_i16","as_i32","as_i64","as_i8","as_isize","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_u16","as_u32","as_u64","as_u8","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes_mut","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","code","concat","contains","contains","contains_encoding","copy","copy","current","default","default","default","default","default","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain","encoding","encoding","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend_from_slice","first","first_mut","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_attributed_nsstring","from_bytes","from_data","from_exception","from_keys_and_objects","from_keys_and_objects","from_nsstring","from_nsstring","from_nsstring","from_ptr","from_slice","from_slice","from_slice","from_slice","from_str","from_str","from_string","from_vec","from_vec","from_vec","from_vec","get","get","get","get","get_any","get_mut","get_mut","get_point","get_range","get_rect","get_retained","get_size","has_prefix","has_suffix","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","info","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_exception","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_values_array","into_values_array","into_vec","into_vec","into_vec","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_kind_of","is_main","is_main_thread","is_multi_threaded","is_subset","is_superset","iter","iter","iter_fast","iter_fast","iter_keys","iter_values","join_path","keys","keys_and_objects","keys_array","last","last_mut","len","len","len","len","len","len_utf16","len_utf16","length","localized_description","location","main","main","max","mid","min","mutable_copy","mutable_copy","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_bool","new_cgfloat","new_f32","new_f64","new_i16","new_i32","new_i64","new_i8","new_isize","new_u16","new_u32","new_u64","new_u8","new_unchecked","new_usize","new_v4","new_with_attributes","next","next","nil","objects_in_range","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","process_info","process_name","push","push","push_nsstring","raise","reason","remove","remove","remove","replace","replace","replace","replace_range","set_bytes","set_len","size","sort_by","standardize","string","string","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_shared_vec","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_info","user_info","values","values_mut","width","with_bytes","with_bytes","with_capacity","with_capacity","write","write_all","write_str","x","y","Allocated","AutoreleasePool","AutoreleaseSafe","DefaultId","Id","Item","Owned","Ownership","Ownership","Shared","SliceId","SliceIdMut","WeakId","as_mut","as_mut_ptr","as_mut_slice_mut","as_ptr","as_ref","as_slice_mut","as_slice_ref","autorelease","autorelease","autorelease_return","autoreleasepool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","consume","default","default","default_id","deref","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fill_buf","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_shared","ge","gt","hash","hash","hash","into","into","into","into","into","into","into_future","into_iter","into_shared","into_super","le","len","load","lt","ne","new","new","next","next_back","nth","nth_back","partial_cmp","partial_cmp","partial_cmp","poll","ptr_as_mut","ptr_as_ref","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","retain","retain_autoreleased","seek","size_hint","source","stream_position","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write_all","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","BOOL","Bool","Class","Imp","Ivar","Method","NO","NO","Object","Protocol","Sel","YES","YES","__from_inner","__from_inner","__into_inner","__into_inner","__to_mut","__to_mut","__to_ptr","__to_ptr","__to_ref","__to_ref","arguments_count","as_bool","as_ptr","as_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","classes_count","clone","clone","clone_into","clone_into","conforms_to","conforms_to","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","get","get","get_ivar","get_mut_ivar","hash","hash","hash","hash","implementation","instance_method","instance_size","instance_variable","into","into","into","into","into","into","into","is_false","is_true","ivar","ivar_mut","ivar_ptr","metaclass","name","name","name","name","name","new","offset","register","responds_to","set_ivar","superclass","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_encoding","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"objc2"],[33,"objc2::declare"],[151,"objc2::exception"],[164,"objc2::foundation"],[1211,"objc2::rc"],[1383,"objc2::runtime"]],"d":["Marks types that represent specific classes.","","","","Types that can be sent Objective-C messages.","Types that may be used as the arguments of an Objective-C …","Types that can directly be used as the receiver of …","The name of the Objective-C class that this type …","","The superclass of this class.","Get an immutable reference to the superclass.","Get a mutable reference to the superclass.","Get a reference to the Objective-C class that this type …","Gets a reference to a <code>Class</code> from the given name.","Functionality for dynamically declaring Objective-C …","Declare a new Objective-C class.","","Objective-C’s @throw and @try/@catch.","Create a new type to represent an Objective-C class.","Define methods on an external class.","","Bindings to the <code>Foundation</code> framework.","Send a message to an object or class.","Deprecated. Use <code>msg_send!</code> instead.","<code>msg_send!</code> for methods returning <code>id</code>, <code>NSObject*</code>, or similar …","Creates an <code>NSString</code> from a static string.","Utilities for reference counting Objective-C objects.","A Rust interface for the functionality of the Objective-C …","Register a selector with the Objective-C runtime.","Sends a message to self with the given selector and …","Sends a message to self with the given selector and …","Sends a message to a specific superclass with the given …","Sends a message to a specific superclass with the given …","The argument types of the method.","The callee type of the method.","A type for declaring a new class and adding new methods …","Types that may be used in ivars.","A wrapper type over a custom instance variable.","A helper type to allow putting certain types that may drop …","Helper trait for defining instance variables.","Types that can be used as the implementation of an …","The name of the instance variable.","The type that an <code>Ivar</code> containing this will dereference to.","A type for declaring a new protocol and adding new methods …","The return type of the method.","The type of the instance variable.","Adds a class method with the given name and implementation.","Adds a class method declaration with a given description.","Adds an ivar with type <code>T</code> and the provided name.","Adds a method with the given name and implementation.","Adds an instance method declaration with a given …","Adds the given protocol to self.","Adds a requirement on another protocol.","Adds an instance variable from an <code>IvarType</code>.","","Get a mutable pointer to the instance variable.","Get a pointer to the instance variable.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs a <code>ClassBuilder</code> with the given name and …","Constructs a <code>ProtocolBuilder</code> with the given name.","","","","","","","","","","","","","Registers the <code>ClassBuilder</code>, consuming it, and returns a …","Registers the <code>ProtocolBuilder</code>, consuming it and returning …","Constructs a <code>ClassBuilder</code> declaring a new root class with …","","","","","","","","","","","","","","","","","","Sets the value of the instance variable.","","","","","","","","","","","","","","","","","","An Objective-C exception.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The left operand is smaller than the right operand.","The basic type for all floating-point values.","A point in a two-dimensional coordinate system.","The location and dimensions of a rectangle.","A two-dimensional size.","The left operand is greater than the right operand.","","A marker type taken by functions that can only be executed …","An immutable ordered collection of objects.","A string that has associated attributes for portions of …","Attributes that you can apply to text in an attributed …","A representation of the code and resources stored in a …","Constants that indicate sort order.","","A static byte buffer in memory.","","","Information about an error condition including a domain, a …","","","A special condition that interrupts the normal flow of …","","","","","A growable ordered collection of objects.","A mutable string that has associated attributes.","TODO","A dynamic byte buffer in memory.","A mutable collection of objects associated with unique …","A growable unordered collection of unique objects.","A dynamic plain-text Unicode string object.","A value indicating that a requested item couldn’t be …","An object wrapper for primitive scalars.","","A point in a Cartesian coordinate system.","A collection of information about the current process.","TODO.","A rectangle.","An immutable unordered collection of unique objects.","A two-dimensional size.","An immutable, plain-text Unicode string object.","A thread of execution.","A number of seconds.","","A universally unique value.","A container wrapping any encodable type as an Obective-C …","A type used to identify and manage memory zones.","The output type.","TODO","Indicates whether the type is mutable or immutable.","The two operands are equal.","A point with both coordinates set to <code>0.0</code>.","A size that is 0.0 in both dimensions.","A rectangle with origin (0.0, 0.0) and zero width and …","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the size to a non-negative size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>str</code> representation of thislears the dictionary, removing all key-value pairs.","Clears the set, removing all values.","","","","","","","","","","","","","","","","","","","Create a new string by appending the given string to self.","Returns <code>true</code> if the index is within the range.","Returns <code>true</code> if the set contains a value.","","","","Returns the <code>NSThread</code> object representing the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Objective-C encoding of this <code>NSNumber</code>.","","Returns the upper bound of the range (exclusive).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","You should use <code>extend_from_slice</code> whenever possible, it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create this from an <code>Exception</code> object.","","Creates an <code>NSMutableDictionary</code> from a slice of keys and a …","Creates a new attributed string without any attributes.","","Creates a new <code>NSMutableString</code> from the given <code>NSString</code>.","TODO","","","Creates an <code>NSMutableSet</code> from a slice.","Creates an <code>NSSet</code> from a slice.","Creates a new <code>NSMutableString</code> by copying the given string …","Creates an immutable <code>NSString</code> by copying the given string …","","","","Creates an <code>NSMutableSet</code> from a vector.","Creates an <code>NSSet</code> from a vector.","","","Returns a reference to the value in the set, if any, that …","Retrieve the data contained in the <code>NSValue</code>.","Returns a reference to one of the objects in the set, or …","","Returns a mutable reference to the value corresponding to …","","","","","","Whether the given string matches the beginning characters …","Whether the given string matches the ending characters of …","","","","","","","","","","","","","","","","","","","","","","","","","The dimensions along the y-axis.","","","","","","","","","","","","","Inserts a key-value pair into the dictionary.","Adds a value to the set. Returns whether the value was …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this into an <code>Exception</code> object.","","","","","","","","","","","Returns an <code>NSArray</code> containing the dictionary’s values, …","","Returns a <code>Vec</code> containing the set’s elements, consuming …","Returns a <code>Vec</code> containing the set’s elements, consuming …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","","","","Returns whether a rectangle has zero width or height.","Returns <code>true</code> if the range contains no items.","Returns <code>true</code> if the set contains no elements.","","Check if the object is an instance of the class, or one of …","Returns <code>true</code> if the thread is the main thread.","Whether the current thread is the main thread.","Whether the application is multithreaded according to …","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>","Returns <code>true</code> if the set is a superset of another, i.e., …","","An iterator visiting all elements in arbitrary order.","","","","","Create a new string by appending the given string, …","","","","","","","","","Returns the number of elements in the set.","The number of UTF-8 code units in <code>self</code>.","Alias for <code>self.string().len_utf16()</code>.","The number of UTF-16 code units in the string.","The number of items in the range, starting from <code>location</code>.","","The lower bound of the range (inclusive).","","Returns the <code>NSThread</code> object representing the main thread.","The largest coordinate of the rectangle.","The center point of the rectangle.","The smallest coordinate of the rectangle.","","","","A that uniquely identifies the type of exception.","The name of the thread.","Get an empty array.","Construct an empty attributed string.","","","Construct a new <code>NSError</code> with the given code in the given …","Create a new <code>NSException</code> object.","Create a new point with the given coordinates.","Create a new size with the given dimensions.","Create a new rectangle with the given origin and …","","Construct an empty mutable attributed string.","","Creates an empty <code>NSMutableDictionary</code>.","Creates an empty <code>NSMutableSet</code>.","Construct an empty <code>NSMutableString</code>.","","Create a new range with the given values.","Creates an empty <code>NSSet</code>.","Construct an empty NSString.","Construct a new <code>MainThreadMarker</code>.","Create a new <code>NSValue</code> containing the given type.","","","","","","","","","","","","","","Construct a new <code>MainThreadMarker</code> without first checking …","","","Creates a new attributed string from the given string and …","","","The ‘nil UUID’.","","The coordinates of the rectangle’s origin.","","","","","","","","","","","","","","Appends the given <code>NSString</code> onto the end of this.","Raises the exception, causing program flow to jump to the …","A human-readable message summarizing the reason for the …","","Removes a key from the dictionary, returning the value at …","Removes a value from the set. Returns whether the value …","","Replaces the entire attributed string.","Replaces the entire string.","","","Expands with zeroes, or truncates the buffer.","The dimensions of the rectangle.","","Returns a rectangle with a positive width and height.","","","Returns an <code>NSArray</code> containing the set’s elements, or an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application-specific data pertaining to the exception.","","Returns a vector of mutable references to the values in …","The dimensions along the x-axis.","","","","","","","","The x-coordinate of the point.","The y-coordinate of the point.","A marker type that can be used within <code>Id</code> to indicate that …","An Objective-C autorelease pool.","Marks types that are safe to pass across the closure in an …","Helper trait to implement <code>Default</code> on types whoose default …","An pointer for Objective-C reference counted objects.","The type of the items in the slice.","A type used to mark that a struct owns the object(s) it …","A type that marks what type of ownership a struct has over …","Indicates whether the default value is mutable or …","A type used to mark that the object(s) a struct contains …","Helper trait for functionality on slices containing <code>Id</code>s.","Helper trait for functionality on slices containing owned …","A pointer type for a weak reference to an Objective-C …","","Returns a raw mutable pointer to the object.","Convert a mutable slice of mutable <code>Id</code>s into a mutable …","Returns a raw pointer to the object.","","Convert a mutable slice of <code>Id</code>s into a mutable slice of …","Convert a slice of <code>Id</code>s into a slice of references.","Autoreleases the shared <code>Id</code>, returning an aliased reference …","Autoreleases the owned <code>Id</code>, returning a mutable reference …","Autoreleases and prepares the <code>Id</code> to be returned to …","Execute <code>f</code> in the context of a new autorelease pool. The …","","","","","","","","","","","","","","","Convert the type of the given object to another.","Makes a clone of the shared object.","Makes a clone of the <code>WeakId</code> that points to the same object.","","","","","","","","","","","","Constructs a new <code>WeakId&lt;T&gt;</code> that doesn’t reference any …","The default <code>Id</code> for a type.","Obtain an immutable reference to the object.","Obtain a mutable reference to the object.","Releases the retained object.","Drops the <code>WeakId</code> pointer.","Drains the autoreleasepool.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Convert an owned to a shared <code>Id</code>, allowing it to be cloned.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Promote a shared <code>Id</code> to an owned one, allowing it to be …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert an owned to a shared <code>Id</code>, allowing it to be cloned.","Convert the object into it’s superclass.","","","Load a shared (and retained) <code>Id</code> if the object still exists.","","","Constructs an <code>Id</code> to an object that already has +1 retain …","Construct a new <code>WeakId</code> referencing the given shared <code>Id</code>.","","","","","","","","","Returns a unique reference to the given autoreleased …","Returns a shared reference to the given autoreleased …","","","","","","","","Retains the given object pointer.","Retains a previously autoreleased object pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use <code>Bool</code> or <code>ffi::BOOL</code> instead.","The Objective-C <code>BOOL</code> type.","A type that represents an Objective-C class.","A pointer to the start of a method implementation.","A type that represents an instance variable.","A type that represents a method in a class definition.","Use <code>Bool::NO</code> or <code>ffi::NO</code> instead.","The equivalent of <code>false</code> for Objective-C’s <code>BOOL</code> type.","An Objective-C object.","A type that represents an Objective-C protocol.","A method selector.","Use <code>Bool::YES</code> or <code>ffi::YES</code> instead.","The equivalent of <code>true</code> for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","Returns the number of arguments accepted by self.","Converts this into the <code>bool</code> equivalent.","Get a pointer to the raw selector.","Retrieves the inner <code>objc_sys::BOOL</code> boolean type, to be …","","","","","","","","","","","","","","","Dynamically find the class of this object.","Returns the total number of registered classes.","","","","","Checks whether this class conforms to the specified …","Checks whether this protocol conforms to the specified …","","","","","Check whether the protocols are equal, or conform to each …","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates this from a boolean value received from a raw …","Returns the class definition of a specified class, or <code>None</code> …","Returns the protocol definition of a specified protocol, …","Use <code>Object::ivar</code> instead.","Use <code>Object::ivar_mut</code> instead.","","","","","Returns the implementation of self.","Returns a specified instance method for self, or <code>None</code> if …","Returns the size of instances of self.","Returns the ivar for a specified instance variable of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>self</code> is <code>NO</code>.","Returns <code>true</code> if <code>self</code> is not <code>NO</code>.","Returns a reference to the instance variable with the …","Returns a mutable reference to the ivar with the given …","Returns a pointer to the instance variable / ivar with the …","Returns the metaclass of self.","Returns the name of self.","Returns the name of self.","Returns the name of the class.","Returns the name of self.","Returns the string representation of the selector.","Creates an Objective-C boolean from a Rust boolean.","Returns the offset of self.","Registers a selector with the Objective-C runtime.","Check whether instances of this class respond to the given …","Sets the value of the ivar with the given name.","Returns the superclass of self, or <code>None</code> if self is a root …","","","","","","","","","","","","","","","","","Returns the <code>Encoding</code> of self.","","","","","","",""],"i":[0,0,0,0,0,0,0,118,0,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,131,131,6,6,0,0,0,0,0,0,11,132,0,6,11,5,7,5,5,7,5,7,5,12,12,12,12,12,133,5,7,12,133,5,7,12,12,12,12,12,5,12,12,12,12,12,12,12,12,5,7,12,133,5,7,12,12,12,12,133,5,7,12,12,12,12,12,12,5,7,12,12,12,12,12,12,12,12,12,12,12,12,5,7,5,12,12,12,12,12,12,133,5,7,12,133,5,7,12,133,5,7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,44,44,44,44,44,44,44,44,44,44,44,44,77,0,0,0,0,77,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,134,92,77,78,48,79,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,48,49,51,52,51,51,51,51,51,51,51,51,59,59,59,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,67,68,68,68,68,69,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,72,72,72,50,50,50,75,75,75,52,52,52,73,73,73,59,59,59,61,61,61,62,62,62,63,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,67,68,68,68,68,69,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,72,72,72,50,50,50,75,75,75,52,52,52,73,73,73,50,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,51,51,51,51,51,93,101,89,59,59,59,61,61,61,62,62,62,77,63,63,63,64,64,64,65,65,65,66,66,66,78,48,79,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,80,72,72,72,50,50,50,75,75,75,81,52,52,52,73,73,73,93,101,89,59,59,59,61,61,61,62,62,62,77,63,63,63,64,64,64,65,65,65,66,66,66,78,48,79,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,80,72,72,72,50,50,50,75,75,75,81,52,52,52,73,73,73,63,69,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,67,70,71,77,78,48,79,80,81,77,78,48,79,80,81,77,49,80,50,81,65,50,80,72,73,92,92,75,77,78,48,79,80,59,61,63,64,67,68,69,70,71,49,60,72,50,52,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,65,51,73,80,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,49,51,60,74,80,72,50,50,75,81,52,73,59,61,62,77,63,64,65,66,67,68,69,70,71,49,60,74,80,72,50,75,81,52,67,69,69,71,69,59,59,69,89,59,61,62,77,63,64,65,65,66,78,48,79,67,68,69,70,71,49,49,51,51,60,74,80,72,50,50,75,81,52,52,73,93,101,89,59,61,62,77,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,80,72,50,75,81,52,73,68,52,69,66,64,70,61,68,49,93,59,67,71,72,49,50,52,59,67,71,72,59,64,72,73,72,59,70,73,73,73,59,73,50,50,59,61,62,77,63,64,65,66,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,48,59,63,64,67,69,70,59,67,69,70,62,67,70,71,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,66,93,101,59,63,67,69,69,71,72,64,70,59,71,72,72,59,63,64,79,80,72,50,60,75,0,0,72,72,59,72,103,103,64,64,50,64,64,64,59,59,59,63,64,72,50,61,50,80,65,80,62,75,79,79,79,134,134,62,66,75,59,61,63,64,65,66,78,48,79,67,68,69,70,71,49,60,80,72,50,81,73,51,51,51,51,51,51,51,51,51,51,51,51,51,81,51,52,61,93,101,52,59,79,77,49,49,51,80,50,50,81,67,74,74,67,69,49,66,66,67,70,71,67,68,49,69,69,69,79,67,79,61,52,72,59,61,77,63,66,78,48,79,67,68,69,71,49,51,80,72,50,81,52,73,59,65,49,51,50,52,59,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,65,66,64,70,48,63,69,69,49,69,69,49,78,78,0,0,0,0,0,135,0,0,113,0,0,0,0,84,84,136,84,84,135,135,84,84,84,0,84,84,110,116,76,88,83,84,84,110,116,76,88,83,84,84,110,88,83,84,110,88,83,84,88,83,84,84,110,113,84,84,84,110,76,84,88,83,84,88,83,84,84,84,84,84,84,110,116,76,76,88,83,84,84,110,110,116,76,88,83,84,84,84,84,88,83,84,110,116,76,88,83,84,84,84,84,84,84,110,84,84,84,110,84,84,84,84,84,88,83,84,76,76,84,84,84,84,84,84,84,84,84,84,84,84,84,84,110,88,83,84,84,84,110,116,76,88,83,84,110,116,76,88,83,84,110,116,76,88,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,0,0,0,0,0,127,0,0,0,0,127,127,2,127,2,127,2,127,2,127,2,126,127,2,127,127,129,126,1,10,45,2,127,129,126,1,10,45,2,45,1,127,2,127,2,1,10,127,129,126,1,10,2,129,126,1,10,2,127,1,10,45,2,2,127,127,129,126,1,10,45,2,127,1,10,45,45,129,126,1,2,126,1,1,1,127,129,126,1,10,45,2,127,127,45,45,45,1,129,126,1,10,2,127,129,2,1,45,1,127,2,127,129,126,1,10,45,2,127,129,126,1,10,45,2,129,127,129,126,1,10,45,2],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3],4],[[2,3],4],[[1,2,3],4],[[1,2,3],4],0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,2,6]],[[7,2,8]],[[5,9]],[[5,2,6]],[[7,2,8]],[[5,10]],[[7,10]],[5],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],13],[[[12,[11]],14]],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[5],[[[12,[11]],[12,[11]]],8],[[],8],[[[12,[11]]],[[17,[[16,[15]]]]]],[[[12,[11]]],18],[[[12,[11]]],17],[[[12,[11]],19],20],[[[12,[11]],19],20],[[[12,[11]],19],20],[[5,19],20],[[7,19],20],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],8],[[[12,[11]],[12,[11]]],8],[[[12,[11]],21]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],8],[[[12,[11]]],14],[[[12,[11]],[12,[11]]],8],[[[12,[11]],[12,[11]]],8],[[9,1],[[22,[5]]]],[9,[[22,[7]]]],[[[12,[11]]],22],[[[12,[11]]],22],[[[12,[11]],14],22],[[[12,[11]],[12,[11]]],[[22,[13]]]],[[[23,[[12,[11]]]],24],25],[[[12,[11]],[16,[15]]],[[17,[14]]]],[[[12,[11]],[16,[15]]],17],[[[12,[11]],26],[[17,[14]]]],[[[12,[11]],[27,[15]]],[[17,[14]]]],[[[12,[11]],26],[[17,[14]]]],[[[12,[11]],15,[27,[15]]],[[17,[14]]]],[[[12,[11]],[16,[28]]],[[17,[14]]]],[5,1],[7,10],[[9,6],[[22,[5]]]],[[[12,[11]],29],[[17,[18]]]],[[[12,[11]]]],[[[12,[11]]],[[22,[30]]]],[[[12,[11]]],[[17,[18]]]],[[],26],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[[12,[11]]]],[[[12,[11]],[16,[15]]]],[[[12,[11]],[16,[15]]],[[17,[14]]]],[[[12,[11]],[16,[15]]],17],[[[12,[11]],33],17],[[[12,[11]],34]],[[[12,[11]],35]],[[[12,[11]],36]],[[[12,[11]],37]],[[[12,[11]],38]],[[[12,[11]],39]],[[[12,[11]],40]],[[[12,[11]],41]],[[[12,[11]],42]],[[[12,[11]],18]],[[[12,[11]],15]],[[[12,[11]],14]],[[[12,[11]],[16,[43]]],[[17,[14]]]],0,[44,45],[[]],[[]],[44,45],[[44,19],20],[[44,19],20],[[]],[[]],[[],26],[[],31],[[],31],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[47,47],[47,47],[47,47],[47,47],[[]],[[]],[[]],[[]],[[]],[48,48],[[49,50]],[51,8],[52,[[53,[15]]]],[51,54],[51,55],[51,56],[51,35],[51,36],[51,37],[51,38],[51,39],[[[59,[57,58]]],60],[[[59,[57,58]]],45],[[[59,[57,58]]],[[59,[57,58]]]],[61,60],[61,45],[61,61],[62,60],[62,62],[62,45],[63,45],[63,60],[63,63],[[[64,[57,57]]],60],[[[64,[57,57]]],[[64,[57,57]]]],[[[64,[57,57]]],45],[65,45],[65,60],[65,65],[66,45],[66,60],[66,66],[[[67,[57,58]]],[[67,[57,58]]]],[[[67,[57,58]]],60],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],45],[68,61],[68,60],[68,45],[68,68],[69,60],[69,45],[69,63],[69,69],[69,[[16,[15]]]],[[[70,[57,57]]],45],[[[70,[57,57]]],[[70,[57,57]]]],[[[70,[57,57]]],[[64,[57,57]]]],[[[70,[57,57]]],60],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],45],[[[71,[57,58]]],60],[[[71,[57,58]]],[[71,[57,58]]]],[49,45],[49,49],[49,60],[49,50],[51,45],[51,73],[51,60],[51,51],[60,60],[60,45],[74,45],[74,74],[74,60],[[[72,[57,58]]],45],[[[72,[57,58]]],[[72,[57,58]]]],[[[72,[57,58]]],60],[50,50],[50,60],[50,45],[75,45],[75,75],[75,60],[52,52],[52,45],[52,60],[73,45],[73,73],[73,60],[[[59,[57,58]]],[[59,[57,58]]]],[[[59,[57,58]]],60],[[[59,[57,58]]],45],[61,45],[61,61],[61,60],[62,62],[62,60],[62,45],[63,63],[63,[[16,[15]]]],[63,60],[63,45],[[[64,[57,57]]],60],[[[64,[57,57]]],45],[[[64,[57,57]]],[[64,[57,57]]]],[65,60],[65,65],[65,45],[66,66],[66,45],[66,60],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],45],[[[67,[57,58]]],[[67,[57,58]]]],[[[67,[57,58]]],60],[68,68],[68,60],[68,45],[68,61],[69,[[16,[15]]]],[69,45],[69,69],[69,63],[69,60],[[[70,[57,57]]],60],[[[70,[57,57]]],45],[[[70,[57,57]]],[[64,[57,57]]]],[[[70,[57,57]]],[[70,[57,57]]]],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],60],[[[71,[57,58]]],[[71,[57,58]]]],[[[71,[57,58]]],45],[49,60],[49,49],[49,45],[49,50],[51,51],[51,73],[51,60],[51,45],[60,60],[60,45],[74,74],[74,45],[74,60],[[[72,[57,58]]],45],[[[72,[57,58]]],60],[[[72,[57,58]]],[[72,[57,58]]]],[50,60],[50,50],[50,45],[75,60],[75,45],[75,75],[52,45],[52,60],[52,52],[73,60],[73,73],[73,45],[[50,76],9],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[51,41],[51,42],[51,18],[51,15],[51,14],[[]],[[]],[[]],[[[59,[57,58]]],60],[[]],[[[59,[57,58]]],45],[61,60],[[]],[61,45],[62,60],[62,45],[[]],[[]],[[]],[63,45],[63,60],[[[64,[57,57]]],60],[[[64,[57,57]]],45],[[]],[65,45],[65,60],[[]],[66,60],[66,45],[[]],[[]],[[]],[[]],[[]],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],60],[[[67,[57,58]]],45],[68,61],[68,60],[[]],[68,45],[69,63],[[]],[69,45],[69,60],[[]],[[[70,[57,57]]],60],[[[70,[57,57]]],[[64,[57,57]]]],[[[70,[57,57]]],45],[[[71,[57,58]]],45],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],60],[[]],[49,50],[49,45],[[]],[49,60],[51,60],[51,45],[51,73],[[]],[[]],[60,45],[[]],[74,45],[74,60],[[]],[[[72,[57,58]]],45],[[]],[[[72,[57,58]]],60],[50,45],[[]],[50,60],[[]],[75,45],[75,60],[[]],[[]],[52,60],[52,45],[[]],[73,45],[73,60],[[]],[[]],[[]],[[[59,[57,58]]],45],[[[59,[57,58]]],60],[[]],[61,45],[61,60],[[]],[62,60],[62,45],[[]],[[]],[63,45],[[]],[63,60],[[[64,[57,57]]],45],[[]],[[[64,[57,57]]],60],[65,60],[[]],[65,45],[66,60],[[]],[66,45],[[]],[[]],[[]],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],60],[[]],[[[67,[57,58]]],45],[68,61],[68,60],[[]],[68,45],[69,45],[[]],[69,60],[69,63],[[[70,[57,57]]],45],[[]],[[[70,[57,57]]],60],[[[70,[57,57]]],[[64,[57,57]]]],[[[71,[57,58]]],60],[[[71,[57,58]]],[[72,[57,58]]]],[[]],[[[71,[57,58]]],45],[[]],[49,45],[49,60],[49,50],[51,45],[[]],[51,73],[51,60],[[]],[60,45],[[]],[74,60],[74,45],[[]],[[]],[[[72,[57,58]]],60],[[[72,[57,58]]],45],[[]],[50,45],[50,60],[75,45],[[]],[75,60],[[]],[52,60],[52,45],[[]],[73,60],[73,45],[[]],[63,[[16,[15]]]],[69,[[16,[15]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[67,[57,58]]]],[[[70,[57,57]]]],[[[71,[57,58]]]],[77,77],[78,78],[48,48],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[77,77],13],[[49,49],13],[[80,80],13],[[50,50],13],[[81,81],13],[65,82],[[50,50],[[84,[50,83]]]],[[80,14],8],[[[72,[[0,[57,85]],58]],[0,[57,85]]],8],[73,8],[[],84],[[],84],[[],[[84,[75,83]]]],[[],77],[[],78],[[],48],[[],79],[[],80],[[],[[84,[[59,[57,58]]]]]],[[],[[84,[61]]]],[[],[[84,[63]]]],[[],[[84,[[64,[57,57]]]]]],[[],[[84,[[67,[57,58]]]]]],[[],[[84,[68]]]],[[],[[84,[69]]]],[[],[[84,[[70,[57,57]]]]]],[[],[[84,[[71,[57,58]]]]]],[[],[[84,[49]]]],[[],[[84,[60]]]],[[],[[84,[[72,[57,58]]]]]],[[],[[84,[50]]]],[[],[[84,[52]]]],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[65,[[84,[50,83]]]],[51,86],[73,[[22,[9]]]],[80,14],[[[59,[[0,[85,57]],[0,[85,58]]]],[59,[[0,[85,57]],[0,[85,58]]]]],8],[[61,61],8],[[62,62],8],[[77,77],8],[[63,63],8],[[[64,[[0,[85,57]],[0,[85,57]]]],[64,[[0,[85,57]],[0,[85,57]]]]],8],[[65,65],8],[[66,66],8],[[78,78],8],[[48,48],8],[[79,79],8],[[[67,[[0,[85,57]],[0,[85,58]]]],[67,[[0,[85,57]],[0,[85,58]]]]],8],[[68,68],8],[[69,69],8],[[[70,[[0,[85,57]],[0,[85,57]]]],[70,[[0,[85,57]],[0,[85,57]]]]],8],[[[71,[[0,[85,57]],[0,[85,58]]]],[71,[[0,[85,57]],[0,[85,58]]]]],8],[[49,50],8],[[49,49],8],[[51,51],8],[[60,60],8],[[74,74],8],[[80,80],8],[[[72,[[0,[85,57]],[0,[85,58]]]],[72,[[0,[85,57]],[0,[85,58]]]]],8],[[50,50],8],[[50,49],8],[[75,75],8],[[81,81],8],[[52,52],8],[[73,73],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[67,[57,58]],87]],[[69,87]],[[69,87]],[[[71,[[0,[57,85]],58]],87]],[[69,[16,[15]]]],[[[59,[57,58]]],[[22,[57]]]],[[[59,[57,88]]],[[22,[57]]]],[69,17],[[89,19],20],[[[59,[[0,[90,57]],58]],19],20],[[61,19],20],[[62,19],20],[[77,19],20],[[63,19],20],[[[64,[[0,[90,57]],[0,[90,57]]]],19],20],[[65,19],20],[[65,19],20],[[66,19],20],[[78,19],20],[[48,19],20],[[79,19],20],[[[67,[[0,[90,57]],58]],19],20],[[68,19],20],[[69,19],20],[[[70,[[0,[90,57]],[0,[90,57]]]],19],20],[[[71,[[0,[90,57]],58]],19],20],[[49,19],20],[[49,19],20],[[51,19],20],[[51,19],20],[[60,19],20],[[74,19],20],[[80,19],20],[[[72,[[0,[90,57]],58]],19],20],[[50,19],20],[[50,19],20],[[75,19],20],[[81,19],20],[[52,19],20],[[52,19],20],[[73,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[91,[14]]],80],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[84,[68,88]]]],[[[53,[15]]],[[84,[52,83]]]],[63,[[84,[69,88]]]],[[[84,[44,83]]],[[31,[[84,[66,83]],[84,[44,83]]]]]],[[[16,[92]],[27,[[84,[57,88]]]]],[[84,[[64,[57,57]],83]]]],[[[16,[92]],[27,[[84,[57,88]]]]],[[84,[[70,[57,57]],88]]]],[50,[[84,[61,83]]]],[50,[[84,[68,88]]]],[50,[[84,[49,88]]]],[45,[[93,[57]]]],[[[16,[[84,[57,83]]]]],[[84,[[59,[57,83]],83]]]],[[[16,[[84,[57,83]]]]],[[84,[[67,[57,83]],88]]]],[[[16,[[84,[57,83]]]]],[[84,[[71,[57,83]],88]]]],[[[16,[[84,[57,83]]]]],[[84,[[72,[57,83]],83]]]],[9,[[84,[49,88]]]],[9,[[84,[50,83]]]],[50,[[22,[[84,[52,83]]]]]],[[[27,[[84,[57,58]]]]],[[84,[[59,[57,58]],58]]]],[[[27,[[84,[57,58]]]]],[[84,[[67,[57,58]],88]]]],[[[27,[[84,[57,58]]]]],[[84,[[71,[57,58]],88]]]],[[[27,[[84,[57,58]]]]],[[84,[[72,[57,58]],58]]]],[[[59,[57,58]],14],[[22,[57]]]],[[[64,[57,57]],57],[[22,[57]]]],[[[72,[[0,[57,85]],58]],[0,[57,85]]],[[22,[[0,[57,85]]]]]],[73,[[0,[94,95]]]],[[[72,[57,58]]],[[22,[57]]]],[[[59,[57,88]],14],[[22,[57]]]],[[[70,[57,57]],57],[[22,[57]]]],[73,[[22,[96]]]],[73,[[22,[80]]]],[73,[[22,[97]]]],[[[59,[57,83]],14],[[84,[57,83]]]],[73,[[22,[98]]]],[[50,50],8],[[50,50],8],[[[59,[[0,[99,57]],[0,[99,58]]]],21]],[[61,21]],[[62,21]],[[77,21]],[[63,21]],[[[64,[[0,[99,57]],[0,[99,57]]]],21]],[[65,21]],[[66,21]],[[[67,[[0,[99,57]],[0,[99,58]]]],21]],[[68,21]],[[69,21]],[[[70,[[0,[99,57]],[0,[99,57]]]],21]],[[[71,[[0,[99,57]],[0,[99,58]]]],21]],[[49,21]],[[51,21]],[[60,21]],[[74,21]],[[80,21]],[[[72,[[0,[99,57]],[0,[99,58]]]],21]],[[50,21]],[[75,21]],[[81,21]],[[52,21]],[[73,21]],0,[[[59,[57,58]],14],57],[[63,[100,[[16,[15]]]]]],[[[64,[57,57]],57],57],[[[67,[57,58]],14],57],[[69,[100,[[16,[15]]]]]],[[[70,[57,57]],57],57],[[[59,[57,88]],14],57],[[[67,[57,88]],14],57],[[69,[100,[[16,[15]]]]]],[[[70,[57,57]],57],57],[62,[[84,[[64,[50,60]],83]]]],[[[67,[57,58]],14,[84,[57,58]]]],[[[70,[57,57]],[84,[57,83]],[84,[57,88]]],[[22,[[84,[57,88]]]]]],[[[71,[[0,[57,85]],58]],[84,[[0,[57,85]],58]]],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[66,83]]],[[84,[44,83]]]],[[]],[[]],[[[59,[57,58]]]],[63],[[[67,[57,58]]]],[69],[69],[[[71,[57,58]]]],[[[72,[57,58]]]],[[[84,[[64,[57,57]],88]]],[[84,[[59,[57,88]],83]]]],[[[84,[[70,[57,57]],88]]],[[84,[[59,[57,88]],83]]]],[[[84,[[59,[57,58]],88]]],[[27,[[84,[57,58]]]]]],[[[84,[[71,[57,58]],88]]],[[27,[[84,[57,58]]]]]],[[[84,[[72,[57,58]],58]]],[[27,[[84,[57,58]]]]]],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[59,[57,58]]],8],[63,8],[[[64,[57,57]]],8],[79,8],[80,8],[[[72,[57,58]]],8],[50,8],[60,8],[75,8],[[],8],[[],8],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[59,[57,58]]],[[93,[57]]]],[[[72,[57,58]]],[[93,[57]]]],[[],101],[[],101],[[[64,[57,57]]],[[93,[57]]]],[[[64,[57,57]]],[[93,[57]]]],[[50,50],[[84,[50,83]]]],[[[64,[57,57]]],[[27,[57]]]],[[[64,[57,57]]]],[[[64,[57,57]]],[[84,[[59,[57,83]],83]]]],[[[59,[57,58]]],[[22,[57]]]],[[[59,[57,88]]],[[22,[57]]]],[[[59,[57,58]]],14],[63,14],[[[64,[57,57]]],14],[[[72,[57,58]]],14],[50,14],[61,14],[50,14],0,[65,[[84,[50,83]]]],0,[[],[[84,[62,83]]]],[[],[[84,[75,83]]]],[79,78],[79,78],[79,78],[[],[[84,[88]]]],[[],[[84,[88]]]],[62,[[22,[[84,[50,83]]]]]],[66,[[84,[50,83]]]],[75,[[22,[[84,[50,83]]]]]],[[],[[84,[[59,[57,58]],83]]]],[[],[[84,[61,83]]]],[[],[[84,[63,83]]]],[[],[[84,[[64,[57,57]],83]]]],[[82,50],[[84,[65,83]]]],[[50,[22,[50]],[22,[[64,[45,45]]]]],[[22,[[84,[66,83]]]]]],[[54,54],78],[[54,54],48],[[78,48],79],[[],[[84,[[67,[57,58]],88]]]],[[],[[84,[68,88]]]],[[],[[84,[69,88]]]],[[],[[84,[[70,[57,57]],88]]]],[[],[[84,[[71,[57,58]],88]]]],[[],[[84,[49,88]]]],[[],[[84,[60,88]]]],[[14,14],80],[[],[[84,[[72,[57,58]],83]]]],[[],[[84,[50,83]]]],[[],[[22,[81]]]],[[[0,[94,95]]],[[84,[73,83]]]],[8,[[84,[51,83]]]],[54,[[84,[51,83]]]],[55,[[84,[51,83]]]],[56,[[84,[51,83]]]],[35,[[84,[51,83]]]],[36,[[84,[51,83]]]],[37,[[84,[51,83]]]],[38,[[84,[51,83]]]],[39,[[84,[51,83]]]],[41,[[84,[51,83]]]],[42,[[84,[51,83]]]],[18,[[84,[51,83]]]],[15,[[84,[51,83]]]],[[],81],[14,[[84,[51,83]]]],[[],[[84,[52,83]]]],[[50,[64,[102,45]]],[[84,[61,83]]]],[[[93,[57]]],[[22,[57]]]],[[[101,[[0,[103,104]]]]],22],[[],[[84,[52,83]]]],[[[59,[57,58]],[91,[14]]],[[27,[57]]]],0,[[77,77],[[22,[13]]]],[[49,50],[[22,[13]]]],[[49,49],[[22,[13]]]],[[51,51],[[22,[13]]]],[[80,80],[[22,[13]]]],[[50,50],[[22,[13]]]],[[50,49],[[22,[13]]]],[[81,81],[[22,[13]]]],[[[67,[57,58]]],[[22,[[84,[57,58]]]]]],[[],[[84,[74,83]]]],[74,[[84,[50,83]]]],[[[67,[57,58]],[84,[57,58]]]],[[69,15]],[[49,50]],[66,105],[66,[[22,[[84,[50,83]]]]]],[[[67,[57,58]],14],[[84,[57,58]]]],[[[70,[57,57]],57],[[22,[[84,[57,88]]]]]],[[[71,[[0,[57,85]],58]],[0,[57,85]]],8],[[[67,[57,58]],14,[84,[57,58]]],[[84,[57,58]]]],[[68,61]],[[49,50]],[[69,[91,[14]],[16,[15]]]],[[69,[16,[15]]]],[[69,14]],0,[[[67,[57,58]],106]],[79,79],[61,[[84,[50,83]]]],[52,[[84,[50,83]]]],[[[72,[57,83]]],[[84,[[59,[57,83]],83]]]],[[[59,[57,83]]]],[61],[[]],[63],[66],[[]],[[]],[[]],[[[67,[57,83]]]],[68],[69],[[[71,[57,83]]]],[49],[51],[[]],[[[72,[57,83]]]],[50],[[]],[52],[73],[[[59,[57,83]]],[[27,[[84,[57,83]]]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[59,[57,58]]],[[27,[57]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[65,[[22,[[84,[[64,[46,60]],83]]]]]],[66,[[22,[[84,[[64,[45,45]],83]]]]]],[[[64,[57,57]]],[[27,[57]]]],[[[70,[57,57]]],[[27,[57]]]],0,[[[16,[15]]],[[84,[63,83]]]],[[[16,[15]]],[[84,[69,88]]]],[14,[[84,[69,88]]]],[14,[[84,[49,88]]]],[[69,[16,[15]]],[[17,[14]]]],[[69,[16,[15]]],17],[[49,9],[[31,[107]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[84,[104,88]]],104],[[[84,[[0,[57,104]],88]]]],[[],16],[[[84,[[0,[57,104]],58]]]],[[[84,[104,58]]],104],[[],16],[[],16],[[[84,[57,83]],76],57],[[[84,[57,88]],76],57],[[[84,[57,58]]]],[[[0,[108,109]]]],[[[84,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[88]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,58]]],[[84,[57,58]]]],[[[84,[57,83]]],[[84,[57,83]]]],[110,110],[88,88],[83,83],[[]],[[]],[[]],[[]],[[[84,[[0,[111,104]],58]],[84,[[0,[111,104]],58]]],13],[[88,88],13],[[83,83],13],[[[84,[[0,[112,104]],88]],14]],[[],[[84,[[0,[113,104]]]]]],[[],[[110,[57]]]],[[],84],[[[84,[104,58]]],104],[[[84,[104,88]]],104],[[[84,[104,58]]]],[[[110,[104]]]],[76],[[[84,[[0,[85,104]],58]],[84,[[0,[85,104]],58]]],8],[[88,88],8],[[83,83],8],[[],8],[[],8],[[],8],[[[84,[[0,[112,104]],88]]],[[17,[[16,[15]]]]]],[[[84,[[0,[21,104]],88]]],18],[[[84,[[0,[114,104]],88]]],17],[[[84,[104,58]],19],20],[[[84,[[0,[115,104]],58]],19],20],[[[84,[[0,[90,104]],58]],19],20],[[[110,[[0,[90,104]]]],19],20],[[[116,[[0,[90,104]]]],19],20],[[76,19],20],[[76,19],20],[[88,19],20],[[83,19],20],[[]],[[[84,[57,88]]],[[84,[57,83]]]],[[[84,[57,83]]],[[110,[57]]]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,83]]],[[84,[57,88]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[99,104]],58]],21]],[[88,21]],[[83,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,88]]],[[84,[57,83]]]],[[[84,[118,58]]],[[84,[58]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[119,104]],88]]],14],[[[110,[57]]],[[22,[[84,[57,83]]]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[85,104]],58]],[84,[[0,[85,104]],58]]],8],[[],[[22,[[84,[[0,[57,104]],58]]]]]],[[[84,[57,83]]],[[110,[57]]]],[[[84,[[0,[120,104]],88]]],22],[[[84,[[0,[121,104]],88]]],22],[[[84,[[0,[120,104]],88]],14],22],[[[84,[[0,[121,104]],88]],14],22],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],[[22,[13]]]],[[88,88],[[22,[13]]]],[[83,83],[[22,[13]]]],[[[23,[[84,[[0,[122,123,104]],88]]]],24],25],[76,104],[76,104],[[[84,[[0,[124,104]],88]],[16,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[16,[15]]],17],[[[84,[[0,[112,104]],88]],26],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[27,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],26],[[17,[14]]]],[[[84,[[0,[112,104]],88]],15,[27,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[16,[28]]],[[17,[14]]]],[[],[[22,[[84,[57,58]]]]]],[[],[[22,[[84,[57,58]]]]]],[[[84,[[0,[125,104]],88]],29],[[17,[18]]]],[[[84,[[0,[120,104]],88]]]],[[[84,[[0,[30,104]],58]]],[[22,[30]]]],[[[84,[[0,[125,104]],88]]],[[17,[18]]]],[[]],[[]],[[]],[[]],[[],26],[[],31],[[[110,[57]]],[[31,[[84,[57,83]]]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[[84,[[0,[21,104]],88]],[16,[15]]]],[[[84,[[0,[114,104]],88]],[16,[15]]],[[17,[14]]]],[[[84,[[0,[114,104]],88]],[16,[15]]],17],[[[84,[[0,[114,104]],88]],33],17],[[[84,[[0,[21,104]],88]],34]],[[[84,[[0,[21,104]],88]],35]],[[[84,[[0,[21,104]],88]],36]],[[[84,[[0,[21,104]],88]],37]],[[[84,[[0,[21,104]],88]],38]],[[[84,[[0,[21,104]],88]],39]],[[[84,[[0,[21,104]],88]],40]],[[[84,[[0,[21,104]],88]],41]],[[[84,[[0,[21,104]],88]],42]],[[[84,[[0,[21,104]],88]],18]],[[[84,[[0,[21,104]],88]],15]],[[[84,[[0,[21,104]],88]],14]],[[[84,[[0,[114,104]],88]],[16,[43]]],[[17,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[47,47],[[]],[[]],[126,14],[127,8],[2,128],[127,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,1],[[],14],[127,127],[2,2],[[]],[[]],[[1,10],8],[[10,10],8],[[],127],[[129,129],8],[[126,126],8],[[1,1],8],[[10,10],8],[[2,2],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[127,19],[[31,[107]]]],[[1,19],20],[[10,19],20],[[45,19],20],[[2,19],20],[[2,19],20],[[]],[8,127],[[]],[[]],[[]],[[]],[[]],[[]],[8,127],[9,[[22,[1]]]],[9,[[22,[10]]]],[[45,9],95],[[45,9],95],[[129,21]],[[126,21]],[[1,21]],[[2,21]],[126,130],[[1,2],[[22,[126]]]],[1,14],[[1,9],[[22,[129]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,8],[127,8],[[45,9],95],[[45,9],95],[[45,9]],[1,1],[129,9],[126,2],[1,9],[10,9],[2,9],[8,127],[129,39],[9,2],[[1,2],8],[[45,9,95]],[1,[[22,[1]]]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[129,9],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32]],"c":[23,1383,1389,1394,1460,1461],"p":[[3,"Class"],[3,"Sel"],[8,"MessageArguments"],[8,"EncodeConvert"],[3,"ClassBuilder"],[8,"MethodImplementation"],[3,"ProtocolBuilder"],[15,"bool"],[15,"str"],[3,"Protocol"],[8,"IvarType"],[3,"Ivar"],[4,"Ordering"],[15,"usize"],[15,"u8"],[15,"slice"],[6,"Result"],[15,"u64"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"String"],[3,"Vec"],[3,"IoSliceMut"],[4,"SeekFrom"],[8,"Error"],[4,"Result"],[3,"TypeId"],[3,"Arguments"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[3,"IoSlice"],[3,"Exception"],[3,"Object"],[6,"NSErrorUserInfoKey"],[3,"NonNull"],[3,"CGSize"],[3,"NSMutableString"],[3,"NSString"],[3,"NSNumber"],[3,"NSUUID"],[15,"array"],[6,"CGFloat"],[15,"f32"],[15,"f64"],[8,"Message"],[8,"Ownership"],[3,"NSArray"],[3,"NSObject"],[3,"NSAttributedString"],[3,"NSBundle"],[3,"NSData"],[3,"NSDictionary"],[3,"NSError"],[3,"NSException"],[3,"NSMutableArray"],[3,"NSMutableAttributedString"],[3,"NSMutableData"],[3,"NSMutableDictionary"],[3,"NSMutableSet"],[3,"NSSet"],[3,"NSValue"],[3,"NSProcessInfo"],[3,"NSThread"],[3,"AutoreleasePool"],[4,"NSComparisonResult"],[3,"CGPoint"],[3,"CGRect"],[3,"NSRange"],[3,"MainThreadMarker"],[6,"NSInteger"],[3,"Shared"],[3,"Id"],[8,"PartialEq"],[4,"Encoding"],[8,"IntoIterator"],[3,"Owned"],[3,"NSZone"],[8,"Debug"],[3,"Range"],[8,"NSCopying"],[3,"NSEnumerator"],[8,"Copy"],[8,"Encode"],[6,"NSPoint"],[6,"NSRect"],[6,"NSSize"],[8,"Hash"],[8,"SliceIndex"],[3,"NSFastEnumerator"],[6,"NSAttributedStringKey"],[8,"NSFastEnumeration"],[8,"Sized"],[15,"never"],[8,"FnMut"],[3,"Error"],[8,"FnOnce"],[8,"AutoreleaseSafe"],[3,"WeakId"],[8,"Ord"],[8,"BufRead"],[8,"DefaultId"],[8,"Write"],[8,"Display"],[3,"Allocated"],[8,"PartialOrd"],[8,"ClassType"],[8,"ExactSizeIterator"],[8,"Iterator"],[8,"DoubleEndedIterator"],[8,"Future"],[8,"Unpin"],[8,"Read"],[8,"Seek"],[3,"Method"],[3,"Bool"],[3,"objc_selector"],[3,"Ivar"],[6,"Imp"],[8,"MessageReceiver"],[8,"InnerIvarType"],[3,"IvarDrop"],[8,"NSMutableCopying"],[8,"SliceId"],[8,"SliceIdMut"]],"a":{"@autoreleasepool":[1234],"@implementation":[15],"@interface":[15,18],"addobject:":[914,1060],"allobjects":[1079],"anyobject":[866],"appendbytes:length:":[772],"appendstring:":[1062],"cgpointmake":[1012],"cgpointzero":[216],"cgrectgetmaxx":[998],"cgrectgetmaxy":[998],"cgrectgetmidx":[999],"cgrectgetmidy":[999],"cgrectgetminx":[1000],"cgrectgetminy":[1000],"cgrectisempty":[964],"cgrectmake":[1014],"cgrectstandardize":[1076],"cgrectzero":[218],"cgsizemake":[1013],"cgsizezero":[217],"class_respondstoselector":[1491],"compare:":[1052],"containsobject:":[647],"count":[986,988,989],"debugdescription":[798],"description":[798],"firstobject":[773,774],"getobjects:andkeys:":[981,982,1199,1200],"hasprefix":[874],"hasprefix:":[874],"hassuffix":[875],"hassuffix:":[875],"id":[1391],"initwithattributedstring:":[841],"initwithbytes":[856],"initwithbytes:length:encoding:":[855,856],"initwithcapacity:":[1204,1205],"initwithdata:":[843],"initwithstring:":[847,848,849,1043],"insertobject:atindex:":[912],"isequal:":[736],"isequaltonumber:":[735],"isequaltovalue:":[745],"iskindofclass:":[968],"issubsetofset:":[972],"keyenumerator":[978],"lastobject":[984,985],"length":[987,991,992],"lengthofbytesusingencoding":[990],"lengthofbytesusingencoding:":[990],"member:":[864],"mutablebytes":[602],"nslocationinrange":[646],"nsmakepoint":[1012],"nsmakerange":[1022],"nsmakerect":[1014],"nsmakesize":[1013],"nsmaxrange":[716],"nsmaxx":[998],"nsmaxy":[998],"nsmidx":[999],"nsmidy":[999],"nsminx":[1000],"nsminy":[1000],"nszeropoint":[216],"nszerorect":[218],"nszerosize":[217],"objc_autorelease":[1231,1232],"objc_autoreleasepoolpop":[1269],"objc_autoreleasereturnvalue":[1233],"objc_copyweak":[1251],"objc_destroyweak":[1268],"objc_initweak":[1318],"objc_loadweak":[1314],"objc_loadweakretained":[1314],"objc_release":[1267],"objc_retain":[1250,1336],"objc_retainautoreleasedreturnvalue":[1337],"objectatindex:":[862,867,872],"objectenumerator":[974,975,979],"objectforkey:":[863,868],"origin":[216],"release":[1267],"removeallobjects":[624,625,626],"removelastobject":[1057],"removeobject:":[1067],"removeobjectatindex:":[1065],"removeobjectforkey:":[1066],"replacebytesinrange:withbytes:length:":[1071],"replaceobjectatindex:withobject:":[1068],"retain":[1250,1314],"sel":[1393],"sel_getname":[1487],"sel_registername":[1490],"setattributedstring:":[1069],"setlength:":[1073],"setobject:forkey:":[913],"setstring:":[1070],"sortusingfunction:context:":[1075],"stringbyappendingpathcomponent":[980],"stringbyappendingpathcomponent:":[980],"stringbyappendingstring":[645],"stringbyappendingstring:":[645],"utf8string":[397]}},\
"objc2_encode":{"doc":"Objective-C type-encoding","t":"NNNNNSSNNNNSSSIIIENNNNNNNNNINNNNNNNNNNNNLLLLLLLLLLLLLLLLLLL","n":["Array","Atomic","BitField","Block","Bool","C_LONG","C_ULONG","Char","Class","Double","DoubleComplex","ENCODING","ENCODINGS","ENCODING_REF","Encode","EncodeArguments","EncodeConvert","Encoding","Float","FloatComplex","Int","Long","LongDouble","LongDoubleComplex","LongLong","Object","Pointer","RefEncode","Sel","Short","String","Struct","UChar","UInt","ULong","ULongLong","UShort","Union","Unknown","Void","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent_to","equivalent_to_start_of_str","equivalent_to_str","fmt","fmt","from","hash","into","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"objc2_encode"]],"d":["An array with the given length and type.","A C11 <code>_Atomic</code> type.","A bitfield with the given number of bits, and the given …","An Objective-C block. Corresponds to the <code>@?</code> code.","A C++ <code>bool</code> / C99 <code>_Bool</code>. Corresponds to the <code>B</code> code.","The encoding of <code>c_long</code>.","The encoding of <code>c_ulong</code>.","A C <code>char</code>. Corresponds to the <code>c</code> code.","An Objective-C class (<code>Class</code>). Corresponds to the <code>#</code> code.","A C <code>double</code>. Corresponds to the <code>d</code> code.","A C <code>_Complex</code> or <code>double _Complex</code>. Corresponds to the <code>jd</code> …","The Objective-C type-encoding for this type.","The encodings for the arguments.","The Objective-C type-encoding for a reference of this type.","Types that have an Objective-C type-encoding.","Types that represent an ordered group of function …","Represents types that can easily be converted to/from an …","An Objective-C type-encoding.","A C <code>float</code>. Corresponds to the <code>f</code> code.","A C <code>float _Complex</code>. Corresponds to the <code>jf</code> code.","A C <code>int</code>. Corresponds to the <code>i</code> code.","A C <code>long</code>. Corresponds to the <code>l</code> code.","A C <code>long double</code>. Corresponds to the <code>D</code> code.","A C <code>long double _Complex</code>. Corresponds to the <code>jD</code> code.","A C <code>long long</code>. Corresponds to the <code>q</code> code.","An Objective-C object (<code>id</code>). Corresponds to the <code>@</code> code.","A pointer to the given type.","Types whoose references has an Objective-C type-encoding.","An Objective-C selector (<code>SEL</code>). Corresponds to the <code>:</code> code.","A C <code>short</code>. Corresponds to the <code>s</code> code.","A C <code>char *</code>. Corresponds to the <code>*</code> code.","A struct with the given name and fields.","A C <code>unsigned char</code>. Corresponds to the <code>C</code> code.","A C <code>unsigned int</code>. Corresponds to the <code>I</code> code.","A C <code>unsigned long</code>. Corresponds to the <code>L</code> code.","A C <code>unsigned long long</code>. Corresponds to the <code>Q</code> code.","A C <code>unsigned short</code>. Corresponds to the <code>S</code> code.","A union with the given name and fields.","An unknown type. Corresponds to the <code>?</code> code.","A C <code>void</code>. Corresponds to the <code>v</code> code.","","","","","","","Check if one encoding is equivalent to another.","Check if an encoding is equivalent to the start of the …","Check if an encoding is equivalent to the given string …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,11,12,13,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[1,1],2],[[1,3],[[4,[3]]]],[[1,3],2],[[1,5],6],[[1,5],6],[[]],[[1,7]],[[]],[[]],[[],8],[[],9],[[],9],[[],10]],"c":[],"p":[[4,"Encoding"],[15,"bool"],[15,"str"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"Encode"],[8,"EncodeArguments"],[8,"RefEncode"]]},\
"objc_exception":{"doc":"Rust interface for Objective-C’s <code>@throw</code> and <code>@try</code>/<code>@catch</code> …","t":"ELLLLFFLLL","n":["Exception","borrow","borrow_mut","from","into","throw","try","try_from","try_into","type_id"],"q":[[0,"objc_exception"]],"d":["An opaque type representing any Objective-C object thrown …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Throws an Objective-C exception. The argument must be a …","Tries to execute the given closure and catches an …","","",""],"i":[0,1,1,1,1,0,0,1,1,1],"f":[0,[[]],[[]],[[]],[[]],[1,2],[3,[[4,[1]]]],[[],4],[[],4],[[],5]],"c":[],"p":[[4,"Exception"],[15,"never"],[8,"FnOnce"],[4,"Result"],[3,"TypeId"]]},\
"objc_sys":{"doc":"Raw bindings to Objective-C runtimes","t":"GGRGRRGRRRRRRRRRRRGRFFLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLGFFFLLLLLLLLLLFFFFFFFFFFFFFFFFMMRGFFFFFFFFDFFFFFFFFFFFFGGGFFFFFFFFFFFFDFFFDDFFFFFFFFFFFDDDDFFFFFFFFFFDFFFFFFFFDFFGFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["BOOL","IMP","NO","NSInteger","NSIntegerMax","NSIntegerMin","NSUInteger","NSUIntegerMax","Nil","OBJC_ASSOCIATION_ASSIGN","OBJC_ASSOCIATION_COPY","OBJC_ASSOCIATION_COPY_NONATOMIC","OBJC_ASSOCIATION_RETAIN","OBJC_ASSOCIATION_RETAIN_NONATOMIC","OBJC_SYNC_NOT_INITIALIZED","OBJC_SYNC_NOT_OWNING_THREAD_ERROR","OBJC_SYNC_SUCCESS","OBJC_SYNC_TIMED_OUT","SEL","YES","_objc_msgForward","_objc_msgForward_stret","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_addIvar","class_addMethod","class_addProperty","class_addProtocol","class_conformsToProtocol","class_copyIvarList","class_copyMethodList","class_copyPropertyList","class_copyProtocolList","class_createInstance","class_getClassMethod","class_getClassVariable","class_getImageName","class_getInstanceMethod","class_getInstanceSize","class_getInstanceVariable","class_getIvarLayout","class_getMethodImplementation","class_getMethodImplementation_stret","class_getName","class_getProperty","class_getSuperclass","class_getVersion","class_getWeakIvarLayout","class_isMetaClass","class_replaceMethod","class_replaceProperty","class_respondsToSelector","class_setIvarLayout","class_setVersion","class_setWeakIvarLayout","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","id","imp_getBlock","imp_implementationWithBlock","imp_removeBlock","into","into","into","into","into","into","into","into","into","into","ivar_getName","ivar_getOffset","ivar_getTypeEncoding","method_copyArgumentType","method_copyReturnType","method_exchangeImplementations","method_getArgumentType","method_getDescription","method_getImplementation","method_getName","method_getNumberOfArguments","method_getReturnType","method_getTypeEncoding","method_invoke","method_invoke_stret","method_setImplementation","name","name","nil","objc_AssociationPolicy","objc_addExceptionHandler","objc_allocateClassPair","objc_allocateProtocol","objc_autorelease","objc_autoreleasePoolPop","objc_autoreleasePoolPush","objc_autoreleaseReturnValue","objc_begin_catch","objc_class","objc_constructInstance","objc_copyClassList","objc_copyClassNamesForImage","objc_copyImageNames","objc_copyProtocolList","objc_copyWeak","objc_destroyWeak","objc_destructInstance","objc_disposeClassPair","objc_duplicateClass","objc_end_catch","objc_enumerationMutation","objc_exception_handler","objc_exception_matcher","objc_exception_preprocessor","objc_exception_rethrow","objc_exception_throw","objc_exception_try_enter","objc_exception_try_exit","objc_getAssociatedObject","objc_getClass","objc_getClassList","objc_getFutureClass","objc_getMetaClass","objc_getProtocol","objc_getRequiredClass","objc_initWeak","objc_ivar","objc_loadWeak","objc_loadWeakRetained","objc_lookUpClass","objc_method","objc_method_description","objc_moveWeak","objc_msgSend","objc_msgSendSuper","objc_msgSendSuper_stret","objc_msgSend_fp2ret","objc_msgSend_fpret","objc_msgSend_stret","objc_msg_lookup","objc_msg_lookup_stret","objc_msg_lookup_super","objc_msg_lookup_super_stret","objc_object","objc_property","objc_property_attribute_t","objc_protocol","objc_registerClassPair","objc_registerProtocol","objc_release","objc_removeAssociatedObjects","objc_removeExceptionHandler","objc_retain","objc_retainAutorelease","objc_retainAutoreleaseReturnValue","objc_retainAutoreleasedReturnValue","objc_retainBlock","objc_selector","objc_setAssociatedObject","objc_setEnumerationMutationHandler","objc_setExceptionMatcher","objc_setExceptionPreprocessor","objc_setForwardHandler","objc_setUncaughtExceptionHandler","objc_storeStrong","objc_storeWeak","objc_super","objc_sync_enter","objc_sync_exit","objc_uncaught_exception_handler","object_copy","object_dispose","object_getClass","object_getClassName","object_getIndexedIvars","object_getInstanceVariable","object_getIvar","object_setClass","object_setInstanceVariable","object_setIvar","property_copyAttributeList","property_copyAttributeValue","property_getAttributes","property_getName","protocol_addMethodDescription","protocol_addProperty","protocol_addProtocol","protocol_conformsToProtocol","protocol_copyMethodDescriptionList","protocol_copyPropertyList","protocol_copyProtocolList","protocol_getMethodDescription","protocol_getName","protocol_getProperty","protocol_isEqual","receiver","sel_getName","sel_getUid","sel_isEqual","sel_isMapped","sel_registerName","super_class","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","value"],"q":[[0,"objc_sys"]],"d":["The Objective-C <code>BOOL</code> type.","A nullable pointer to the start of a method implementation.","The equivalent of <code>false</code> for Objective-C’s <code>BOOL</code> type.","A signed integer value type.","The maximum value for an NSInteger.","The minimum value for an NSInteger.","Describes an unsigned integer.","The maximum value for an NSUInteger.","A quick alias for a <code>null_mut</code> class.","","","","","","Only relevant before macOS 10.13","","","Only relevant before macOS 10.13","An immutable pointer to a selector.","The equivalent of <code>true</code> for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A mutable pointer to an object / instance.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The name of the method.","The name of the attribute.","A quick alias for a <code>null_mut</code> object / instance.","","","","","","","","","","An opaque type that represents an Objective-C class.","","","","","","","","","","","","","Remember that this is non-null!","Remember that this is non-null!","Remember that this is non-null!","","See <code>objc-exception.h</code>.","","","","","","","","","","","An opaque type that represents an instance variable.","","","","A type that represents a method in a class definition.","Describes an Objective-C method.","","","","","","","","","","","","An opaque type that represents an object / an instance of …","An opaque type that describes a property in a class.","Describes an Objective-C property attribute.","Opaque type for Objective-C protocols.","","","","","","","","","","","An opaque type that represents a method selector.","","","","","","","","","Specifies data used when sending messages to superclasses.","","","Remember that this is non-null!","","","","","","","","","","","","","","","","","","","","","","","","","","The object / instance to send a message to.","","","","","","The particular superclass of the instance to message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The types of the method arguments.","The value of the attribute"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,10,11,12,13,14,1,2,3,8,9,10,11,12,13,14,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,8,9,10,11,12,13,14,1,2,3,0,0,0,0,8,9,10,11,12,13,14,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,2,3,8,9,10,11,12,13,14,1,2,3,8,9,10,11,12,13,14,1,2,3,8,9,10,11,12,13,14,1,2,3,2,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,4],5],[[2,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0],"c":[135,142,157,206,207,211,214],"p":[[3,"objc_super"],[3,"objc_method_description"],[3,"objc_property_attribute_t"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"objc_class"],[3,"objc_method"],[3,"objc_object"],[3,"objc_property"],[3,"objc_protocol"],[3,"objc_selector"],[3,"objc_ivar"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[[]],[20],[[],15],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[[],21],[20],[[]],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":"DNGGNGGGGGGGNDENDDDDGGGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","done","downgrade","downgrade_to_upgradable","downgrade_upgradable","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_locked","is_locked","is_locked","is_locked_exclusive","lock","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","state","timed_out","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upgrade","wait","wait_for","wait_until","wait_while","wait_while_for","wait_while_until"],"q":[[0,"parking_lot"]],"d":["A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","Returns the current state of this <code>Once</code>.","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …"],"i":[0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,4,4,6,7,6,7,0,0,0,0,12,4,7,3,3,3,6,7,6,7,12,4,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,1,2,0,3,3,3,3,12,4,16,12,12,7,4,6,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,1,2,3,3,3,3,3,3,1,2,3,3,3,3,3,3,12,4,1,2,3,16,6,7,1,2,3,3,1,2,3,3,3,3,3,12,12,12,12,12,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[3],[3],[[4,5]],[[4,5]],[6,6],[7,7],[[]],[[]],[[],8],[[],9],[[],10],[[],11],[[],12],[[],4],[7,13],[3],[3],[3],[[6,6],13],[[7,7],13],[[],13],[[],13],[[12,14],15],[[4,14],15],[[6,14],15],[[7,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,13],[2,13],[3,13],[3,13],[1],[2],0,[3],[3],[3],[3],[[],12],[[],4],[16,17],[12,18],[12,13],[7,13],[4,7],[6,13],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[1,13],[2,13],[3,13],[[3,20],13],[[3,21],13],[1,13],[[2,20],13],[3,13],[3,13],[3,13],[3,13],[3,13],[3,13],[1,13],[[2,21],13],[3,13],[[3,20],13],[[3,21],13],[3,13],[[3,20],13],[[3,21],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[1],[2],[3],[3],[1],[2],[3],[3],[3],[3],[3],[[12,[24,[23]]]],[[12,[24,[23]],20],6],[[12,[24,[23]],21],6],[[12,[24,[23]],25]],[[12,[24,[23]],25,20],6],[[12,[24,[23]],25,21],6]],"c":[],"p":[[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"Once"],[8,"FnOnce"],[3,"WaitTimeoutResult"],[4,"OnceState"],[6,"FairMutex"],[6,"Mutex"],[6,"ReentrantMutex"],[6,"RwLock"],[3,"Condvar"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"RawThreadId"],[3,"NonZeroUsize"],[15,"usize"],[4,"Result"],[3,"Duration"],[3,"Instant"],[3,"TypeId"],[8,"Sized"],[6,"MutexGuard"],[8,"FnMut"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your own …","t":"NRRENEDNNENDNNNNNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMFF","n":["Abort","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","FilterOp","Invalid","ParkResult","ParkToken","RequeueAll","RequeueOne","RequeueOp","Skip","SpinWait","Stop","TimedOut","Unpark","UnparkOne","UnparkOneRequeueRest","UnparkResult","UnparkToken","Unparked","be_fair","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadlock","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","have_more_threads","into","into","into","into","into","into","into","is_unparked","new","park","requeued_threads","reset","spin","spin_no_yield","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpark_all","unpark_filter","unpark_one","unpark_requeue","unparked_threads","acquire_resource","release_resource"],"q":[[0,"parking_lot_core"],[122,"parking_lot_core::deadlock"]],"d":["Abort the operation without doing anything.","A default park token to use.","A default unpark token to use.","Operation that <code>unpark_filter</code> should perform for each …","The validation callback returned false.","Result of a park operation.","A value associated with a parked thread which can be used …","Requeue all threads onto the target queue.","Requeue one thread and leave the rest parked on the …","Operation that <code>unpark_requeue</code> should perform.","Don’t unpark the thread and continue scanning the list …","A counter used to perform exponential backoff in spin …","Don’t unpark the thread and stop scanning the list of …","The timeout expired.","Unpark the thread and continue scanning the list of parked …","Unpark one thread and leave the rest parked. No requeuing …","Unpark one thread and requeue the rest onto the target …","Result of an unpark operation.","A value which is passed from an unparker to a parked …","We were unparked by another thread with the given token.","This is set to true on average once every 0.5ms for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","[Experimental] Deadlock detection","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether there are any threads remaining in the queue. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we were unparked by another thread.","Creates a new <code>SpinWait</code>.","Parks the current thread in the queue associated with the …","The number of threads that were requeued.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unparks all threads in the queue associated with the given …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with <code>key_from</code>…","The number of threads that were unparked.","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …"],"i":[3,0,0,0,1,0,0,3,3,0,4,0,4,1,4,3,3,0,0,1,2,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,1,2,3,4,5,6,0,2,7,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,7,2,1,2,3,4,5,6,7,1,7,0,2,7,7,7,1,2,3,4,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,2,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],7],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,8],[[],7],[[11,12,12,12,6,[14,[13]]],1],0,[7],[7,8],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[11,5],11],[[11,17,12],2],[[11,12],2],[[11,11,12,12],2],0,[11],[11]],"c":[],"p":[[4,"ParkResult"],[3,"UnparkResult"],[4,"RequeueOp"],[4,"FilterOp"],[3,"UnparkToken"],[3,"ParkToken"],[3,"SpinWait"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[8,"FnOnce"],[3,"Instant"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"FnMut"]]},\
"paste":{"doc":"github crates-io docs-rs","t":"O","n":["paste"],"q":[[0,"paste"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"phf":{"doc":"Rust-PHF is a library to generate efficient lookup tables …","t":"DDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAKLOOOOALLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLL","n":["Map","OrderedMap","OrderedSet","PhfHash","Set","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","fmt","fmt","from","from","from","from","index","index","into","into","into","into","into_iter","into_iter","into_iter","into_iter","map","ordered_map","ordered_set","phf_hash","phf_hash_slice","phf_map","phf_ordered_map","phf_ordered_set","phf_set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Entries","Keys","Map","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contains_key","entries","fmt","fmt","fmt","from","from","from","get","get_entry","get_key","into","into","into","into_iter","into_iter","into_iter","is_empty","keys","len","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","Entries","Keys","OrderedMap","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contains_key","entries","fmt","fmt","fmt","from","from","from","get","get_entry","get_index","get_key","index","into","into","into","into_iter","into_iter","into_iter","is_empty","keys","len","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","Iter","OrderedSet","borrow","borrow_mut","clone","clone_into","contains","fmt","from","get_index","get_key","index","into","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","next","next_back","size_hint","to_owned","try_from","try_into","type_id","Iter","Set","borrow","borrow_mut","clone","clone_into","contains","fmt","from","get_key","into","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","next","next_back","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"phf"],[54,"phf::map"],[113,"phf::ordered_map"],[173,"phf::ordered_set"],[200,"phf::set"]],"d":["An immutable map constructed at compile time.","An order-preserving immutable map constructed at compile …","An order-preserving immutable set constructed at compile …","A trait implemented by types which can be used in PHF data …","An immutable set constructed at compile time.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","An immutable map constructed at compile time.","An order-preserving immutable map constructed at compile …","An order-preserving immutable set constructed at compile …","Feeds the value into the state given, updating the hasher …","Feeds a slice of this type into the state provided.","Macro to create a <code>static</code> (compile-time) <code>Map</code>.","Macro to create a <code>static</code> (compile-time) <code>OrderedMap</code>.","Macro to create a <code>static</code> (compile-time) <code>OrderedSet</code>.","Macro to create a <code>static</code> (compile-time) <code>Set</code>.","An immutable set constructed at compile time.","","","","","","","","","","","","","An iterator over the key/value pairs in a <code>Map</code>.","An iterator over the keys in a <code>Map</code>.","An immutable map constructed at compile time.","An iterator over the values in a <code>Map</code>.","","","","","","","","","","","","","Determines if <code>key</code> is in the <code>Map</code>.","Returns an iterator over the key/value pairs in the map.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value that <code>key</code> maps to.","Like <code>get</code>, but returns both the key and the value.","Returns a reference to the map’s internal static …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the <code>Map</code> is empty.","Returns an iterator over the keys in the map.","Returns the number of entries in the <code>Map</code>.","Create a new, empty, immutable map.","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","An iterator over the entries in a <code>OrderedMap</code>.","An iterator over the keys in a <code>OrderedMap</code>.","An order-preserving immutable map constructed at compile …","An iterator over the values in a <code>OrderedMap</code>.","","","","","","","","","","","","","Determines if <code>key</code> is in the <code>OrderedMap</code>.","Returns an iterator over the key/value pairs in the map.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value that <code>key</code> maps to.","Like <code>get</code>, but returns both the key and the value.","Returns the index of the key within the list used to …","Returns a reference to the map’s internal static …","Returns references to both the key and values at an index …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the <code>OrderedMap</code> is empty.","Returns an iterator over the keys in the map.","Returns the number of entries in the <code>OrderedMap</code>.","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","An iterator over the values in a <code>OrderedSet</code>.","An order-preserving immutable set constructed at compile …","","","","","Returns true if <code>value</code> is in the <code>OrderedSet</code>.","","Returns the argument unchanged.","Returns the index of the key within the list used to …","Returns a reference to the set’s internal static …","Returns a reference to the key at an index within the list …","Calls <code>U::from(self)</code>.","","Returns true if <code>other</code> shares no elements with <code>self</code>.","Returns true if the <code>OrderedSet</code> contains no elements.","Returns true if <code>other</code> contains all values in <code>self</code>.","Returns true if <code>self</code> contains all values in <code>other</code>.","Returns an iterator over the values in the set.","Returns the number of elements in the <code>OrderedSet</code>.","","","","","","","","An iterator over the values in a <code>Set</code>.","An immutable set constructed at compile time.","","","","","Returns true if <code>value</code> is in the <code>Set</code>.","","Returns the argument unchanged.","Returns a reference to the set’s internal static …","Calls <code>U::from(self)</code>.","","Returns true if <code>other</code> shares no elements with <code>self</code>.","Returns true if the <code>Set</code> contains no elements.","Returns true if <code>other</code> contains all values in <code>self</code>.","Returns true if <code>self</code> contains all values in <code>other</code>.","Returns an iterator over the values in the set.","Returns the number of elements in the <code>Set</code>.","","","","","","",""],"i":[0,0,0,0,0,1,5,6,7,1,5,6,7,1,1,5,6,7,1,5,6,7,1,5,1,5,6,7,1,5,6,7,0,0,0,9,9,0,0,0,0,0,1,5,6,7,1,5,6,7,1,5,6,7,0,0,0,0,12,20,21,12,20,21,12,20,21,12,20,21,1,1,12,20,21,12,20,21,1,1,1,12,20,21,12,20,21,1,1,1,1,12,20,21,12,20,21,12,20,21,12,20,21,12,20,21,12,20,21,12,20,21,1,0,0,0,0,13,25,26,13,25,26,13,25,26,13,25,26,5,5,13,25,26,13,25,26,5,5,5,5,5,13,25,26,13,25,26,5,5,5,13,25,26,13,25,26,13,25,26,13,25,26,13,25,26,13,25,26,13,25,26,5,0,0,14,14,14,14,6,14,14,6,6,6,14,14,6,6,6,6,6,6,14,14,14,14,14,14,14,0,0,15,15,15,15,7,15,15,7,15,15,7,7,7,7,7,7,15,15,15,15,15,15,15],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[[1,[2,2]],3],4],[[[5,[2,2]],3],4],[[[6,[2]],3],4],[[[7,[2]],3],4],[[]],[[]],[[]],[[]],[[[1,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]]],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]]],[[]],[[]],[[]],[[]],[1,12],[5,13],[6,14],[7,15],0,0,0,[16],[[[17,[10]],16]],0,0,0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[20,20],[21,21],[[]],[[]],[[]],[[[1,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],22],[1,12],[[[12,[2,2]],3],4],[[[20,[2]],3],4],[[[21,[2]],3],4],[[]],[[]],[[]],[[[1,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],23],[[[1,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],23],[[[1,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[[11,[[0,[8,9,10]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1,22],[1,20],[1,24],[[],1],[12,23],[20,23],[21,23],[12,23],[20,23],[21,23],[12],[20],[21],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[1,21],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[25,25],[26,26],[[]],[[]],[[]],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],22],[5,13],[[[13,[2,2]],3],4],[[[25,[2]],3],4],[[[26,[2]],3],4],[[]],[[]],[[]],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],23],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],23],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[24]]]],[[[5,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[[11,[[0,[8,9,10]]]]]]]],[[5,24],23],[[]],[[]],[[]],[[]],[[]],[[]],[5,22],[5,25],[5,24],[13,23],[25,23],[26,23],[13,23],[25,23],[26,23],[13],[25],[26],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[5,26],0,0,[[]],[[]],[14,14],[[]],[[[6,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],22],[[[14,[2]],3],4],[[]],[[[6,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[24]]]],[[[6,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[[11,[[0,[8,9,10]]]]]]]],[[6,24],23],[[]],[[]],[[[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[6,22],[[[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[[[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[6,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[6,14],[6,24],[14,23],[14,23],[14],[[]],[[],18],[[],18],[[],19],0,0,[[]],[[]],[15,15],[[]],[[[7,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],22],[[[15,[2]],3],4],[[]],[[[7,[[11,[[0,[8,9,10]]]]]],[0,[8,9,10]]],[[23,[[11,[[0,[8,9,10]]]]]]]],[[]],[[]],[[[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[7,22],[[[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[[[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]],[7,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,[11,[[0,[8,9,11]]]]]]]]]]]]]]]]],22],[7,15],[7,24],[15,23],[15,23],[15],[[]],[[],18],[[],18],[[],19]],"c":[],"p":[[3,"Map"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"OrderedMap"],[3,"OrderedSet"],[3,"Set"],[8,"Eq"],[8,"PhfHash"],[8,"Sized"],[8,"PhfBorrow"],[3,"Entries"],[3,"Entries"],[3,"Iter"],[3,"Iter"],[8,"Hasher"],[15,"slice"],[4,"Result"],[3,"TypeId"],[3,"Keys"],[3,"Values"],[15,"bool"],[4,"Option"],[15,"usize"],[3,"Keys"],[3,"Values"]]},\
"phf_generator":{"doc":"See the <code>phf</code> crate’s documentation for details.","t":"DLLMLFLMMLLL","n":["HashState","borrow","borrow_mut","disps","from","generate_hash","into","key","map","try_from","try_into","type_id"],"q":[[0,"phf_generator"]],"d":["","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,3,3,3,3,0,3,3,3,3,3,3],"f":[0,[[]],[[]],0,[[]],[[[2,[1]]],3],[[]],0,0,[[],4],[[],4],[[],5]],"c":[],"p":[[8,"PhfHash"],[15,"slice"],[3,"HashState"],[4,"Result"],[3,"TypeId"]]},\
"phf_macros":{"doc":"A set of macros to generate Rust source for PHF data …","t":"OOOO","n":["phf_map","phf_ordered_map","phf_ordered_set","phf_set"],"q":[[0,"phf_macros"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[]},\
"phf_shared":{"doc":"See the <code>phf</code> crate’s documentation for details.","t":"IGDIIKLLFMMKLMFFLKLLLL","n":["FmtConst","HashKey","Hashes","PhfBorrow","PhfHash","borrow","borrow","borrow_mut","displace","f1","f2","fmt_const","from","g","get_index","hash","into","phf_hash","phf_hash_slice","try_from","try_into","type_id"],"q":[[0,"phf_shared"]],"d":["Trait for printing types with <code>const</code> constructors, used by …","A central typedef for hash keys","","Identical to <code>std::borrow::Borrow</code> except omitting blanket …","A trait implemented by types which can be used in PHF data …","Convert a reference to <code>self</code> to a reference to the borrowed …","","","","","","Print a <code>const</code> expression representing this value.","Returns the argument unchanged.","","Return an index into <code>phf_generator::HashState::map</code>.","<code>key</code> is from <code>phf_generator::HashState</code>.","Calls <code>U::from(self)</code>.","Feeds the value into the state given, updating the hasher …","Feeds a slice of this type into the state provided.","","",""],"i":[0,0,0,0,0,13,4,4,0,4,4,14,4,4,0,0,4,8,8,4,4,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[1,1,1,1],1],0,0,[2,3],[[]],0,[[4,5,6],1],[[[0,[7,8]],9],4],[[]],[10],[[[5,[7]],10]],[[],11],[[],11],[[],12]],"c":[],"p":[[15,"u32"],[3,"Formatter"],[6,"Result"],[3,"Hashes"],[15,"slice"],[15,"usize"],[8,"Sized"],[8,"PhfHash"],[6,"HashKey"],[8,"Hasher"],[4,"Result"],[3,"TypeId"],[8,"PhfBorrow"],[8,"FmtConst"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":"O","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"c":[],"p":[]},\
"plrender":{"doc":"Multiplatform GPU Rendering API for Javascript, Python and …","t":"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAAAIAAAAKKKKAKKAHDDDDHLLLLLLLLLLLLLLLLLLLLLLLLLMMLMFLLMLLLLLLLLLLLLLMDGILLLLLLLLLFLLLLGINNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFFFFFFFFFFFFFIIDDDDLLMMLLLLLLLLKLLMLLLLMLMLLLLLLLLLLLLLMLLLLLLMKLLMLLLLLMMLLKLLLLLLLKLMLLLLLLLLLLLLMKLMLLLLLLLLLLLLLLAAAAAAAAAADLLMMMLLMMMLLLLLLDDNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLMMMMLMLLLLDLLLLLLLLLLLLLLLNDDENLLLLLLLLLLLLMMLLLLLLLLMMLLLLLMLLLLLLLLLLLLLMMDDDDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLDLLMLLLLLMLLLMLLLLLDLLLMLLMLLLDDDLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMLLLLLLLLLAAAAAAADLLLLLLMLCMLMCMLLLLCDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLLLLLLLLLSDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDRDDDRDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAAAAHHDLLLLMLMLLMMLLLLGIDLLLLLLKLLLLLLLKLKLKLLLKLKLLLLKLKLDDNDDNDDDIGEDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLKLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMIDIIDGEEDNNDNNDKLLMKLKLKLLMLMLLLLLLLLLLLLLLMMMMLLLLMLLLLLLLLLLLLKLLLLLLLLLLLLKLKLLKLMLLLLLLLKLLLLKLKLKKLLLKLKLKLKLLLLLLLKLMMMMMLLLLLLLLLLLLLLLLLLLLLLLMAAAAAAADDDLLLLLLMMMLLLLLLLLMLLLLMLMLLLLLLLLLLMMFFDDDDDDLLLLLLLLLLLLMMLLLLLLLMLLLLLLLLLLMLLLLLLLLMLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLMLMLDLLLLLLLLLLLLLDLLLLMFFLLLLMMMLLLLDMLLMMLLMLLLLLSDDLLLLLLLLLMLLLLLLLMLLLLLLMLLMLMLLLLLLLMLAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDIILLKLKLLLLLKLLLKLLLLLLLLLKLMKKLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLML","n":["Animator","App","BuiltMesh","Camera","Color","Dimensions","Event","EventLoop","Flat2D","GlobalTransforms","IsWindow","Light","LightType","LocalTransform","Mesh","MeshBuilder","MeshData","MeshId","Node","NodeId","ObjectId","PLRender","Phong","Primitive","Projection","Quad","Real","RenderContext","RenderPass","RenderTarget","Renderer","Scene","SceneObject","Shader","Solid","Sprite","Target","TargetId","Texture","TextureId","Transform","Vertex","VertexData","VertexIds","Window","app","components","math","renderer","resources","scene","Container","app","error","event_loop","events","get","get_mut","insert","len","meta","new","remove","window","APP","App","AppOptions","AppState","PLRender","RENDERER","app","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","default","default","deserialize","dispatch_event","fmt","fmt","fmt","from","from","from","from","into","into","into","into","log_level","options","renderer","renderer","run","run","run","scenes","serialize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","windows","EventLoop","EventLoopRunner","Runner","borrow","borrow_mut","create_dispatcher","fmt","fmt","from","into","new","run","run_event_loop","try_from","try_into","type_id","window_target","Callback","CallbackFn","Character","Click","Closed","CursorEntered","CursorLeft","Destroyed","Draw","Event","Exit","FileDropped","FileHoverCancelled","FileHovered","Focus","KeyDown","KeyUp","Moved","Pointer","Rescaled","Resized","Scroll","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","button","character","delta_x","delta_y","focused","handle","handle","height","height","key","key","pressed","scancode","scancode","width","width","x","x","y","y","BUILT_TIME_UTC","CFG_ENDIAN","CFG_ENV","CFG_FAMILY","CFG_OS","CFG_POINTER_WIDTH","CFG_TARGET_ARCH","CI_PLATFORM","DEBUG","FEATURES","FEATURES_LOWERCASE","FEATURES_LOWERCASE_STR","FEATURES_STR","HOST","NUM_JOBS","OPT_LEVEL","PKG_AUTHORS","PKG_DESCRIPTION","PKG_HOMEPAGE","PKG_LICENSE","PKG_NAME","PKG_REPOSITORY","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PROFILE","RUSTC","RUSTC_VERSION","RUSTDOC","RUSTDOC_VERSION","TARGET","build_info","built_time","description","features","host","is_debug","is_release","name","print_build_info","profile","repository","target","version","version_major","version_minor","version_patch","EventListener","IsWindow","Window","WindowOptions","WindowState","Windows","aspect","aspect","auto_resize","auto_resize","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","callbacks","clone","clone","clone_into","clone_into","close_on_esc","create","decorations","default","default","default","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","fullscreen","get","get_dropped_file","get_dropped_file","get_hovered_file","get_hovered_file","get_mut","hovered_files","id","id","insert","instance","into","into","into","into","len","max_size","min_size","new","new","on","on","on","raw_display_handle","raw_window_handle","redraw","redraw","remove","request_redraw","request_redraw","resizable","run","serialize","set_auto_resize","set_decorations","set_fullscreen","set_max_size","set_min_size","set_resizable","set_size","set_title","size","size","size","state","state","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","animation","camera","color","controller","empty","light","mesh","sprite","sprite_map","transform","Animator","borrow","borrow_mut","cell_counts","current","duration","from","into","moment","sprite","sprite_map","switch","tick","try_from","try_into","type_id","update_uv","Camera","CameraOptions","Orthographic","Perspective","Projection","ProjectionOptions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from_target_size","into","into","into","into","new","new","new_perspective","node_id","node_id","orthographic","ortographic_from_quad","perspective","projection","projection","serialize","serialize","serialize","set_far_plane","set_near_plane","set_node_id","set_projection","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","z_far","z_far","z_near","z_near","center","extent_y","fov_y","Color","alpha","blue","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","from_css","from_hex","from_rgb_alpha","from_rgba","green","hash","into","into_vec4","into_vec4_gamma","new","partial_cmp","red","to_owned","try_from","try_into","type_id","Controller","borrow","borrow_mut","fmt","from","handle_event","into","is_backward_pressed","is_forward_pressed","is_left_pressed","is_right_pressed","new","speed","try_from","try_into","type_id","update_position","Empty","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","node_id","set_node_id","to_owned","try_from","try_into","type_id","Directional","Light","LightOptions","LightType","Point","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","color","default","default","fmt","fmt","fmt","from","from","from","intensity","intensity","into","into","into","new","node_id","node_id","set_node_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","variant","variant","Box","Cube","Mesh","Plane","Sphere","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","from","from","from","into","into","into","into","into","mesh_id","new","new","new","new","new","node_id","node_id","set_node_id","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Sprite","borrow","borrow_mut","clip_region","clone","clone_into","default","fmt","from","image","into","new","node_id","node_id","set_node_id","to_owned","try_from","try_into","type_id","SpriteMap","at","borrow","borrow_mut","cell_size","from","into","origin","try_from","try_into","type_id","GlobalTransforms","LocalTransform","Transform","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","from","from","from","index","into","into","into","inverse_matrix","position","position","rotation","rotation","scale","scale","to_owned","to_transform","transforms","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","geometry","linear_algebra","primitives","quad","shape","vertex","primitive","Primitive","borrow","borrow_mut","create_mesh","cube","cuboid","from","indices","into","mesh","normals","plane","positions","primitives","radius","sphere","try_from","try_into","type_id","vertex","Quad","area","aspect","borrow","borrow_mut","center_f32","clamp","clamp_with_intersection","clone","clone_into","default","deserialize","encompass","encompassing_pixels","encompassing_pixels_i32","eq","equals","equivalent","equivalent","equivalent","equivalent","fmt","from","from_dimensions","from_pixel","from_region","from_region_i32","from_wgpu_size","from_window_logical_size","from_window_size","half_height","half_height_f32","half_width","half_width_f32","height","intersects","into","is_larger_than","is_smaller_than","pixel_center","serialize","to_owned","to_range","to_wgpu_size","try_from","try_into","type_id","union","width","x_max","x_min","y_max","y_min","ShapeBuilder","borrow","borrow_mut","fill","from","into","stroke","try_from","try_into","type_id","NORMAL","Normal","Position","TextureCoordinates","Vertex","VertexTypes","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complement","contains","difference","empty","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_empty","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","EulerAngles","Mat2","Mat3","Mat4","Matrix2x3","Matrix2x4","Matrix3x2","Matrix3x4","Matrix4x2","Matrix4x3","ORIGIN","Point2","Point3","Quaternion","UP_VECTOR","Vec2","Vec3","Vec4","a","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","from_slice","from_slice","from_slice","from_slice","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","marker","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","s","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v","w","w","w","w","x","x","x","x","x","x","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","y","y","y","y","y","y","z","z","z","z","z","z","z","z","z","options","renderer","renderpass","target","DEVICE_LIMITS","POWER_PREFERENCE","RenderOptions","borrow","borrow_mut","default","deserialize","device_limits","fmt","force_software_rendering","from","into","power_preference","render_pass","serialize","try_from","try_into","type_id","Commands","RenderContext","Renderer","add_mesh","add_target","add_texture","add_texture_from_bytes","borrow","borrow_mut","device","device","fmt","from","into","load_image","new","new_offscreen","queue","queue","read_resources","read_resources","read_targets","read_targets","remove_target","render","resources","resources","targets","targets","try_from","try_into","type_id","write_resources","write_resources","write_targets","write_targets","Ambient","Flat2D","Gouraud","Material","Phong","Phong","PhongConfig","Real","RealConfig","RenderPass","RenderPassResult","Shader","Solid","SolidConfig","ambient","base_color_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","cull_back_faces","cull_back_faces","cull_back_faces","default","default","default","default","default","draw","draw","draw","draw","draw","emissive_color","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","intensity","into","into","into","into","into","into","into","into","into","into","max_lights","max_lights","metallic_factor","new","new","new","new","normal_scale","occlusion_strength","roughness_factor","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","flat","glossiness","Dimensions","Frame","RenderTarget","RenderTargetCollection","RenderTargetDescription","RenderedFrames","Target","TargetId","Targets","Texture","Texture","TextureTarget","Window","Window","WindowTarget","add","add","after_render","after_render","all","all","all_mut","all_mut","aspect","aspect","attach_cammera","background_image","before_render","before_render","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","camera_id","clear_color","clip_region","clone","clone","clone_into","clone_into","config","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from_texture","from_texture","from_wgpu_texture","from_window","get","get","get_mut","get_mut","hash","id","id","id","into","into","into","into","into","into","into","len","len","new","new","new","next_frame","next_frame","prepare_render","prepare_render","present","present","present","present","present","remove","remove","render","render","resize","resize","sample_count","sample_count","set_background_image","set_camera","set_camera_id","set_clear_color","set_clip_region","should_present","size","size","surface","target_id","target_size","targets","texture","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","buffer","loader","mesh","resources","sampler","shaders","texture","Buffer","BufferSize","TextureBuffer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","clip_region","clone","clone_into","fmt","fmt","fmt","from","from","from","height","into","into","into","new","padded_bytes_per_row","size","size","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unpadded_bytes_per_row","width","load_gltf","load_obj","BuiltMesh","MeshBuilder","MeshData","MeshId","VertexData","VertexIds","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_radius","buffer","build","clone","clone","clone","clone_into","clone_into","clone_into","count","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","has","hash","id","index","into","into","into","into","into","into","name","new","offset","offset","radius","stride","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vertex","vertex_count","vertex_data","vertex_ids","vertex_slice","Resources","add_mesh","add_texture","borrow","borrow_mut","fmt","from","get_mesh","get_texture","into","new","try_from","try_into","type_id","SamplerOptions","borrow","borrow_mut","clone","clone_into","compare","create_default_sampler","create_sampler","default","fmt","from","into","repeat_x","repeat_y","smooth","to_owned","try_from","try_into","type_id","Shaders","bitmap_shader","borrow","borrow_mut","color_shader","copy_shader","fmt","from","gradient_shader","into","new","try_from","try_into","type_id","DEPTH_FORMAT","Texture","TextureId","aspect","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_depth_texture","create_target_texture","data","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","format","from","from","from_bytes","from_image","from_wgpu_texture","hash","id","into","into","sampler","size","size","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","write_data_to_texture","node","object","scene","Node","NodeId","as_u32","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","eq","eq","fmt","fmt","from","from","has_moved","id","into","into","local_transform","look_at","parent","position","pre_rotate","pre_rotate_degrees","pre_rotate_radians","pre_translate","root","root","rotate","rotate_degrees","rotate_radians","rotation","rotation_degrees","rotation_quaternion","rotation_radians","scale","serialize","set_parent","set_position","set_rotation","set_rotation_degrees","set_rotation_quaternion","set_rotation_radians","set_scale","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","ObjectId","SceneObject","SceneObjectEntry","SpatialObject","add_component","add_components","added_to_scene","added_to_scene","added_to_scene_tree","added_to_scene_tree","apply","batch","borrow","borrow_mut","builder","builder","clear_image","from","has_moved","has_moved","has_moved","id","into","local_transform","look_at","look_at_origin","new","new","node","node","node","node_id","node_id","node_id","parent","position","pre_rotate","pre_rotate_degrees","pre_rotate_radians","pre_translate","removed_from_scene","removed_from_scene","rotate","rotate_degrees","rotate_radians","rotation","rotation_degrees","rotation_quaternion","rotation_radians","scale","set_color","set_image","set_intensity","set_node_id","set_parent","set_parent_node","set_position","set_rotation","set_rotation_degrees","set_rotation_quaternion","set_rotation_radians","set_scale","set_uv","translate","try_from","try_into","type_id","Scene","SceneId","SceneState","Scenes","add","add_target","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get","get_mut","has_camera","hash","index","index_mut","insert","into","into","into","into","len","new","new","read_state","remove","render","state","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","world","write_state"],"q":[[0,"plrender"],[51,"plrender::app"],[64,"plrender::app::app"],[117,"plrender::app::event_loop"],[134,"plrender::app::events"],[171,"plrender::app::events::Event"],[191,"plrender::app::meta"],[240,"plrender::app::window"],[344,"plrender::components"],[354,"plrender::components::animation"],[371,"plrender::components::camera"],[447,"plrender::components::camera::Projection"],[450,"plrender::components::color"],[477,"plrender::components::controller"],[494,"plrender::components::empty"],[510,"plrender::components::light"],[560,"plrender::components::mesh"],[614,"plrender::components::sprite"],[633,"plrender::components::sprite_map"],[644,"plrender::components::transform"],[686,"plrender::math"],[688,"plrender::math::geometry"],[692,"plrender::math::geometry::primitives"],[693,"plrender::math::geometry::primitives::primitive"],[713,"plrender::math::geometry::quad"],[766,"plrender::math::geometry::shape"],[776,"plrender::math::geometry::vertex"],[872,"plrender::math::linear_algebra"],[1427,"plrender::renderer"],[1431,"plrender::renderer::options"],[1449,"plrender::renderer::renderer"],[1485,"plrender::renderer::renderpass"],[1613,"plrender::renderer::renderpass::Shader"],[1615,"plrender::renderer::target"],[1766,"plrender::resources"],[1773,"plrender::resources::buffer"],[1813,"plrender::resources::loader"],[1815,"plrender::resources::mesh"],[1902,"plrender::resources::resources"],[1916,"plrender::resources::sampler"],[1935,"plrender::resources::shaders"],[1949,"plrender::resources::texture"],[1991,"plrender::scene"],[1994,"plrender::scene::node"],[2054,"plrender::scene::object"],[2121,"plrender::scene::scene"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PLRender Application Module","Components library for the Entity Component System.","","Renderer module.","","Scene Graph Module","","The <strong>App</strong> module contains the global <strong>PLRender</strong> accessor, …","Errors module.","Event Loop module . @TODO describe it","Events module.","","","","","Meta module with static Build data.","","","Window module.","","The main App instance responsible for managing the …","App’s startup options.","App’s internal state shared between threads.","The backbone of this library.","","Returns a mutex reference to the main App.","","","","","","","","","Configure the main App instance with startup options.","","","","Dispatches an event to the main event loop.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a mutex reference to the main Renderer.","","Alias for <code>PLRender::run()</code>.","Runs the main event loop. This function blocks the thread …","Runs the main event loop.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","External Callback Functions are stored internally as a …","Trait for PLRender Callback Functions.","","","","","","","","PLRender Events.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The build time in RFC2822, UTC.","The endianness, given by <code>CARGO_CFG_TARGET_ENDIAN</code>.","The toolchain-environment, given by <code>CARGO_CFG_TARGET_ENV</code>.","The OS-family, given by <code>CARGO_CFG_TARGET_FAMILY</code>.","The operating system, given by <code>CARGO_CFG_TARGET_OS</code>.","The pointer width, given by <code>CARGO_CFG_TARGET_POINTER_WIDTH</code>.","The target architecture, given by <code>CARGO_CFG_TARGET_ARCH</code>.","The Continuous Integration platform detected during …","Value of DEBUG for the profile used during compilation.","The features that were enabled during compilation.","The features as above, as lowercase strings.","The feature-string as above, from lowercase strings.","The features as a comma-separated string.","The host triple of the rust compiler.","The parallelism that was specified during compilation.","Value of OPT_LEVEL for the profile used during compilation.","A colon-separated list of authors.","The description.","The homepage.","The license.","The name of the package.","The source repository as advertised in Cargo.toml.","The full version.","The major version.","The minor version.","The patch version.","The pre-release version.","<code>release</code> for release builds, <code>debug</code> for other builds.","The compiler that cargo resolved to use.","The output of …","The documentation generator that cargo resolved to use.","The output of …","The target triple that was being compiled for.","Returns the build information as a string.","The build time in RFC2822, UTC.","The library’s package description as a string.","The features that were enabled during compilation.","The host triple of the machine that compiled this library.","Whether or not this build was a debug build.","Whether or not this build was a release build.","The library’s name as a string.","Prints the build information to the standard output.","The profile that this library has been compiled with.","The library’s repository URL as a string.","The target triple that this library has been compiled for.","The full semantic version of this library as a string in …","The major version of this library as a string.","The minor version of this library as a string.","The patch version of this library as a string.","","","","Options to create a Window.","","","","","","","","","","","","","","","","","","","","","","","","Creates a Window with default options.","","","Creates a Window with default options.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a Window with the given options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Animation component.","Camera component.","Color component.","Controller component.","Empty component.","Light component.","Mesh component.","Sprite component.","SpriteMap component.","Transform is a reserved component, mandatory for every …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A Camera is the link between the Scene and the Renderer.","Options for creating a new Camera.","Holds Orthographic projection data.","","The Projection type (orthographic or perspective).","Options for creating a new Projection.","","","","","","","","","","","","","","","","","Creates a 2D Camera with default options.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new 2D Camera from the Target’s size.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Projection from options.","Creates a new Camera from options.","","","A reference to the Node that owns this camera, containing …","Creates a new Orthographic projection.","Creates a new Orthographic projection from a Quad.","Creates a new Perspective projection.","The projection type (orthographic or perspective).","The projection type (orthographic or perspective).","","","","Sets the camera’s far clip distance.","Sets the camera’s near clip distances.","","Sets the camera’s projection type.","","","","","","","","","","","","","","","","","Specify the depth range as seen by the camera. <code>z_near</code> maps …","Specify the depth range as seen by the camera. <code>z_near</code> maps …","Specify the depth range as seen by the camera. <code>z_near</code> maps …","Specify the depth range as seen by the camera. <code>z_near</code> maps …","The center of the projection in Scene coordinates.","Vertical extent from the center point.","Vertical field of View, in degrees.","Can be specified as 0xRRGGBBAA","","","","","","","","","","Returns the argument unchanged.","Create a new color from a CSS string","Create a new color from a hex string","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The Mesh component","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","A common ancestor of “sprite sheet”, “tile map”.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Re-export of mint math types.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Clamps this Quad to a theoretical overlap of another Quad, …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Optional vertex types.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Abstract set of Euler angles in 3D space. The basis of …","","","","","","","","","","","","","Standard quaternion represented by the scalar and vector …","","","","","First angle of rotation in range [-pi, pi] (<em>pitch</em>).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Second angle of rotation around in range [-pi/2, pi/2] (<em>yaw</em>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Third angle of rotation in range [-pi, pi] (<em>roll</emeturns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Marker for the phantom basis.","","","","","","","","","","","","","","","","","Scalar part of a quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector part of a quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convenience Lookup Table for converting a static string …","Convenience Lookup Table for converting a static string …","Options for configuring the Renderer.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","🎨 Draws things on the screen or on a texture","","Registers an OS Window or a Web Canvas element as a …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Removes a rendering target from the renderer.","Where the magic starts! 🪄","","","","","","","","","","","","","","","","","","","Realistic renderer. Follows Disney PBR.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how a target should be rendered.","","","","","","","","","","","","","","Callback function to run after rendering.","","","","","","","","Reserved for future use (unimplemented).","","Callback function to run right before rendering.","","","","","","","","","","","","","","","","The camera to use when rendering to this target.","The color to use when clearing the target.","The region of the target to render to.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Id of the target to render to.","The size of the target in pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Asset loading and management module.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Load mesh from glTF 2.0 format.","Load entities from Wavefront Obj format.","Metadata about a loaded Mesh resource.","","Mesh is a GPU resource, not a Scene resource.","A unique identifier for a Mesh that is already loaded into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Represents a loaded texture in the GPU","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A Node represents a spatial position in the Scene tree.","A SceneObject is associated with a Node in the Scene and …","A Scene is a collection of Nodes and SceneObjects.","A Node represents a spatial position in the Scene tree.","A NodeId is a reference for a Node in the Scene tree.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Whether this Node has moved relative to its parent.","Returns this Node’s NodeId in the Scene tree.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns this Node’s local Transform Matrix.","Sets the Node’s rotation so that it faces the given …","Returns this Node’s parent NodeId in the Scene tree.","Returns this Node’s local position.","This method is an alias to <code>Node.pre_rotate_degrees()</code>.","Rotates the Node by the given angle (in degrees) relative …","Rotates the Node by the given angle (in radians) relative …","Moves this Node by the given offset.","","Creates a new Root Node at origin.","This method is an alias to <code>Node.rotate_degrees()</code>.","Rotates the Node by the given angle (in degrees) relative …","Rotates the Node by the given angle (in radians) relative …","This method is an alias to <code>Node.rotation_degrees()</code>.","Returns a tuple of (Vec3, float32) representing the Node’…","Returns the raw quaternion representing the Node’s …","Returns a tuple of (Vec3, float32) representing the Node’…","Returns the Node’s local scale","","Sets this Node’s parent NodeId.","Sets this Node’s local position.","This method is an alias to <code>Node.set_rotation_degrees()</code>.","Sets the Node’s rotation (in degrees), overwriting the …","Sets the Node’s rotation using a Quaternion, overwriting …","Sets the Node’s rotation (in radians), overwriting the …","Sets the Node’s local scale","","","Moves this Node by the given offset.","","","","","","","","The SceneObject is the interface for manipulating Scene …","This is the interface between the Scene and the …","Defines an interface for Spatial SceneObjects.","","","","","","","Turns off batch mode and applies all changes to the Scene.","Sets the SceneObject to batch update mode.","","","","","","Returns the argument unchanged.","","","Whether this Node has moved relative to its parent.","Returns the ObjectId of this Object if it has been added …","Calls <code>U::from(self)</code>.","Returns this Node’s local Transform Matrix.","Sets the Node’s rotation so that it faces the given …","Sets the Node’s rotation to look at (0, 0, 0)","Builds a SceneObject from this component.","","","","","Returns the NodeId associated with this component.","","","Returns this Node’s parent NodeId in the Scene tree.","Returns this Node’s local position.","This method is an alias to <code>Node.pre_rotate_degrees()</code>.","Rotates the Node by the given angle (in degrees) relative …","Rotates the Node by the given angle (in radians) relative …","Moves this Node by the given offset.","","","This method is an alias to <code>Node.rotate_degrees()</code>.","Rotates the Node by the given angle (in degrees) relative …","Rotates the Node by the given angle (in radians) relative …","This method is an alias to <code>Node.rotation_degrees()</code>.","Returns a tuple of (Vec3, float32) representing the Node’…","Returns the raw quaternion representing the Node’s …","Returns a tuple of (Vec3, float32) representing the Node’…","Returns the Node’s local scale","","","","Sets the NodeId associated with this component.","Sets this Object’s parent","Internal method to set this Object’s parent NodeId","Sets this Node’s local position.","This method is an alias to <code>Node.set_rotation_degrees()</code>.","Sets the Node’s rotation (in degrees), overwriting the …","Sets the Node’s rotation using a Quaternion, overwriting …","Sets the Node’s rotation (in radians), overwriting the …","Sets the Node’s local scale","","Moves this Node by the given offset.","","","","","","Scene’s internal state.","","Where all the Scene magic happens! 🧙","Adds a new rendering target to the Scene.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns true if the Scene has at least one camera.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new Scene.","","Returns a reference to the Scene’s internal state.","","Renders the Scene.","Returns a reference to the Scene’s internal state.","","","","","","","","","","","","","","","Returns a mutable reference to the Scene’s internal …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,223,223,223,0,223,223,0,0,0,0,0,0,0,224,224,7,15,8,224,7,15,8,224,7,8,8,7,7,15,8,224,7,15,8,224,7,15,8,8,15,224,8,0,224,7,15,8,224,7,15,8,224,7,15,8,224,7,15,8,15,0,0,0,19,19,19,21,19,19,19,19,19,0,19,19,19,19,0,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,27,11,11,11,11,11,11,11,11,225,226,227,227,228,229,230,231,232,233,234,225,233,234,231,232,235,236,235,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,33,31,34,31,36,33,34,31,36,33,34,237,31,33,31,33,34,33,34,31,33,34,36,33,34,34,37,31,36,33,34,31,36,33,34,34,36,31,33,31,33,36,31,37,33,36,31,31,36,33,34,36,34,34,36,33,237,31,33,33,33,31,33,36,37,33,34,33,34,33,33,33,33,33,33,33,33,31,33,34,37,33,34,33,34,31,36,33,34,31,36,33,34,31,36,33,34,0,0,0,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,47,47,0,0,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,49,47,48,50,47,48,49,50,47,48,49,50,49,47,48,49,50,47,49,49,49,49,47,47,47,49,50,47,48,50,49,49,49,49,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,49,50,49,50,238,238,239,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,0,0,0,63,63,64,65,63,64,65,63,64,65,63,64,65,64,65,63,64,63,64,65,63,64,65,64,65,63,64,65,64,64,64,64,63,64,65,63,64,65,63,64,65,63,64,65,64,65,0,0,0,0,0,240,241,242,243,66,240,241,242,243,66,66,66,66,66,240,241,242,243,66,240,241,242,243,66,66,240,241,242,243,66,66,66,66,66,240,241,242,243,66,240,241,242,243,66,240,241,242,243,66,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,71,71,71,71,71,71,71,71,71,71,0,0,0,75,73,74,75,73,74,73,73,73,73,73,74,75,73,74,74,75,75,73,74,74,73,74,73,74,73,74,73,74,75,75,73,74,75,73,74,75,73,74,0,0,0,0,0,0,0,0,77,77,77,77,77,77,77,77,0,77,77,77,0,77,77,77,77,77,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,244,244,244,244,244,244,244,244,244,86,0,0,0,0,0,86,86,86,86,86,86,86,86,86,245,87,88,89,86,245,87,88,89,86,87,88,89,87,88,89,86,86,86,86,86,87,88,89,86,86,86,86,245,87,88,89,86,86,86,86,86,86,86,86,86,86,245,87,88,89,86,86,86,86,87,88,89,86,86,86,86,86,86,86,86,87,88,89,86,245,87,88,89,86,245,87,88,89,86,245,87,88,89,86,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,76,76,101,53,67,102,72,103,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,76,76,101,53,67,102,72,103,105,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,105,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,93,93,93,94,94,94,94,95,95,95,95,96,96,96,96,97,97,97,97,98,98,98,98,99,99,99,99,100,100,100,100,76,76,76,76,101,101,101,101,105,105,105,105,53,53,53,53,67,67,67,67,102,102,102,102,72,72,72,72,103,103,103,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,93,93,93,93,93,94,94,94,94,95,95,95,95,96,96,96,96,97,97,97,97,97,97,97,98,98,98,98,99,99,99,99,100,100,100,100,76,76,76,76,76,76,101,101,101,101,105,105,105,105,105,105,105,105,53,53,53,53,53,53,53,53,53,67,67,67,67,67,67,67,67,67,67,102,102,102,102,102,102,102,102,72,72,72,72,72,72,72,72,72,103,103,103,103,103,103,103,103,103,103,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,105,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,101,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,93,94,95,96,97,98,99,100,76,101,105,53,67,102,72,103,101,95,98,76,102,93,94,95,96,97,98,99,100,76,53,67,102,72,103,93,94,95,96,97,98,99,100,76,53,67,102,72,103,94,95,97,98,100,76,67,102,103,0,0,0,0,0,0,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,0,0,0,16,16,16,16,16,16,246,16,16,16,16,16,16,16,246,16,246,16,246,16,16,16,246,16,246,16,16,16,16,246,16,246,16,0,0,178,0,0,178,0,0,0,0,0,0,0,0,181,180,185,186,187,188,178,179,181,180,182,183,185,186,187,188,178,179,181,180,182,183,178,179,180,178,179,180,179,181,182,183,179,181,180,182,183,247,185,186,187,188,180,178,178,179,181,180,182,183,185,186,187,188,178,179,181,180,182,183,179,185,186,187,188,178,179,181,180,182,183,181,182,180,185,186,187,188,180,180,180,178,179,180,185,186,187,188,178,179,181,180,182,183,185,186,187,188,178,179,181,180,182,183,185,186,187,188,178,179,181,180,182,183,248,249,0,0,0,0,0,0,0,0,0,162,175,0,162,175,0,250,174,189,189,250,174,250,174,251,175,189,189,189,189,192,162,175,189,174,193,194,192,162,175,189,174,193,194,193,189,189,189,162,189,162,189,194,162,162,162,162,162,192,162,175,189,174,193,194,252,175,192,162,175,189,174,193,194,189,193,193,189,250,174,250,174,162,252,175,194,192,162,175,189,174,193,194,250,174,189,174,193,252,175,252,175,252,250,192,175,174,250,174,250,174,252,175,252,175,189,189,189,189,189,192,251,175,194,189,189,174,193,162,189,192,162,175,189,174,193,194,192,162,175,189,174,193,194,192,162,175,189,174,193,194,192,0,0,0,0,0,0,0,0,0,0,201,202,203,201,202,203,202,203,203,201,201,201,202,203,201,202,203,201,201,202,203,201,201,201,202,201,201,202,203,201,202,203,201,202,203,201,201,0,0,0,0,0,0,0,0,205,161,68,160,206,207,205,161,68,160,206,207,160,160,205,161,206,207,161,206,207,206,161,161,161,161,161,161,161,160,206,207,206,205,161,68,160,206,207,68,161,68,205,205,161,68,160,206,207,205,205,206,207,205,207,161,206,207,205,161,68,160,206,207,205,161,68,160,206,207,205,161,68,160,206,207,205,160,160,160,160,0,173,173,173,173,173,173,173,173,173,173,173,173,173,0,211,211,211,211,211,0,0,211,211,211,211,211,211,211,211,211,211,211,0,213,213,213,213,213,213,213,213,213,213,213,213,213,196,0,0,196,70,196,70,196,70,70,196,196,196,70,70,70,70,70,70,196,196,70,196,196,196,196,70,196,70,196,196,196,196,70,70,196,70,196,70,196,196,196,0,0,0,0,0,52,52,52,61,52,61,52,61,52,61,52,61,52,52,61,52,61,52,61,61,61,52,61,61,61,61,61,61,61,61,61,52,61,61,61,61,61,61,61,61,61,52,61,61,61,61,61,61,61,52,61,61,52,61,52,61,52,61,0,0,0,0,51,51,221,51,221,51,51,51,51,51,221,51,51,51,221,51,51,51,51,51,51,51,216,51,221,51,51,216,221,51,51,51,51,51,51,51,221,51,51,51,51,51,51,51,51,51,51,51,51,216,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,176,176,176,46,219,222,176,46,219,222,219,219,222,219,219,219,219,219,46,219,222,176,46,219,222,222,222,176,219,46,46,222,176,46,219,222,222,176,222,176,222,176,176,219,176,46,219,222,176,46,219,222,176,46,219,222,46,176],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],[[2,[3]]]],[[[5,[4]]]],[[],6],0,[[]],[[],[[2,[[5,[4]]]]]],0,0,0,0,0,0,0,[[],[[5,[[4,[7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[[],7],[[],8],[9,[[10,[8]]]],[[7,11],[[10,[[12,[11]]]]]],[[7,13],14],[[15,13],14],[[8,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[5,[[4,[16]]]]]],0,[[]],[[]],[7],0,[[8,17],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],0,0,0,0,[[]],[[]],[[[19,[11]]],[[20,[11]]]],[[21,13],14],[[[19,[22]],13],14],[[]],[[]],[[],[[19,[11]]]],[[[19,[11]],23,[5,[[4,[15]]]]]],[[[24,[11]],[5,[[4,[15]]]]]],[[],10],[[],10],[[],18],[[[19,[11]]],[[25,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[11,11],[[]],[9,[[10,[11]]]],[[11,11],26],[[27,13],14],[[11,13],14],[[]],[[]],[[11,17],10],[[]],[[],10],[[],10],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],28],[[],29],[[],29],[[],[[30,[29]]]],[[],29],[[],26],[[],26],[[],29],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,0,0,0,[31,32],[33,32],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,11]],[[31,29,11]],[[33,29,11]],0,[33,33],[34,34],[[]],[[]],0,[[],[[10,[33,35]]]],0,[[],36],[[],33],[[],34],[9,[[10,[34]]]],[[37,13],14],[[31,13],14],[[36,13],14],[[33,13],14],[[34,13],14],[[]],[[]],[[]],[[]],0,[[36,38],[[2,[[1,[31]]]]]],[[31,39],[[2,[40]]]],[[33,39],[[2,[40]]]],[[31,39],[[2,[28]]]],[[33,39],[[2,[28]]]],[[36,38],[[2,[[3,[31]]]]]],0,[[],38],[33,38],[[36,38,[5,[[4,[31]]]]]],0,[[]],[[]],[[]],[[]],[36,6],0,0,[[],36],[34,[[10,[33,35]]]],[[29,[41,[11]]]],[[31,29,[41,[11]]]],[[33,29,[27,[11]]]],[33,42],[33,43],[31],[33],[[36,38],[[2,[[5,[[4,[31]]]]]]]],[[]],[33],0,[33],[[34,17],10],[[33,26],33],[[33,26],33],[[33,26],33],[[33,2],33],[[33,2],33],[[33,26],33],[33,33],[[33,29],33],[31,44],[33,44],0,[[],[[5,[[4,[31]]]]]],[33,[[5,[[4,[31]]]]]],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[[]],[[]],0,0,0,[[45,6,46]],[[45,46]],[[],10],[[],10],[[],18],[[45,46]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[49,49],[50,50],[[]],[[]],[[]],[[]],[[],49],[9,[[10,[47]]]],[9,[[10,[48]]]],[9,[[10,[50]]]],[[47,13],14],[[48,13],14],[[49,13],14],[[50,13],14],[[]],[[]],[[]],[[]],[44,[[51,[49]]]],[[]],[[]],[[]],[[]],[48,47],[50,[[51,[49]]]],[32,[[51,[49]]]],[49,52],0,[[[53,[32]],32],47],[44,47],[32,47],0,0,[[47,17],10],[[48,17],10],[[50,17],10],[[49,32],49],[[49,32],49],[[49,52]],[[49,47],49],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,[54,32],[54,32],[[]],[[]],[54,54],[[]],[[],54],[[54,54],26],[[54,13],14],[[]],[29,[[10,[54,55]]]],[29,[[10,[54,55]]]],[[[56,[32]],32],54],[[[56,[32]]],54],[54,32],[[54,57]],[[]],[54,[[56,[32]]]],[54,[[56,[32]]]],[[32,32,32,32],54],[[54,54],[[2,[58]]]],[54,32],[[]],[[],10],[[],10],[[],18],0,[[]],[[]],[[59,13],14],[[]],[[59,60]],[[]],0,0,0,0,[32,59],0,[[],10],[[],10],[[],18],[[59,61]],0,[[]],[[]],[62,62],[[]],[[],62],[[62,13],14],[[]],[[]],[[],[[51,[62]]]],[62,52],[[62,52]],[[]],[[],10],[[],10],[[],18],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[64,64],[65,65],[[]],[[]],[[]],0,0,[[],63],[[],64],[[63,13],14],[[64,13],14],[[65,13],14],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[65,[[51,[64]]]],[64,52],0,[[64,52]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[[]],[[],66],[[66,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[67,[32]]],[[51,[66]]]],[32,[[51,[66]]]],[32,[[51,[66]]]],[[32,6],[[51,[66]]]],[68,[[51,[66]]]],[66,52],0,[[66,52]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],0,[69,69],[[]],[[],69],[[69,13],14],[[]],0,[[]],[[70,44],69],[69,52],0,[[69,52]],[[]],[[],10],[[],10],[[],18],0,[[71,[72,[6]]],44],[[]],[[]],0,[[]],[[]],0,[[],10],[[],10],[[],18],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[[]],[[],73],[[73,73],26],[[73,13],14],[[74,13],14],[[]],[[]],[73,74],[[]],[[75,52],74],[[]],[[]],[[]],[74,[[76,[32]]]],0,0,0,0,0,0,[[]],[74,73],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,[[]],[[]],[77,68],[32,77],[[[67,[32]]],77],[[]],0,[[]],0,0,[32,77],0,0,0,[[32,6],77],[[],10],[[],10],[[],18],0,0,[44,78],[44,32],[[]],[[]],[44,[[53,[32]]]],[[44,78,78]],[[44,44]],[44,44],[[]],[[],44],[9,[[10,[44]]]],[[44,78,78]],[[],44],[[],44],[[44,44],26],[[44,44],26],[[],26],[[],26],[[],26],[[],26],[[44,13],14],[[]],[[78,78],44],[[78,78],44],[[78,78,78,78],44],[[79,79,79,79],44],[80,44],[[[81,[78]]],44],[[[82,[78]]],44],[44,78],[44,32],[44,78],[44,32],[44,78],[[44,44],26],[[]],[[44,44],26],[[44,44],26],[44],[[44,17],10],[[]],[44,[[83,[[72,[79]]]]]],[44,80],[[],10],[[],10],[[],18],[[44,44]],[44,78],0,0,0,0,0,[[]],[[]],[84,77],[[]],[[]],[[84,85],77],[[],10],[[],10],[[],18],0,0,0,0,0,0,[[],86],[[86,86],86],[[86,86]],[[86,86],86],[[86,86]],[86,78],[86,78],[[86,86],86],[[86,86]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[88,88],[89,89],[[]],[[]],[[]],[86,86],[[86,86],26],[[86,86],86],[[],86],[[86,90]],[[87,13],14],[[88,13],14],[[89,13],14],[[86,13],14],[[86,13],14],[[86,13],14],[[86,13],14],[[]],[[]],[[]],[[]],[[]],[78,[[2,[86]]]],[78,86],[78,86],[78,86],[90,86],[29,[[2,[86]]]],[[86,86]],[[86,86],86],[[86,86],26],[[]],[[]],[[]],[[]],[[]],[86],[86,26],[86,26],[[],26],[[],26],[[],26],[86,[[91,[86]]]],[86,[[92,[86]]]],[86,86],[[86,86]],[[86,86,26]],[[86,86],86],[[86,86]],[[86,86],86],[[]],[[]],[[]],[[86,86]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[86,86],86],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[93,56],[93,[[56,[56]]]],[94,[[56,[56]]]],[94,56],[95,[[56,[56]]]],[95,56],[96,[[56,[56]]]],[96,56],[97,[[56,[56]]]],[97,56],[98,56],[98,[[56,[56]]]],[99,56],[99,[[56,[56]]]],[100,[[56,[56]]]],[100,56],[76,[[56,[56]]]],[76,56],[101,56],[53,56],[67,56],[102,56],[72,56],[103,56],[93,[[56,[56]]]],[93,56],[94,[[56,[56]]]],[94,56],[95,56],[95,[[56,[56]]]],[96,[[56,[56]]]],[96,56],[97,[[56,[56]]]],[97,56],[98,[[56,[56]]]],[98,56],[99,[[56,[56]]]],[99,56],[100,[[56,[56]]]],[100,56],[76,[[56,[56]]]],[76,56],[101,56],[53,56],[67,56],[102,56],[72,56],[103,56],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[93,[104]]],[[93,[104]]]],[[[94,[104]]],[[94,[104]]]],[[[95,[104]]],[[95,[104]]]],[[[96,[104]]],[[96,[104]]]],[[[97,[104]]],[[97,[104]]]],[[[98,[104]]],[[98,[104]]]],[[[99,[104]]],[[99,[104]]]],[[[100,[104]]],[[100,[104]]]],[[[76,[104]]],[[76,[104]]]],[[[101,[104]]],[[101,[104]]]],[[[105,[104,104]]],[[105,[104,104]]]],[[[53,[104]]],[[53,[104]]]],[[[67,[104]]],[[67,[104]]]],[[[102,[104]]],[[102,[104]]]],[[[72,[104]]],[[72,[104]]]],[[[103,[104]]],[[103,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[93,[106]],[93,[106]]],58],[[[94,[106]],[94,[106]]],58],[[[95,[106]],[95,[106]]],58],[[[96,[106]],[96,[106]]],58],[[[97,[106]],[97,[106]]],58],[[[98,[106]],[98,[106]]],58],[[[99,[106]],[99,[106]]],58],[[[100,[106]],[100,[106]]],58],[[[76,[106]],[76,[106]]],58],[[[101,[106]],[101,[106]]],58],[[[105,[106,106]],[105,[106,106]]],58],[[[53,[106]],[53,[106]]],58],[[[67,[106]],[67,[106]]],58],[[[102,[106]],[102,[106]]],58],[[[72,[106]],[72,[106]]],58],[[[103,[106]],[103,[106]]],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[9,[[10,[[93,[107]]]]]],[9,[[10,[[94,[107]]]]]],[9,[[10,[[95,[107]]]]]],[9,[[10,[[96,[107]]]]]],[9,[[10,[[97,[107]]]]]],[9,[[10,[[98,[107]]]]]],[9,[[10,[[99,[107]]]]]],[9,[[10,[[100,[107]]]]]],[9,[[10,[[76,[107]]]]]],[9,[[10,[[101,[107]]]]]],[9,[[10,[[105,[107]]]]]],[9,[[10,[[53,[107]]]]]],[9,[[10,[[67,[107]]]]]],[9,[[10,[[102,[107]]]]]],[9,[[10,[[72,[107]]]]]],[9,[[10,[[103,[107]]]]]],[[[93,[[108,[[108,[[108,[108]]]]]]]],[93,[[108,[[108,[[108,[108]]]]]]]]],26],[[[94,[[108,[[108,[[108,[108]]]]]]]],[94,[[108,[[108,[[108,[108]]]]]]]]],26],[[[95,[[108,[[108,[[108,[108]]]]]]]],[95,[[108,[[108,[[108,[108]]]]]]]]],26],[[[96,[[108,[[108,[[108,[108]]]]]]]],[96,[[108,[[108,[[108,[108]]]]]]]]],26],[[[97,[[108,[[108,[[108,[108]]]]]]]],[97,[[108,[[108,[[108,[108]]]]]]]]],26],[[[98,[[108,[[108,[[108,[108]]]]]]]],[98,[[108,[[108,[[108,[108]]]]]]]]],26],[[[99,[[108,[[108,[[108,[108]]]]]]]],[99,[[108,[[108,[[108,[108]]]]]]]]],26],[[[100,[[108,[[108,[[108,[108]]]]]]]],[100,[[108,[[108,[[108,[108]]]]]]]]],26],[[[76,[[108,[[108,[[108,[108]]]]]]]],[76,[[108,[[108,[[108,[108]]]]]]]]],26],[[[101,[[108,[[108,[[108,[108]]]]]]]],[101,[[108,[[108,[[108,[108]]]]]]]]],26],[[[105,[[108,[[108,[[108,[108]]]]]],[108,[[108,[[108,[108]]]]]]]],[105,[[108,[[108,[[108,[108]]]]]],[108,[[108,[[108,[108]]]]]]]]],26],[[[53,[[108,[[108,[[108,[108]]]]]]]],[53,[[108,[[108,[[108,[108]]]]]]]]],26],[[[67,[[108,[[108,[[108,[108]]]]]]]],[67,[[108,[[108,[[108,[108]]]]]]]]],26],[[[102,[[108,[[108,[[108,[108]]]]]]]],[102,[[108,[[108,[[108,[108]]]]]]]]],26],[[[72,[[108,[[108,[[108,[108]]]]]]]],[72,[[108,[[108,[[108,[108]]]]]]]]],26],[[[103,[[108,[[108,[[108,[108]]]]]]]],[103,[[108,[[108,[[108,[108]]]]]]]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[93,[22]],13],[[10,[109]]]],[[[94,[22]],13],[[10,[109]]]],[[[95,[22]],13],[[10,[109]]]],[[[96,[22]],13],[[10,[109]]]],[[[97,[22]],13],[[10,[109]]]],[[[98,[22]],13],[[10,[109]]]],[[[99,[22]],13],[[10,[109]]]],[[[100,[22]],13],[[10,[109]]]],[[[76,[22]],13],[[10,[109]]]],[[[101,[22]],13],[[10,[109]]]],[[[105,[22,22]],13],[[10,[109]]]],[[[53,[22]],13],[[10,[109]]]],[[[67,[22]],13],[[10,[109]]]],[[[102,[22]],13],[[10,[109]]]],[[[72,[22]],13],[[10,[109]]]],[[[103,[22]],13],[[10,[109]]]],[[]],[110,[[93,[111]]]],[[[56,[56]]],93],[112,[[93,[32]]]],[[[56,[104]]],[[93,[104]]]],[113,93],[[]],[[[56,[104]]],[[94,[104]]]],[114,94],[[[56,[56]]],94],[115,95],[[[56,[104]]],[[95,[104]]]],[[[56,[56]]],95],[[]],[116,96],[[]],[[[56,[104]]],[[96,[104]]]],[[[56,[56]]],96],[117,97],[118,[[97,[32]]]],[[]],[[[56,[56]]],97],[119,[[97,[111]]]],[[[56,[104]]],[[97,[104]]]],[120,[[97,[32]]]],[[[56,[104]]],[[98,[104]]]],[121,98],[[]],[[[56,[56]]],98],[[[56,[56]]],99],[122,99],[[[56,[104]]],[[99,[104]]]],[[]],[123,100],[[]],[[[56,[104]]],[[100,[104]]]],[[[56,[56]]],100],[124,76],[[[56,[56]]],76],[[]],[125,[[76,[32]]]],[126,[[76,[111]]]],[[[56,[104]]],[[76,[104]]]],[127,[[101,[32]]]],[56,101],[[]],[128,[[101,[111]]]],[[[105,[129]]],[[105,[130]]]],[[[105,[130]]],[[105,[129]]]],[[[105,[131]]],[[105,[132]]]],[[[105,[132]]],[[105,[131]]]],[[]],[56,105],[[[105,[133]]],[[105,[134]]]],[[[105,[134]]],[[105,[133]]]],[135,[[53,[136]]]],[56,53],[137,[[53,[78]]]],[138,[[53,[111]]]],[139,[[53,[32]]]],[[]],[72,53],[140,[[53,[141]]]],[142,[[53,[79]]]],[143,[[67,[32]]]],[144,[[67,[78]]]],[145,[[67,[111]]]],[103,67],[146,[[67,[32]]]],[147,[[67,[136]]]],[56,67],[[]],[148,[[67,[79]]]],[149,[[67,[141]]]],[150,[[102,[78]]]],[151,[[102,[32]]]],[152,[[102,[79]]]],[56,102],[153,[[102,[141]]]],[[]],[154,[[102,[111]]]],[155,[[102,[136]]]],[56,72],[53,72],[138,[[72,[111]]]],[[]],[142,[[72,[79]]]],[139,[[72,[32]]]],[140,[[72,[141]]]],[135,[[72,[136]]]],[137,[[72,[78]]]],[147,[[103,[136]]]],[56,103],[[]],[145,[[103,[111]]]],[143,[[103,[32]]]],[67,103],[146,[[103,[32]]]],[149,[[103,[141]]]],[144,[[103,[78]]]],[148,[[103,[79]]]],[[[30,[104]]],[[53,[104]]]],[[[30,[104]]],[[67,[104]]]],[[[30,[104]]],[[102,[104]]]],[[[30,[104]]],[[72,[104]]]],[[[30,[104]]],[[103,[104]]]],[[[93,[156]],57]],[[[94,[156]],57]],[[[95,[156]],57]],[[[96,[156]],57]],[[[97,[156]],57]],[[[98,[156]],57]],[[[99,[156]],57]],[[[100,[156]],57]],[[[76,[156]],57]],[[[101,[156]],57]],[[[105,[156,156]],57]],[[[53,[156]],57]],[[[67,[156]],57]],[[[102,[156]],57]],[[[72,[156]],57]],[[[103,[156]],57]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[93,[[157,[[157,[[157,[157]]]]]]]],[93,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[94,[[157,[[157,[[157,[157]]]]]]]],[94,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[95,[[157,[[157,[[157,[157]]]]]]]],[95,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[96,[[157,[[157,[[157,[157]]]]]]]],[96,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[97,[[157,[[157,[[157,[157]]]]]]]],[97,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[98,[[157,[[157,[[157,[157]]]]]]]],[98,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[99,[[157,[[157,[[157,[157]]]]]]]],[99,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[100,[[157,[[157,[[157,[157]]]]]]]],[100,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[76,[[157,[[157,[[157,[157]]]]]]]],[76,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[101,[[157,[[157,[[157,[157]]]]]]]],[101,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[105,[[157,[[157,[[157,[157]]]]]],[157,[[157,[[157,[157]]]]]]]],[105,[[157,[[157,[[157,[157]]]]]],[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[53,[[157,[[157,[[157,[157]]]]]]]],[53,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[67,[[157,[[157,[[157,[157]]]]]]]],[67,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[102,[[157,[[157,[[157,[157]]]]]]]],[102,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[72,[[157,[[157,[[157,[157]]]]]]]],[72,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],[[[103,[[157,[[157,[[157,[157]]]]]]]],[103,[[157,[[157,[[157,[157]]]]]]]]],[[2,[58]]]],0,[[[93,[158]],17],10],[[[94,[158]],17],10],[[[95,[158]],17],10],[[[96,[158]],17],10],[[[97,[158]],17],10],[[[98,[158]],17],10],[[[99,[158]],17],10],[[[100,[158]],17],10],[[[76,[158]],17],10],[[[101,[158]],17],10],[[[105,[158]],17],10],[[[53,[158]],17],10],[[[67,[158]],17],10],[[[102,[158]],17],10],[[[72,[158]],17],10],[[[103,[158]],17],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],159],[9,[[10,[159]]]],0,[[159,13],14],0,[[]],[[]],0,0,[[159,17],10],[[],10],[[],10],[[],18],0,0,0,[[16,160],161],[[16,37],[[10,[162,[164,[163]]]]]],[[16,165],70],[[16,166,[30,[167]]],70],[[]],[[]],[[],168],[16,168],[[16,13],14],[[]],[[]],[[16,[170,[169]]],[[10,[70,[164,[163]]]]]],[[159,[171,[37]]],[[10,[16,[164,[163]]]]]],[159,[[10,[16,[164,[163]]]]]],[[],172],[16,172],[[],[[1,[173]]]],[16,[[1,[173]]]],[[],[[1,[174]]]],[16,[[1,[174]]]],[[16,162],[[2,[175]]]],[[16,176],[[10,[177]]]],[[],[[5,[[4,[173]]]]]],[16,[[5,[[4,[173]]]]]],[[],[[5,[[4,[174]]]]]],[16,[[5,[[4,[174]]]]]],[[],10],[[],10],[[],18],[[],[[3,[173]]]],[16,[[3,[173]]]],[[],[[3,[174]]]],[16,[[3,[174]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,178],[179,179],[180,180],[[]],[[]],[[]],0,0,0,0,[[],179],[[],181],[[],180],[[],182],[[],183],[[[1,[46]]],184],[[185,[1,[46]]],184],[[186,[1,[46]]],184],[[187,[1,[46]]],184],[[188,[1,[46]]],184],0,[[178,178],26],[[178,13],14],[[179,13],14],[[181,13],14],[[180,13],14],[[182,13],14],[[183,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[16,185],[[181,16],186],[[182,16],187],[[183,16],188],0,0,0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[175,162],[[174,175],162],[[189,[41,[11]]],189],0,[[],[[190,[162,175]]]],[174,[[190,[162,175]]]],[[],[[191,[162,175]]]],[174,[[191,[162,175]]]],[[],32],[175,32],[[189,[51,[49]]],[[10,[189,[164,[163]]]]]],0,[[189,[41,[11]]],189],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[162,162],[189,189],[[]],[[]],0,[[162,162],26],[[],26],[[],26],[[],26],[[],26],[[192,13],14],[[162,13],14],[[175,13],14],[[189,13],14],[[174,13],14],[[193,13],14],[[194,13],14],[[],195],[175,195],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[196,189],[[16,196],[[10,[193,[164,[163]]]]]],[[16,165],[[10,[193,[164,[163]]]]]],[37,189],[162,[[2,[175]]]],[[174,162],[[2,[175]]]],[162,[[2,[175]]]],[[174,162],[[2,[175]]]],[[162,57]],[[],162],[175,162],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[174,6],[[162,44],189],[[],174],[[16,80],[[10,[193,[164,[163]]]]]],[[],[[10,[192,177]]]],[175,[[10,[192,177]]]],[[16,197]],[[175,16,197]],[192],[198],[192],[[175,192]],[[174,198]],[162,[[2,[175]]]],[[174,162],[[2,[175]]]],[[16,197],199],[[174,16,197],199],[[16,80],[[10,[[164,[163]]]]]],[[175,16,80],[[10,[[164,[163]]]]]],[[],78],[175,78],[[189,70],189],[[189,[51,[49]]],189],[[189,200],189],[[189,54],189],[[189,44],189],[192,26],[[],44],[175,44],0,0,0,0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[201,201],[[]],[[201,13],14],[[202,13],14],[[203,13],14],[[]],[[]],[[]],0,[[]],[[]],[[]],[[6,6],201],0,[201,141],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,0,0,[[[170,[169]],176,52],[[204,[28,200]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[205,68],[161,161],[206,206],[207,207],[[]],[[]],[[]],0,[[],161],[[161,161],26],[[],26],[[],26],[[],26],[[],26],[[161,13],14],[[160,13],14],[[206,13],14],[[207,13],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[68,26],[[161,57]],0,[[205,[30,[208]]],205],[[]],[[]],[[]],[[]],[[]],[[]],[[205,29],205],[[],205],0,0,[[205,32],205],0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[205,[30,[209]]],205],0,[160,[[2,[207]]]],0,[160,210],0,[[173,160],161],[[173,196],70],[[]],[[]],[[173,13],14],[[]],[[173,161],160],[[173,70],196],[[]],[[],173],[[],10],[[],10],[[],18],0,[[]],[[]],[211,211],[[]],0,[168,212],[[168,211],212],[[],211],[[211,13],14],[[]],[[]],0,0,0,[[]],[[],10],[[],10],[[],18],0,0,[[]],[[]],0,0,[[213,13],14],[[]],0,[[]],[168,213],[[],10],[[],10],[[],18],0,0,0,[196,32],[[]],[[]],[[]],[[]],[70,70],[[]],[[16,80],196],[[16,80],196],0,[[70,70],26],[[],26],[[],26],[[],26],[[],26],[[70,13],14],[[196,13],14],0,[[]],[[]],[[16,[30,[167]]],[[10,[196,[164,[163]]]]]],[[16,214],[[10,[196,[164,[163]]]]]],[[16,165],196],[[70,57]],0,[[]],[[]],0,[196,44],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],0,[[16,215,165,80]],0,0,0,0,0,[52,78],[52,6],[[]],[[]],[[]],[[]],[52,52],[61,61],[[]],[[]],[[],52],[[],61],[9,[[10,[52]]]],[[52,52],26],[[61,61],26],[[52,13],14],[[61,13],14],[[]],[[]],[61,26],[61,52],[[]],[[]],[61,73],[[61,[67,[32]],[67,[32]]],61],[61,52],[61,[[67,[32]]]],[[61,[67,[32]],32],61],[[61,[67,[32]],32],61],[[61,[67,[32]],32],61],[[61,[67,[32]]]],[[],52],[[],61],[[61,[67,[32]],32],61],[[61,[67,[32]],32],61],[[61,[67,[32]],32],61],[61],[61],[61,[[101,[32]]]],[61],[61,143],[[52,17],10],[[61,52],61],[[61,[67,[32]]],61],[[61,[67,[32]],32],61],[[61,[67,[32]],32],61],[[61,[101,[32]]],61],[[61,[67,[32]],32],61],[[61,[67,[32]]],61],[[]],[[]],[[61,[67,[32]]],61],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],0,0,0,0,[[[51,[216]],217],[[51,[216]]]],[[[51,[216]],218],[[51,[216]]]],[[219,200]],[[[51,[216]],219,200]],[52],[[[51,[216]],52]],[[[51,[216]]]],[[[51,[216]]]],[[]],[[]],[[],220],[[[51,[216]]],220],[[[51,[69]]],[[51,[69]]]],[[]],[[],26],[[[51,[216]]],26],[[[51,[216]]],26],[[[51,[216]]],[[2,[200]]]],[[]],[[[51,[216]]],73],[[[51,[216]],[67,[32]],[67,[32]]],[[51,[216]]]],[[[51,[216]],[67,[32]]],[[51,[216]]]],[[],51],[216,[[51,[216]]]],[[],61],[[[51,[216]]],61],0,[[],52],[[],52],[[[51,[216]]],52],[[[51,[216]]],52],[[[51,[216]]],[[67,[32]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]]],[[51,[216]]]],[200],[[[51,[216]],200]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]]]],[[[51,[216]]]],[[[51,[216]]],[[101,[32]]]],[[[51,[216]]]],[[[51,[216]]],143],[[[51,[64]],54],[[51,[64]]]],[[[51,[69]],70],[[51,[69]]]],[[[51,[64]],32],[[51,[64]]]],[52],[[[51,[216]],221],[[51,[216]]]],[[[51,[216]],52],[[51,[216]]]],[[[51,[216]],[67,[32]]],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[101,[32]]],[[51,[216]]]],[[[51,[216]],[67,[32]],32],[[51,[216]]]],[[[51,[216]],[67,[32]]],[[51,[216]]]],[[[51,[69]],44],[[51,[69]]]],[[[51,[216]],[67,[32]]],[[51,[216]]]],[[],10],[[],10],[[],18],0,0,0,0,[[176,221],200],[[176,189]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[219,219],[[]],[[],222],[[219,219],26],[[],26],[[],26],[[],26],[[],26],[[46,13],14],[[219,13],14],[[222,13],14],[[]],[[]],[[]],[[]],[[222,219],[[2,[[1,[46]]]]]],[[222,219],[[2,[[3,[46]]]]]],[176,26],[[219,57]],[[46,52],61],[[46,52],61],[[222,219,[5,[[4,[46]]]]]],[[]],[[]],[[]],[[]],[222,6],[[],176],[[],222],[176,[[1,[46]]]],[[222,219],[[2,[[5,[[4,[46]]]]]]]],[176,[[10,[177]]]],[176,[[5,[[4,[46]]]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],0,[176,[[3,[46]]]]],"c":[],"p":[[3,"RwLockReadGuard"],[4,"Option"],[3,"RwLockWriteGuard"],[3,"RwLock"],[3,"Arc"],[15,"usize"],[3,"App"],[3,"AppOptions"],[8,"Deserializer"],[4,"Result"],[4,"Event"],[3,"EventLoopClosed"],[3,"Formatter"],[6,"Result"],[3,"AppState"],[3,"Renderer"],[8,"Serializer"],[3,"TypeId"],[3,"EventLoop"],[3,"EventLoopProxy"],[8,"Runner"],[8,"Debug"],[6,"EventLoopRunner"],[3,"EventLoop"],[3,"EventLoopWindowTarget"],[15,"bool"],[8,"CallbackFn"],[3,"String"],[15,"str"],[15,"slice"],[3,"WindowState"],[15,"f32"],[3,"Window"],[3,"WindowOptions"],[3,"OsError"],[3,"Windows"],[8,"IsWindow"],[3,"WindowId"],[15,"u128"],[3,"PathBuf"],[6,"Callback"],[4,"RawDisplayHandle"],[4,"RawWindowHandle"],[3,"Quad"],[3,"Animator"],[3,"SceneState"],[4,"Projection"],[3,"ProjectionOptions"],[3,"Camera"],[3,"CameraOptions"],[3,"SceneObject"],[3,"NodeId"],[3,"Vec2"],[3,"Color"],[4,"ParseColorError"],[15,"array"],[8,"Hasher"],[4,"Ordering"],[3,"Controller"],[4,"WindowEvent"],[3,"Node"],[3,"Empty"],[4,"LightType"],[3,"Light"],[3,"LightOptions"],[3,"Mesh"],[3,"Vec3"],[3,"BuiltMesh"],[3,"Sprite"],[3,"TextureId"],[3,"SpriteMap"],[3,"Point2"],[3,"Transform"],[3,"LocalTransform"],[3,"GlobalTransforms"],[3,"Mat4"],[3,"Primitive"],[15,"u32"],[15,"i32"],[3,"Extent3d"],[3,"LogicalSize"],[3,"PhysicalSize"],[3,"Range"],[3,"Path"],[3,"StrokeOptions"],[3,"VertexTypes"],[3,"Position"],[3,"Normal"],[3,"TextureCoordinates"],[8,"IntoIterator"],[3,"Iter"],[3,"IterNames"],[3,"Mat2"],[3,"Matrix2x3"],[3,"Matrix2x4"],[3,"Matrix3x2"],[3,"Mat3"],[3,"Matrix3x4"],[3,"Matrix4x2"],[3,"Matrix4x3"],[3,"Quaternion"],[3,"Vec4"],[3,"Point3"],[8,"Clone"],[3,"EulerAngles"],[8,"Ord"],[8,"Deserialize"],[8,"PartialEq"],[3,"Error"],[3,"DMat2"],[15,"f64"],[3,"Mat2"],[3,"RowMatrix2"],[3,"RowMatrix2x3"],[3,"RowMatrix2x4"],[3,"RowMatrix3x2"],[3,"RowMatrix3"],[3,"Mat3A"],[3,"DMat3"],[3,"Mat3"],[3,"RowMatrix3x4"],[3,"RowMatrix4x2"],[3,"RowMatrix4x3"],[3,"RowMatrix4"],[3,"Mat4"],[3,"DMat4"],[3,"Quat"],[3,"DQuat"],[4,"ExtraXYZ"],[4,"IntraZYX"],[4,"ExtraZXZ"],[4,"IntraZXZ"],[4,"ExtraZYX"],[4,"IntraXYZ"],[3,"I64Vec2"],[15,"i64"],[3,"UVec2"],[3,"DVec2"],[3,"Vec2"],[3,"U64Vec2"],[15,"u64"],[3,"IVec2"],[3,"Vec3"],[3,"UVec3"],[3,"DVec3"],[3,"Vec3A"],[3,"I64Vec3"],[3,"IVec3"],[3,"U64Vec3"],[3,"UVec4"],[3,"Vec4"],[3,"IVec4"],[3,"U64Vec4"],[3,"DVec4"],[3,"I64Vec4"],[8,"Hash"],[8,"PartialOrd"],[8,"Serialize"],[3,"RenderOptions"],[3,"MeshData"],[3,"MeshId"],[4,"TargetId"],[8,"Error"],[3,"Box"],[3,"Texture"],[6,"TextureDescriptor"],[15,"u8"],[3,"Device"],[3,"Path"],[8,"AsRef"],[3,"Vec"],[3,"Queue"],[3,"Resources"],[3,"Targets"],[4,"Target"],[3,"Scene"],[4,"SurfaceError"],[4,"Shader"],[3,"Ambient"],[3,"Material"],[3,"PhongConfig"],[3,"RealConfig"],[3,"SolidConfig"],[6,"RenderPassResult"],[3,"Flat2D"],[3,"Phong"],[3,"Real"],[3,"Solid"],[3,"RenderTargetDescription"],[3,"Values"],[3,"ValuesMut"],[3,"Frame"],[3,"TextureTarget"],[3,"WindowTarget"],[4,"TextureFormat"],[3,"Texture"],[6,"Commands"],[6,"RenderedFrames"],[3,"SubmissionIndex"],[6,"ObjectId"],[3,"BufferSize"],[3,"Buffer"],[3,"TextureBuffer"],[6,"FxHashMap"],[3,"MeshBuilder"],[3,"VertexIds"],[3,"VertexData"],[15,"u16"],[8,"Pod"],[3,"BufferSlice"],[3,"SamplerOptions"],[3,"Sampler"],[3,"Shaders"],[4,"DynamicImage"],[6,"RgbaImage"],[8,"SpatialObject"],[8,"Component"],[8,"DynamicBundle"],[3,"SceneId"],[3,"EntityBuilder"],[8,"SceneObjectEntry"],[3,"Scenes"],[8,"Container"],[3,"PLRender"],[13,"Click"],[13,"Character"],[13,"Scroll"],[13,"Focus"],[13,"FileHovered"],[13,"FileDropped"],[13,"Resized"],[13,"Rescaled"],[13,"KeyUp"],[13,"KeyDown"],[13,"Moved"],[13,"Pointer"],[8,"EventListener"],[13,"Orthographic"],[13,"Perspective"],[3,"Box"],[3,"Cube"],[3,"Plane"],[3,"Sphere"],[3,"ShapeBuilder"],[3,"Vertex"],[8,"RenderContext"],[8,"RenderPass"],[13,"Gouraud"],[13,"Phong"],[8,"RenderTargetCollection"],[8,"Dimensions"],[8,"RenderTarget"]]},\
"plrender_example_cubes":{"doc":"","t":"DRDRRDLLLLLLLLMFLLLLLLLMMFMMMLLLLLLLLLL","n":["CubePosition","LEVELS","Level","ROOT_SCALE","SCALE_LEVEL","Stack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color","fill_scene","fmt","from","from","from","into","into","into","level","level","main","object","parent","speed","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"plrender_example_cubes"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,5,11,1,5,11,1,1,1,1,0,1,5,11,1,5,11,1,5,11,0,5,11,1,1,5,11,1,5,11,1,5,11,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,[[[2,[1]],3,4],[[6,[5]]]],[[1,7],8],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10]],"c":[],"p":[[3,"Level"],[15,"slice"],[3,"Scene"],[3,"BuiltMesh"],[3,"CubePosition"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Stack"]]},\
"png":{"doc":"PNG encoder and decoder","t":"SNNEDNNNNEENNEEDEDENESNDENENNNDNNNNNSNNNNDNNDNNNNNNNNDNNNNDNNDNNDNNNNSNDNNDEDDNDNENNDLLLLLMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLMLMLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMMMMLLLLLLMMMMDRRRRRRLLRLLLLRRLLRLRRLFFRFRFRRRLLLLRRIDDDLLLLLLLLLLLLLLMLLLLKLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLMLLLLLLLLL","n":["ALPHA","AbsoluteColorimetric","Adaptive","AdaptiveFilterType","AnimationControl","AnimationControl","Avg","Background","Best","BitDepth","BlendOp","ChunkBegin","ChunkComplete","ColorType","Compression","DecodeOptions","Decoded","Decoder","DecodingError","Default","DisposeOp","EXPAND","Eight","Encoder","EncodingError","Fast","FilterType","Format","Format","Four","FrameControl","FrameControl","Grayscale","GrayscaleAlpha","Header","Huffman","IDENTITY","ImageData","ImageDataFlushed","ImageEnd","Indexed","Info","IoError","IoError","Limits","LimitsExceeded","LimitsExceeded","Meter","NoFilter","NonAdaptive","None","Nothing","One","OutputInfo","Over","Paeth","Parameter","Parameter","ParameterError","PartialChunk","Perceptual","PixelDimensions","PixelDimensions","Previous","Reader","RelativeColorimetric","Rgb","Rgba","Rle","STRIP_16","Saturation","ScaledFloat","Sixteen","Source","SourceChromaticities","SrgbRenderingIntent","StreamWriter","StreamingDecoder","Sub","Transformations","Two","Unit","Unspecified","Up","Writer","add_itxt_chunk","add_text_chunk","add_ztxt_chunk","all","animation_control","animation_control","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","blend_op","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","bytes","bytes_per_pixel","cause","cause","chrm_chunk","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_type","color_type","complement","compressed_latin1_text","compression","contains","default","default","default","default","default","default","default","default","default","delay_den","delay_num","difference","dispose_op","drop","drop","empty","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","extend","finish","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_control","frame_control","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_scaled","from_u8","from_u8","from_u8","from_u8","from_u8","from_u8","gama_chunk","green","hash","height","height","height","icc_profile","ignore_adler32","ignore_checksums","in_range","inc_seq_num","info","info","insert","interlaced","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_scaled","into_stream_writer","into_stream_writer_with_size","into_value","is_all","is_animated","is_empty","line_size","new","new","new","new","new","new_with_limits","new_with_options","new_with_options","next_frame","next_interlaced_row","next_row","normalize_to_color8","not","num_frames","num_plays","output_buffer_size","output_color_type","output_line_size","palette","partial_cmp","pixel_dims","raw_bytes","raw_row_length","raw_row_length_from_width","read_header_info","read_info","red","remove","reset","reset_frame_dimension","reset_frame_dimension","reset_frame_position","reset_frame_position","samples","sequence_number","set","set_adaptive_filter","set_adaptive_filter","set_adaptive_filter","set_animated","set_blend_op","set_blend_op","set_blend_op","set_color","set_compression","set_depth","set_dispose_op","set_dispose_op","set_dispose_op","set_filter","set_filter","set_filter","set_frame_delay","set_frame_delay","set_frame_delay","set_frame_dimension","set_frame_dimension","set_frame_position","set_frame_position","set_ignore_adler32","set_ignore_adler32","set_ignore_checksums","set_ignore_crc","set_ignore_crc","set_ignore_text_chunk","set_ignore_text_chunk","set_ignore_text_chunk","set_limits","set_palette","set_pixel_dims","set_sep_def_img","set_seq_num","set_source_chromaticities","set_source_gamma","set_srgb","set_transformations","set_trns","size","source_chromaticities","source_gamma","srgb","stream_writer","stream_writer_with_size","sub","sub_assign","symmetric_difference","text_metadata","to_be_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","toggle","trns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_latin1_text","union","unit","update","utf8_text","validate_sequence","white","width","width","width","with_size","write","write_chunk","write_header","write_image_data","write_text_chunk","x_offset","xppu","y_offset","yppu","ChunkType","IDAT","IEND","IHDR","PLTE","acTL","bKGD","borrow","borrow_mut","cHRM","clone","clone_into","eq","equivalent","fcTL","fdAT","fmt","from","gAMA","hash","iCCP","iTXt","into","is_critical","is_private","pHYs","reserved_set","sRGB","safe_to_copy","tEXt","tIME","tRNS","to_owned","try_from","try_into","type_id","zTXt","DECOMPRESSION_LIMIT","EncodableTextChunk","ITXtChunk","TEXtChunk","ZTXtChunk","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress_text","compress_text","compressed","decompress_text","decompress_text","decompress_text_with_limit","decompress_text_with_limit","encode","encode","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_text","get_text","into","into","into","keyword","keyword","keyword","language_tag","new","new","new","text","to_owned","to_owned","to_owned","translated_keyword","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"png"],[610,"png::chunk"],[647,"png::text_metadata"]],"d":["Expand paletted images to include an alpha channel. …","For images requiring preservation of absolute colorimetry, …","","The filtering method for preprocessing scanline data …","Animation control information","","","Clear buffer with the background color.","Higher compression level","Bit depth of the PNG file. Specifies the number of bits …","How pixels are written into the buffer.","","","Describes how a pixel is encoded.","The type and strength of applied compression.","Decoder configuration options","Result of the decoding process","PNG Decoder","Any kind of error during PNG decoding.","Default level","How to reset buffer of an animated png (APNG) at the end …","Expand paletted images to RGB; expand grayscale images of …","","PNG Encoder.","","Fast minimal compression","The byte level filter applied to scanlines to prepare them …","The input image was not a valid PNG.","","","Frame control information","","1 grayscale sample.","1 grayscale sample, then 1 alpha sample.","","","No transformation","Decoded raw image data.","The last of a consecutive chunk of IDAT was done. This is …","","1 sample for the palette index.","PNG info struct","An error in IO of the underlying reader.","","Limits on the resources the <code>Decoder</code> is allowed too use","The image would have required exceeding the limits …","","","","","Leave the buffer unchanged.","Nothing decoded yet","","Output info.","The new pixels are blended into the current state based on …","","An interface was used incorrectly.","","","","For images preferring good adaptation to the output device …","Pixel dimensions information","","Reset the buffer to the state before the current frame.","PNG reader (mostly high-level interface)","For images requiring colour appearance matching (relative …","1 red sample, 1 green sample, 1 blue sample.","1 red sample, 1 green sample, 1 blue sample, and finally, …","","Strip 16-bit samples to 8 bits","For images preferring preservation of saturation at the …","An unsigned integer scaled version of a floating point …","","Pixels overwrite the value at their position.","Chromaticities of the color space primaries","The rendering intent for an sRGB image.","Streaming PNG writer","PNG StreamingDecoder (low-level interface)","","Output transformations","","Physical unit of the pixel dimensions","","","PNG writer","Convenience function to add iTXt chunks to <code>Info</code> struct","Convenience function to add tEXt chunks to <code>Info</code> struct","Convenience function to add zTXt chunks to <code>Info</code> struct","Returns the set containing all flags.","Returns the frame control information of the image.","","","The chosen output bit depth.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the number of bits per pixel.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Type of frame area rendering for this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size needed to hold a decoded frame If the …","maximum number of bytes the decoder is allowed to …","Returns the number of bytes per pixel.","","","The contents of the image’s <code>cHRM</code> chunk, if present. …","Chunk types and functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How colors are stored in the image.","The chosen output color type.","Returns the complement of this set of flags.","zTXt field","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","Frame delay fraction denominator","Frame delay fraction numerator","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Type of frame area disposal to be done after rendering …","","","Returns an empty set of flags.","","","","","Encode this header to the writer.","","","","","","","","","","","","","","","","","","","","","","","","","Gets whether the value can be exactly converted in …","","Consume the stream writer with validation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame control information of the current frame","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Fully accurate construction from a value scaled as per …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Temporary solution until Rust provides a …","The contents of the image’s gAMA chunk, if present. …","","","Height of the following frame","","The pixel height of this frame.","The ICC profile for the image.","Return whether the decoder is set to ignore the Adler-32 …","Set the decoder to ignore and not verify the Adler-32 …","Gets whether the value is within the clamped range of this …","","Provides access to the inner <code>info</code> field","Get information on the image.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the accurate encoded value.","Turn this into a stream writer for image data.","Turn this into a stream writer with custom buffer size.","Get the unscaled value as a floating point.","Returns <code>true</code> if all flags are currently set.","Returns true if the image is an APNG image.","Returns <code>true</code> if no flags are currently stored.","The byte count of each scan line in the image.","Creates a new StreamingDecoder","Create a new decoder configuration with default limits.","","Slightly inaccurate scaling and quantization. Clamps the …","","Create a new decoder configuration with custom limits.","","Create a new decoder configuration with custom …","Decodes the next frame into <code>buf</code>.","Returns the next processed row of the image","Returns the next processed row of the image","Transform every input to 8bit grayscale or color.","Returns the complement of this set of flags.","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","Returns the number of bytes required to hold a …","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","The image’s <code>PLTE</code> chunk, if present; contains the RGB …","","","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced …","Read the PNG header and return the information contained …","Reads all meta data until the first IDAT chunk","","Removes the specified flags in-place.","Resets the StreamingDecoder","Set the frame dimension to occupy all the image, starting …","Set the frame dimension to occupy all the image, starting …","Set the frame position to (0, 0).","Set the frame position to (0, 0).","Returns the number of samples used per pixel encoded in …","Sequence number of the animation chunk, starting from 0","Inserts or removes the specified flags depending on the …","Set the adaptive filter type.","Set the adaptive filter type for the following frames.","Set the adaptive filter type for the next frame.","Specify that the image is animated.","Set the blend operation for every frame.","Set the blend operation for the following frames.","Set the blend operation for the following frames.","Set the color of the encoded image.","Set compression parameters.","Set the indicated depth of the image data.","Set the dispose operation for every frame.","Set the dispose operation for the following frames.","Set the dispose operation for the following frames.","Set the used filter type.","Set the used filter type for the following frames.","Set the used filter type for the next frame.","Set the fraction of time every frame is going to be …","Set the fraction of time the following frames are going to …","Set the fraction of time the following frames are going to …","Set the dimension of the following frames.","Set the dimension of the following frames.","Set the position of the following frames.","Set the position of the following frames.","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the …","Flag to ignore computing and verifying the Adler-32 …","Set whether to compute and verify the Adler-32 checksum …","When set, the decoder will not compute and verify the CRC …","","Set the decoder to ignore all text chunks while parsing.","Ignore text chunks while decoding.","Limit resource usage.","Sets the raw byte contents of the PLTE chunk. This method …","","Mark the first animated frame as a ‘separate default …","","Set the chromaticities for the source system’s display …","Set the display gamma of the source system on which the …","Mark the image data as conforming to the SRGB color space …","Set the allowed and performed transformations.","Sets the raw byte contents of the tRNS chunk. This method …","Size of the image, width then height.","Chromaticities of the source system. Set by both <code>cHRM</code> as …","Gamma of the source system. Set by both <code>gAMA</code> as well as to …","The rendering intent of an SRGB image.","Create a stream writer.","Create a stream writer with custom buffer size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Text chunks (tEXt/zTXt/iTXt) structs and functions","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","The image’s <code>tRNS</code> chunk, if present; contains the alpha …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tEXt field","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Either <em>Meter</em> or <em>Unspecified</em>","Low level StreamingDecoder interface.","iTXt field","Validate the written image sequence.","","Width of the following frame","","The pixel width of this frame.","A utility constructor for a default info with width and …","","Write a raw chunk of PNG data.","Start encoding by writing the header data.","Writes the next image data.","","X position at which to render the following frame","Pixels per unit, X axis","Y position at which to render the following frame","Pixels per unit, Y axis","","Image data","Image trailer","Image header","Palette","Animation control","Background colour","","","Source system’s pixel chromaticities","","","","","Frame control","Frame data","","Returns the argument unchanged.","Source system’s gamma value","","ICC profile chunk","UTF-8 textual data","Calls <code>U::from(self)</code>.","Returns true if the chunk is critical.","Returns true if the chunk is private.","Physical pixel dimensions","Checks whether the reserved bit of the chunk name is set. …","sRGB color space chunk","Returns true if the chunk is safe to copy if unknown.","Latin-1 uncompressed textual data","Image last-modification time","Transparency","","","","","Latin-1 compressed textual data","Default decompression limit for compressed text chunks.","A generalized text chunk trait","Struct encoding an iTXt chunk","Struct representing a tEXt chunk","Struct representing a zTXt chunk","","","","","","","","","","","","","Compresses the inner text, mutating its own state.","Compresses the inner text, mutating its own state.","Indicates whether the text will be (or was) compressed in …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Decompresses the inner text, mutating its own state. Can …","Encode text chunk as Vec to a <code>Write</code>","Encodes TEXtChunk to a Writer. The keyword and text are …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decompresses the inner text, and returns it as a <code>String</code>. …","Decompresses the inner text, and returns it as a <code>String</code>. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keyword field of the tEXt chunk. Needs to be between 1-79 …","Keyword field of the tEXt chunk. Needs to be between 1-79 …","The keyword field. This needs to be between 1-79 bytes …","A hyphen separated list of languages that the keyword is …","Constructs a new TEXtChunk. Not sure whether it should …","Creates a new ZTXt chunk.","Constructs a new iTXt chunk. Leaves all but keyword and …","Text field of tEXt chunk. Can be at most 2GB.","","","","Translated keyword. This is UTF-8 encoded.","","","","","","","","",""],"i":[6,25,29,0,0,41,28,19,22,0,0,41,41,0,0,0,0,0,0,22,0,6,16,0,0,22,0,13,4,16,0,41,15,15,41,22,6,41,41,41,15,0,13,4,0,13,4,18,28,29,19,41,16,0,20,28,13,4,0,41,25,0,41,19,0,25,15,15,22,6,25,0,16,20,0,0,0,0,28,0,16,0,18,28,0,2,2,2,6,7,7,7,12,6,6,6,6,6,7,6,6,21,24,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,12,27,7,13,4,7,0,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,6,7,12,6,7,7,6,32,21,22,7,6,26,27,28,29,21,21,6,21,33,34,6,21,8,24,25,7,15,16,18,19,20,23,24,25,6,12,28,29,15,16,18,19,20,23,24,25,6,12,28,29,23,6,33,34,34,15,16,17,18,19,19,20,20,21,8,22,23,24,25,7,6,6,6,6,6,40,40,41,13,13,12,27,4,4,28,29,7,7,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,13,26,12,27,4,4,28,29,6,6,6,6,23,15,16,18,19,20,28,7,24,6,21,7,12,7,32,47,23,21,32,48,6,7,6,6,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,23,33,33,23,6,7,6,12,32,47,2,23,24,47,32,47,48,48,48,6,6,8,8,48,48,48,7,6,7,7,7,7,47,47,24,6,32,33,34,33,34,15,21,6,2,33,34,2,2,33,34,2,2,2,2,33,34,2,33,34,2,33,34,33,34,33,34,32,26,26,32,26,32,47,26,47,2,2,2,21,2,2,2,47,2,7,7,7,7,33,33,6,6,6,0,24,15,16,17,18,19,20,21,8,22,23,24,25,7,6,26,27,28,29,19,20,40,13,4,6,7,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,32,47,48,2,33,34,15,16,17,18,19,20,21,8,22,23,24,25,7,6,40,41,13,26,12,27,4,28,29,7,6,17,32,7,2,24,21,7,12,7,34,33,2,33,33,21,17,21,17,0,0,0,0,0,0,0,56,56,0,56,56,56,56,0,0,56,56,0,56,0,0,56,0,0,0,0,0,0,0,0,0,56,56,56,56,0,0,0,0,0,0,58,59,60,58,59,60,58,59,60,58,59,60,59,60,60,59,60,59,60,57,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,59,60,58,59,60,58,59,60,60,58,59,60,58,58,59,60,60,58,59,60,58,59,60,58,59,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[[2,[1]],3,3],[[5,[4]]]],[[],6],[7,[[9,[8]]]],0,0,0,[[6,6],6],[[6,6]],[[6,6],6],[[6,6]],[6,10],[7,11],[[6,6],6],[[6,6]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,11],0,[7,11],[13,[[9,[14]]]],[4,[[9,[14]]]],0,0,[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[8,8],[22,22],[23,23],[24,24],[25,25],[7,7],[6,6],[26,26],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],30],0,0,[6,6],0,0,[[6,6],31],[[],32],[[],21],[[],22],[[],7],[[],6],[[],26],[[],27],[[],28],[[],29],0,0,[[6,6],6],0,[[[33,[1]]]],[[[34,[1]]]],[[],6],[[21,1],[[5,[4]]]],[[8,1],[[5,[4]]]],[[24,1],[[5,[4]]]],[[25,1],[[5,[4]]]],[[7,1],[[5,[4]]]],[[15,15],31],[[16,16],31],[[18,18],31],[[19,19],31],[[20,20],31],[[23,23],31],[[24,24],31],[[25,25],31],[[6,6],31],[[12,12],31],[[28,28],31],[[29,29],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[35,31],[[6,36]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[34,[1]]],37],[[15,38],39],[[16,38],39],[[17,38],39],[[18,38],39],[[19,38],39],[[19,38],39],[[20,38],39],[[20,38],39],[[21,38],39],[[8,38],39],[[22,38],39],[[23,38],39],[[24,38],39],[[25,38],39],[[7,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[6,38],39],[[40,38],39],[[40,38],39],[[41,38],39],[[13,38],39],[[13,38],[[5,[42]]]],[[12,38],39],[[27,38],39],[[4,38],39],[[4,38],[[5,[42]]]],[[28,38],39],[[29,38],39],[7,[[9,[21]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,13],[[]],[[]],[[]],[[]],[[]],[43,4],[[]],[[]],[10,[[9,[6]]]],[10,6],[10,6],[36,6],[10,23],[44,[[9,[15]]]],[44,[[9,[16]]]],[44,[[9,[18]]]],[44,[[9,[19]]]],[44,[[9,[20]]]],[44,[[9,[28]]]],0,0,[[6,45]],0,0,0,0,[32,31],[[[47,[46]],31]],[35,31],[[21,10]],[32,[[9,[7]]]],[[[48,[46]]],7],[[6,6]],0,[[6,6],6],[[6,6],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,10],[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[23,35],[6,31],[7,31],[6,31],0,[[],32],[46,[[47,[46]]]],[[1,10,10],[[2,[1]]]],[35,23],[[],24],[[46,27],[[47,[46]]]],[26,32],[[46,26],[[47,[46]]]],[[[48,[46]],[49,[44]]],[[5,[12,13]]]],[[[48,[46]]],[[5,[[9,[0]],13]]]],[[[48,[46]]],[[5,[[9,[0]],13]]]],[[],6],[6,6],0,0,[[[48,[46]]],11],[[[48,[46]]]],[[[48,[46]],10],11],0,[[6,6],[[9,[30]]]],0,[7,11],[7,11],[[7,10],11],[[[47,[46]]],[[5,[7,13]]]],[[[47,[46]]],[[5,[[48,[46]],13]]]],0,[[6,6]],[32],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[[[33,[1]]],[[5,[4]]]],[[[34,[1]]],[[5,[4]]]],[15,11],0,[[6,6,31]],[[[2,[1]],29]],[[[33,[1]],29]],[[[34,[1]],29]],[[[2,[1]],10,10],[[5,[4]]]],[[[2,[1]],20],[[5,[4]]]],[[[33,[1]],20],[[5,[4]]]],[[[34,[1]],20],[[5,[4]]]],[[[2,[1]],15]],[[[2,[1]],22]],[[[2,[1]],16]],[[[2,[1]],19],[[5,[4]]]],[[[33,[1]],19],[[5,[4]]]],[[[34,[1]],19],[[5,[4]]]],[[[2,[1]],28]],[[[33,[1]],28]],[[[34,[1]],28]],[[[2,[1]],50,50],[[5,[4]]]],[[[33,[1]],50,50],[[5,[4]]]],[[[34,[1]],50,50],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[[33,[1]],10,10],[[5,[4]]]],[[[34,[1]],10,10],[[5,[4]]]],[[32,31],31],[[26,31]],[[26,31]],[[32,31]],[[26,31]],[[32,31]],[[[47,[46]],31]],[[26,31]],[[[47,[46]],27]],[[[2,[1]],[52,[[51,[[49,[44]]]]]]]],[[[2,[1]],[9,[17]]]],[[[2,[1]],31],[[5,[4]]]],[[21,10]],[[[2,[1]],24]],[[[2,[1]],23]],[[[2,[1]],25]],[[[47,[46]],6]],[[[2,[1]],[52,[[51,[[49,[44]]]]]]]],[7],0,0,0,[[[33,[1]]],[[5,[[34,[1]],4]]]],[[[33,[1]],11],[[5,[[34,[1]],4]]]],[[6,6],6],[[6,6]],[[6,6],6],0,[24,[[53,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[6,6]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],0,[[6,6],6],0,[[32,[49,[44]],[55,[44]]],[[5,[13]]]],0,[[[2,[1]],31]],0,0,0,0,[[10,10],7],[[[34,[1]],[49,[44]]],[[37,[11]]]],[[[33,[1]],56,[49,[44]]],[[5,[4]]]],[[[2,[1]]],[[5,[[33,[1]],4]]]],[[[33,[1]],[49,[44]]],[[5,[4]]]],[[[33,[1]],57],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[56,56],[[]],[[56,56],31],[[],31],0,0,[[56,38],39],[[]],0,[[56,45]],0,0,[[]],[56,31],[56,31],0,[56,31],0,[56,31],0,0,0,[[]],[[],5],[[],5],[[],54],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[59,59],[60,60],[[]],[[]],[[]],[59,[[5,[4]]]],[60,[[5,[4]]]],0,[59,[[5,[13]]]],[60,[[5,[13]]]],[[59,11],[[5,[13]]]],[[60,11],[[5,[13]]]],[1,[[5,[4]]]],[[58,1],[[5,[4]]]],[[59,1],[[5,[4]]]],[[60,1],[[5,[4]]]],[[58,58],31],[[59,59],31],[[60,60],31],[[],31],[[],31],[[],31],[[58,38],39],[[59,38],39],[[60,38],39],[[]],[[]],[[]],[59,[[5,[3,13]]]],[60,[[5,[3,13]]]],[[]],[[]],[[]],0,0,0,0,[[[52,[3]],[52,[3]]],58],[[[52,[3]],[52,[3]]],59],[[[52,[3]],[52,[3]]],60],0,[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],54],[[],54],[[],54]],"c":[35,68],"p":[[8,"Write"],[3,"Encoder"],[3,"String"],[4,"EncodingError"],[4,"Result"],[3,"Transformations"],[3,"Info"],[3,"AnimationControl"],[4,"Option"],[15,"u32"],[15,"usize"],[3,"OutputInfo"],[4,"DecodingError"],[8,"Error"],[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[3,"FrameControl"],[4,"Compression"],[3,"ScaledFloat"],[3,"SourceChromaticities"],[4,"SrgbRenderingIntent"],[3,"DecodeOptions"],[3,"Limits"],[4,"FilterType"],[4,"AdaptiveFilterType"],[4,"Ordering"],[15,"bool"],[3,"StreamingDecoder"],[3,"Writer"],[3,"StreamWriter"],[15,"f32"],[8,"IntoIterator"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"ParameterError"],[4,"Decoded"],[3,"Error"],[3,"Error"],[15,"u8"],[8,"Hasher"],[8,"Read"],[3,"Decoder"],[3,"Reader"],[15,"slice"],[15,"u16"],[4,"Cow"],[8,"Into"],[15,"array"],[3,"TypeId"],[3,"Vec"],[3,"ChunkType"],[8,"EncodableTextChunk"],[3,"TEXtChunk"],[3,"ZTXtChunk"],[3,"ITXtChunk"]]},\
"pollster":{"doc":"Pollster","t":"IFL","n":["FutureExt","block_on","block_on"],"q":[[0,"pollster"]],"d":["An extension trait that allows blocking on a future in …","Block the thread until the future is ready.","Block the thread until the future is ready."],"i":[0,0,3],"f":[0,[1],[2]],"c":[],"p":[[8,"Future"],[8,"Sized"],[8,"FutureExt"]]},\
"pp_rs":{"doc":"","t":"AANNNDGGELLLLLLLFFLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNDNDNNNNNDNNNNNNNNNNDNNNNNNNNNNNNNNNDNEENNNNNNNNNNNNNNNDENNNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["pp","token","Continue","Error","Finished","Preprocessor","PreprocessorItem","Step","StepExit","add_define","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","convert_lexer_token","convert_lexer_token_to_step","eq","fmt","from","from","from","into","into","into_iter","new","next","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AddAssign","Ampersand","AndAssign","Bang","Caret","Colon","Comma","Decrement","DefineRedefined","DivAssign","DivisionByZero","Dot","DuplicateParameter","ElifAfterElse","ElifOutsideOfBlock","ElseOutsideOfBlock","EndifOutsideOfBlock","Equal","EqualEqual","ErrorDirective","Extension","Extension","Float","Float","FloatParsingError","GreaterEqual","Ident","Increment","Integer","Integer","IntegerOverflow","LeftAngle","LeftBrace","LeftBracket","LeftParen","LeftShift","LeftShiftAssign","LessEqual","LineOverflow","Location","LogicalAnd","LogicalOr","LogicalXor","MacroNotDefined","Minus","ModAssign","MoreThanOneElse","MulAssign","NotEqual","NotSupported16BitLiteral","NotSupported64BitLiteral","OrAssign","Percent","Pipe","Plus","Pragma","Pragma","PreprocessorError","Punct","Punct","Question","RecursionLimitReached","RemainderByZero","RightAngle","RightBrace","RightBracket","RightParen","RightShift","RightShiftAssign","Semicolon","Slash","Star","SubAssign","Tilde","Token","TokenValue","TooFewDefineArguments","TooManyDefineArguments","UnexpectedCharacter","UnexpectedEndOfInput","UnexpectedHash","UnexpectedNewLine","UnexpectedToken","UnfinishedBlock","UnknownDirective","Version","Version","XorAssign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","has_comments_before","has_non_directive_before","into","into","into","into","into","into","into","into","into","into","is_first_directive","location","signed","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokens","tokens","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","width","width"],"q":[[0,"pp_rs"],[2,"pp_rs::pp"],[35,"pp_rs::token"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Byte offset into the source string where the first char …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Byte offset into the source string where the first char …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,0,0,0,0,1,1,4,1,4,4,4,0,0,4,4,6,1,4,1,4,1,1,1,4,1,4,1,4,1,4,13,13,13,13,13,13,13,13,14,13,14,13,14,14,14,14,14,13,13,14,0,20,0,20,14,13,20,13,0,20,14,13,13,13,13,13,13,13,14,0,13,13,13,14,13,13,14,13,13,14,14,13,13,13,13,0,20,0,0,20,13,14,14,13,13,13,13,13,13,13,13,13,13,13,0,0,14,14,14,14,14,14,14,14,14,0,20,13,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,12,12,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,17,18,12,13,14,15,16,17,18,19,20,5,17,5,15,12,12,13,14,15,16,17,18,19,20,5,17,18,19,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,12,13,14,15,16,17,18,19,20,5,15,16,5,15,16],"f":[0,0,0,0,0,0,0,0,0,[[1,2,2],3],[[]],[[]],[[]],[[]],[4,4],[[]],0,0,[[4,4],7],[[4,8],9],[4,6],[[]],[[]],[[]],[[]],[[]],[2,1],[1,10],[[]],[[],3],[[],3],[[],3],[[],3],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,[[12,12],7],[[13,13],7],[[14,14],7],[[15,15],7],[[16,16],7],[[17,17],7],[[18,18],7],[[19,19],7],[[20,20],7],[[5,5],7],[[12,8],9],[[13,8],9],[[14,8],9],[[15,8],9],[[16,8],9],[[17,8],9],[[18,8],9],[[19,8],9],[[20,8],9],[[5,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0],"c":[],"p":[[3,"Preprocessor"],[15,"str"],[4,"Result"],[4,"StepExit"],[3,"Token"],[6,"Step"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"TypeId"],[3,"Location"],[4,"Punct"],[4,"PreprocessorError"],[3,"Integer"],[3,"Float"],[3,"Version"],[3,"Extension"],[3,"Pragma"],[4,"TokenValue"]]},\
"ppv_lite86":{"doc":"","t":"IIIIIIIIIIQIIIIIIIIIIIIIKKOOOOKKKAKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKIQIQIQIQIQIQIQIQIQIQKLLKKKLLCCCKKKDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGDGGDGGGLLLLLLLTDDLLLLLLLLLLLLL","n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","dispatch_light512","extract","extract","from_lanes","generic","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","G0","G1","GenericMachine","add","add","add","add_assign","add_assign","add_assign","andnot","andnot","andnot","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bswap","bswap","bswap","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","eq","eq","eq","extract","extract","extract","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_lanes","from_lanes","from_lanes","from_lanes","insert","insert","insert","instance","into","into","into","into","into","into","into","into","into","new128","new128","not","not","not","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right8","rotate_each_word_right8","rotate_each_word_right8","shuffle1230","shuffle1230","shuffle2301","shuffle2301","shuffle3012","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","split128","split128","swap1","swap1","swap1","swap16","swap16","swap16","swap2","swap2","swap2","swap32","swap32","swap32","swap4","swap4","swap4","swap64","swap64","swap64","swap8","swap8","swap8","to_lanes","to_lanes","to_lanes","to_lanes","to_scalars","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128x1_generic","u128x2_generic","u128x4_generic","u32x4_generic","u32x4x2_generic","u32x4x4_generic","u64x2_generic","u64x2x2_generic","u64x2x4_generic","u64x4_generic","unpack","unpack","unpack","unsafe_read_be","unsafe_read_be","unsafe_read_le","unsafe_read_le","vec128_storage","vec256_storage","vec512_storage","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_be","write_be","write_le","write_le"],"q":[[0,"ppv_lite86"],[100,"ppv_lite86::generic"]],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","","","","","","","Build a multi-lane vector from individual lanes.","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,29,30,7,0,29,30,31,31,31,31,31,32,32,32,32,32,32,33,32,32,34,34,34,35,35,35,36,36,36,36,36,36,36,7,37,38,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,6,31,31,39,4,4,31,31,0,0,0,40,4,4,0,0,0,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,11,12,13,14,8,9,10,15,16,11,12,13,14,8,9,10,15,16,8,9,10,11,12,13,14,8,9,10,15,16,11,12,13,11,12,13,8,9,10,18,8,9,8,9,10,11,11,11,11,11,11,12,12,13,14,8,9,10,15,16,18,8,9,10,18,8,9,14,11,12,13,14,8,9,10,15,16,12,13,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,9,10,8,9,10,8,9,10,18,8,18,8,18,8,8,8,8,12,13,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,8,9,10,18,8,9,10,24,11,12,13,14,8,9,10,15,16,11,12,13,14,8,9,10,15,16,11,12,13,14,8,9,10,15,16,0,0,0,0,0,0,0,0,0,0,8,9,10,8,9,8,9,0,0,0,11,12,13,14,8,9,10,15,16,8,9,8,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,[1],[1],[[]],0,[1],[1],[[]],[[[3,[2]]],4],[[[3,[2]]],4],[[[3,[2]]],4],[[[3,[2]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5,5,5]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],6],[[],6],[[]],[[[3,[2]]]],[[[3,[2]]]],[[],7],[[],7],0,0,0,[[]],[[[3,[2]]]],[[[3,[2]]]],0,0,0,[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[8,8]],[[9,9]],[[10,10]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[8,8],[9,9],[10,10],[15,15],[16,16],[[],11],[[],12],[[],13],[[11,11],17],[[12,12],17],[[13,13],17],[[8,8],17],[[9,9],17],[[10,10],17],[[18,1],19],[[8,1],1],[[9,1],19],[[8,20],21],[[9,20],21],[[10,20],21],[8,11],[[[22,[1]]],11],[9,11],[[[22,[19]]],11],[[]],[10,11],[[[22,[19]]],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[19]]],18],[[[22,[1]]],8],[[[22,[19]]],9],[[[22,[23]]],10],[[18,19,1],18],[[8,1,1],8],[[9,19,1],9],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[11]]],12],[[[22,[11]]],13],[8],[9],[10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[18,18],[8,8],[18,18],[8,8],[18,18],[8,8],[8,8],[8,8],[8,8],[12,[[22,[11]]]],[13,[[22,[11]]]],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[8,8],[9,9],[10,10],[18,[[22,[19]]]],[8,[[22,[1]]]],[9,[[22,[19]]]],[10,[[22,[23]]]],[24,[[22,[1]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,[11,8],[11,9],[11,10],[[[3,[2]]],8],[[[3,[2]]],9],[[[3,[2]]],8],[[[3,[2]]],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,[3,[2]]]],[[9,[3,[2]]]],[[8,[3,[2]]]],[[9,[3,[2]]]]],"c":[],"p":[[15,"u32"],[15,"u8"],[15,"slice"],[8,"StoreBytes"],[8,"Sized"],[8,"Store"],[8,"MultiLane"],[3,"u32x4_generic"],[3,"u64x2_generic"],[3,"u128x1_generic"],[19,"vec128_storage"],[3,"vec256_storage"],[3,"vec512_storage"],[3,"GenericMachine"],[3,"G0"],[3,"G1"],[15,"bool"],[6,"u64x4_generic"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"array"],[15,"u128"],[6,"u32x4x4_generic"],[4,"Result"],[3,"TypeId"],[8,"AndNot"],[8,"BSwap"],[8,"Vec2"],[8,"Vec4"],[8,"Machine"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"Vector"],[8,"Vec4Ext"],[8,"UnsafeFrom"],[8,"VZip"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[231,"proc_macro2::extra"],[246,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,12],15],[[12,[0,[16,[18,[17]]]]],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[25,7],[8,7],[[]],[26,6],[[]],[5,8],[1,8],[[]],[9,8],[12,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[37]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[39,[38]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[41,5],[41,5],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[3,5],[3,5],[6,26],[38,5],[38,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],40],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],40]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"profiling":{"doc":"","t":"OOOOOO","n":["finish_frame","finish_frame","register_thread","register_thread","scope","scope"],"q":[[0,"profiling"]],"d":["Finishes the frame. This isn’t strictly necessary for …","Finishes the frame. This isn’t strictly necessary for …","Registers a thread with the profiler API(s). This is …","Registers a thread with the profiler API(s). This is …","Opens a scope. Two variants:","Opens a scope. Two variants:"],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"rand":{"doc":"Utilities for random number generation","t":"SIDISIIQILLLALLKLLLLLLLKLLLLLLLLLLLKKAFLLALLLLLALLFLKLLKLLLLNDDEDDIINNNDDDDNDEDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLAIIIQDDDDDIQKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCAIDLLLLLLLLLLCCCCCCCCCCCDDDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLQIDILLKLKLLKKLKKLLALLLLKKLLLLLEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLL","n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from","from_entropy","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","inner","into","new","next_u32","next_u64","prelude","random","raw_os_error","read","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","source","take_inner","thread_rng","to_string","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","vzip","AllWeightsZero","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","DistString","Distribution","InvalidProbability","InvalidWeight","NoItem","Open01","OpenClosed01","Slice","Standard","TooMany","Uniform","WeightedError","WeightedIndex","append_string","append_string","append_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","new","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","sample_string","sample_string","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","update_weights","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","WeightedError","WeightedIndex","alias_method","Weight","WeightedIndex","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","vzip","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","StdRng","ThreadRng","random","thread_rng","OsRng","StdRng","ThreadRng","adapter","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","equivalent","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_rng","from_seed","into","into","into","mock","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ReadError","ReadRng","ReseedingRng","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reseed","source","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","StepRng","borrow","borrow_mut","clone","clone_into","eq","equivalent","fill_bytes","fmt","from","into","new","next_u32","next_u64","to_owned","try_fill_bytes","try_from","try_into","type_id","vzip","Item","IteratorRandom","SliceChooseIter","SliceRandom","borrow","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","fmt","from","index","into","into_iter","len","next","partial_shuffle","shuffle","size_hint","try_from","try_into","type_id","vzip","IndexVec","IndexVecIntoIter","IndexVecIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","index","into","into","into","into_iter","into_iter","into_iter","into_vec","is_empty","iter","len","next","next","sample","sample_weighted","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"rand"],[60,"rand::distributions"],[330,"rand::distributions::uniform"],[475,"rand::distributions::weighted"],[478,"rand::distributions::weighted::alias_method"],[490,"rand::prelude"],[501,"rand::rngs"],[563,"rand::rngs::adapter"],[611,"rand::rngs::mock"],[631,"rand::seq"],[661,"rand::seq::index"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Generates a random value using the thread-local random …","Extract the raw OS error code (if this error came from the …","","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","","Unwrap the inner error (<code>std</code> only)","Retrieve the lazily-initialized thread-local random number …","","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","All items in the provided weight collection are zero.","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","<code>String</code> sampler","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Too many weights are provided (length greater than <code>u32::MAX</code>…","Sample values uniformly between two bounds.","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","Append <code>len</code> random chars to <code>string</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","Creates a new a <code>WeightedIndex</code> <code>Distribution</code> using the values","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","Generate a <code>String</code> of <code>len</code> random chars","Generate a <code>String</code> of <code>len</code> random chars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","Update a subset of weights, without changing the number of …","","","","","","","","","","","","","Weighted index sampling","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A random number generator that retrieves randomness from …","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","Wrappers / adapters forming RNGs","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mock random number generator","","","","","","","","","","","","","","","","","","","","","","","","","<code>ReadRng</code> error type","An RNG that reads random bytes straight from any type …","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ReadRng</code> from a <code>Read</code>.","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …","","","","","Reseed the internal PRNG.","","","","","","","","","","","","","","","","","","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","An iterator over multiple slice elements.","Extension trait on slices, providing random mutation and …","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","Returns the argument unchanged.","Low-level API for sampling indices","Calls <code>U::from(self)</code>.","","","","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place.","","","","","","A vector of indices.","Return type of <code>IndexVec::into_iter</code>.","Return type of <code>IndexVec::iter</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Return the value at the given <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into an iterator over the indices as a sequence of …","","","Return result as a <code>Vec&lt;usize&gt;</code>. Conversion may or may not …","Returns <code>true</code> if the length is 0.","Iterate over the indices as a sequence of <code>usize</code> values","Returns the number of indices","","","Randomly sample exactly <code>amount</code> distinct indices from …","Randomly sample exactly <code>amount</code> distinct indices from …","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,0,0,83,0,1,1,1,0,30,30,12,1,1,1,1,1,83,83,83,30,30,30,30,30,30,30,30,1,1,1,12,12,0,0,1,12,0,30,30,30,30,83,0,1,1,0,1,4,30,30,12,1,1,1,1,42,0,0,0,0,0,0,0,35,42,42,0,0,0,0,42,0,0,0,94,32,33,34,35,27,47,36,37,32,39,41,42,43,33,34,35,27,47,36,37,32,39,41,42,43,33,34,35,36,37,32,39,41,42,43,33,34,35,36,37,32,39,41,42,43,33,34,35,41,42,43,35,42,34,35,35,27,47,36,37,32,39,41,42,42,43,33,34,35,27,47,36,37,32,39,41,42,43,43,43,33,34,34,35,27,47,36,37,32,39,41,42,43,33,27,26,26,34,39,41,27,26,34,47,36,36,37,37,32,39,41,43,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,26,26,94,94,27,34,35,36,37,32,39,41,42,43,33,35,42,34,35,27,47,36,37,32,39,41,42,43,33,34,35,27,47,36,37,32,39,41,42,43,33,34,35,27,47,36,37,32,39,41,42,43,33,0,41,34,35,27,47,36,37,32,39,41,42,43,33,0,0,0,0,15,0,0,0,0,0,0,95,75,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,73,71,72,73,74,71,72,73,74,71,72,73,74,16,95,43,71,71,71,71,71,71,71,71,71,71,71,71,72,73,73,74,95,43,71,71,71,71,71,71,71,71,71,71,71,71,72,73,73,74,95,71,71,71,71,71,71,71,71,71,71,71,71,72,73,73,74,16,95,71,71,71,71,71,71,71,71,71,71,71,71,73,73,95,71,71,71,71,71,71,71,71,71,71,71,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,0,0,0,0,0,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,81,28,80,81,28,80,81,28,80,81,28,80,81,28,80,28,81,81,80,81,28,80,81,28,80,81,28,81,81,80,81,28,0,80,81,28,80,81,28,80,81,28,80,81,28,80,81,28,80,81,28,80,81,28,80,81,28,0,0,0,84,86,87,84,86,87,84,84,84,86,84,86,87,87,84,86,87,84,86,87,84,86,84,86,84,86,84,84,87,84,87,86,84,86,87,84,86,87,84,86,87,84,86,87,84,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,96,0,0,0,89,89,96,97,96,97,97,96,96,97,96,96,89,89,0,89,89,89,89,96,96,89,89,89,89,89,0,0,0,91,93,92,91,93,92,91,92,91,92,91,91,93,92,91,91,91,93,92,91,91,93,92,91,93,92,91,91,91,91,93,92,0,0,93,92,91,92,91,93,92,91,93,92,91,93,92,91,93,92],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],0,[[[0,[4,5]]]],[[[0,[4,5]]]],[[[7,[6]]]],[[1,8],[[10,[9]]]],[[1,8],[[10,[9]]]],[11,1],[2,1],[[]],[[]],[12,[[10,[1]]]],[[]],[[]],[[]],[13,14],[13,14],[[[16,[15]]],15],[[[16,[15]]],15],[[17,17],14],[[17,17],14],[1,18],[[]],[[[21,[[20,[18,19]]]]],1],[[],17],[[],22],0,[[]],[1,[[3,[23]]]],[[12,[7,[6]]],[[10,[24,25]]]],0,[26],[26],[[5,26],[[27,[26,5]]]],[[5,26],[[27,[26,5]]]],[22],0,[1,[[3,[18]]]],[1,[[20,[18,19]]]],[[],28],[[],29],[[[0,[30,5]]],[[10,[1]]]],[[[0,[4,5]]],[[10,[1]]]],[[[0,[4,5]]],[[10,[1]]]],[[[7,[6]]],[[10,[1]]]],[[],10],[[],10],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[30,5]],29,24]],[[32,[0,[30,5]],29,24]],[[33,[0,[30,5]],29,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[37,37],[32,32],[[[39,[38]]],[[39,[38]]]],[[[41,[[0,[38,15,40]]]]],[[41,[[0,[38,15,40]]]]]],[42,42],[[[43,[[0,[38,15]]]]],[[43,[[0,[38,15]]]]]],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,34],14],[[35,35],14],[[[41,[[0,[44,15,40]]]],[41,[[0,[44,15,40]]]]],14],[[42,42],14],[[[43,[[0,[44,15]]]],[43,[[0,[44,15]]]]],14],[[],14],[[],14],[[34,8],45],[[35,8],45],[[35,8],45],[[[27,[46,46,46]],8],45],[[[47,[46,46,46,46]],8],45],[[36,8],45],[[37,8],45],[[32,8],45],[[[39,[46]],8],45],[[[41,[[0,[46,15,40]]]],8],45],[[42,8],45],[[42,8],45],[[[43,[[0,[46,15]]]],8],45],[[33,8],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[15]]],[[43,[15]]]],[[[49,[15]]],[[43,[15]]]],[[]],[[]],[[17,17],[[10,[34,35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,50],[[47,[5,50]]]],[[5,50],[[47,[5,50]]]],[13,[[10,[34,35]]]],[7,[[10,[39,0]]]],[51,[[10,[[41,[[0,[[52,[[0,[[52,[[0,[[52,[[0,[52,38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],42]]]],[[[27,[26,30]]],3],[[[0,[30,5]]]],[[34,[0,[30,5]]],14],[[[47,[26,50]],[0,[30,5]]]],[[36,[0,[30,5]]],54],[[36,[0,[30,5]]],13],[[37,[0,[30,5]]],13],[[37,[0,[30,5]]],54],[[32,[0,[30,5]]],6],[[39,[0,[30,5]]]],[[[41,[[0,[15,40]]]],[0,[30,5]]],24],[[[43,[15]],[0,[30,5]]],15],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],54],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],56],[[33,[0,[30,5]]],57],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],58],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],24],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],59],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],13],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],60],[[33,[0,[30,5]]],61],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],23],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],6],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],22],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],14],[[33,[0,[30,5]]],17],[[33,[0,[30,5]]]],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],62],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],63],[[33,[0,[30,5]]],64],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],2],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],65],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],66],[[33,[0,[30,5]]],3],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],67],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],68],[[33,[0,[30,5]]]],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],55],[[33,[0,[30,5]]],69],[[33,[0,[30,5]]],55],[[5,30],[[27,[5,30]]]],[[5,30],[[27,[5,30]]]],[[[0,[30,5]],24],29],[[[0,[30,5]],24],29],[[[27,[26,30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[[41,[[0,[[52,[[0,[[52,[[0,[[52,[[0,[52,70,38,53]],[0,[15,40]]]],[70,[[0,[52,70,38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],[70,[[0,[[52,[[0,[52,70,38,53]],[0,[15,40]]]],[70,[[0,[52,70,38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],[70,[[0,[[52,[[0,[[52,[[0,[52,70,38,53]],[0,[15,40]]]],[70,[[0,[52,70,38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],[70,[[0,[[52,[[0,[52,70,38,53]],[0,[15,40]]]],[70,[[0,[52,70,38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],38,53]],[0,[15,40]]]],7],[[10,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[71,[38]]],[[71,[38]]]],[72,72],[[[73,[38]]],[[73,[38]]]],[74,74],[[]],[[]],[[]],[[]],[[[71,[44]],[71,[44]]],14],[[[73,[44]],[73,[44]]],14],[[[71,[46]],8],45],[[72,8],45],[[[73,[46]],8],45],[[74,8],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[[0,[75,5]],[0,[75,5]]]],[[[0,[[75,[15]],5]],[0,[[75,[15]],5]]],[[43,[15]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[57]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[65]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[62]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[67]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[6]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[23]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[64]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[17]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[60]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[58]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[24]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[22]]]],[[[0,[75,5]],[0,[75,5]]],72],[[[0,[75,5]],[0,[75,5]]],[[73,[54]]]],[[[0,[75,5]],[0,[75,5]]],[[73,[13]]]],[[[0,[75,5]],[0,[75,5]]],74],[[[0,[75,5]],[0,[75,5]]]],[[[0,[[75,[15]],5]],[0,[[75,[15]],5]]],[[43,[15]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[65]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[62]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[22]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[60]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[24]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[57]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[58]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[17]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[64]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[23]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[6]]]],[[[0,[75,5]],[0,[75,5]]],[[71,[67]]]],[[[0,[75,5]],[0,[75,5]]],72],[[[0,[75,5]],[0,[75,5]]],[[73,[13]]]],[[[0,[75,5]],[0,[75,5]]],[[73,[54]]]],[[[0,[75,5]],[0,[75,5]]],74],[[[0,[30,5]]]],[[[71,[6]],[0,[30,5]]]],[[[71,[58]],[0,[30,5]]]],[[[71,[24]],[0,[30,5]]]],[[[71,[22]],[0,[30,5]]]],[[[71,[65]],[0,[30,5]]]],[[[71,[62]],[0,[30,5]]]],[[[71,[60]],[0,[30,5]]]],[[[71,[67]],[0,[30,5]]]],[[[71,[23]],[0,[30,5]]]],[[[71,[57]],[0,[30,5]]]],[[[71,[17]],[0,[30,5]]]],[[[71,[64]],[0,[30,5]]]],[[72,[0,[30,5]]]],[[[73,[13]],[0,[30,5]]]],[[[73,[54]],[0,[30,5]]]],[[74,[0,[30,5]]],76],[[[0,[12,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[[0,[75,5]],[0,[75,5]],[0,[30,5]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[[78,[[0,[46,77]]]],8],45],[[]],[[]],[[[79,[77]]],[[10,[[78,[77]],42]]]],[[],10],[[],10],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[80,80],[81,81],[28,28],[[]],[[]],[[]],[[],80],[[],28],[[81,81],14],[[],14],[[80,[7,[6]]]],[[81,[7,[6]]]],[[28,[7,[6]]]],[[80,8],[[10,[9]]]],[[81,8],45],[[28,8],45],[[]],[[]],[[]],[12,[[10,[81,1]]]],[[],81],[[]],[[]],[[]],0,[80,17],[81,17],[28,17],[80,22],[81,22],[28,22],[[]],[[]],[[]],[[80,[7,[6]]],[[10,[1]]]],[[81,[7,[6]]],[[10,[1]]]],[[28,[7,[6]]],[[10,[1]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[[0,[82,83,38]],[0,[12,38]]]]],[[84,[[0,[82,83,38]],[0,[12,38]]]]]],[[]],[[[86,[85]],[7,[6]]]],[[[84,[[0,[82,83]],12]],[7,[6]]]],[[[86,[46]],8],45],[[87,8],45],[[87,8],45],[[[84,[[0,[82,83,46]],[0,[12,46]]]],8],45],[[]],[[]],[[]],[[]],[[]],[[]],[85,[[86,[85]]]],[[[0,[82,83]],22,12],[[84,[[0,[82,83]],12]]]],[[[86,[85]]],17],[[[84,[[0,[82,83]],12]]],17],[[[86,[85]]],22],[[[84,[[0,[82,83]],12]]],22],[[[84,[[0,[82,83]],12]]],[[10,[1]]]],[87,[[3,[18]]]],[[]],[[],29],[[[86,[85]],[7,[6]]],[[10,[1]]]],[[[84,[[0,[82,83]],12]],[7,[6]]],[[10,[1]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,[[]],[[]],[88,88],[[]],[[88,88],14],[[],14],[[88,[7,[6]]]],[[88,8],45],[[]],[[]],[[22,22],88],[88,17],[88,22],[[]],[[88,[7,[6]]],[[10,[1]]]],[[],10],[[],10],[[],31],[[]],0,0,0,0,[[]],[[]],[[[0,[30,5]]],3],[[[0,[30,5]]],3],[[[0,[30,5]],24],89],[[[0,[30,5]],24],79],[[[0,[30,5]],7],24],[[[0,[30,5]],24,50],[[10,[89,42]]]],[[[0,[30,5]]],3],[[[0,[30,5]]],3],[[[0,[30,5]],50],[[10,[42]]]],[[[0,[30,5]],50],[[10,[42]]]],[[[89,[[0,[46,5]],46]],8],45],[[]],0,[[]],[[]],[[[89,[[0,[[90,[24]],5]]]]],24],[[[89,[[0,[[90,[24]],5]]]]],3],[[[0,[30,5]],24]],[[[0,[30,5]]]],[[[89,[[0,[[90,[24]],5]]]]]],[[],10],[[],10],[[],31],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[[]],[[]],[[91,91],14],[[91,8],45],[[93,8],45],[[92,8],45],[[[79,[17]]],91],[[]],[[[79,[24]]],91],[[]],[[]],[[91,24],24],[[]],[[]],[[]],[91,92],[[]],[[]],[91,[[79,[24]]]],[91,14],[91,93],[91,24],[93,[[3,[24]]]],[92,3],[[[0,[30,5]],24,24],91],[[[0,[30,5]],24,50,24],[[10,[91,42]]]],[93],[92],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],31],[[],31],[[],31],[[]],[[]],[[]]],"c":[329,475,476,477,478,479,482,485,563,564],"p":[[3,"Error"],[3,"NonZeroU32"],[4,"Option"],[8,"Fill"],[8,"Sized"],[15,"u8"],[15,"slice"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Error"],[8,"RngCore"],[15,"f64"],[15,"bool"],[8,"SampleUniform"],[8,"SampleRange"],[15,"u32"],[8,"Error"],[3,"Global"],[3,"Box"],[8,"Into"],[15,"u64"],[15,"i32"],[15,"usize"],[3,"Error"],[8,"Distribution"],[3,"DistIter"],[3,"ThreadRng"],[3,"String"],[8,"Rng"],[3,"TypeId"],[3,"Alphanumeric"],[3,"Standard"],[3,"Bernoulli"],[4,"BernoulliError"],[3,"OpenClosed01"],[3,"Open01"],[8,"Clone"],[3,"Slice"],[8,"PartialOrd"],[3,"WeightedIndex"],[4,"WeightedError"],[3,"Uniform"],[8,"PartialEq"],[6,"Result"],[8,"Debug"],[3,"DistMap"],[3,"RangeInclusive"],[3,"Range"],[8,"Fn"],[8,"IntoIterator"],[8,"AddAssign"],[8,"Default"],[15,"f32"],[15,"array"],[3,"NonZeroU128"],[15,"isize"],[15,"i64"],[15,"char"],[15,"u128"],[3,"NonZeroU16"],[15,"i8"],[3,"Wrapping"],[15,"i128"],[15,"u16"],[3,"NonZeroU8"],[15,"i16"],[3,"NonZeroU64"],[3,"NonZeroUsize"],[8,"SubAssign"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[8,"SampleBorrow"],[3,"Duration"],[8,"Weight"],[3,"WeightedIndex"],[3,"Vec"],[3,"OsRng"],[3,"StdRng"],[8,"BlockRngCore"],[8,"SeedableRng"],[3,"ReseedingRng"],[8,"Read"],[3,"ReadRng"],[3,"ReadError"],[3,"StepRng"],[3,"SliceChooseIter"],[8,"Index"],[4,"IndexVec"],[4,"IndexVecIntoIter"],[4,"IndexVecIter"],[8,"DistString"],[8,"UniformSampler"],[8,"SliceRandom"],[8,"IteratorRandom"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","t":"DDDDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"rand_chacha"]],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,3,4,5,5,6,7,7,2,3,4,5,6,7,2,4,6,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,3,5,7,0,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[7,7],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[3,[10,[9]]]],[[5,[10,[9]]]],[[7,[10,[9]]]],[[2,11],12],[[3,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[]],[[]],[2,3],[[]],[[]],[4,5],[[]],[[]],[6,7],[[],2],[[],3],[[],4],[[],5],[[],6],[[],7],[2],[4],[6],[3,[[13,[9]]]],[5,[[13,[9]]]],[7,[[13,[9]]]],[3,14],[5,14],[7,14],[3,15],[5,15],[7,15],[[]],[[]],[[]],[[]],[[]],[[]],[3,16],[5,16],[7,16],[3,14],[5,14],[7,14],0,[[3,14]],[[5,14]],[[7,14]],[[3,15]],[[5,15]],[[7,15]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,[10,[9]]],[[18,[17]]]],[[5,[10,[9]]],[[18,[17]]]],[[7,[10,[9]]],[[18,[17]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"RngCore"],[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"],[15,"bool"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"array"],[15,"u64"],[15,"u128"],[15,"u32"],[3,"Error"],[4,"Result"],[3,"TypeId"]]},\
"rand_core":{"doc":"Random number generation traits","t":"SIIDSDIQIKLALLLLLLLLKLLLLLLLLLLKALLLALKLKLLLLLLLLKLLLLLLLDDIQQLLLLLLLLLMMLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFF","n":["CUSTOM_START","CryptoRng","CryptoRngCore","Error","INTERNAL_START","OsRng","RngCore","Seed","SeedableRng","as_rngcore","as_rngcore","block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","default","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from","from_entropy","from_rng","from_seed","impls","inner","into","into","le","new","next_u32","next_u32","next_u64","next_u64","raw_os_error","read","seed_from_u64","source","take_inner","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":[[0,"rand_core"],[57,"rand_core::block"],[110,"rand_core::impls"],[116,"rand_core::le"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","An extension trait that is automatically implemented for …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","A random number generator that retrieves randomness from …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Upcast to an <code>RngCore</code> trait object.","","The <code>BlockRngCore</code> trait and implementation helpers","","","","","","","Retrieve the error code, if any.","","Fill <code>dest</code> with random data.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","","Return the next random <code>u64</code>.","","Extract the raw OS error code (if this error came from the …","","Create a new PRNG using a <code>u64</code> seed.","","Unwrap the inner error (<code>std</code> only)","","","Fill <code>dest</code> entirely with random data.","","","","","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[3,0,0,0,3,0,0,28,0,29,2,0,3,2,3,2,2,2,3,2,1,2,3,3,2,3,3,3,2,28,28,28,0,3,3,2,0,3,1,2,1,2,3,1,28,3,3,2,3,1,2,3,2,3,2,3,2,0,0,0,23,23,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,23,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],[[]],[[]],[2,2],[[]],[3,[[5,[4]]]],[[],2],[[[7,[6]]]],[[2,[7,[6]]]],[[3,8],9],[[3,8],9],[[2,8],9],[4,3],[10,3],[[]],[[]],[[]],[1,[[11,[3]]]],[[]],0,[3,12],[[]],[[]],0,[[[14,[[13,[12]]]]],3],[[],15],[2,15],[[],16],[2,16],[3,[[5,[17]]]],[[1,[7,[6]]],[[11,[18,19]]]],[16],[3,[[5,[12]]]],[3,[[13,[12]]]],[[]],[[],20],[[[7,[6]]],[[11,[3]]]],[[2,[7,[6]]],[[11,[3]]]],[[],11],[[],11],[[],11],[[],11],[[],21],[[],21],0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[[25,[[0,[22,23,24]]]]],[[25,[[0,[22,23,24]]]]]],[[[26,[[0,[22,23,24]]]]],[[26,[[0,[22,23,24]]]]]],[[]],[[]],0,0,[[[25,[23]],[7,[6]]]],[[[26,[23]],[7,[6]]]],[[[25,[[0,[23,27]]]],8],9],[[[26,[[0,[23,27]]]],8],9],[[]],[[]],[1,[[11,[[25,[[0,[23,28]]]],3]]]],[1,[[11,[[26,[[0,[23,28]]]],3]]]],[[],[[25,[[0,[23,28]]]]]],[[],[[26,[[0,[23,28]]]]]],[[]],[[[25,[23]],18]],[[[26,[23]],18]],[[[25,[23]]],18],[[[26,[23]]],18],[[]],[[]],[23,[[25,[23]]]],[23,[[26,[23]]]],[[[25,[23]]],15],[[[26,[23]]],15],[[[25,[23]]],16],[[[26,[23]]],16],[[[25,[23]]]],[[[26,[23]]]],[16,[[25,[[0,[23,28]]]]]],[16,[[26,[[0,[23,28]]]]]],[[]],[[]],[[[25,[23]],[7,[6]]],[[11,[3]]]],[[[26,[23]],[7,[6]]],[[11,[3]]]],[[],11],[[],11],[[],11],[[],11],[[],21],[[],21],[[[0,[1,24]],[7,[6]]]],[[[7,[15]],[7,[6]]]],[[[7,[16]],[7,[6]]]],[[[0,[1,24]]],15],[[[0,[1,24]]],16],[[[0,[1,24]]],16],[[[7,[6]],[7,[15]]]],[[[7,[6]],[7,[16]]]]],"c":[],"p":[[8,"RngCore"],[3,"OsRng"],[3,"Error"],[3,"NonZeroU32"],[4,"Option"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Error"],[3,"Box"],[8,"Into"],[15,"u32"],[15,"u64"],[15,"i32"],[15,"usize"],[3,"Error"],[3,"String"],[3,"TypeId"],[8,"Clone"],[8,"BlockRngCore"],[8,"Sized"],[3,"BlockRng"],[3,"BlockRng64"],[8,"Debug"],[8,"SeedableRng"],[8,"CryptoRngCore"]]},\
"raw_window_handle":{"doc":"Interoperability library for Rust Windowing applications.","t":"DDNDNDNNDDDNNDDNNDDNNDDEIIIINNNDDEENNDDNNDDNNDDNDNDDNDNNDDNNDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKLKLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKL","n":["Active","ActiveHandle","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","Inactive","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebDisplayHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","connection","core_window","display","display","display_handle","display_handle","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gbm_device","gbm_surface","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new_unchecked","ns_view","ns_window","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","set_active","set_inactive","surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","ui_window","visual_id","visual_id","window","window","window","window_handle","window_handle"],"q":[[0,"raw_window_handle"]],"d":["Keeps track of whether the application is currently active.","Represents a live window handle.","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","The error type returned when a handle cannot be obtained.","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The handle is not currently active.","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","Raw display handle for the Web.","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","The gbm device.","The gbm surface.","Get a live window handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Active</code> tracker.","Create a new <code>ActiveHandle</code>.","Create a new freestanding active handle.","A pointer to an <code>NSView</code> object.","A pointer to an <code>NSWindow</code> object.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","Set the application to be active.","Set the application to be inactive.","A pointer to a <code>wl_surface</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object.","A pointer to an <code>UIWindow</code> object.","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>, or 0 if unknown.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.",""],"i":[0,0,1,0,3,0,3,1,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,0,0,0,0,0,31,3,1,0,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,3,0,3,0,0,1,0,3,1,0,0,3,1,0,0,7,11,11,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,2,5,6,7,8,9,4,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,18,30,16,20,40,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,22,34,6,7,8,9,4,2,5,31,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,24,25,34,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,29,29,27,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,4,4,9,9,23,41,2,42,5,16,18,34,34,21,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,15,15,15,17,19,13,17,19,43,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[4,4],[2,2],[5,5],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[3,3],[1,1],0,0,0,0,[[],[[32,[2,31]]]],[2,[[32,[2,31]]]],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[6,6],33],[[7,7],33],[[8,8],33],[[9,9],33],[[2,2],33],[[5,5],33],[[10,10],33],[[11,11],33],[[12,12],33],[[13,13],33],[[14,14],33],[[15,15],33],[[16,16],33],[[17,17],33],[[18,18],33],[[19,19],33],[[20,20],33],[[21,21],33],[[22,22],33],[[23,23],33],[[24,24],33],[[25,25],33],[[26,26],33],[[27,27],33],[[28,28],33],[[29,29],33],[[30,30],33],[[3,3],33],[[1,1],33],0,[[34,35],36],[[6,35],36],[[7,35],36],[[8,35],36],[[9,35],36],[[4,35],36],[[2,35],36],[[5,35],36],[[31,35],36],[[31,35],36],[[10,35],36],[[11,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[[15,35],36],[[16,35],36],[[17,35],36],[[18,35],36],[[19,35],36],[[20,35],36],[[21,35],36],[[22,35],36],[[23,35],36],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[29,35],36],[[30,35],36],[[3,35],36],[[1,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,3],[11,3],[21,3],[23,3],[19,3],[17,3],[25,3],[13,3],[7,3],[[]],[9,3],[15,3],[27,3],[29,3],[26,1],[14,1],[6,1],[24,1],[22,1],[10,1],[18,1],[[]],[12,1],[20,1],[8,1],[28,1],[16,1],0,0,[34,[[37,[4]]]],[[6,38]],[[7,38]],[[8,38]],[[9,38]],[[2,38]],[[5,38]],[[10,38]],[[11,38]],[[12,38]],[[13,38]],[[14,38]],[[15,38]],[[16,38]],[[17,38]],[[18,38]],[[19,38]],[[20,38]],[[21,38]],[[22,38]],[[23,38]],[[24,38]],[[25,38]],[[26,38]],[[27,38]],[[28,38]],[[29,38]],[[30,38]],[[3,38]],[[1,38]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],4],[[],4],0,0,0,[[],1],[2,1],[[],3],[5,3],0,0,[34],[34],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,[[],[[32,[5,31]]]],[5,[[32,[5,31]]]]],"c":[],"p":[[4,"RawDisplayHandle"],[3,"DisplayHandle"],[4,"RawWindowHandle"],[3,"ActiveHandle"],[3,"WindowHandle"],[3,"AndroidDisplayHandle"],[3,"AndroidNdkWindowHandle"],[3,"AppKitDisplayHandle"],[3,"AppKitWindowHandle"],[3,"HaikuDisplayHandle"],[3,"HaikuWindowHandle"],[3,"OrbitalDisplayHandle"],[3,"OrbitalWindowHandle"],[3,"UiKitDisplayHandle"],[3,"UiKitWindowHandle"],[3,"XlibDisplayHandle"],[3,"XlibWindowHandle"],[3,"XcbDisplayHandle"],[3,"XcbWindowHandle"],[3,"WaylandDisplayHandle"],[3,"WaylandWindowHandle"],[3,"DrmDisplayHandle"],[3,"DrmWindowHandle"],[3,"GbmDisplayHandle"],[3,"GbmWindowHandle"],[3,"WebDisplayHandle"],[3,"WebWindowHandle"],[3,"WindowsDisplayHandle"],[3,"Win32WindowHandle"],[3,"WinRtWindowHandle"],[4,"HandleError"],[4,"Result"],[15,"bool"],[3,"Active"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hasher"],[3,"TypeId"],[8,"HasDisplayHandle"],[8,"HasRawDisplayHandle"],[8,"HasRawWindowHandle"],[8,"HasWindowHandle"]]},\
"regex":{"doc":"This crate provides routines for searching strings for …","t":"DDDDNEDDDDDDDIDDDDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDIDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CaptureLocations","CaptureMatches","CaptureNames","Captures","CompiledTooBig","Error","Match","Matches","NoExpand","Regex","RegexBuilder","RegexSet","RegexSetBuilder","Replacer","ReplacerRef","SetMatches","SetMatchesIntoIter","SetMatchesIter","Split","SplitN","SubCaptureMatches","Syntax","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","by_ref","by_ref","bytes","capture_locations","capture_names","captures","captures_at","captures_iter","captures_len","captures_read","captures_read_at","case_insensitive","case_insensitive","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","crlf","crlf","default","description","dfa_size_limit","dfa_size_limit","dot_matches_new_line","dot_matches_new_line","empty","end","eq","eq","equivalent","escape","expand","extract","find","find_at","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get","get","ignore_whitespace","ignore_whitespace","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_match","is_match","is_match_at","is_match_at","iter","iter","len","len","len","len","len","line_terminator","line_terminator","matched","matched_any","matches","matches_at","multi_line","multi_line","name","nest_limit","nest_limit","new","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","no_expansion","no_expansion","no_expansion","no_expansion","octal","octal","patterns","range","replace","replace_all","replace_append","replace_append","replace_append","replacen","shortest_match","shortest_match_at","size_hint","size_hint","size_hint","size_hint","size_hint","size_limit","size_limit","split","splitn","start","static_captures_len","swap_greed","swap_greed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode","unicode","CaptureLocations","CaptureMatches","CaptureNames","Captures","Match","Matches","NoExpand","Regex","RegexBuilder","RegexSet","RegexSetBuilder","Replacer","ReplacerRef","SetMatches","SetMatchesIntoIter","SetMatchesIter","Split","SplitN","SubCaptureMatches","as_bytes","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","by_ref","by_ref","capture_locations","capture_names","captures","captures_at","captures_iter","captures_len","captures_read","captures_read_at","case_insensitive","case_insensitive","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count","count","crlf","crlf","default","dfa_size_limit","dfa_size_limit","dot_matches_new_line","dot_matches_new_line","empty","end","eq","equivalent","expand","extract","find","find_at","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get","get","ignore_whitespace","ignore_whitespace","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_match","is_match","is_match_at","is_match_at","iter","iter","len","len","len","len","len","line_terminator","line_terminator","matched","matched_any","matches","matches_at","multi_line","multi_line","name","nest_limit","nest_limit","new","new","new","new","next","next","next","next","next","next","next","next","next_back","next_back","no_expansion","no_expansion","no_expansion","no_expansion","octal","octal","patterns","range","replace","replace_all","replace_append","replace_append","replace_append","replacen","shortest_match","shortest_match_at","size_hint","size_hint","size_hint","size_hint","size_hint","size_limit","size_limit","split","splitn","start","static_captures_len","swap_greed","swap_greed","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode","unicode"],"q":[[0,"regex"],[342,"regex::bytes"]],"d":["A low level representation of the byte offsets of each …","An iterator over all non-overlapping capture matches in a …","An iterator over the names of all capture groups in a …","Represents the capture groups for a single match.","The compiled program exceeded the set size limit. The …","An error that occurred during parsing or compiling a …","Represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches in a haystack.","A helper type for forcing literal string replacement.","A compiled regular expression for searching Unicode …","A configurable builder for a <code>Regex</code>.","Match multiple, possibly overlapping, regexes in a single …","A configurable builder for a <code>RegexSet</code>.","A trait for types that can be used to replace matches in a …","A by-reference adaptor for a <code>Replacer</code>.","A set of matches returned by a regex set.","An owned iterator over the set of matches from a regex set.","A borrowed iterator over the set of matches from a regex …","An iterator over all substrings delimited by a regex match.","An iterator over at most <code>N</code> substrings delimited by a regex …","An iterator over all group matches in a <code>Captures</code> value.","A syntax error.","Returns the original string of this regex.","Returns the substring of the haystack that matched.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compiles the pattern given to <code>RegexBuilder::new</code> with the …","Compiles the patterns given to <code>RegexSetBuilder::new</code> with …","Returns a type that implements <code>Replacer</code>, but that borrows …","Returns a type that implements <code>Replacer</code>, but that borrows …","Search for regex matches in <code>&amp;[u8]</code> haystacks.","Returns a fresh allocated set of capture locations that can","Returns an iterator over the capture names in this regex.","This routine searches for the first match of this regex in …","Returns the same as <code>Regex::captures</code>, but starts the search …","Returns an iterator that yields successive non-overlapping …","Returns the number of captures groups in this regex.","This is like <code>Regex::captures</code>, but writes the byte offsets …","Returns the same as <code>Regex::captures_read</code>, but starts the …","This configures whether to enable case insensitive …","This configures whether to enable case insensitive …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This configures CRLF mode for the entire pattern.","This configures CRLF mode for all of the patterns.","","","Set the approximate capacity, in bytes, of the cache of …","Set the approximate capacity, in bytes, of the cache of …","This configures dot-matches-new-line mode for the entire …","This configures dot-matches-new-line mode for the entire …","Create a new empty regex set.","Returns the byte offset of the end of the match in the …","","","","Escapes all regular expression meta characters in <code>pattern</code>.","Expands all instances of <code>$ref</code> in <code>replacement</code> to the …","This is a convenience routine for extracting the substrings","This routine searches for the first match of this regex in …","Returns the same as <code>Regex::find</code>, but starts the search at …","Returns an iterator that yields successive non-overlapping …","","","","","","Shows the original regular expression.","Shows the original regular expression.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a string into a regular expression","Returns the <code>Match</code> associated with the capture group at …","Returns the start and end byte offsets of the capture …","This configures verbose mode for the entire pattern.","This configures verbose mode for all of the patterns.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns true if and only if this match has a length of …","Returns <code>true</code> if this set contains no regexes.","Returns true if and only if there is a match for the regex …","Returns true if and only if one of the regexes in this set …","Returns the same as <code>Regex::is_match</code>, but starts the search …","Returns true if and only if one of the regexes in this set …","Returns an iterator over all capture groups. This includes …","Returns an iterator over the indices of the regexes that …","Returns the total number of capture groups. This includes …","Returns the length, in bytes, of this match.","Returns the total number of capture groups (even if they …","Returns the total number of regexes in this set.","The total number of regexes in the set that created these …","Configures the line terminator to be used by the regex.","Configures the line terminator to be used by the regex.","Whether the regex at the given index matched.","Whether this set contains any matches.","Returns the set of regexes that match in the given …","Returns the set of regexes that match in the given …","This configures multi-line mode for the entire pattern.","This configures multi-line mode for all of the patterns.","Returns the <code>Match</code> associated with the capture group named …","Set the nesting limit for this parser.","Set the nesting limit for this parser.","Create a new builder with a default configuration for the …","Create a new builder with a default configuration for the …","Compiles a regular expression. Once compiled, it can be …","Create a new regex set with the given regular expressions.","","","","","","","","","","","Return a fixed unchanging replacement string.","Return a fixed unchanging replacement string.","","","This configures octal mode for the entire pattern.","This configures octal mode for all of the patterns.","Returns the regex patterns that this regex set was …","Returns the range over the starting and ending byte …","Replaces the leftmost-first match in the given haystack …","Replaces all non-overlapping matches in the haystack with …","Appends possibly empty data to <code>dst</code> to replace the current …","","","Replaces at most <code>limit</code> non-overlapping matches in the …","Returns the end byte offset of the first match in the …","Returns the same as <code>Regex::shortest_match</code>, but starts the …","","","","","","Sets the approximate size limit, in bytes, of the compiled …","Sets the approximate size limit, in bytes, of the compiled …","Returns an iterator of substrings of the haystack given, …","Returns an iterator of at most <code>limit</code> substrings of the …","Returns the byte offset of the start of the match in the …","Returns the total number of capturing groups that appear …","This configures swap-greed mode for the entire pattern.","This configures swap-greed mode for all of the patterns.","","","","","","","","","","","","","","","","","","","Attempts to parse a string into a regular expression","","Attempts to parse a string into a regular expression","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This configures Unicode mode for the entire pattern.","This configures Unicode mode for the all of the patterns.","A low level representation of the byte offsets of each …","An iterator over all non-overlapping capture matches in a …","An iterator over the names of all capture groups in a …","Represents the capture groups for a single match.","Represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches in a haystack.","A helper type for forcing literal string replacement.","A compiled regular expression for searching Unicode …","A configurable builder for a <code>Regex</code>.","Match multiple, possibly overlapping, regexes in a single …","A configurable builder for a <code>RegexSet</code>.","A trait for types that can be used to replace matches in a …","A by-reference adaptor for a <code>Replacer</code>.","A set of matches returned by a regex set.","An owned iterator over the set of matches from a regex set.","A borrowed iterator over the set of matches from a regex …","An iterator over all substrings delimited by a regex match.","An iterator over at most <code>N</code> substrings delimited by a regex …","An iterator over all group matches in a <code>Captures</code> value.","Returns the substring of the haystack that matched.","Returns the original string of this regex.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compiles the pattern given to <code>RegexBuilder::new</code> with the …","Compiles the patterns given to <code>RegexSetBuilder::new</code> with …","Returns a type that implements <code>Replacer</code>, but that borrows …","Returns a type that implements <code>Replacer</code>, but that borrows …","Returns a fresh allocated set of capture locations that can","Returns an iterator over the capture names in this regex.","This routine searches for the first match of this regex in …","Returns the same as <code>Regex::captures</code>, but starts the search …","Returns an iterator that yields successive non-overlapping …","Returns the number of captures groups in this regex.","This is like <code>Regex::captures</code>, but writes the byte offsets …","Returns the same as <code>Regex::captures_read</code>, but starts the …","This configures whether to enable case insensitive …","This configures whether to enable case insensitive …","","","","","","","","","","","","","","","","","","","","","","","","","","","This configures CRLF mode for the entire pattern.","This configures CRLF mode for all of the patterns.","","Set the approximate capacity, in bytes, of the cache of …","Set the approximate capacity, in bytes, of the cache of …","This configures dot-matches-new-line mode for the entire …","This configures dot-matches-new-line mode for the entire …","Create a new empty regex set.","Returns the byte offset of the end of the match in the …","","","Expands all instances of <code>$ref</code> in <code>replacement</code> to the …","This is a convenience routine for extracting the substrings","This routine searches for the first match of this regex in …","Returns the same as <code>Regex::find</code>, but starts the search at …","Returns an iterator that yields successive non-overlapping …","","","","Shows the original regular expression.","Shows the original regular expression.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a string into a regular expression","Returns the <code>Match</code> associated with the capture group at …","Returns the start and end byte offsets of the capture …","This configures verbose mode for the entire pattern.","This configures verbose mode for all of the patterns.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns true if and only if this match has a length of …","Returns <code>true</code> if this set contains no regexes.","Returns true if and only if there is a match for the regex …","Returns true if and only if one of the regexes in this set …","Returns the same as <code>Regex::is_match</code>, but starts the search …","Returns true if and only if one of the regexes in this set …","Returns an iterator over all capture groups. This includes …","Returns an iterator over the indices of the regexes that …","Returns the total number of capture groups. This includes …","Returns the length, in bytes, of this match.","Returns the total number of capture groups (even if they …","Returns the total number of regexes in this set.","The total number of regexes in the set that created these …","Configures the line terminator to be used by the regex.","Configures the line terminator to be used by the regex.","Whether the regex at the given index matched.","Whether this set contains any matches.","Returns the set of regexes that match in the given …","Returns the set of regexes that match in the given …","This configures multi-line mode for the entire pattern.","This configures multi-line mode for all of the patterns.","Returns the <code>Match</code> associated with the capture group named …","Set the nesting limit for this parser.","Set the nesting limit for this parser.","Create a new builder with a default configuration for the …","Create a new builder with a default configuration for the …","Compiles a regular expression. Once compiled, it can be …","Create a new regex set with the given regular expressions.","","","","","","","","","","","Return a fixed unchanging replacement byte string.","Return a fixed unchanging replacement byte string.","","","This configures octal mode for the entire pattern.","This configures octal mode for all of the patterns.","Returns the regex patterns that this regex set was …","Returns the range over the starting and ending byte …","Replaces the leftmost-first match in the given haystack …","Replaces all non-overlapping matches in the haystack with …","Appends possibly empty data to <code>dst</code> to replace the current …","","","Replaces at most <code>limit</code> non-overlapping matches in the …","Returns the end byte offset of the first match in the …","Returns the same as <code>shortest_match</code>, but starts the search …","","","","","","Sets the approximate size limit, in bytes, of the compiled …","Sets the approximate size limit, in bytes, of the compiled …","Returns an iterator of substrings of the haystack given, …","Returns an iterator of at most <code>limit</code> substrings of the …","Returns the byte offset of the start of the match in the …","Returns the total number of capturing groups that appear …","This configures swap-greed mode for the entire pattern.","This configures swap-greed mode for all of the patterns.","","","","","","","","","","","","","","","","Attempts to parse a string into a regular expression","Attempts to parse a string into a regular expression","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This configures Unicode mode for the entire pattern.","This configures Unicode mode for the all of the patterns."],"i":[0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,3,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,4,7,34,34,0,1,1,1,1,1,1,1,1,4,7,4,7,5,1,3,10,11,17,18,8,19,20,4,7,5,1,3,10,11,17,18,8,19,20,21,15,11,17,4,7,8,5,4,7,4,7,8,3,5,3,3,0,12,12,1,1,1,12,4,7,5,5,1,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,1,12,10,4,7,12,12,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,21,15,25,26,11,17,19,19,29,20,3,8,1,8,1,8,12,19,12,3,10,8,19,4,7,19,19,8,8,4,7,12,4,7,4,7,1,8,21,15,25,26,11,17,29,20,29,20,34,34,9,18,4,7,8,3,1,1,34,9,18,1,1,1,26,11,17,29,20,4,7,1,1,3,1,4,7,4,7,5,1,3,10,11,17,18,8,19,20,5,1,12,4,7,5,1,1,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,12,4,7,5,1,3,10,21,15,25,26,11,17,9,18,8,19,29,20,4,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,40,41,57,57,39,39,39,39,39,39,39,39,40,41,40,41,39,38,44,45,48,49,42,50,51,40,41,39,38,44,45,48,49,42,50,51,52,47,45,48,40,41,42,40,41,40,41,42,38,38,38,46,46,39,39,39,46,40,41,39,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,39,46,44,40,41,46,46,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,52,47,54,55,45,48,50,50,56,51,38,42,39,42,39,42,46,50,46,38,44,42,50,40,41,50,50,42,42,40,41,46,40,41,40,41,39,42,52,47,54,55,45,48,56,51,56,51,57,57,43,49,40,41,42,38,39,39,57,43,49,39,39,39,55,45,48,56,51,40,41,39,39,38,39,40,41,40,41,39,38,44,45,48,49,42,50,51,39,46,40,41,39,39,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,46,40,41,39,38,44,52,47,54,55,45,48,43,49,42,50,56,51,40,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[1,5]]]],[7,[[6,[8,5]]]],[[],9],[[],9],0,[1,10],[1,11],[[1,2],[[13,[12]]]],[[1,2,14],[[13,[12]]]],[[1,2],15],[1,14],[[1,10,2],[[13,[3]]]],[[1,10,2,14],[[13,[3]]]],[[4,16],4],[[7,16],7],[4,4],[7,7],[5,5],[1,1],[3,3],[10,10],[11,11],[17,17],[18,18],[8,8],[19,19],[20,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,14],[15,14],[11,14],[17,14],[[4,16],4],[[7,16],7],[[],8],[5,2],[[4,14],4],[[7,14],7],[[4,16],4],[[7,16],7],[[],8],[3,14],[[5,5],16],[[3,3],16],[[],16],[2,22],[[12,2,22]],[12],[[1,2],[[13,[3]]]],[[1,2,14],[[13,[3]]]],[[1,2],21],[[12,23],24],[[4,23],24],[[7,23],24],[[5,23],24],[[5,23],24],[[1,23],24],[[1,23],24],[[3,23],24],[[10,23],24],[[21,23],24],[[15,23],24],[[25,23],24],[[26,23],24],[[11,23],24],[[17,23],24],[[[9,[[0,[27,28]]]],23],24],[[18,23],24],[[8,23],24],[[19,23],24],[[29,23],24],[[20,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[6,[1,5]]]],[[12,14],[[13,[3]]]],[[10,14],13],[[4,16],4],[[7,16],7],[[12,2],2],[[12,14],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19],[19],[[]],[[]],[3,16],[8,16],[[1,2],16],[[8,2],16],[[1,2,14],16],[[8,2,14],16],[12,17],[19,20],[12,14],[3,14],[10,14],[8,14],[19,14],[[4,30],4],[[7,30],7],[[19,14],16],[19,16],[[8,2],19],[[8,2,14],19],[[4,16],4],[[7,16],7],[[12,2],[[13,[3]]]],[[4,31],4],[[7,31],7],[2,4],[32,7],[2,[[6,[1,5]]]],[32,[[6,[8,5]]]],[21,[[13,[3]]]],[15,[[13,[12]]]],[25,[[13,[2]]]],[26,[[13,[2]]]],[11,[[13,[[13,[2]]]]]],[17,[[13,[[13,[3]]]]]],[29,[[13,[14]]]],[20,[[13,[14]]]],[29,[[13,[14]]]],[20,[[13,[14]]]],[[],[[13,[[33,[2]]]]]],[[],[[13,[[33,[2]]]]]],[[[9,[[0,[34,28]]]]],[[13,[[33,[2]]]]]],[18,[[13,[[33,[2]]]]]],[[4,16],4],[[7,16],7],[8,[[35,[22]]]],[3,[[36,[14]]]],[[1,2,34],[[33,[2]]]],[[1,2,34],[[33,[2]]]],[[12,22]],[[[9,[[0,[34,28]]]],12,22]],[[18,12,22]],[[1,2,14,34],[[33,[2]]]],[[1,2],[[13,[14]]]],[[1,2,14],[[13,[14]]]],[26],[11],[17],[29],[20],[[4,14],4],[[7,14],7],[[1,2],25],[[1,2,14],26],[3,14],[1,[[13,[14]]]],[[4,16],4],[[7,16],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],6],[[],6],[[],6],[[],6],[22,[[6,[1,5]]]],[[],6],[2,[[6,[1,5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[4,16],4],[[7,16],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38,[[35,[30]]]],[39,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[6,[39,5]]]],[41,[[6,[42,5]]]],[[],43],[[],43],[39,44],[39,45],[[39,[35,[30]]],[[13,[46]]]],[[39,[35,[30]],14],[[13,[46]]]],[[39,[35,[30]]],47],[39,14],[[39,44,[35,[30]]],[[13,[38]]]],[[39,44,[35,[30]],14],[[13,[38]]]],[[40,16],40],[[41,16],41],[40,40],[41,41],[39,39],[38,38],[44,44],[45,45],[48,48],[49,49],[42,42],[50,50],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,14],[47,14],[45,14],[48,14],[[40,16],40],[[41,16],41],[[],42],[[40,14],40],[[41,14],41],[[40,16],40],[[41,16],41],[[],42],[38,14],[[38,38],16],[[],16],[[46,[35,[30]],[53,[30]]]],[46],[[39,[35,[30]]],[[13,[38]]]],[[39,[35,[30]],14],[[13,[38]]]],[[39,[35,[30]]],52],[[46,23],24],[[40,23],24],[[41,23],24],[[39,23],24],[[39,23],24],[[38,23],24],[[44,23],24],[[52,23],24],[[47,23],24],[[54,23],24],[[55,23],24],[[45,23],24],[[48,23],24],[[[43,[[0,[27,28]]]],23],24],[[49,23],24],[[42,23],24],[[50,23],24],[[56,23],24],[[51,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[6,[39,5]]]],[[46,14],[[13,[38]]]],[[44,14],13],[[40,16],40],[[41,16],41],[[46,2],[[35,[30]]]],[[46,14],[[35,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],[50],[[]],[[]],[38,16],[42,16],[[39,[35,[30]]],16],[[42,[35,[30]]],16],[[39,[35,[30]],14],16],[[42,[35,[30]],14],16],[46,48],[50,51],[46,14],[38,14],[44,14],[42,14],[50,14],[[40,30],40],[[41,30],41],[[50,14],16],[50,16],[[42,[35,[30]]],50],[[42,[35,[30]],14],50],[[40,16],40],[[41,16],41],[[46,2],[[13,[38]]]],[[40,31],40],[[41,31],41],[2,40],[32,41],[2,[[6,[39,5]]]],[32,[[6,[42,5]]]],[52,[[13,[38]]]],[47,[[13,[46]]]],[54,[[13,[[35,[30]]]]]],[55,[[13,[[35,[30]]]]]],[45,[[13,[[13,[2]]]]]],[48,[[13,[[13,[38]]]]]],[56,[[13,[14]]]],[51,[[13,[14]]]],[56,[[13,[14]]]],[51,[[13,[14]]]],[[],[[13,[[33,[[35,[30]]]]]]]],[[],[[13,[[33,[[35,[30]]]]]]]],[[[43,[[0,[57,28]]]]],[[13,[[33,[[35,[30]]]]]]]],[49,[[13,[[33,[[35,[30]]]]]]]],[[40,16],40],[[41,16],41],[42,[[35,[22]]]],[38,[[36,[14]]]],[[39,[35,[30]],57],[[33,[[35,[30]]]]]],[[39,[35,[30]],57],[[33,[[35,[30]]]]]],[[46,[53,[30]]]],[[[43,[[0,[57,28]]]],46,[53,[30]]]],[[49,46,[53,[30]]]],[[39,[35,[30]],14,57],[[33,[[35,[30]]]]]],[[39,[35,[30]]],[[13,[14]]]],[[39,[35,[30]],14],[[13,[14]]]],[55],[45],[48],[56],[51],[[40,14],40],[[41,14],41],[[39,[35,[30]]],54],[[39,[35,[30]],14],55],[38,14],[39,[[13,[14]]]],[[40,16],40],[[41,16],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],6],[[],6],[[],6],[22,[[6,[39,5]]]],[2,[[6,[39,5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[40,16],40],[[41,16],41]],"c":[],"p":[[3,"Regex"],[15,"str"],[3,"Match"],[3,"RegexBuilder"],[4,"Error"],[4,"Result"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"ReplacerRef"],[3,"CaptureLocations"],[3,"CaptureNames"],[3,"Captures"],[4,"Option"],[15,"usize"],[3,"CaptureMatches"],[15,"bool"],[3,"SubCaptureMatches"],[3,"NoExpand"],[3,"SetMatches"],[3,"SetMatchesIter"],[3,"Matches"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"Split"],[3,"SplitN"],[8,"Debug"],[8,"Sized"],[3,"SetMatchesIntoIter"],[15,"u8"],[15,"u32"],[8,"IntoIterator"],[4,"Cow"],[8,"Replacer"],[15,"slice"],[3,"Range"],[3,"TypeId"],[3,"Match"],[3,"Regex"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"ReplacerRef"],[3,"CaptureLocations"],[3,"CaptureNames"],[3,"Captures"],[3,"CaptureMatches"],[3,"SubCaptureMatches"],[3,"NoExpand"],[3,"SetMatches"],[3,"SetMatchesIter"],[3,"Matches"],[3,"Vec"],[3,"Split"],[3,"SplitN"],[3,"SetMatchesIntoIter"],[8,"Replacer"]]},\
"regex_automata":{"doc":"This crate exposes a variety of regex engines used by the …","t":"NENDNDNDDEENNDDDDNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLALLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMADDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDDNENLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLMMMDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLANNDDNNDDNDNNNNDNDNDEDNELLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLALLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAAAAAAAAADDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLFFDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLNNNEDDDNNNDNNNNNNNNNNNNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLSSSSSSDDDSSSDDDDSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLDDDMLLLLLLMLLLLLLLLLLLLLLLLLLLLLL","n":["All","Anchored","GaveUp","HalfMatch","HaystackTooLong","Input","LeftmostFirst","Match","MatchError","MatchErrorKind","MatchKind","No","Pattern","PatternID","PatternSet","PatternSetInsertError","PatternSetIter","Quit","Span","UnsupportedAnchored","Yes","anchored","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","contains","default","default","dfa","earliest","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gave_up","get_anchored","get_earliest","get_range","get_span","hash","hash","hash","hash","haystack","haystack_too_long","hybrid","insert","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_anchored","is_char_boundary","is_done","is_empty","is_empty","is_empty","is_full","iter","kind","len","len","len","meta","must","must","new","new","new","new","new","next","next_back","nfa","offset","offset","partial_cmp","pattern","pattern","pattern","quit","range","range","range","set_anchored","set_earliest","set_end","set_range","set_span","set_start","size_hint","span","span","start","start","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsupported_anchored","util","byte","len","mode","offset","offset","onepass","BuildError","Builder","Cache","Config","DFA","alphabet_len","always_match","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_nfa","build_many","builder","byte_classes","captures","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","configure","create_cache","create_captures","default","find","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_byte_classes","get_config","get_match_kind","get_nfa","get_size_limit","get_starts_for_each_pattern","into","into","into","into","into","is_match","match_kind","memory_usage","memory_usage","never_match","new","new","new","new","new_from_nfa","new_many","pattern_len","reset","reset_cache","size_limit","source","starts_for_each_pattern","state_len","stride","stride2","syntax","thompson","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_search","try_search_slots","type_id","type_id","type_id","type_id","type_id","BuildError","Cache","CacheError","LazyStateID","Quit","StartError","UnsupportedAnchored","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","dfa","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","into","is_dead","is_match","is_quit","is_start","is_tagged","is_unknown","partial_cmp","regex","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","byte","err","mode","Builder","Cache","Config","DFA","OverlappingState","always_match","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_nfa","build_many","builder","byte_classes","byte_classes","cache_capacity","clear_count","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","configure","create_cache","default","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_byte_classes","get_cache_capacity","get_config","get_match","get_match_kind","get_minimum_bytes_per_state","get_minimum_cache_capacity","get_minimum_cache_clear_count","get_nfa","get_prefilter","get_quit","get_skip_cache_capacity_check","get_specialize_start_states","get_starts_for_each_pattern","get_unicode_word_boundary","into","into","into","into","into","match_kind","match_len","match_pattern","memory_usage","memory_usage","minimum_bytes_per_state","minimum_cache_clear_count","never_match","new","new","new","new","new_many","next_eoi_state","next_state","next_state_untagged","next_state_untagged_unchecked","pattern_len","prefilter","quit","reset","reset_cache","search_finish","search_start","search_total_len","search_update","skip_cache_capacity_check","specialize_start_states","start","start_state","start_state_forward","start_state_reverse","starts_for_each_pattern","syntax","thompson","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_search_fwd","try_search_overlapping_fwd","try_search_overlapping_rev","try_search_rev","try_which_overlapping_matches","type_id","type_id","type_id","type_id","type_id","unicode_word_boundary","Builder","Cache","FindMatches","Regex","as_parts","as_parts_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_dfas","build_many","builder","clone","clone","clone_into","clone_into","create_cache","default","dfa","find","find_iter","fmt","fmt","fmt","fmt","forward","forward","forward_mut","from","from","from","from","into","into","into","into","into_iter","is_match","memory_usage","new","new","new","new_many","next","pattern_len","reset","reset_cache","reverse","reverse","reverse_mut","syntax","thompson","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_search","type_id","type_id","type_id","type_id","BuildError","Builder","Cache","CapturesMatches","Config","FindMatches","Regex","Split","SplitN","auto_prefilter","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_hir","build_many","build_many_from_hir","builder","byte_classes","captures","captures_iter","captures_len","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","configure","count","count","create_cache","create_captures","default","dfa","dfa_size_limit","dfa_state_limit","find","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_auto_prefilter","get_backtrack","get_byte_classes","get_config","get_dfa","get_dfa_size_limit","get_dfa_state_limit","get_hybrid","get_hybrid_cache_capacity","get_line_terminator","get_match_kind","get_nfa_size_limit","get_onepass","get_onepass_size_limit","get_prefilter","get_utf8_empty","get_which_captures","group_info","hybrid","hybrid_cache_capacity","input","input","input","input","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_accelerated","is_match","line_terminator","match_kind","memory_usage","memory_usage","new","new","new","new","new_many","next","next","next","next","nfa_size_limit","onepass","onepass_size_limit","pattern","pattern_len","prefilter","regex","regex","reset","search","search_captures","search_captures_with","search_half","search_half_with","search_slots","search_slots_with","search_with","size_hint","size_limit","source","split","splitn","static_captures_len","syntax","syntax_error","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utf8_empty","which_captures","which_overlapping_matches","which_overlapping_matches_with","thompson","All","BinaryUnion","BuildError","Builder","ByteRange","Capture","Compiler","Config","Dense","DenseTransitions","Fail","Implicit","Look","Match","NFA","None","PatternIter","Sparse","SparseTransitions","State","Transition","Union","WhichCaptures","add_capture_end","add_capture_start","add_empty","add_fail","add_look","add_match","add_range","add_sparse","add_union","add_union_reverse","always_match","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build_from_hir","build_many","build_many_from_hir","byte_classes","captures","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compiler","config","configure","current_pattern_id","default","default","default","end","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","finish_pattern","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_captures","get_look_matcher","get_look_matcher","get_nfa_size_limit","get_reverse","get_reverse","get_shrink","get_size_limit","get_utf8","get_utf8","get_which_captures","group_info","has_capture","has_empty","hash","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_always_start_anchored","is_any","is_epsilon","is_none","is_reverse","is_utf8","look_matcher","look_matcher","look_set_any","look_set_prefix_any","matches","matches","matches","matches_byte","matches_byte","matches_byte","matches_unit","memory_usage","memory_usage","never_match","new","new","new","new","new_many","next","next","nfa_size_limit","patch","pattern_len","pattern_len","patterns","pikevm","reverse","set_look_matcher","set_reverse","set_size_limit","set_utf8","shrink","size_limit","source","start","start_anchored","start_pattern","start_pattern","start_unanchored","state","states","syntax","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transitions","transitions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utf8","which_captures","alt1","alt2","alternates","group_index","look","next","next","pattern_id","pattern_id","slot","trans","BoundedBacktracker","Builder","Cache","Config","TryCapturesMatches","TryFindMatches","always_match","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_nfa","build_many","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","configure","create_cache","create_captures","default","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_config","get_nfa","get_prefilter","get_visited_capacity","into","into","into","into","into","into","into_iter","into_iter","max_haystack_len","memory_usage","min_visited_capacity","never_match","new","new","new","new","new_from_nfa","new_many","next","next","pattern_len","prefilter","reset","reset_cache","syntax","thompson","to_owned","to_owned","to_owned","to_owned","try_captures","try_captures_iter","try_find","try_find_iter","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_is_match","try_search","try_search_slots","type_id","type_id","type_id","type_id","type_id","type_id","visited_capacity","Builder","Cache","CapturesMatches","Config","FindMatches","PikeVM","always_match","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_from_nfa","build_many","builder","captures","captures_iter","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","configure","create_cache","create_captures","default","find","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_config","get_match_kind","get_nfa","get_prefilter","into","into","into","into","into","into","into_iter","into_iter","is_match","match_kind","memory_usage","never_match","new","new","new","new","new_from_nfa","new_many","next","next","pattern_len","prefilter","reset","reset_cache","search","search_slots","syntax","thompson","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","which_overlapping_matches","alphabet","captures","escape","interpolate","iter","lazy","look","pool","prefilter","primitives","start","syntax","wire","ByteClassElements","ByteClassIter","ByteClassRepresentatives","ByteClasses","Unit","alphabet_len","as_eoi","as_u8","as_usize","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","elements","empty","eoi","eoi","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_by_unit","into","into","into","into","into","into_iter","into_iter","into_iter","is_byte","is_eoi","is_singleton","is_word_byte","iter","next","next","next","partial_cmp","representatives","set","singletons","stride2","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","u8","Captures","CapturesPatternIter","GroupInfo","GroupInfoAllNames","GroupInfoError","GroupInfoPatternNames","all","all_group_len","all_names","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","default","empty","empty","explicit_slot_len","extract","extract_bytes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_group","get_group_by_name","get_match","group_info","group_len","group_len","implicit_slot_len","interpolate_bytes","interpolate_bytes_into","interpolate_string","interpolate_string_into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_match","iter","matches","memory_usage","new","next","next","next","pattern","pattern_len","pattern_names","set_pattern","size_hint","size_hint","slot","slot_len","slots","slots","slots_mut","source","to_index","to_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","DebugByte","DebugHaystack","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","bytes","string","CapturesIter","HalfMatchesIter","MatchesIter","Searcher","TryCapturesIter","TryHalfMatchesIter","TryMatchesIter","advance","advance_half","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","infallible","infallible","infallible","input","input","input","input","input","into","into","into","into","into","into","into","into_captures_iter","into_half_matches_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_matches_iter","new","next","next","next","next","next","next","to_owned","try_advance","try_advance_half","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Lazy","borrow","borrow_mut","deref","fmt","from","get","into","new","try_from","try_into","type_id","End","EndCRLF","EndLF","Look","LookMatcher","LookSet","LookSetIter","Start","StartCRLF","StartLF","UnicodeWordBoundaryError","WordAscii","WordAsciiNegate","WordEndAscii","WordEndHalfAscii","WordEndHalfUnicode","WordEndUnicode","WordStartAscii","WordStartHalfAscii","WordStartHalfUnicode","WordStartUnicode","WordUnicode","WordUnicodeNegate","as_char","as_repr","available","bits","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains","contains_anchor","contains_anchor_crlf","contains_anchor_haystack","contains_anchor_lf","contains_anchor_line","contains_word","contains_word_ascii","contains_word_unicode","default","default","empty","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_repr","full","get_line_terminator","insert","intersect","into","into","into","into","into","into_iter","is_empty","is_end","is_end_crlf","is_end_lf","is_start","is_start_crlf","is_start_lf","is_word_ascii","is_word_ascii_negate","is_word_end_ascii","is_word_end_half_ascii","is_word_end_half_unicode","is_word_end_unicode","is_word_start_ascii","is_word_start_half_ascii","is_word_start_half_unicode","is_word_start_unicode","is_word_unicode","is_word_unicode_negate","iter","len","matches","matches_set","new","next","read_repr","remove","reversed","set_insert","set_intersect","set_line_terminator","set_remove","set_subtract","set_union","singleton","subtract","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write_repr","Pool","PoolGuard","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","fmt","fmt","from","from","get","into","into","new","put","try_from","try_from","try_into","try_into","type_id","type_id","Prefilter","borrow","borrow_mut","clone","clone_into","find","fmt","from","from_hir_prefix","from_hirs_prefix","into","memory_usage","new","prefix","to_owned","try_from","try_into","type_id","LIMIT","LIMIT","LIMIT","MAX","MAX","MAX","NonMaxUsize","PatternID","PatternIDError","SIZE","SIZE","SIZE","SmallIndex","SmallIndexError","StateID","StateIDError","ZERO","ZERO","ZERO","as_i32","as_i32","as_i32","as_u32","as_u32","as_u32","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","attempted","attempted","attempted","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ne_bytes","from_ne_bytes","from_ne_bytes","from_ne_bytes_unchecked","from_ne_bytes_unchecked","from_ne_bytes_unchecked","get","hash","hash","hash","into","into","into","into","into","into","must","must","must","new","new","new","new","new_unchecked","new_unchecked","new_unchecked","one_more","one_more","one_more","partial_cmp","partial_cmp","partial_cmp","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Config","anchored","borrow","borrow_mut","clone","clone_into","fmt","from","from_input_forward","from_input_reverse","get_anchored","get_look_behind","into","look_behind","new","to_owned","try_from","try_into","type_id","Config","borrow","borrow_mut","case_insensitive","clone","clone_into","crlf","default","dot_matches_new_line","fmt","from","get_case_insensitive","get_crlf","get_dot_matches_new_line","get_ignore_whitespace","get_line_terminator","get_multi_line","get_nest_limit","get_octal","get_swap_greed","get_unicode","get_utf8","ignore_whitespace","into","line_terminator","multi_line","nest_limit","new","octal","parse","parse_many","parse_many_with","parse_with","swap_greed","to_owned","try_from","try_into","type_id","unicode","utf8","AlignAs","DeserializeError","SerializeError","_align","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"regex_automata"],[258,"regex_automata::MatchErrorKind"],[263,"regex_automata::dfa"],[264,"regex_automata::dfa::onepass"],[370,"regex_automata::hybrid"],[443,"regex_automata::hybrid::StartError"],[446,"regex_automata::hybrid::dfa"],[577,"regex_automata::hybrid::regex"],[650,"regex_automata::meta"],[843,"regex_automata::nfa"],[844,"regex_automata::nfa::thompson"],[1093,"regex_automata::nfa::thompson::State"],[1104,"regex_automata::nfa::thompson::backtrack"],[1212,"regex_automata::nfa::thompson::pikevm"],[1319,"regex_automata::util"],[1332,"regex_automata::util::alphabet"],[1414,"regex_automata::util::captures"],[1533,"regex_automata::util::escape"],[1554,"regex_automata::util::interpolate"],[1556,"regex_automata::util::iter"],[1650,"regex_automata::util::lazy"],[1662,"regex_automata::util::look"],[1807,"regex_automata::util::pool"],[1830,"regex_automata::util::prefilter"],[1848,"regex_automata::util::primitives"],[2010,"regex_automata::util::start"],[2029,"regex_automata::util::syntax"],[2069,"regex_automata::util::wire"]],"d":["Report all possible matches.","The type of anchored search to perform.","The search, based on heuristics, determined that it would …","A representation of “half” of a match reported by a …","This error occurs if the haystack given to the regex …","The parameters for a regex search including the haystack …","Report only the leftmost matches. When multiple leftmost …","A representation of a match reported by a regex engine.","An error indicating that a search stopped before reporting …","The underlying kind of a <code>MatchError</code>.","The kind of match semantics to use for a regex pattern.","Run an unanchored search. This means a match may occur …","Run an anchored search for a specific pattern. This means …","The identifier of a regex pattern, represented by a …","A set of <code>PatternID</code>s.","An error that occurs when a <code>PatternID</code> failed to insert …","An iterator over all pattern identifiers in a <code>PatternSet</code>.","The search saw a “quit” byte at which it was …","A representation of a span reported by a regex engine.","An error indicating that a particular type of anchored …","Run an anchored search. This means that a match must begin …","Sets the anchor mode of a search.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of pattern identifiers that may …","Clear this set such that it contains no pattern IDs.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true when the given offset is contained within …","Return true if and only if the given pattern identifier is …","","","A module for building and searching with deterministic …","Whether to execute an “earliest” search or not.","Return the end position of this search.","The ending position of the match.","The end offset of the span, exclusive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new “gave up” error. The given <code>offset</code> …","Return the anchored mode for this search configuration.","Return whether this search should execute in “earliest”…","Return the span as a range for this search configuration.","Return the span for this search configuration.","","","","","Return a borrow of the underlying haystack as a slice of …","Create a new “haystack too long” error. The given <code>len</code> …","A module for building and searching with lazy …","Insert the given pattern identifier into this set and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if and only if this anchor mode corresponds …","Returns true if and only if the given offset in this search…","Return true if and only if this search can never return …","Returns true when this span is empty. That is, when …","Returns true when the span in this match is empty.","Return true if and only if this set has no pattern …","Return true if and only if this set has the maximum number …","Returns an iterator over all pattern identifiers in this …","Returns a reference to the underlying error kind.","Returns the length of this span.","Returns the length of this match.","Returns the total number of pattern identifiers in this …","Provides a regex matcher that composes several other regex …","Create a new half match from a pattern ID and a byte …","Create a new match from a pattern ID and a byte offset …","Create a new search configuration for the given haystack.","Create a new half match from a pattern ID and a byte …","Create a new match from a pattern ID and a span.","Create a new set of pattern identifiers with the given …","Create a new error value with the given kind.","","","Provides non-deterministic finite automata (NFA) and regex …","Returns a new span with <code>offset</code> added to this span’s <code>start</code>…","The position of the match.","","Returns the ID of the pattern that matched.","Returns the ID of the pattern that matched.","Returns the pattern ID associated with this configuration …","Create a new “quit” error. The given <code>byte</code> corresponds …","Like <code>Input::span</code>, but accepts any range instead.","Returns this span as a range.","Returns the match span as a range.","Set the anchor mode of a search.","Set whether the search should execute in “earliest” …","Set the ending offset for the span for this search …","Set the span for this search configuration given any range.","Set the span for this search configuration.","Set the starting offset for the span for this search …","","Set the span for this search.","Returns the span for this match.","Return the start position of this search.","The starting position of the match.","The start offset of the span, inclusive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert the given pattern identifier into this set and …","","","","","","","","","","","","","","","","","","","","","","","","","Create a new “unsupported anchored” error. This occurs …","A collection of modules that provide APIs that are useful …","The “quit” byte that was observed that caused the …","The length of the haystack that exceeded the limit.","The anchored mode given that is unsupported.","The offset at which the quit byte was observed.","The offset at which the search stopped. This corresponds …","A DFA that can return spans for matching capturing groups.","An error that occurred during the construction of a …","A builder for a one-pass DFA.","A cache represents mutable state that a one-pass <code>DFA</code> …","The configuration used for building a one-pass DFA.","A one-pass DFA for executing a subset of anchored regex …","Returns the total number of elements in the alphabet for …","Create a new one-pass DFA that matches every input.","","","","","","","","","","","Build a one-pass DFA from the given pattern.","Build a DFA from the given NFA.","Build a one-pass DFA from the given patterns.","Return a builder for configuring the construction of a DFA.","Whether to attempt to shrink the size of the DFA’s …","Executes an anchored leftmost forward search and writes …","","","","","","","","","","","Return a default configuration for a DFA.","Apply the given one-pass DFA configuration options to this …","Create a new cache for this DFA.","Create a new empty set of capturing groups that is …","","Executes an anchored leftmost forward search, and returns …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether this configuration has enabled byte …","Return the config for this one-pass DFA.","Returns the match semantics set in this configuration.","Returns a reference to the underlying NFA.","Returns the DFA size limit of this configuration if one …","Returns whether this configuration has enabled anchored …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Executes an anchored leftmost forward search, and returns …","Set the desired match semantics.","Returns the memory usage, in bytes, of this DFA.","Returns the heap memory usage, in bytes, of this cache.","Create a new one-pass DFA that never matches any input.","Return a new default one-pass DFA configuration.","Create a new one-pass DFA builder with the default …","Parse the given regular expression using the default …","Create a new <code>onepass::DFA</code> cache.","Like <code>new</code>, but builds a one-pass DFA directly from an NFA. …","Like <code>new</code>, but parses multiple patterns into a single “…","Returns the total number of patterns compiled into this …","Reset this cache such that it can be used for searching …","Reset the given cache such that it can be used for …","Set a size limit on the total heap used by a one-pass DFA.","","Whether to compile a separate start state for each pattern …","Returns the total number of states in this one-pass DFA.","Returns the total stride for every state in this DFA. This …","Returns the total stride for every state in this DFA, …","Set the syntax configuration for this builder using …","Set the Thompson NFA configuration for this builder using …","","","","","","","","","","","","","","","","","Executes an anchored leftmost forward search and writes …","Executes an anchored leftmost forward search and writes …","","","","","","An error that occurs when initial construction of a lazy …","An error that occurs when cache inefficiency has dropped …","An error that occurs when cache usage has become …","A state identifier specifically tailored for lazy DFAs.","An error that occurs when a starting configuration’s …","An error that can occur when computing the start state for …","An error that occurs when the caller requests an anchored …","","","","","","","","","","","","","","","","","","","Types and routines specific to lazy DFAs.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if and only if this represents a dead state. A …","Return true if and only if this lazy state ID has been …","Return true if and only if this represents a quit state. A …","Return true if and only if this lazy state ID has been …","Return true if and only if this lazy state ID is tagged.","Return true if and only if this represents a lazy state ID …","","A lazy DFA backed <code>Regex</code>.","","","","","","","","","","","","","","","","","","","","","","The quit byte that was found.","The underlying cache error that occurred.","The anchored mode given that is unsupported.","A builder for constructing a lazy deterministic finite …","A cache represents a partially computed DFA.","The configuration used for building a lazy DFA.","A hybrid NFA/DFA (also called a “lazy DFA”) for regex …","Represents the current state of an overlapping search.","Create a new lazy DFA that matches every input.","","","","","","","","","","","Build a lazy DFA from the given pattern.","Build a DFA from the given NFA.","Build a lazy DFA from the given patterns.","Return a builder for configuring the construction of a …","Returns the equivalence classes that make up the alphabet …","Whether to attempt to shrink the size of the lazy DFA’s …","Sets the maximum amount of heap memory, in bytes, to …","Returns the total number of times this cache has been …","","","","","","","","","","","Return a default configuration for a <code>DFA</code>.","Apply the given lazy DFA configuration options to this …","Create a new cache for this lazy DFA.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether this configuration has enabled byte …","Returns the cache capacity set on this configuration.","Returns this lazy DFA’s configuration.","Return the match result of the most recent search to …","Returns the match semantics set in this configuration.","Returns, if set, the minimum number of bytes per state …","Returns the minimum lazy DFA cache capacity required for …","Returns, if set, the minimum number of times the cache …","Returns a reference to the underlying NFA.","Returns the prefilter set in this configuration, if one at …","Returns whether this configuration will instruct the lazy …","Returns whether the cache capacity check should be skipped.","Returns whether this configuration will instruct the lazy …","Returns whether this configuration has enabled anchored …","Returns whether this configuration has enabled heuristic …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the desired match semantics.","Returns the total number of patterns that match in this …","Returns the pattern ID corresponding to the given match …","Returns the memory usage, in bytes, of this lazy DFA.","Returns the heap memory usage, in bytes, of this cache.","Configure a lazy DFA search to quit only when its …","Configure a lazy DFA search to quit after a certain number …","Create a new lazy DFA that never matches any input.","Parse the given regular expression using a default …","Create a new cache for the given lazy DFA.","Return a new default lazy DFA builder configuration.","Create a new lazy DFA builder with the default …","Parse the given regular expressions using a default …","Transitions from the current state to the next state for …","Transitions from the current state to the next state, …","Transitions from the current state to the next state, …","Transitions from the current state to the next state, …","Returns the total number of patterns compiled into this …","Set a prefilter to be used whenever a start state is …","Add a “quit” byte to the lazy DFA.","Reset this cache such that it can be used for searching …","Reset the given cache such that it can be used for …","Indicates that a search has finished at the given position.","Initializes a new search starting at the given position.","Returns the total number of bytes that have been searched …","Updates the current search to indicate that it has search …","Configures construction of a lazy DFA to use the minimum …","Enable specializing start states in the lazy DFA.","Create a new overlapping state that begins at the start …","Return the ID of the start state for this lazy DFA for the …","Return the ID of the start state for this lazy DFA when …","Return the ID of the start state for this lazy DFA when …","Whether to compile a separate start state for each pattern …","Set the syntax configuration for this builder using …","Set the Thompson NFA configuration for this builder using …","","","","","","","","","","","","","","","","Executes a forward search and returns the end position of …","Executes an overlapping forward search and returns the end …","Executes a reverse overlapping search and returns the …","Executes a reverse search and returns the start of the …","Writes the set of patterns that match anywhere in the …","","","","","","Heuristically enable Unicode word boundaries.","A builder for a regex based on a hybrid NFA/DFA.","A cache represents a partially computed forward and …","An iterator over all non-overlapping matches for an …","A regular expression that uses hybrid NFA/DFAs (also …","Return references to the forward and reverse caches, …","Return mutable references to the forward and reverse …","","","","","","","","","Build a regex from the given pattern.","Build a regex from its component forward and reverse …","Build a regex from the given patterns.","Return a builder for configuring the construction of a …","","","","","Create a new cache for this <code>Regex</code>.","","Set the lazy DFA compilation configuration for this …","Returns the start and end offset of the leftmost match. If …","Returns an iterator over all non-overlapping leftmost …","","","","","Return the underlying lazy DFA responsible for forward …","Return a reference to the forward cache.","Return a mutable reference to the forward cache.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if and only if this regex matches the given …","Returns the heap memory usage, in bytes, as a sum of the …","Parse the given regular expression using the default …","Create a new cache for the given <code>Regex</code>.","Create a new regex builder with the default configuration.","Like <code>new</code>, but parses multiple patterns into a single “…","","Returns the total number of patterns matched by this regex.","Reset this cache such that it can be used for searching …","Reset the given cache such that it can be used for …","Return the underlying lazy DFA responsible for reverse …","Return a reference to the reverse cache.","Return a mutable reference to the reverse cache.","Set the syntax configuration for this builder using …","Set the Thompson NFA configuration for this builder using …","","","","","","","","","","","Returns the start and end offset of the leftmost match. If …","","","","","An error that occurs when construction of a <code>Regex</code> fails.","A builder for configuring and constructing a <code>Regex</code>.","Represents mutable scratch space used by regex engines …","An iterator over all non-overlapping leftmost matches with …","An object describing the configuration of a <code>Regex</code>.","An iterator over all non-overlapping matches.","A regex matcher that works by composing several other …","Yields all substrings delimited by a regular expression …","Yields at most <code>N</code> spans delimited by a regular expression …","Toggles whether automatic prefilter support is enabled.","Toggle whether a bounded backtracking regex engine should …","","","","","","","","","","","","","","","","","","","Builds a <code>Regex</code> from a single pattern string.","Builds a <code>Regex</code> directly from an <code>Hir</code> expression.","Builds a <code>Regex</code> from many pattern strings.","Builds a <code>Regex</code> directly from many <code>Hir</code> expressions.","Return a builder for configuring the construction of a …","Whether to attempt to shrink the size of the alphabet for …","Executes a leftmost forward search and writes the spans of …","Returns an iterator over all non-overlapping <code>Captures</code> …","Returns the total number of capturing groups.","","","","","","","","","","","Return a default configuration for a <code>Regex</code>.","Configure the behavior of a <code>Regex</code>.","","","Creates a new cache for use with lower level search APIs …","Creates a new object for recording capture group offsets. …","","Toggle whether a fully compiled DFA should be available …","Sets the size limit, in bytes, for heap memory used for a …","Sets a limit on the total number of NFA states, beyond …","Executes a leftmost search and returns the first match …","Returns an iterator over all non-overlapping leftmost …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether automatic prefilters are enabled, as set by","Returns whether the bounded backtracking regex engine may …","Returns whether byte classes are enabled, as set by …","Returns the configuration object used to build this <code>Regex</code>.","Returns whether the DFA regex engine may be used, as set by","Returns DFA size limit, as set by <code>Config::dfa_size_limit</code>.","Returns DFA size limit in terms of the number of states in …","Returns whether the hybrid NFA/DFA regex engine may be …","Returns hybrid NFA/DFA cache capacity, as set by …","Returns the line terminator for this configuration, as set …","Returns the match kind on this configuration, as set by …","Returns NFA size limit, as set by <code>Config::nfa_size_limit</code>.","Returns whether the one-pass DFA regex engine may be used, …","Returns one-pass DFA size limit, as set by …","Returns a manually set prefilter, if one was set by …","Returns whether empty matches must fall on valid UTF-8 …","Returns the capture configuration, as set by …","Return information about the capture groups in this <code>Regex</code>.","Toggle whether the hybrid NFA/DFA (also known as the “…","Set the cache capacity, in bytes, for the lazy DFA.","Returns the current <code>Input</code> associated with this iterator.","Returns the current <code>Input</code> associated with this iterator.","Returns the current <code>Input</code> associated with this iterator.","Returns the current <code>Input</code> associated with this iterator.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if this regex has a high chance of being “…","Returns true if and only if this regex matches the given …","Set the line terminator to be used by the <code>^</code> and <code>$</code> anchors …","Set the match semantics for a <code>Regex</code>.","Return the total approximate heap memory, in bytes, used …","Returns the heap memory usage, in bytes, of this cache.","Builds a <code>Regex</code> from a single pattern string using the …","Creates a new <code>Cache</code> for use with this regex.","Create a new configuration object for a <code>Regex</code>.","Creates a new builder for configuring and constructing a …","Builds a <code>Regex</code> from many pattern strings using the default …","","","","","Sets the size limit, in bytes, to enforce on the …","Toggle whether a one-pass DFA should be available for use …","Sets the size limit, in bytes, for the one-pass DFA.","If it is known which pattern ID caused this build error to …","Returns the total number of patterns in this regex.","Overrides and sets the prefilter to use inside a <code>Regex</code>.","Returns the <code>Regex</code> value that created this iterator.","Returns the <code>Regex</code> value that created this iterator.","Reset this cache such that it can be used for searching …","Returns the start and end offset of the leftmost match. If …","Executes a leftmost forward search and writes the spans of …","This is like <code>Regex::search_captures</code>, but requires the …","Returns the end offset of the leftmost match. If no match …","This is like <code>Regex::search_half</code>, but requires the caller to","Executes a leftmost forward search and writes the spans of …","This is like <code>Regex::search_slots</code>, but requires the caller …","This is like <code>Regex::search</code>, but requires the caller to …","","If this error occurred because the regex exceeded the …","","Returns an iterator of spans of the haystack given, …","Returns an iterator of at most <code>limit</code> spans of the haystack …","Returns the total number of capturing groups that appear …","Configure the syntax options when parsing a pattern string …","If this error corresponds to a syntax error, then a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles whether empty matches are permitted to occur …","Configures what kinds of groups are compiled as “…","Writes the set of patterns that match anywhere in the …","This is like <code>Regex::which_overlapping_matches</code>, but …","Defines a Thompson NFA and provides the <code>PikeVM</code> and …","All capture states, including those corresponding to both …","An alternation such that there exists precisely two …","An error that can occurred during the construction of a …","An abstraction for building Thompson NFAs by hand.","A state with a single transition that can only be taken if …","An empty state that records a capture location.","A builder for compiling an NFA from a regex’s high-level …","The configuration used for a Thompson NFA compiler.","A dense representation of a state with multiple …","A sequence of transitions used to represent a dense state.","A state that cannot be transitioned out of. This is useful …","Only capture states corresponding to implicit capture …","A conditional epsilon transition satisfied via some sort of","A match state. There is at least one such occurrence of …","A byte oriented Thompson non-deterministic finite …","No capture states are compiled into the Thompson NFA.","An iterator over all pattern IDs in an NFA.","A state with possibly many transitions represented in a …","A sequence of transitions used to represent a sparse state.","A state in an NFA.","A single transition to another state.","An alternation such that there exists an epsilon …","A configuration indicating which kinds of <code>State::Capture</code> …","Add a “end capture” NFA state.","Add a “start capture” NFA state.","Add an “empty” NFA state.","Adds a “fail” NFA state.","Add a “look” NFA state.","Adds a “match” NFA state.","Add a “range” NFA state.","Add a “sparse” NFA state.","Add a “union” NFA state.","Add a “reverse union” NFA state.","Returns an NFA with a single regex pattern that always …","An NFA backed bounded backtracker for executing regex …","","","","","","","","","","","","","","","","","","","","","","","Assemble a <code>NFA</code> from the states added so far.","Compile the given regular expression pattern into an NFA.","Compile the given high level intermediate representation …","Compile the given regular expression patterns into a …","Compile the given high level intermediate representations …","Get the byte classes for this NFA.","Whether to include ‘Capture’ states in the NFA.","Clear this builder.","","","","","","","","","","","","","","","","","","","","","Return a compiler for configuring the construction of an …","Return a default configuration for an <code>NFA</code>.","Apply the given NFA configuration options to this builder.","Returns the pattern identifier of the current pattern.","","","","The inclusive end of the byte range.","","","","","","","","","Finish the assembly of a pattern in this NFA.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return whether NFA compilation is configured to produce …","Returns the look-around matcher used for this builder.","Return the look-around matcher for this NFA.","Return the configured NFA size limit, if it exists, in the …","Returns whether reverse mode is enabled for this builder.","Returns whether this configuration has enabled reverse NFA …","Return whether NFA shrinking is enabled.","Return the currently configured size limit.","Returns whether UTF-8 mode is enabled for this builder.","Returns whether this configuration has enabled UTF-8 mode.","Return what kinds of capture states will be compiled into …","Returns the capturing group info for this NFA.","Returns true if and only if this NFA has at least one …","Returns true if and only if this NFA can match the empty …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if and only if all starting states for this …","Returns true if this configuration indicates that some …","Returns true if and only if this state contains one or …","Returns true if this configuration indicates that no …","Returns true when this NFA is meant to be matched in …","Whether UTF-8 mode is enabled for this NFA or not.","Sets the look-around matcher that should be used with this …","Returns the look-around matcher associated with this NFA.","Returns the union of all look-around assertions used …","Returns the union of all prefix look-around assertions for …","This follows the matching transition for a particular byte.","This follows the matching transition for a particular byte.","Returns true if the position <code>at</code> in <code>haystack</code> falls in this …","This follows the matching transition for a particular byte.","This follows the matching transition for a particular byte.","Returns true if the given byte falls in this transition’…","Returns true if the given alphabet unit falls in this …","Returns the heap memory usage, in bytes, used by the NFA …","Returns the memory usage, in bytes, of this NFA.","Returns an NFA that never matches at any position.","Create a new builder for hand-assembling NFAs.","Return a new default Thompson NFA compiler configuration.","Create a new NFA builder with its default configuration.","Parse the given regular expression using a default …","Parse the given regular expressions using a default …","","The identifier of the state to transition to.","Sets an approximate size limit on the total heap used by …","Add a transition from one state to another.","Returns the number of patterns added to this builder so …","Returns the total number of regex patterns in this NFA.","Returns an iterator over all pattern identifiers in this …","An NFA backed Pike VM for executing regex searches with …","Reverse the NFA.","Sets the look-around matcher that should be used for the …","Sets whether the NFA produced by this builder should be …","Set the size limit on this builder.","Set whether the NFA produced by this builder should only …","Apply best effort heuristics to shrink the NFA at the …","If this error occurred because the NFA exceeded the …","","The inclusive start of the byte range.","Return the state identifier of the initial anchored state …","Start the assembly of a pattern in this NFA.","Return the state identifier of the initial anchored state …","Return the state identifier of the initial unanchored …","Return a reference to the NFA state corresponding to the …","Returns a slice of all states in this NFA.","Set the syntax configuration for this builder using …","","","","","","","","","","","","The sorted sequence of non-overlapping transitions.","A dense representation of this state’s transitions on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to enable UTF-8 mode during search or not.","Configures what kinds of capture groups are compiled into …","An unconditional epsilon transition to another NFA state. …","An unconditional epsilon transition to another NFA state. …","An ordered sequence of unconditional epsilon transitions …","The capture group index that this capture belongs to. …","The look-around assertion that must be satisfied before …","The state to transition to if the look-around assertion is …","The state to transition to, unconditionally.","The pattern ID that this capture belongs to.","The matching pattern ID.","The slot index for this capture. Every capturing group has …","The transition from this state to the next.","A backtracking regex engine that bounds its execution to …","A builder for a bounded backtracker.","A cache represents mutable state that a <code>BoundedBacktracker</code> …","The configuration used for building a bounded backtracker.","An iterator over all non-overlapping leftmost matches, …","An iterator over all non-overlapping matches for a …","Create a new <code>BoundedBacktracker</code> that matches every input.","","","","","","","","","","","","","Build a <code>BoundedBacktracker</code> from the given pattern.","Build a <code>BoundedBacktracker</code> directly from its NFA.","Build a <code>BoundedBacktracker</code> from the given patterns.","Return a builder for configuring the construction of a …","","","","","","","","","Return a default configuration for a <code>BoundedBacktracker</code>.","Apply the given <code>BoundedBacktracker</code> configuration options …","Create a new cache for this regex.","Create a new empty set of capturing groups that is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the config for this <code>BoundedBacktracker</code>.","Returns a reference to the underlying NFA.","Returns the prefilter set in this configuration, if one at …","Returns the configured visited capacity.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the maximum haystack length supported by this …","Returns the heap memory usage, in bytes, of this cache.","Returns the minimum visited capacity for the given …","Create a new <code>BoundedBacktracker</code> that never matches any …","Return a new default regex configuration.","Create a new BoundedBacktracker builder with its default …","Parse the given regular expression using the default …","Create a new <code>BoundedBacktracker</code> cache.","Example","Like <code>new</code>, but parses multiple patterns into a single “…","","","Returns the total number of patterns compiled into this …","Set a prefilter to be used whenever a start state is …","Reset this cache such that it can be used for searching …","Reset the given cache such that it can be used for …","Set the syntax configuration for this builder using …","Set the Thompson NFA configuration for this builder using …","","","","","Executes a leftmost forward search and writes the spans of …","Returns an iterator over all non-overlapping <code>Captures</code> …","Executes a leftmost forward search and returns a <code>Match</code> if …","Returns an iterator over all non-overlapping leftmost …","","","","","","","","","","","","","Returns true if and only if this regex matches the given …","Executes a leftmost forward search and writes the spans of …","Executes a leftmost forward search and writes the spans of …","","","","","","","Set the visited capacity used to bound backtracking.","A builder for a <code>PikeVM</code>.","A cache represents mutable state that a <code>PikeVM</code> requires …","An iterator over all non-overlapping leftmost matches, …","The configuration used for building a <code>PikeVM</code>.","An iterator over all non-overlapping matches for a …","A virtual machine for executing regex searches with …","Create a new <code>PikeVM</code> that matches every input.","","","","","","","","","","","","","Build a <code>PikeVM</code> from the given pattern.","Build a <code>PikeVM</code> directly from its NFA.","Build a <code>PikeVM</code> from the given patterns.","Return a builder for configuring the construction of a …","Executes a leftmost forward search and writes the spans of …","Returns an iterator over all non-overlapping <code>Captures</code> …","","","","","","","","","Return a default configuration for a <code>PikeVM</code>.","Apply the given <code>PikeVM</code> configuration options to this …","Create a new cache for this <code>PikeVM</code>.","Create a new empty set of capturing groups that is …","","Executes a leftmost forward search and returns a <code>Match</code> if …","Returns an iterator over all non-overlapping leftmost …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the config for this <code>PikeVM</code>.","Returns the match semantics set in this configuration.","Returns a reference to the underlying NFA.","Returns the prefilter set in this configuration, if one at …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if and only if this <code>PikeVM</code> matches the given …","Set the desired match semantics.","Returns the heap memory usage, in bytes, of this cache.","Create a new <code>PikeVM</code> that never matches any input.","Return a new default PikeVM configuration.","Create a new PikeVM builder with its default configuration.","Parse the given regular expression using the default …","Create a new <code>PikeVM</code> cache.","Like <code>new</code>, but builds a PikeVM directly from an NFA. This …","Like <code>new</code>, but parses multiple patterns into a single “…","","","Returns the total number of patterns compiled into this …","Set a prefilter to be used whenever a start state is …","Reset this cache such that it can be used for searching …","Reset the given cache such that it can be used for …","Executes a leftmost forward search and writes the spans of …","Executes a leftmost forward search and writes the spans of …","Set the syntax configuration for this builder using …","Set the Thompson NFA configuration for this builder using …","","","","","","","","","","","","","","","","","","","","","","","Writes the set of patterns that match anywhere in the …","This module provides APIs for dealing with the alphabets …","Provides types for dealing with capturing groups.","Provides convenience routines for escaping raw bytes.","Provides routines for interpolating capture group …","Generic helpers for iteration of matches from a regex …","A lazily initialized value for safe sharing between …","Types and routines for working with look-around assertions.","A thread safe memory pool.","Defines a prefilter for accelerating regex searches.","Lower level primitive types that are useful in a variety …","Provides helpers for dealing with start state …","Utilities for dealing with the syntax of a regular …","Types and routines that support the wire format of finite …","An iterator over all elements in an equivalence class.","An iterator over each equivalence class.","An iterator over representative bytes from each …","A representation of byte oriented equivalence classes.","Unit represents a single unit of haystack for DFA based …","Return the total number of elements in the alphabet …","If this unit is an “end of input” sentinel, then …","If this unit is not an “end of input” sentinel, then …","Return this unit as a <code>usize</code>, regardless of whether it is a …","","","","","","","","","","","","","","","","","Returns an iterator of the bytes in the given equivalence …","Creates a new set of equivalence classes where all bytes …","Create a new “end of input” haystack unit.","Create a unit that represents the “end of input” …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the equivalence class for the given byte.","Get the equivalence class for the given haystack unit and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if and only of this unit is a byte value …","Returns true when this unit represents an “end of input…","Returns true if and only if every byte in this class maps …","Returns true when this unit corresponds to an ASCII word …","Returns an iterator over all equivalence classes in this …","","","","","Returns an iterator over a sequence of representative …","Set the equivalence class for the given byte.","Creates a new set of equivalence classes where each byte …","Returns the stride, as a base-2 exponent, required for …","","","","","","","","","","","","","","","","","","Create a new haystack unit from a byte value.","The span offsets of capturing groups after a match has …","An iterator over all capturing groups in a <code>Captures</code> value.","Represents information about capturing groups in a …","An iterator over capturing groups and their names for a …","An error that may occur when building a <code>GroupInfo</code>.","An iterator over capturing groups and their names for a …","Create new storage for the offsets of all matching …","Return the total number of capture groups across all …","Return an iterator of all capture groups for all patterns …","","","","","","","","","","","","","Clear this <code>Captures</code> value.","","","","","","","","","","","","","","Create new storage for only tracking which pattern …","This creates an empty <code>GroupInfo</code>.","Returns the total number of slots for explicit capturing …","This is a convenience routine for extracting the substrings","This is a convenience routine for extracting the substrings","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the span of a capturing group match corresponding …","Returns the span of a capturing group match corresponding …","Returns the pattern ID and the span of the match, if one …","Returns a reference to the underlying group info on which …","Return the total number of capturing groups for the …","Return the number of capture groups in a pattern.","Returns the total number of slots for implicit capturing …","Interpolates the capture references in <code>replacement</code> with the","Interpolates the capture references in <code>replacement</code> with the","Interpolates the capture references in <code>replacement</code> with the","Interpolates the capture references in <code>replacement</code> with the","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if and only if this capturing group …","Returns an iterator of possible spans for every capturing …","Create new storage for only the full match spans of a …","Returns the memory usage, in bytes, of this <code>GroupInfo</code>.","Creates a new group info from a sequence of patterns, …","","","","Returns the identifier of the pattern that matched when …","Returns the total number of patterns in this <code>GroupInfo</code>.","Return an iterator of all capture groups and their names …","Set the pattern on this <code>Captures</code> value.","","","Returns the starting slot corresponding to the given …","Returns the total number of slots in this <code>GroupInfo</code> across …","Returns the underlying slots, where each slot stores a …","Returns the starting and ending slot corresponding to the …","Returns the underlying slots as a mutable slice, where …","","Return the capture group index corresponding to the given …","Return the capture name for the given index and given …","","","","","","","","","","","","","","","","","","","","","","","","","Provides a convenient <code>Debug</code> implementation for a <code>u8</code>.","Provides a convenient <code>Debug</code> implementation for <code>&amp;[u8]</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Accepts a replacement byte string and interpolates capture …","Accepts a replacement string and interpolates capture …","An iterator over all non-overlapping captures for an …","An iterator over all non-overlapping half matches for an …","An iterator over all non-overlapping matches for an …","A searcher for creating iterators and performing lower …","An iterator over all non-overlapping captures for a …","An iterator over all non-overlapping half matches for a …","An iterator over all non-overlapping matches for a …","Return the next match for an infallible search if one …","Return the next half match for an infallible search if one …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return an infallible version of this iterator.","Return an infallible version of this iterator.","Return an infallible version of this iterator.","Returns the current <code>Input</code> used by this iterator.","Returns the current <code>Input</code> used by this iterator.","Returns the current <code>Input</code> used by this searcher.","Returns the current <code>Input</code> used by this iterator.","Returns the current <code>Input</code> used by this iterator.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Given a closure that executes a single search, return an …","Given a closure that executes a single search, return an …","","","","","","","Given a closure that executes a single search, return an …","Create a new fallible non-overlapping matches iterator.","","","","","","","","Return the next match for a fallible search if one exists, …","Return the next half match for a fallible search if one …","","","","","","","","","","","","","","","","","","","","","","A lazily initialized value that implements <code>Deref</code> for <code>T</code>.","","","","","Returns the argument unchanged.","Return a reference to the lazily initialized value.","Calls <code>U::from(self)</code>.","Create a new <code>Lazy</code> value that is initialized via the given …","","","","Match the end of text. Specifically, this matches at the …","Match the end of a line or the end of text. Specifically, …","Match the end of a line or the end of text. Specifically, …","A look-around assertion.","A matcher for look-around assertions.","LookSet is a memory-efficient set of look-around …","An iterator over all look-around assertions in a <code>LookSet</code>.","Match the beginning of text. Specifically, this matches at …","Match the beginning of a line or the beginning of text. …","Match the beginning of a line or the beginning of text. …","An error that occurs when the Unicode-aware <code>\\\\w</code> class is …","Match an ASCII-only word boundary. That is, this matches a …","Match an ASCII-only negation of a word boundary.","Match the end of an ASCII-only word boundary. That is, …","Match the end half of an ASCII-only word boundary. That …","Match the end half of a Unicode word boundary. That is, …","Match the end of a Unicode word boundary. That is, this …","Match the start of an ASCII-only word boundary. That is, …","Match the start half of an ASCII-only word boundary. That …","Match the start half of a Unicode word boundary. That is, …","Match the start of a Unicode word boundary. That is, this …","Match a Unicode-aware word boundary. That is, this matches …","Match a Unicode-aware negation of a word boundary.","Returns a convenient single codepoint representation of …","Return the underlying representation of this look-around …","Checks that all assertions in this set can be matched.","The underlying representation this set is exposed to make …","","","","","","","","","","","Returns an error if and only if Unicode word boundary data …","","","","","","","","","","","Returns true if and only if the given look-around …","Returns true if and only if this set contains any anchor …","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any word …","Returns true if and only if this set contains any ASCII …","Returns true if and only if this set contains any Unicode …","","","Create an empty set of look-around assertions.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Given the underlying representation of a <code>Look</code> value, …","Create a full set of look-around assertions.","Returns the line terminator that was configured for this …","Return a new set that is equivalent to the original, but …","Returns a new set that is the intersection of this and the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if and only if this set is empty.","Returns true when <code>Look::End</code> is satisfied <code>at</code> the given …","Returns true when <code>Look::EndCRLF</code> is satisfied <code>at</code> the given …","Returns true when <code>Look::EndLF</code> is satisfied <code>at</code> the given …","Returns true when <code>Look::Start</code> is satisfied <code>at</code> the given …","Returns true when <code>Look::StartCRLF</code> is satisfied <code>at</code> the given","Returns true when <code>Look::StartLF</code> is satisfied <code>at</code> the given …","Returns true when <code>Look::WordAscii</code> is satisfied <code>at</code> the given","Returns true when <code>Look::WordAsciiNegate</code> is satisfied <code>at</code> …","Returns true when <code>Look::WordEndAscii</code> is satisfied <code>at</code> the …","Returns true when <code>Look::WordEndHalfAscii</code> is satisfied <code>at</code> …","Returns true when <code>Look::WordEndHalfUnicode</code> is satisfied <code>at</code> …","Returns true when <code>Look::WordEndUnicode</code> is satisfied <code>at</code> the …","Returns true when <code>Look::WordStartAscii</code> is satisfied <code>at</code> the …","Returns true when <code>Look::WordStartHalfAscii</code> is satisfied <code>at</code> …","Returns true when <code>Look::WordStartHalfUnicode</code> is satisfied …","Returns true when <code>Look::WordStartUnicode</code> is satisfied <code>at</code> …","Returns true when <code>Look::WordUnicode</code> is satisfied <code>at</code> the …","Returns true when <code>Look::WordUnicodeNegate</code> is satisfied <code>at</code> …","Returns an iterator over all of the look-around assertions …","Returns the total number of look-around assertions in this …","Returns true when the position <code>at</code> in <code>haystack</code> satisfies …","Returns true when <em>all</em> of the assertions in the given set …","Creates a new default matcher for look-around assertions.","","Return a <code>LookSet</code> from the slice given as a native endian …","Return a new set that is equivalent to the original, but …","Flip the look-around assertion to its equivalent for …","Updates this set in place with the result of inserting the …","Updates this set in place with the result of intersecting …","Sets the line terminator for use with <code>(?m:^)</code> and <code>(?m:$)</code>.","Updates this set in place with the result of removing the …","Updates this set in place with the result of subtracting …","Updates this set in place with the result of unioning it …","Create a look-around set containing the look-around …","Returns a new set that is the result of subtracting the …","","","","","","","","","","","","","","","","","","","","","","Returns a new set that is the union of this and the one …","Write a <code>LookSet</code> as a native endian 32-bit integer to the …","A thread safe pool that works in an <code>alloc</code>-only context.","A guard that is returned when a caller requests a value …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a value from the pool. The caller is guaranteed to have","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new pool. The given closure is used to create …","Consumes this guard and puts it back into the pool.","","","","","","","A prefilter for accelerating regex searches.","","","","","Run this prefilter on <code>haystack[span.start..end]</code> and return …","","Returns the argument unchanged.","This attempts to extract prefixes from the given <code>Hir</code> …","This attempts to extract prefixes from the given <code>Hir</code> …","Calls <code>U::from(self)</code>.","Returns the heap memory, in bytes, used by the underlying …","Create a new prefilter from a sequence of needles and a …","Returns the span of a prefix of …","","","","","The total number of values that can be represented as a …","The total number of values that can be represented.","The total number of values that can be represented.","The maximum index value.","The maximum value.","The maximum value.","A <code>usize</code> that can never be <code>usize::MAX</code>.","The identifier of a regex pattern, represented by a …","This error occurs when a value could not be constructed.","The number of bytes that a single small index uses in …","The number of bytes that a single value uses in memory.","The number of bytes that a single value uses in memory.","A type that represents a “small” index.","This error occurs when a small index could not be …","The identifier of a finite automaton state, represented by …","This error occurs when a value could not be constructed.","The zero index value.","The zero value.","The zero value.","Return the internal <code>u32</code> of this small index represented as …","Return the internal value as a i32…","Return the internal value as a i32…","Return the internal <code>u32</code> of this small index. This is …","Return the internal value as a <code>u32</code>. This is guaranteed to …","Return the internal value as a <code>u32</code>. This is guaranteed to …","Return this small index as a <code>u64</code>. This is guaranteed to …","Return the internal value as a <code>u64</code>. This is guaranteed to …","Return the internal value as a <code>u64</code>. This is guaranteed to …","Return this small index as a <code>usize</code>. This is guaranteed to …","Return the internal value as a <code>usize</code>. This is guaranteed to","Return the internal value as a <code>usize</code>. This is guaranteed to","Returns the value that could not be converted to a small …","Returns the value that could not be converted to an ID.","Returns the value that could not be converted to an ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Decode this small index from the bytes given using the …","Decode this value from the bytes given using the native …","Decode this value from the bytes given using the native …","Decode this small index from the bytes given using the …","Decode this value from the bytes given using the native …","Decode this value from the bytes given using the native …","Return the underlying <code>usize</code> value. The returned value is …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Like <code>SmallIndex::new</code>, but panics if the given index is not …","Like <code>new</code>, but panics if the given value is not valid.","Like <code>new</code>, but panics if the given value is not valid.","Create a new <code>NonMaxUsize</code> from the given value.","Create a new small index.","Create a new value that is represented by a “small index.…","Create a new value that is represented by a “small index.…","Create a new small index without checking whether the …","Create a new value without checking whether the given …","Create a new value without checking whether the given …","Returns one more than this small index as a usize.","Returns one more than this value as a usize.","Returns one more than this value as a usize.","","","","Return the underlying small index integer as raw bytes in …","Return the underlying integer as raw bytes in native endian","Return the underlying integer as raw bytes in native endian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration used to determine a DFA’s start state …","Set the anchored mode of a search.","","","","","","Returns the argument unchanged.","A convenience routine for building a start configuration …","A convenience routine for building a start configuration …","Return the anchored mode in this configuration.","Return the look-behind byte in this configuration, if one …","Calls <code>U::from(self)</code>.","Set the look-behind byte at the start of a search.","Create a new default start configuration.","","","","","A common set of configuration options that apply to the …","","","Enable or disable the case insensitive flag by default.","","","Enable or disable the “CRLF mode” flag by default.","","Enable or disable the “dot matches any character” flag …","","Returns the argument unchanged.","Returns whether “case insensitive” mode is enabled.","Returns whether “CRLF” mode is enabled.","Returns whether “dot matches new line” mode is enabled.","Returns whether “ignore whitespace” mode is enabled.","Returns the line terminator in this syntax configuration.","Returns whether “multi line” mode is enabled.","Returns the “nest limit” setting.","Returns whether “octal” mode is enabled.","Returns whether “swap greed” mode is enabled.","Returns whether “unicode” mode is enabled.","Returns whether UTF-8 mode is enabled.","Enable verbose mode in the regular expression.","Calls <code>U::from(self)</code>.","Sets the line terminator for use with <code>(?u-s:.)</code> and <code>(?-us:.)</code>…","Enable or disable the multi-line matching flag by default.","Set the nesting limit used for the regular expression …","Return a new default syntax configuration.","Whether to support octal syntax or not.","A convenience routine for parsing a pattern into an HIR …","A convenience routine for parsing many patterns into HIR …","A convenience routine for parsing many patterns into HIR …","A convenience routine for parsing a pattern into an HIR …","Enable or disable the “swap greed” flag by default.","","","","","Enable or disable the Unicode flag (<code>u</code>) by default.","When disabled, the builder will permit the construction of …","A hack to align a smaller type <code>B</code> with a bigger type <code>T</code>.","An error that occurs when deserializing an object defined …","An error that occurs when serializing an object from this …","A zero-sized field indicating the alignment we want.","","","","","","","A possibly non-sized field containing a sequence of bytes.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[11,0,13,0,13,0,11,0,0,0,0,2,2,0,0,0,0,13,0,13,2,1,5,1,6,7,8,3,9,10,2,11,12,13,5,1,6,7,8,3,9,10,2,11,12,13,3,3,5,1,6,7,8,3,9,10,2,11,12,13,5,1,6,7,8,3,9,10,2,11,12,13,5,6,3,5,11,0,1,1,8,6,5,6,6,7,8,3,2,11,12,13,5,6,7,8,3,2,11,12,13,5,1,6,7,8,3,9,9,10,2,11,12,12,13,5,5,1,1,6,6,7,8,3,9,10,2,11,12,13,12,1,1,1,1,5,6,7,8,1,12,0,3,5,1,6,7,8,3,9,10,2,11,12,13,10,2,1,1,6,8,3,3,3,12,6,8,3,0,7,8,1,7,8,3,12,10,10,0,6,7,5,7,8,2,12,1,6,8,1,1,1,1,1,1,10,1,8,1,8,6,5,1,6,7,8,3,9,10,2,11,12,13,9,12,5,5,5,5,5,1,6,7,8,3,9,10,2,11,12,13,3,5,1,6,7,8,3,9,10,2,11,12,13,5,1,6,7,8,3,9,10,2,11,12,13,12,0,138,139,140,138,141,0,0,0,0,0,0,34,34,39,36,34,40,35,39,36,34,40,35,36,36,36,34,39,34,39,36,34,40,35,39,36,34,40,35,34,36,34,34,39,34,39,36,34,40,35,35,39,36,34,40,35,39,34,39,34,39,39,39,36,34,40,35,34,39,34,40,34,39,36,34,40,34,34,34,40,34,39,35,39,34,34,34,36,36,39,36,34,40,35,35,39,36,34,40,35,39,36,34,40,35,34,34,39,36,34,40,35,0,47,0,0,47,0,47,46,47,48,49,46,47,48,49,46,47,48,49,46,47,48,49,49,49,0,49,49,46,46,47,47,48,48,49,46,47,48,49,49,46,47,48,49,49,49,49,49,49,49,49,0,46,47,46,47,48,49,46,47,48,46,47,48,49,46,47,48,49,46,47,48,49,142,143,144,0,0,0,0,0,50,50,54,53,51,55,50,54,53,51,55,51,51,51,50,50,53,53,54,50,54,53,51,55,50,54,53,51,55,50,51,50,53,55,55,50,54,53,51,55,50,54,53,51,55,53,53,50,55,53,53,53,53,50,53,53,53,53,53,53,50,54,53,51,55,53,50,50,50,54,53,53,50,50,54,53,51,50,50,50,50,50,50,53,53,54,50,54,54,54,54,53,53,55,50,50,50,53,51,51,50,54,53,51,55,50,54,53,51,55,50,54,53,51,55,50,50,50,50,50,50,54,53,51,55,53,0,0,0,0,58,58,60,61,58,59,60,61,58,59,59,59,59,60,58,59,58,59,60,59,59,60,60,60,61,58,59,60,58,58,60,61,58,59,60,61,58,59,61,60,58,60,58,59,60,61,60,58,60,60,58,58,59,59,58,59,60,61,58,59,60,61,58,59,60,60,61,58,59,0,0,0,0,0,0,0,0,0,62,62,65,64,70,68,71,72,69,62,63,65,64,70,68,71,72,69,62,63,63,63,63,63,64,62,64,64,64,65,64,69,62,63,65,64,69,62,63,64,63,70,68,64,64,62,62,62,62,64,64,65,65,64,70,68,71,72,69,62,63,65,64,70,68,71,72,69,62,63,62,62,62,64,62,62,62,62,62,62,62,62,62,62,62,62,62,64,62,62,70,68,71,72,65,64,70,68,71,72,69,62,63,70,68,71,72,64,64,62,62,64,69,64,69,62,63,64,70,68,71,72,62,62,62,65,64,62,70,68,69,64,64,64,64,64,64,64,64,72,65,65,64,64,64,63,65,65,64,69,62,63,65,65,64,70,68,71,72,69,62,63,65,64,70,68,71,72,69,62,63,65,64,70,68,71,72,69,62,63,62,62,64,64,0,73,84,0,0,84,84,0,0,84,0,84,73,84,84,0,73,0,84,0,0,0,84,0,76,76,76,76,76,76,76,76,76,76,38,0,76,44,73,83,78,38,84,85,86,81,87,76,44,73,83,78,38,84,85,86,81,87,76,83,83,83,83,38,44,76,76,44,73,83,78,38,84,85,86,81,76,44,73,83,78,38,84,85,86,81,38,38,83,76,76,44,73,81,84,85,86,81,84,85,86,81,76,76,44,73,83,78,78,38,84,85,86,81,87,76,44,73,83,78,38,84,85,86,81,87,44,76,44,44,76,44,44,76,76,44,44,38,38,38,81,76,44,73,83,78,38,84,85,86,81,87,87,38,73,84,73,38,38,44,38,38,38,85,86,81,85,86,81,81,76,38,38,76,44,83,38,38,87,81,44,76,76,38,38,0,44,76,76,76,76,44,78,78,81,38,76,38,38,38,38,83,76,44,73,83,78,38,84,85,86,81,78,85,86,76,44,73,83,78,38,84,85,86,81,87,76,44,73,83,78,38,84,85,86,81,87,76,44,73,83,78,38,84,85,86,81,87,44,44,145,145,146,147,148,148,147,147,149,147,150,0,0,0,0,0,0,91,93,92,91,95,96,94,93,92,91,95,96,94,92,92,92,91,93,92,91,94,93,92,91,94,91,92,91,91,93,93,92,91,95,96,94,93,92,91,95,96,94,91,91,93,93,93,92,91,95,96,94,95,96,91,94,0,91,93,92,91,94,91,91,95,96,91,93,94,91,92,92,93,92,91,94,91,91,91,91,93,92,91,95,96,94,93,92,91,95,96,94,91,91,91,93,92,91,95,96,94,93,0,0,0,0,0,0,97,101,98,97,102,100,99,101,98,97,102,100,99,98,98,98,97,97,97,101,98,97,99,101,98,97,99,97,98,97,97,101,97,97,101,98,97,102,100,99,101,98,97,102,100,99,97,101,97,101,101,98,97,102,100,99,102,100,97,101,99,97,101,98,97,99,97,97,102,100,97,101,99,97,97,97,98,98,101,98,97,99,101,98,97,102,100,99,101,98,97,102,100,99,101,98,97,102,100,99,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,90,90,90,90,52,104,105,103,90,52,104,105,103,90,52,90,52,90,52,52,52,90,52,90,90,90,52,104,105,103,90,52,104,105,103,52,52,90,52,104,105,103,104,105,103,90,90,52,90,52,104,105,103,90,52,52,52,52,90,52,90,52,104,105,103,90,52,104,105,103,90,52,104,105,103,90,0,0,0,0,0,0,41,74,74,41,107,74,108,109,106,41,107,74,108,109,106,41,41,107,74,108,109,41,107,74,108,109,107,109,74,41,74,74,41,41,41,107,74,108,108,109,106,41,107,74,108,109,106,41,41,41,41,41,74,74,41,41,41,41,41,107,74,108,109,106,107,109,106,41,41,41,74,74,107,109,106,41,74,74,41,107,109,74,74,41,74,41,108,74,74,41,107,74,108,109,108,41,107,74,108,109,106,41,107,74,108,109,106,41,107,74,108,109,106,0,0,112,111,112,111,111,111,112,111,112,111,112,111,111,112,111,112,111,112,111,0,0,0,0,0,0,0,0,0,114,114,115,116,117,114,119,120,121,115,116,117,114,119,120,121,114,114,115,116,117,114,119,120,121,115,116,117,114,119,120,121,115,116,117,115,116,114,119,120,115,116,117,114,119,120,121,114,114,115,116,117,119,120,121,114,114,115,116,117,119,120,121,114,114,114,115,116,117,114,119,120,121,115,116,117,114,119,120,121,115,116,117,114,119,120,121,0,123,123,123,123,123,123,123,123,123,123,123,80,80,80,0,0,0,0,80,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,89,89,80,89,126,88,125,80,89,126,88,125,125,80,89,126,88,125,80,89,126,88,125,89,89,89,89,89,89,89,89,89,89,88,89,80,89,80,89,80,89,126,88,125,125,80,89,126,88,125,80,89,88,89,89,80,89,126,88,125,126,89,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,88,88,88,126,89,89,80,89,89,88,89,89,89,89,89,80,89,126,88,125,125,80,89,126,88,125,80,89,126,88,125,80,89,126,88,125,89,89,0,0,129,128,129,128,128,128,129,128,129,128,129,129,128,129,128,129,128,129,128,129,128,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,130,5,77,130,5,77,0,0,0,130,5,77,0,0,0,0,130,5,77,130,5,77,130,5,77,130,5,77,130,5,77,132,28,133,45,130,132,77,28,133,45,130,132,77,28,133,45,130,132,77,28,133,45,130,132,77,28,133,45,130,77,130,77,45,130,132,77,28,133,45,130,132,77,28,133,45,130,132,132,77,28,28,133,133,45,130,130,132,77,77,28,133,130,5,77,130,5,77,45,45,130,77,45,130,132,77,28,133,130,5,77,45,130,5,77,130,5,77,130,5,77,45,130,77,130,5,77,45,130,132,77,28,133,132,28,133,45,130,130,130,130,130,132,77,77,77,77,77,28,133,45,130,132,77,28,133,45,130,132,77,28,133,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,43,43,43,43,43,43,43,0,0,0,135,135,136,137,135,136,137,135,135,136,136,137,137,135,136,137,135,136,137,136,137,135,136,137,135,136,137,135,136,137],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[3],[5,5],[1,1],[6,6],[7,7],[8,8],[3,3],[9,9],[10,10],[2,2],[11,11],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],14],[[6,4],15],[[3,5],15],[[],5],[[],11],0,[[1,15],1],[1,4],[8,4],0,[[5,5],15],[[6,6],15],[[6,[16,[4]]],15],[[7,7],15],[[8,8],15],[[3,3],15],[[2,2],15],[[11,11],15],[[12,12],15],[[13,13],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[5,17],18],[[1,17],18],[[6,17],18],[[7,17],18],[[8,17],18],[[3,17],18],[[9,17],18],[[9,17],18],[[10,17],18],[[2,17],18],[[11,17],18],[[12,17],18],[[12,17],18],[[13,17],18],[19,5],[[]],[[]],[[[0,[20,[22,[[21,[19]]]]]]],1],[[]],[[[16,[4]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,12],[1,2],[1,15],[1,[[16,[4]]]],[1,6],[[5,23]],[[6,23]],[[7,23]],[[8,23]],[1,[[21,[19]]]],[4,12],0,[[3,5],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,15],[[1,4],15],[1,15],[6,15],[8,15],[3,15],[3,15],[3,10],[12,13],[6,4],[8,4],[3,4],0,[[4,4],7],[[4,[24,[6]]],8],[[[0,[20,[22,[[21,[19]]]]]]],1],[[5,4],7],[[5,[24,[6]]],8],[4,3],[13,12],[10,[[25,[5]]]],[10,[[25,[5]]]],0,[[6,4],6],[7,4],[[5,5],[[25,[14]]]],[7,5],[8,5],[2,[[25,[5]]]],[[19,4],12],[[1,[26,[4]]],1],[6,[[16,[4]]]],[8,[[16,[4]]]],[[1,2]],[[1,15]],[[1,4]],[[1,[26,[4]]]],[[1,[24,[6]]]],[[1,4]],[10],[[1,[24,[6]]],1],[8,6],[1,4],[8,4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[4,[[29,[5,28]]]],[[],29],[30,[[29,[5,28]]]],[31,[[29,[5,28]]]],[32,[[29,[5,28]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[3,5],[[29,[15,9]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[2,12],0,0,0,0,0,0,0,0,0,0,0,0,[34,4],[[],[[29,[34,35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,37],[[29,[34,35]]]],[[36,38],[[29,[34,35]]]],[[36,[21,[[22,[37]]]]],[[29,[34,35]]]],[[],36],[[39,15],39],[[34,40,[24,[1]],41]],[39,39],[36,36],[34,34],[40,40],[35,35],[[]],[[]],[[]],[[]],[[]],[[],39],[[36,39],36],[34,40],[34,41],[[],39],[[34,40,[24,[1]]],[[25,[8]]]],[[39,17],18],[[36,17],18],[[34,17],18],[[40,17],18],[[35,17],18],[[35,17],18],[[]],[[]],[[]],[[]],[[]],[39,15],[34,39],[39,11],[34,38],[39,[[25,[4]]]],[39,15],[[]],[[]],[[]],[[]],[[]],[[34,40,[24,[1]]],15],[[39,11],39],[34,4],[40,4],[[],[[29,[34,35]]]],[[],39],[[],36],[37,[[29,[34,35]]]],[34,40],[38,[[29,[34,35]]]],[[[21,[[22,[37]]]]],[[29,[34,35]]]],[34,4],[[40,34]],[[34,40]],[[39,[25,[4]]],39],[35,[[25,[42]]]],[[39,15],39],[34,4],[34,4],[34,4],[[36,43],36],[[36,44],36],[[]],[[]],[[]],[[]],[[]],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[34,40,1,41],[[29,[12]]]],[[34,40,1,[21,[[25,[45]]]]],[[29,[[25,[5]],12]]]],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,46],[47,47],[48,48],[49,49],[[]],[[]],[[]],[[]],[[49,49],14],[[],49],0,[[49,49],15],[[],15],[[46,17],18],[[46,17],18],[[47,17],18],[[47,17],18],[[48,17],18],[[48,17],18],[[49,17],18],[[]],[[]],[[]],[[]],[[49,23]],[[]],[[]],[[]],[[]],[49,15],[49,15],[49,15],[49,15],[49,15],[49,15],[[49,49],[[25,[14]]]],0,[46,[[25,[42]]]],[47,[[25,[42]]]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,0,0,0,[[],[[29,[50,46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,37],[[29,[50,46]]]],[[51,38],[[29,[50,46]]]],[[51,[21,[[22,[37]]]]],[[29,[50,46]]]],[[],51],[50,52],[[53,15],53],[[53,4],53],[54,4],[50,50],[54,54],[53,53],[51,51],[55,55],[[]],[[]],[[]],[[]],[[]],[[],53],[[51,53],51],[50,54],[[],53],[[55,55],15],[[],15],[[50,17],18],[[54,17],18],[[53,17],18],[[51,17],18],[[55,17],18],[[]],[[]],[[]],[[]],[[]],[53,15],[53,4],[50,53],[55,[[25,[7]]]],[53,11],[53,[[25,[4]]]],[[53,38],[[29,[4,46]]]],[53,[[25,[4]]]],[50,38],[53,[[25,[56]]]],[[53,19],15],[53,15],[53,15],[53,15],[53,15],[[]],[[]],[[]],[[]],[[]],[[53,11],53],[[50,54,49],4],[[50,54,49,4],5],[50,4],[54,4],[[53,[25,[4]]],53],[[53,[25,[4]]],53],[[],[[29,[50,46]]]],[37,[[29,[50,46]]]],[50,54],[[],53],[[],51],[[[21,[[22,[37]]]]],[[29,[50,46]]]],[[50,54,49],[[29,[49,48]]]],[[50,54,49,19],[[29,[49,48]]]],[[50,54,49,19],49],[[50,54,49,19],49],[50,4],[[53,[25,[56]]],53],[[53,19,15],53],[[54,50]],[[50,54]],[[54,4]],[[54,4]],[54,4],[[54,4]],[[53,15],53],[[53,15],53],[[],55],[[50,54,57],[[29,[49,47]]]],[[50,54,1],[[29,[49,12]]]],[[50,54,1],[[29,[49,12]]]],[[53,15],53],[[51,43],51],[[51,44],51],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[50,54,1],[[29,[[25,[7]],12]]]],[[50,54,1,55],[[29,[12]]]],[[50,54,1,55],[[29,[12]]]],[[50,54,1],[[29,[[25,[7]],12]]]],[[50,54,1,3],[[29,[12]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[53,15],53],0,0,0,0,[58],[58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,37],[[29,[60,46]]]],[[59,50,50],60],[[59,[21,[[22,[37]]]]],[[29,[60,46]]]],[[],59],[58,58],[59,59],[[]],[[]],[60,58],[[],59],[[59,53],59],[[60,58,[24,[1]]],[[25,[8]]]],[[60,58,[24,[1]]],61],[[60,17],18],[[61,17],18],[[58,17],18],[[59,17],18],[60,50],[58,54],[58,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,58,[24,[1]]],15],[58,4],[37,[[29,[60,46]]]],[60,58],[[],59],[[[21,[[22,[37]]]]],[[29,[60,46]]]],[61,[[25,[8]]]],[60,4],[[58,60]],[[60,58]],[60,50],[58,54],[58,54],[[59,43],59],[[59,44],59],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[60,58,1],[[29,[[25,[8]],12]]]],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,0,0,0,0,[[62,15],62],[[62,15],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,37],[[29,[64,65]]]],[[63,66],[[29,[64,65]]]],[[63,[21,[[22,[37]]]]],[[29,[64,65]]]],[[63,[21,[[67,[66]]]]],[[29,[64,65]]]],[[],63],[[62,15],62],[[64,[24,[1]],41]],[[64,[24,[1]]],68],[64,4],[65,65],[64,64],[69,69],[62,62],[63,63],[[]],[[]],[[]],[[]],[[]],[[],62],[[63,62],63],[70,4],[68,4],[64,69],[64,41],[[],62],[[62,15],62],[[62,[25,[4]]],62],[[62,[25,[4]]],62],[[64,[24,[1]]],[[25,[8]]]],[[64,[24,[1]]],70],[[65,17],18],[[65,17],18],[[64,17],18],[[70,17],18],[[68,17],18],[[71,17],18],[[72,17],18],[[69,17],18],[[62,17],18],[[63,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,15],[62,15],[62,15],[64,62],[62,15],[62,[[25,[4]]]],[62,[[25,[4]]]],[62,15],[62,4],[62,19],[62,11],[62,[[25,[4]]]],[62,15],[62,[[25,[4]]]],[62,[[25,[56]]]],[62,15],[62,73],[64,74],[[62,15],62],[[62,4],62],[70,1],[68,1],[71,1],[72,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,15],[[64,[24,[1]]],15],[[62,19],62],[[62,11],62],[64,4],[69,4],[37,[[29,[64,65]]]],[64,69],[[],62],[[],63],[[[21,[[22,[37]]]]],[[29,[64,65]]]],[70,[[25,[8]]]],[68,[[25,[41]]]],[71,[[25,[6]]]],[72,[[25,[6]]]],[[62,[25,[4]]],62],[[62,15],62],[[62,[25,[4]]],62],[65,[[25,[5]]]],[64,4],[[62,[25,[56]]],62],[70,64],[68,64],[[69,64]],[[64,1],[[25,[8]]]],[[64,1,41]],[[64,69,1,41]],[[64,1],[[25,[7]]]],[[64,69,1],[[25,[7]]]],[[64,1,[21,[[25,[45]]]]],[[25,[5]]]],[[64,69,1,[21,[[25,[45]]]]],[[25,[5]]]],[[64,69,1],[[25,[8]]]],[72],[65,[[25,[4]]]],[65,[[25,[42]]]],[[64,[24,[1]]],71],[[64,[24,[1]],4],72],[64,[[25,[4]]]],[[63,43],63],[65,[[25,[75]]]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[62,15],62],[[62,73],62],[[64,1,3]],[[64,69,1,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[76,77,31],[[29,[77,78]]]],[[76,77,31,[25,[[79,[37]]]]],[[29,[77,78]]]],[76,[[29,[77,78]]]],[76,[[29,[77,78]]]],[[76,77,80],[[29,[77,78]]]],[76,[[29,[77,78]]]],[[76,81],[[29,[77,78]]]],[[76,[82,[81]]],[[29,[77,78]]]],[[76,[82,[77]]],[[29,[77,78]]]],[[76,[82,[77]]],[[29,[77,78]]]],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,77,77],[[29,[38,78]]]],[[83,37],[[29,[38,78]]]],[[83,66],[[29,[38,78]]]],[[83,[21,[[22,[37]]]]],[[29,[38,78]]]],[[83,[21,[[67,[66]]]]],[[29,[38,78]]]],[38,52],[[44,15],44],[76],[76,76],[44,44],[73,73],[83,83],[78,78],[38,38],[84,84],[85,85],[86,86],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[[],44],[[83,44],83],[76,5],[[],76],[[],44],[[],73],0,[[84,84],15],[[85,85],15],[[86,86],15],[[81,81],15],[[],15],[[],15],[[],15],[[],15],[[76,77],[[29,[5,78]]]],[[76,17],18],[[44,17],18],[[73,17],18],[[83,17],18],[[78,17],18],[[78,17],18],[[38,17],18],[[84,17],18],[[85,17],18],[[86,17],18],[[81,17],18],[[87,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,15],[76,88],[44,88],[44,[[25,[4]]]],[76,15],[44,15],[44,15],[76,[[25,[4]]]],[76,15],[44,15],[44,73],[38,74],[38,15],[38,15],[[81,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,15],[73,15],[84,15],[73,15],[38,15],[38,15],[[44,88],44],[38,88],[38,89],[38,89],[[85,[21,[19]],4],[[25,[77]]]],[[86,[21,[19]],4],[[25,[77]]]],[[81,[21,[19]],4],15],[[85,19],[[25,[77]]]],[[86,19],[[25,[77]]]],[[81,19],15],[[81,90],15],[76,4],[38,4],[[],38],[[],76],[[],44],[[],83],[37,[[29,[38,78]]]],[[[21,[[22,[37]]]]],[[29,[38,78]]]],[87,[[25,[5]]]],0,[[44,[25,[4]]],44],[[76,77,77],[[29,[78]]]],[76,4],[38,4],[38,87],0,[[44,15],44],[[76,88]],[[76,15]],[[76,[25,[4]]],[[29,[78]]]],[[76,15]],[[44,15],44],[78,[[25,[4]]]],[78,[[25,[42]]]],0,[38,77],[76,[[29,[5,78]]]],[[38,5],[[25,[77]]]],[38,77],[[38,77],84],[38,[[21,[84]]]],[[83,43],83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[44,15],44],[[44,73],44],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[29,[91,78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[92,37],[[29,[91,78]]]],[[92,38],[[29,[91,78]]]],[[92,[21,[[22,[37]]]]],[[29,[91,78]]]],[[],92],[93,93],[92,92],[91,91],[94,94],[[]],[[]],[[]],[[]],[[],93],[[92,93],92],[91,94],[91,41],[[],93],[[93,17],18],[[92,17],18],[[91,17],18],[[95,17],18],[[96,17],18],[[94,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[91,93],[91,38],[93,[[25,[56]]]],[93,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,4],[94,4],[[38,1],4],[[],[[29,[91,78]]]],[[],93],[[],92],[37,[[29,[91,78]]]],[91,94],[38,[[29,[91,78]]]],[[[21,[[22,[37]]]]],[[29,[91,78]]]],[95,[[25,[[29,[8,12]]]]]],[96,[[25,[[29,[41,12]]]]]],[91,4],[[93,[25,[56]]],93],[[94,91]],[[91,94]],[[92,43],92],[[92,44],92],[[]],[[]],[[]],[[]],[[91,94,[24,[1]],41],[[29,[12]]]],[[91,94,[24,[1]]],96],[[91,94,[24,[1]]],[[29,[[25,[8]],12]]]],[[91,94,[24,[1]]],95],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[91,94,[24,[1]]],[[29,[15,12]]]],[[91,94,1,41],[[29,[12]]]],[[91,94,1,[21,[[25,[45]]]]],[[29,[[25,[5]],12]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[93,4],93],0,0,0,0,0,0,[[],[[29,[97,78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[98,37],[[29,[97,78]]]],[[98,38],[[29,[97,78]]]],[[98,[21,[[22,[37]]]]],[[29,[97,78]]]],[[],98],[[97,99,[24,[1]],41]],[[97,99,[24,[1]]],100],[101,101],[98,98],[97,97],[99,99],[[]],[[]],[[]],[[]],[[],101],[[98,101],98],[97,99],[97,41],[[],101],[[97,99,[24,[1]]],[[25,[8]]]],[[97,99,[24,[1]]],102],[[101,17],18],[[98,17],18],[[97,17],18],[[102,17],18],[[100,17],18],[[99,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[97,101],[101,11],[97,38],[101,[[25,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[97,99,[24,[1]]],15],[[101,11],101],[99,4],[[],[[29,[97,78]]]],[[],101],[[],98],[37,[[29,[97,78]]]],[97,99],[38,[[29,[97,78]]]],[[[21,[[22,[37]]]]],[[29,[97,78]]]],[102,[[25,[8]]]],[100,[[25,[41]]]],[97,4],[[101,[25,[56]]],101],[[99,97]],[[97,99]],[[97,99,1,41]],[[97,99,1,[21,[[25,[45]]]]],[[25,[5]]]],[[98,43],98],[[98,44],98],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[97,99,1,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[52,4],[90,[[25,[30]]]],[90,[[25,[19]]]],[90,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[52,52],[[]],[[]],[[90,90],14],[[],52],[[52,90],103],[[],52],[4,90],[52,90],[[90,90],15],[[],15],[[90,17],18],[[52,17],18],[[104,17],18],[[105,17],18],[[103,17],18],[[]],[[]],[[]],[[]],[[]],[[52,19],19],[[52,90],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,19],15],[90,15],[52,15],[90,15],[52,104],[104,[[25,[90]]]],[105,[[25,[90]]]],[103,[[25,[90]]]],[[90,90],[[25,[14]]]],[[52,[26,[19]]],105],[[52,19,19]],[[],52],[52,4],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[19,90],0,0,0,0,0,0,[74,41],[74,4],[74,106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41],[41,41],[107,107],[74,74],[108,108],[109,109],[[]],[[]],[[]],[[]],[[]],[107,4],[109,4],[[],74],[74,41],[[],74],[74,4],[[41,37]],[[41,[21,[19]]]],[[41,17],18],[[107,17],18],[[74,17],18],[[108,17],18],[[108,17],18],[[109,17],18],[[106,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[41,4],[[25,[6]]]],[[41,37],[[25,[6]]]],[41,[[25,[8]]]],[41,74],[41,4],[[74,5],4],[74,4],[[41,[21,[19]],[21,[19]]],[[82,[19]]]],[[41,[21,[19]],[21,[19]],[82,[19]]]],[[41,37,37],27],[[41,37,37,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,15],[41,107],[74,41],[74,4],[110,[[29,[74,108]]]],[107,[[25,[[25,[6]]]]]],[109,[[25,[[25,[37]]]]]],[106,25],[41,[[25,[5]]]],[74,4],[[74,5],109],[[41,[25,[5]]]],[107],[109],[[74,5,4],[[25,[4]]]],[74,4],[41,[[21,[[25,[45]]]]]],[[74,5,4],25],[41,[[21,[[25,[45]]]]]],[108,[[25,[42]]]],[[74,5,37],[[25,[4]]]],[[74,5,4],[[25,[37]]]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,[[]],[[]],[[]],[[]],[111,111],[[]],[[112,17],18],[[111,17],18],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[[21,[19]],113,113,[82,[19]]]],[[37,113,113,27]],0,0,0,0,0,0,0,[[114,113],[[25,[8]]]],[[114,113],[[25,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[[]],[[115,17],18],[[116,17],18],[[117,17],18],[[114,17],18],[[[119,[118]],17],18],[[[120,[118]],17],18],[[[121,[118]],17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,119],[116,120],[117,121],[115,1],[116,1],[114,1],[119,1],[120,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[114,41,113],[[117,[113]]]],[[114,113],[[115,[113]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[114,113],[[116,[113]]]],[1,114],[[[115,[113]]],[[25,[[29,[7,12]]]]]],[[[116,[113]]],[[25,[[29,[8,12]]]]]],[[[117,[113]]],[[25,[[29,[41,12]]]]]],[[[119,[113]]],[[25,[7]]]],[[[120,[113]]],[[25,[8]]]],[[[121,[113]]],[[25,[41]]]],[[]],[[114,113],[[29,[[25,[8]],12]]]],[[114,113],[[29,[[25,[7]],12]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[]],[[]],[[[123,[122]]]],[[[123,[118,122]],17],18],[[]],[[[123,[122]]]],[[]],[[],123],[[],29],[[],29],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,124],[80,31],[89,[[29,[125]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[29,[125]]]],[80,80],[89,89],[126,126],[88,88],[125,125],[[]],[[]],[[]],[[]],[[]],[[89,80],15],[89,15],[89,15],[89,15],[89,15],[89,15],[89,15],[89,15],[89,15],[[],89],[[],88],[[],89],[[80,80],15],[[89,89],15],[[],15],[[],15],[[80,17],18],[[89,17],18],[[126,17],18],[[88,17],18],[[125,17],18],[[125,17],18],[[]],[[]],[[]],[[]],[[]],[31,[[25,[80]]]],[[],89],[88,19],[[89,80],89],[[89,89],89],[[]],[[]],[[]],[[]],[[]],[[]],[89,15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],[[29,[15,125]]]],[[88,[21,[19]],4],[[29,[15,125]]]],[[88,[21,[19]],4],15],[[88,[21,[19]],4],15],[[88,[21,[19]],4],[[29,[15,125]]]],[[88,[21,[19]],4],[[29,[15,125]]]],[[88,[21,[19]],4],[[29,[15,125]]]],[[88,[21,[19]],4],[[29,[15,125]]]],[89,126],[89,4],[[88,80,[21,[19]],4],15],[[88,89,[21,[19]],4],15],[[],88],[126,[[25,[80]]]],[[[21,[19]]],89],[[89,80],89],[80,80],[[89,80]],[[89,89]],[[88,19],88],[[89,80]],[[89,89]],[[89,89]],[80,89],[[89,89],89],[[]],[[]],[[]],[[]],[[]],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[89,89],89],[[89,[21,[19]]]],0,0,[[]],[[]],[[]],[[]],[[[128,[127,122]]],127],[[[128,[127,122]]],127],[[[129,[118]],17],18],[[[128,[[0,[127,118]],122]],17],18],[[]],[[]],[[[129,[127,122]]],[[128,[127,122]]]],[[]],[[]],[[],129],[[[128,[127,122]]]],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],0,[[]],[[]],[56,56],[[]],[[56,[21,[19]],6],[[25,[6]]]],[[56,17],18],[[]],[[11,66],[[25,[56]]]],[[11,[21,[[67,[66]]]]],[[25,[56]]]],[[]],[56,4],[[11,[21,[[22,[[21,[19]]]]]]],[[25,[56]]]],[[56,[21,[19]],6],[[25,[6]]]],[[]],[[],29],[[],29],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[130,131],[5,131],[77,131],[130,31],[5,31],[77,31],[130,32],[5,32],[77,32],[130,4],[5,4],[77,4],[132,32],[28,32],[133,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[130,130],[132,132],[77,77],[28,28],[133,133],[[]],[[]],[[]],[[]],[[]],[[]],[[45,45],14],[[130,130],14],[[77,77],14],[[],130],[[],77],[[45,45],15],[[130,130],15],[[132,132],15],[[77,77],15],[[28,28],15],[[133,133],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[45,17],18],[[130,17],18],[[132,17],18],[[132,17],18],[[77,17],18],[[28,17],18],[[28,17],18],[[133,17],18],[[133,17],18],[[]],[[]],[19,130],[[]],[19,77],[[]],[[]],[[]],[[[134,[19]]],[[29,[130,132]]]],[[[134,[19]]],[[29,[5,28]]]],[[[134,[19]]],[[29,[77,133]]]],[[[134,[19]]],130],[[[134,[19]]],5],[[[134,[19]]],77],[45,4],[[45,23]],[[130,23]],[[77,23]],[[]],[[]],[[]],[[]],[[]],[[]],[4,130],[4,5],[4,77],[4,[[25,[45]]]],[4,[[29,[130,132]]]],[4,[[29,[5,28]]]],[4,[[29,[77,133]]]],[4,130],[4,5],[4,77],[130,4],[5,4],[77,4],[[45,45],[[25,[14]]]],[[130,130],[[25,[14]]]],[[77,77],[[25,[14]]]],[130,[[134,[19]]]],[5,[[134,[19]]]],[77,[[134,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],29],[31,[[29,[130,132]]]],[[],29],[30,[[29,[130,132]]]],[32,[[29,[130,132]]]],[4,[[29,[130,132]]]],[[],29],[30,[[29,[77,133]]]],[4,[[29,[77,133]]]],[[],29],[32,[[29,[77,133]]]],[31,[[29,[77,133]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[57,2],57],[[]],[[]],[57,57],[[]],[[57,17],18],[[]],[1,57],[1,57],[57,2],[57,[[25,[19]]]],[[]],[[57,[25,[19]]],57],[[],57],[[]],[[],29],[[],29],[[],33],0,[[]],[[]],[[43,15],43],[43,43],[[]],[[43,15],43],[[],43],[[43,15],43],[[43,17],18],[[]],[43,15],[43,15],[43,15],[43,15],[43,19],[43,15],[43,31],[43,15],[43,15],[43,15],[43,15],[[43,15],43],[[]],[[43,19],43],[[43,15],43],[[43,31],43],[[],43],[[43,15],43],[37,[[29,[66,75]]]],[[[21,[[22,[37]]]]],[[29,[[82,[66]],75]]]],[[[21,[[22,[37]]]],43],[[29,[[82,[66]],75]]]],[[37,43],[[29,[66,75]]]],[[43,15],43],[[]],[[],29],[[],29],[[],33],[[43,15],43],[[43,15],43],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[[135,[[0,[118,20]],118]],17],18],[[136,17],18],[[136,17],18],[[137,17],18],[[137,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],33],[[],33],[[],33]],"c":[907,969],"p":[[3,"Input"],[4,"Anchored"],[3,"PatternSet"],[15,"usize"],[3,"PatternID"],[3,"Span"],[3,"HalfMatch"],[3,"Match"],[3,"PatternSetInsertError"],[3,"PatternSetIter"],[4,"MatchKind"],[3,"MatchError"],[4,"MatchErrorKind"],[4,"Ordering"],[15,"bool"],[3,"Range"],[3,"Formatter"],[6,"Result"],[15,"u8"],[8,"Sized"],[15,"slice"],[8,"AsRef"],[8,"Hasher"],[8,"Into"],[4,"Option"],[8,"RangeBounds"],[3,"String"],[3,"PatternIDError"],[4,"Result"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"TypeId"],[3,"DFA"],[3,"BuildError"],[3,"Builder"],[15,"str"],[3,"NFA"],[3,"Config"],[3,"Cache"],[3,"Captures"],[8,"Error"],[3,"Config"],[3,"Config"],[3,"NonMaxUsize"],[3,"BuildError"],[4,"StartError"],[3,"CacheError"],[3,"LazyStateID"],[3,"DFA"],[3,"Builder"],[3,"ByteClasses"],[3,"Config"],[3,"Cache"],[3,"OverlappingState"],[3,"Prefilter"],[3,"Config"],[3,"Cache"],[3,"Builder"],[3,"Regex"],[3,"FindMatches"],[3,"Config"],[3,"Builder"],[3,"Regex"],[3,"BuildError"],[3,"Hir"],[8,"Borrow"],[3,"CapturesMatches"],[3,"Cache"],[3,"FindMatches"],[3,"Split"],[3,"SplitN"],[4,"WhichCaptures"],[3,"GroupInfo"],[4,"Error"],[3,"Builder"],[3,"StateID"],[3,"BuildError"],[3,"Arc"],[4,"Look"],[3,"Transition"],[3,"Vec"],[3,"Compiler"],[4,"State"],[3,"SparseTransitions"],[3,"DenseTransitions"],[3,"PatternIter"],[3,"LookMatcher"],[3,"LookSet"],[3,"Unit"],[3,"BoundedBacktracker"],[3,"Builder"],[3,"Config"],[3,"Cache"],[3,"TryFindMatches"],[3,"TryCapturesMatches"],[3,"PikeVM"],[3,"Builder"],[3,"Cache"],[3,"CapturesMatches"],[3,"Config"],[3,"FindMatches"],[3,"ByteClassElements"],[3,"ByteClassIter"],[3,"ByteClassRepresentatives"],[3,"GroupInfoAllNames"],[3,"CapturesPatternIter"],[3,"GroupInfoError"],[3,"GroupInfoPatternNames"],[8,"IntoIterator"],[3,"DebugByte"],[3,"DebugHaystack"],[8,"FnMut"],[3,"Searcher"],[3,"TryHalfMatchesIter"],[3,"TryMatchesIter"],[3,"TryCapturesIter"],[8,"Debug"],[3,"HalfMatchesIter"],[3,"MatchesIter"],[3,"CapturesIter"],[8,"Fn"],[3,"Lazy"],[15,"char"],[3,"UnicodeWordBoundaryError"],[3,"LookSetIter"],[8,"Send"],[3,"PoolGuard"],[3,"Pool"],[3,"SmallIndex"],[15,"i32"],[3,"SmallIndexError"],[3,"StateIDError"],[15,"array"],[3,"AlignAs"],[3,"SerializeError"],[3,"DeserializeError"],[13,"Quit"],[13,"HaystackTooLong"],[13,"UnsupportedAnchored"],[13,"GaveUp"],[13,"Quit"],[13,"Cache"],[13,"UnsupportedAnchored"],[13,"BinaryUnion"],[13,"Union"],[13,"Capture"],[13,"Look"],[13,"Match"],[13,"ByteRange"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","t":"ENDDNDALLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLALLLLLFFFFLLLLLLFLLLLLLLLLLLLLLLFLLLLLALNNDNNNDNEENNNNNNNNNDNNNDEDNNDNENNEDEEDDNDNEENNDDNNNNNNNNNNNNNQDENNNNNNENNNNNNDNDENNDNENNNNNNNNENNNNDNNENNNNNNNNNNNNNQNDNNNNDNNNNENDEDNNNDNENNNNNNNNNNNNNNNNNNNNIDNNNNNNNNNNNNNLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMMMMMLMMMMMLLMMALLLALLMLLLLMMMMMMMMMMMMMMMMMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLNNNNNNNNNNDNDENDDDDDDNENNNNQDEDENNDNENDDQDDNNNNNNNNNNINNNNNNNNNNNNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLMLLLLLMLLLLMLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLEDDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDEDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLL","n":["Error","Parse","Parser","ParserBuilder","Translate","UnicodeWordError","ast","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","case_insensitive","clone","clone","clone","clone_into","clone_into","clone_into","crlf","default","dot_matches_new_line","eq","equivalent","escape","escape_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hir","ignore_whitespace","into","into","into","into","is_escapeable_character","is_meta_character","is_word_byte","is_word_character","line_terminator","multi_line","nest_limit","new","new","octal","parse","parse","swap_greed","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_is_word_character","type_id","type_id","type_id","type_id","unicode","utf8","utf8","Alnum","Alpha","Alternation","Alternation","Ascii","Ascii","Assertion","Assertion","AssertionKind","Ast","AtLeast","Bell","BinaryOp","Blank","Bounded","Bracketed","CRLF","CaptureIndex","CaptureLimitExceeded","CaptureName","CaptureName","CarriageReturn","CaseInsensitive","ClassAscii","ClassAsciiKind","ClassBracketed","ClassBracketed","ClassEscapeInvalid","ClassPerl","ClassPerl","ClassPerlKind","ClassRangeInvalid","ClassRangeLiteral","ClassSet","ClassSetBinaryOp","ClassSetBinaryOpKind","ClassSetItem","ClassSetRange","ClassSetUnion","ClassUnclosed","ClassUnicode","ClassUnicode","ClassUnicodeKind","ClassUnicodeOpKind","Cntrl","Colon","Comment","Concat","Concat","DecimalEmpty","DecimalInvalid","Difference","Digit","Digit","Dot","DotMatchesNewLine","Empty","Empty","EndLine","EndText","Equal","Err","Error","ErrorKind","EscapeHexEmpty","EscapeHexInvalid","EscapeHexInvalidDigit","EscapeUnexpectedEof","EscapeUnrecognized","Exactly","Flag","Flag","FlagDanglingNegation","FlagDuplicate","FlagRepeatedNegation","FlagUnexpectedEof","FlagUnrecognized","Flags","Flags","FlagsItem","FlagsItemKind","FormFeed","Graph","Group","Group","GroupKind","GroupNameDuplicate","GroupNameEmpty","GroupNameInvalid","GroupNameUnexpectedEof","GroupUnclosed","GroupUnopened","HexBrace","HexFixed","HexLiteralKind","IgnoreWhitespace","Intersection","Item","LineFeed","Literal","Literal","Literal","LiteralKind","Lower","Meta","MultiLine","Named","NamedValue","Negation","NestLimitExceeded","NonCapturing","NotEqual","NotWordBoundary","Octal","OneLetter","OneOrMore","Output","Perl","Position","Print","Punct","Range","Range","Repetition","Repetition","RepetitionCountDecimalEmpty","RepetitionCountInvalid","RepetitionCountUnclosed","RepetitionKind","RepetitionMissing","RepetitionOp","RepetitionRange","SetFlags","Space","Space","Space","Span","Special","SpecialLiteralKind","SpecialWordBoundaryUnclosed","SpecialWordBoundaryUnrecognized","SpecialWordOrRepetitionUnexpectedEof","StartLine","StartText","Superfluous","SwapGreed","SymmetricDifference","Tab","Unicode","Unicode","UnicodeClassInvalid","UnicodeLong","UnicodeShort","Union","UnsupportedBackreference","UnsupportedLookAround","Upper","Verbatim","VerticalTab","Visitor","WithComments","Word","Word","WordBoundary","WordBoundaryEnd","WordBoundaryEndAngle","WordBoundaryEndHalf","WordBoundaryStart","WordBoundaryStartAngle","WordBoundaryStartHalf","X","Xdigit","ZeroOrMore","ZeroOrOne","add_item","alternation","assertion","ast","ast","ast","asts","asts","auxiliary_span","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","c","capture_index","class_bracketed","class_perl","class_unicode","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","column","comment","comments","concat","digits","dot","drop","drop","empty","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","flag_state","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_name","greedy","group","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ast","into_ast","into_item","is_capturing","is_empty","is_empty","is_equal","is_negated","is_negation","is_one_line","is_valid","is_valid","items","items","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","lhs","line","literal","name","negated","negated","negated","negated","new","new","offset","op","parse","partial_cmp","partial_cmp","pattern","print","push","repetition","rhs","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","splat","start","start","start","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","visit","visit_alternation_in","visit_alternation_in","visit_class_set_binary_op_in","visit_class_set_binary_op_in","visit_class_set_binary_op_post","visit_class_set_binary_op_post","visit_class_set_binary_op_pre","visit_class_set_binary_op_pre","visit_class_set_item_post","visit_class_set_item_post","visit_class_set_item_pre","visit_class_set_item_pre","visit_concat_in","visit_concat_in","visit_post","visit_post","visit_pre","visit_pre","with_end","with_start","name","op","value","original","original","original","name","starts_with_p","Parser","ParserBuilder","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","ignore_whitespace","into","into","nest_limit","new","new","octal","parse","parse_with_comments","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Printer","borrow","borrow_mut","fmt","from","into","new","print","try_from","try_into","type_id","Alternation","AnyByte","AnyByteExcept","AnyByteExceptCRLF","AnyByteExceptLF","AnyChar","AnyCharExcept","AnyCharExceptCRLF","AnyCharExceptLF","Bytes","Capture","Capture","CaseFoldError","Class","Class","ClassBytes","ClassBytesIter","ClassBytesRange","ClassUnicode","ClassUnicodeIter","ClassUnicodeRange","Concat","Dot","Empty","End","EndCRLF","EndLF","Err","Error","ErrorKind","Hir","HirKind","InvalidLineTerminator","InvalidUtf8","Literal","Literal","Look","Look","LookSet","LookSetIter","Output","Properties","Repetition","Repetition","Start","StartCRLF","StartLF","Unicode","UnicodeCaseUnavailable","UnicodeNotAllowed","UnicodePerlClassNotFound","UnicodePropertyNotFound","UnicodePropertyValueNotFound","Visitor","WordAscii","WordAsciiNegate","WordEndAscii","WordEndHalfAscii","WordEndHalfUnicode","WordEndUnicode","WordStartAscii","WordStartHalfAscii","WordStartHalfUnicode","WordStartUnicode","WordUnicode","WordUnicodeNegate","alternation","as_char","as_repr","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","case_fold_simple","case_fold_simple","case_fold_simple","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","concat","contains","contains_anchor","contains_anchor_crlf","contains_anchor_haystack","contains_anchor_lf","contains_anchor_line","contains_word","contains_word_ascii","contains_word_unicode","default","default","default","difference","difference","dot","drop","empty","empty","empty","empty","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explicit_captures_len","fail","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_repr","full","greedy","index","insert","intersect","intersect","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_kind","is_alternation_literal","is_ascii","is_ascii","is_empty","is_empty","is_literal","is_utf8","is_utf8","iter","iter","iter","kind","kind","len","len","len","literal","literal","literal","literal","literal","look","look_set","look_set_prefix","look_set_prefix_any","look_set_suffix","look_set_suffix_any","max","maximum_len","maximum_len","maximum_len","maximum_len","memory_usage","min","minimum_len","minimum_len","minimum_len","minimum_len","name","negate","negate","negate","new","new","new","new","next","next","next","partial_cmp","partial_cmp","pattern","print","properties","push","push","ranges","ranges","read_repr","remove","repetition","reversed","set_insert","set_intersect","set_remove","set_subtract","set_union","singleton","span","start","start","start","start","static_explicit_captures_len","sub","sub","subs","subtract","symmetric_difference","symmetric_difference","to_byte_class","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_unicode_class","translate","try_case_fold_simple","try_case_fold_simple","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","visit","visit_alternation_in","visit_alternation_in","visit_concat_in","visit_concat_in","visit_post","visit_post","visit_pre","visit_pre","with","write_repr","ExtractKind","Extractor","Literal","Prefix","Seq","Suffix","as_bytes","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cross_forward","cross_reverse","dedup","default","default","empty","eq","eq","equivalent","equivalent","exact","extend","extract","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","inexact","infinite","into","into","into","into","into_bytes","is_empty","is_empty","is_exact","is_exact","is_finite","is_inexact","is_prefix","is_suffix","keep_first_bytes","keep_first_bytes","keep_last_bytes","keep_last_bytes","kind","len","len","limit_class","limit_literal_len","limit_repeat","limit_total","literals","longest_common_prefix","longest_common_suffix","make_inexact","make_inexact","make_infinite","max_cross_len","max_literal_len","max_union_len","min_literal_len","minimize_by_preference","new","new","optimize_for_prefix_by_preference","optimize_for_suffix_by_preference","partial_cmp","push","rank","reverse","reverse_literals","singleton","sort","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union_into_empty","Printer","borrow","borrow_mut","fmt","from","into","new","print","try_from","try_into","type_id","Translator","TranslatorBuilder","borrow","borrow","borrow_mut","borrow_mut","build","case_insensitive","clone","clone","clone_into","clone_into","crlf","default","dot_matches_new_line","fmt","fmt","from","from","into","into","line_terminator","multi_line","new","new","swap_greed","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","unicode","utf8","Four","One","Three","Two","Utf8Range","Utf8Sequence","Utf8Sequences","as_slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","end","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","len","matches","matches","new","next","partial_cmp","partial_cmp","reverse","start","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"regex_syntax"],[82,"regex_syntax::ast"],[927,"regex_syntax::ast::ClassUnicodeKind"],[930,"regex_syntax::ast::ErrorKind"],[933,"regex_syntax::ast::GroupKind"],[935,"regex_syntax::ast::parse"],[968,"regex_syntax::ast::print"],[979,"regex_syntax::hir"],[1445,"regex_syntax::hir::literal"],[1560,"regex_syntax::hir::print"],[1571,"regex_syntax::hir::translate"],[1608,"regex_syntax::utf8"]],"d":["This error type encompasses any error that can be returned …","An error that occurred while translating concrete syntax …","A convenience parser for regular expressions.","A builder for a regular expression parser.","An error that occurred while translating abstract syntax …","An error that occurs when the Unicode-aware <code>\\\\w</code> class is …","Defines an abstract syntax for regular expressions.","","","","","","","","","Build a parser from this configuration with the given …","Enable or disable the case insensitive flag by default.","","","","","","","Enable or disable the CRLF mode flag by default.","","Enable or disable the “dot matches any character” flag …","","","Escapes all regular expression meta characters in <code>text</code>.","Escapes all meta characters in <code>text</code> and writes the result …","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Defines a high-level intermediate (HIR) representation for …","Enable verbose mode in the regular expression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the given character can be escaped in a …","Returns true if the given character has significance in a …","Returns true if and only if the given character is an …","Returns true if and only if the given character is a …","Sets the line terminator for use with <code>(?u-s:.)</code> and <code>(?-us:.)</code>…","Enable or disable the multi-line matching flag by default.","Set the nesting limit for this parser.","Create a new parser builder with a default configuration.","Create a new parser with a default configuration.","Whether to support octal syntax or not.","A convenience routine for parsing a regex using default …","Parse the regular expression into a high level intermediate","Enable or disable the “swap greed” flag by default.","","","","","","","","","","","","","","Returns true if and only if the given character is a …","","","","","Enable or disable the Unicode flag (<code>u</code>) by default.","Converts ranges of Unicode scalar values to equivalent …","When disabled, translation will permit the construction of …","<code>[0-9A-Za-z]</code>","<code>[A-Za-z]</code>","An alternation of regular expressions.","An alternation of regular expressions.","<code>[\\\\x00-\\\\x7F]</code>","An ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.","A single zero-width assertion.","A single zero-width assertion.","An assertion kind.","An abstract syntax tree for a single regular expression.","<code>{m,}</code>","Bell, spelled <code>\\\\a</code> (<code>\\\\x07</code>).","A single binary operation (i.e., &amp;&amp;, – or ~~).","<code>[ \\\\t]</code>","<code>{m,n}</code>","A bracketed character class set, which may contain zero or …","<code>R</code>","<code>(a)</code>","The capturing group limit was exceeded.","A capture name.","<code>(?&lt;name&gt;a)</code> or <code>(?P&lt;name&gt;a)</code>","Carriage return, spelled <code>\\\\r</code> (<code>\\\\x0D</code>).","<code>i</code>","An ASCII character class.","The available ASCII character classes.","A bracketed character class, e.g., <code>[a-z0-9]</code>.","A single bracketed character class set, which may contain …","An invalid escape sequence was found in a character class …","A Perl character class.","A single perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.","The available Perl character classes.","An invalid character class range was found. An invalid …","An invalid range boundary was found in a character class. …","A character class set.","A Unicode character class set operation.","The type of a Unicode character class set operation.","A single component of a character class set.","A single character class range in a set.","A union of items inside a character class set.","An opening <code>[</code> was found with no corresponding closing <code>]</code>.","A Unicode character class.","A single Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.","The available forms of Unicode character classes.","The type of op used in a Unicode character class.","<code>[\\\\x00-\\\\x1F\\\\x7F]</code>","A property set to a specific value using a colon, e.g., …","A comment from a regular expression with an associated …","A concatenation of regular expressions.","A concatenation of regular expressions.","Note that this error variant is no longer used. Namely, a …","An invalid decimal number was given where one was expected.","The difference of two sets, e.g., <code>\\\\pN--[0-9]</code>.","Decimal numbers.","<code>[0-9]</code>","The “any character” class.","<code>s</code>","An empty regex that matches everything.","An empty item.","<code>$</code>","<code>\\\\z</code>","A property set to a specific value, e.g., <code>\\\\p{scx=Katakana}</code>.","An error that visiting an AST might return.","An error that occurred while parsing a regular expression …","The type of an error that occurred while building an AST.","A bracketed hex literal was empty.","A bracketed hex literal did not correspond to a Unicode …","An invalid hexadecimal digit was found.","EOF was found before an escape sequence was completed.","An unrecognized escape sequence.","<code>{m}</code>","A single flag.","A single flag in a group.","A dangling negation was used when setting flags, e.g., <code>i-</code>.","A flag was used twice, e.g., <code>i-i</code>.","The negation operator was used twice, e.g., <code>-i-s</code>.","Expected a flag but got EOF, e.g., <code>(?</code>.","Unrecognized flag, e.g., <code>a</code>.","A group of flags.","A set of flags, e.g., <code>(?is)</code>.","A single item in a group of flags.","The kind of an item in a group of flags.","Form feed, spelled <code>\\\\f</code> (<code>\\\\x0C</code>).","<code>[!-~]</code>","A grouped regular expression.","A grouped regular expression.","The kind of a group.","A duplicate capture name was found.","A capture group name is empty, e.g., <code>(?P&lt;&gt;abc)</code>.","An invalid character was seen for a capture group name. …","A closing <code>&gt;</code> could not be found for a capture group name.","An unclosed group, e.g., <code>(ab</code>.","An unopened group, e.g., <code>ab)</code>.","The literal is written as a hex code with a bracketed …","The literal is written as a hex code with a fixed number …","The type of a Unicode hex literal.","<code>x</code>","The intersection of two sets, e.g., <code>\\\\pN&amp;&amp;[a-z]</code>.","An item, which can be a single literal, range, nested …","Line feed, spelled <code>\\\\n</code> (<code>\\\\x0A</code>).","A single literal expression.","A single character literal, which includes escape …","A single literal.","The kind of a single literal expression.","<code>[a-z]</code>","The literal is written as an escape because it is …","<code>m</code>","A binary property, general category or script. The string …","A property name and an associated value.","A negation operator applied to all subsequent flags in the …","The nest limit was exceeded. The limit stored here is the …","<code>(?:a)</code> and <code>(?i:a)</code>","A property that isn’t a particular value, e.g., …","<code>\\\\B</code>","The literal is written as an octal escape, e.g., <code>\\\\141</code>.","A one letter abbreviated class, e.g., <code>\\\\pN</code>.","<code>+</code>","The result of visiting an AST.","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.","A single position in a regular expression.","<code>[ -~]</code>","<code>[!-/:-@\\\\[-</code>{-~]`","A range between two literals.","<code>{m,n}</code>","A repetition operation applied to a regular expression.","A repetition operator applied to an arbitrary regular …","An opening <code>{</code> was not followed by a valid decimal value. …","The range provided in a counted repetition operator is …","An opening <code>{</code> was found with no corresponding closing <code>}</code>.","The kind of a repetition operator.","A repetition operator was applied to a missing …","The repetition operator itself.","A range repetition operator.","A group of flags that is not applied to a particular …","Space, spelled <code>\\\\ </code> (<code>\\\\x20</code>). Note that this can only appear …","Whitespace.","<code>[\\\\t\\\\n\\\\v\\\\f\\\\r ]</code>","Span represents the position information of a single AST …","The literal is written as a specially recognized escape, …","The type of a special literal.","The special word boundary syntax, <code>\\\\b{something}</code>, was used, …","The special word boundary syntax, <code>\\\\b{something}</code>, was used, …","The syntax <code>\\\\b{</code> was observed, but afterwards the end of the …","<code>^</code>","<code>\\\\A</code>","The literal is written as an escape despite the fact that …","<code>U</code>","The symmetric difference of two sets. The symmetric …","Tab, spelled <code>\\\\t</code> (<code>\\\\x09</code>).","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.","<code>u</code>","The Unicode class is not valid. This typically occurs when …","A <code>\\\\U</code> prefix. When used without brackets, this form is …","A <code>\\\\u</code> prefix. When used without brackets, this form is …","A union of items.","When octal support is disabled, this error is produced …","When syntax similar to PCRE’s look-around is used, this …","<code>[A-Z]</code>","The literal is written verbatim, e.g., <code>a</code> or <code>☃</code>.","Vertical tab, spelled <code>\\\\v</code> (<code>\\\\x0B</code>).","A trait for visiting an abstract syntax tree (AST) in …","An abstract syntax tree for a singular expression along …","Word characters.","<code>[0-9A-Za-z_]</code>","<code>\\\\b</code>","<code>\\\\b{end}</code>","<code>\\\\&gt;</code> (alias for <code>\\\\b{end}</code>)","<code>\\\\b{end-half}</code>","<code>\\\\b{start}</code>","<code>\\\\&lt;</code> (alias for <code>\\\\b{start}</code>)","<code>\\\\b{start-half}</code>","A <code>\\\\x</code> prefix. When used without brackets, this form is …","<code>[0-9A-Fa-f]</code>","<code>*</code>","<code>?</code>","Add the given item to this sequence of flags.","Create a “alternation” AST item.","Create a “assertion” AST item.","The actual ast.","The regular expression under repetition.","The regular expression in this group.","The alternate regular expressions.","The concatenation regular expressions.","Return an auxiliary span. This span exists only for some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this literal was written as a <code>\\\\x</code> hex escape, then this …","The Unicode scalar value corresponding to this literal.","Returns the capture index of this group, if this is a …","Create a “bracketed class” AST item.","Create a “Perl class” AST item.","Create a “Unicode class” AST item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The approximate column number, starting at <code>1</code>.","The comment text, starting with the first character …","All comments found in the original regular expression.","Create a “concat” AST item.","The number of digits that must be used with this literal …","Create a “dot” AST item.","","","Create an “empty” AST item.","The end byte offset.","The end of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …","Returns the state of the given flag in this set.","Create a “flags” AST item.","If this group is non-capturing, then this returns the …","The actual sequence of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the corresponding ClassAsciiKind variant for the …","Whether this operation was applied greedily or not.","Create a “group” AST item.","The capture index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return this alternation as an AST.","Return this concatenation as an AST.","Return this union as a character class set item.","Returns true if and only if this group is capturing.","Returns true if and only if this span is empty. That is, …","Return true if and only if this Ast is empty.","Whether the op is an equality op or not.","Returns true if this class has been negated.","Returns true if and only if this item is a negation …","Returns true if and only if this span occurs on a single …","Returns true if and only if this character class range is …","Returns true if and only if this repetition range is valid.","The sequence of items that make up this union.","A sequence of flag items. Each item is either a flag or a …","Return the type of this error.","The kind of this literal.","The kind of Perl class.","The kind of ASCII class.","The kind of Unicode class.","The type of this set. A set is either a normal union of …","The type of this set operation.","The assertion kind, e.g., <code>\\\\b</code> or <code>^</code>.","The type of operation.","The kind of this group.","The kind of this item.","The left hand side of the operation.","The line number, starting at <code>1</code>.","Create a “literal” AST item.","The capture name.","Whether the class is negated or not. e.g., <code>\\\\d</code> is not …","Whether the class is negated or not. e.g., <code>[[:alpha:]]</code> is …","Whether this class is negated or not.","Whether this class is negated or not. e.g., <code>[a]</code> is not …","Create a new span with the given positions.","Create a new position with the given information.","The absolute offset of this position, starting at <code>0</code> from …","The actual operation.","This module provides a regular expression parser.","","","The original pattern string in which this error occurred.","This module provides a regular expression printer for <code>Ast</code>.","Push a new item in this union.","Create a “repetition” AST item.","The right hand side of the operation.","Return the span at which this error occurred.","Return the span of this abstract syntax tree.","Return the span of this character class set.","Return the span of this character class set item.","The span of this comment, including the beginning <code>#</code> and …","The span of this alternation.","The span of this concatenation.","The span of this literal.","The span of this class.","The span of this class.","The span of this class.","The span of this class.","The span of this range.","The span of the items in this operation. e.g., the <code>a-z0-9</code> …","The span of this operation. e.g., the <code>a-z--[h-p]</code> in …","The span of this assertion.","The span of this operation.","The span of this operator. This includes things like <code>+</code>, <code>*?</code> …","The span of this group.","The span of this capture name.","The span of these flags, including the grouping …","The span of this group of flags.","The span of this item.","Create a new span using the given position as the start …","This method is called before beginning traversal of the …","This method is called before beginning traversal of the …","The start byte offset.","The start of this rangeuild a set from a union.","Executes an implementation of <code>Visitor</code> in constant stack …","This method is called between child nodes of an <code>Alternation</code>…","This method is called between child nodes of an <code>Alternation</code>…","This method is called between the left hand and right hand …","This method is called between the left hand and right hand …","This method is called on every <code>ClassSetBinaryOp</code> after …","This method is called on every <code>ClassSetBinaryOp</code> after …","This method is called on every <code>ClassSetBinaryOp</code> before …","This method is called on every <code>ClassSetBinaryOp</code> before …","This method is called on every <code>ClassSetItem</code> after …","This method is called on every <code>ClassSetItem</code> after …","This method is called on every <code>ClassSetItem</code> before …","This method is called on every <code>ClassSetItem</code> before …","This method is called between child nodes of a …","This method is called between child nodes of a …","This method is called on an <code>Ast</code> after descending all of …","This method is called on an <code>Ast</code> after descending all of …","This method is called on an <code>Ast</code> before descending into …","This method is called on an <code>Ast</code> before descending into …","Create a new span by replacing the ending the position …","Create a new span by replacing the starting the position …","The property name (which may be empty).","The type of Unicode op used to associate <code>name</code> with <code>value</code>.","The property value (which may be empty).","The position of the original flag. The error position …","The position of the original negation operator. The error …","The position of the initial occurrence of the capture …","The capture name.","True if the <code>?P&lt;</code> syntax is used and false if the <code>?&lt;</code> syntax …","A regular expression parser.","A builder for a regular expression parser.","","","","","Build a parser from this configuration with the given …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Enable verbose mode in the regular expression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the nesting limit for this parser.","Create a new parser builder with a default configuration.","Create a new parser with a default configuration.","Whether to support octal syntax or not.","Parse the regular expression into an abstract syntax tree.","Parse the regular expression and return an abstract syntax …","","","","","","","","","A printer for a regular expression abstract syntax tree.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new printer.","Print the given <code>Ast</code> to the given writer. The writer must …","","","","An alternation of expressions.","Matches any byte value.","Matches any byte value except for the <code>u8</code> given.","Matches any byte value except for <code>\\\\r</code> and <code>\\\\n</code>.","Matches any byte value except for <code>\\\\n</code>.","Matches the UTF-8 encoding of any Unicode scalar value.","Matches the UTF-8 encoding of any Unicode scalar value …","Matches the UTF-8 encoding of any Unicode scalar value …","Matches the UTF-8 encoding of any Unicode scalar value …","A set of characters represented by arbitrary bytes (one …","The high-level intermediate representation for a capturing …","A capturing group, which contains a sub-expression.","An error that occurs when Unicode-aware simple case …","The high-level intermediate representation of a character …","A single character class that matches any of the …","A set of characters represented by arbitrary bytes.","An iterator over all ranges in a byte character class.","A single range of characters represented by arbitrary …","A set of characters represented by Unicode scalar values.","An iterator over all ranges in a Unicode character class.","A single range of characters represented by Unicode scalar …","A concatenation of expressions.","A type describing the different flavors of <code>.</code>.","The empty regular expression, which matches everything, …","Match the end of text. Specifically, this matches at the …","Match the end of a line or the end of text. Specifically, …","Match the end of a line or the end of text. Specifically, …","An error that visiting an HIR might return.","An error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.","The type of an error that occurred while building an <code>Hir</code>.","A high-level intermediate representation (HIR) for a …","The underlying kind of an arbitrary <code>Hir</code> expression.","This error occurs when one uses a non-ASCII byte for a …","This error occurs when translating a pattern that could …","The high-level intermediate representation of a literal.","A literalstring that matches exactly these bytes.","The high-level intermediate representation for a …","A look-around assertion. A look-around match always has …","A set of look-around assertions.","An iterator over all look-around assertions in a <code>LookSet</code>.","The result of visiting an HIR.","A type that collects various properties of an HIR value.","The high-level intermediate representation of a repetition …","A repetition operation applied to a sub-expression.","Match the beginning of text. Specifically, this matches at …","Match the beginning of a line or the beginning of text. …","Match the beginning of a line or the beginning of text. …","A set of characters represented by Unicode scalar values.","This occurs when the Unicode simple case mapping tables …","This error occurs when a Unicode feature is used when …","This occurs when a Unicode-aware Perl character class (<code>\\\\w</code>, …","This occurs when an unrecognized Unicode property name …","This occurs when an unrecognized Unicode property value …","A trait for visiting the high-level IR (HIR) in depth …","Match an ASCII-only word boundary. That is, this matches a …","Match an ASCII-only negation of a word boundary.","Match the end of an ASCII-only word boundary. That is, …","Match the end half of an ASCII-only word boundary. That …","Match the end half of a Unicode word boundary. That is, …","Match the end of a Unicode word boundary. That is, this …","Match the start of an ASCII-only word boundary. That is, …","Match the start half of an ASCII-only word boundary. That …","Match the start half of a Unicode word boundary. That is, …","Match the start of a Unicode word boundary. That is, this …","Match a Unicode-aware word boundary. That is, this matches …","Match a Unicode-aware negation of a word boundary.","Returns the alternation of the given expressions.","Returns a convenient single codepoint representation of …","Return the underlying representation of this look-around …","The underlying representation this set is exposed to make …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a capture HIR expression.","Apply Unicode simple case folding to this character class, …","Expand this character class such that it contains all case …","Expand this character class such that it contains all case …","Creates a class HIR expression. The class may either be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the concatenation of the given expressions.","Returns true if and only if the given look-around …","Returns true if and only if this set contains any anchor …","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any “…","Returns true if and only if this set contains any word …","Returns true if and only if this set contains any ASCII …","Returns true if and only if this set contains any Unicode …","","","","Subtract the given character class from this character …","Subtract the given byte class from this byte class, in …","Returns an HIR expression for <code>.</code>.","","Returns an empty HIR expression.","Create a new class with no ranges.","Create a new class with no ranges.","Create an empty set of look-around assertions.","Return the end of this range.","Return the end of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the total number of explicit capturing groups in …","Returns an HIR expression that can never match anything. …","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Given the underlying representation of a <code>Look</code> value, …","Create a full set of look-around assertions.","Whether this repetition operator is greedy or not. A …","The capture index of the capture.","Return a new set that is equivalent to the original, but …","Intersect this character class with the given character …","Intersect this byte class with the given byte class, in …","Returns a new set that is the intersection of this and the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Consumes ownership of this HIR expression and returns its …","Return true if and only if this HIR is either a simple …","Returns true if and only if this character class will …","Returns true if and only if this character class will …","Returns true if and only if this character class is empty. …","Returns true if and only if this set is empty.","Return true if and only if this HIR is a simple literal. …","Returns true if and only if this character class will only …","Return true if and only if the corresponding HIR will …","Return an iterator over all ranges in this class.","Return an iterator over all ranges in this class.","Returns an iterator over all of the look-around assertions …","Return the type of this error.","Returns a reference to the underlying HIR kind.","Returns the number of codepoints in this range.","Returns the number of bytes in this range.","Returns the total number of look-around assertions in this …","Provides literal extraction from <code>Hir</code> expressions.","Creates a literal HIR expression.","If this class consists of exactly one element (whether a …","If this class consists of exactly one codepoint, then …","If this class consists of exactly one byte, then return it …","Creates a look-around assertion HIR expression.","Returns a set of all look-around assertions that appear at …","Returns a set of all look-around assertions that appear as …","Returns a set of all look-around assertions that appear as …","Returns a set of all look-around assertions that appear as …","Returns a set of all look-around assertions that appear as …","The maximum range of the repetition.","Returns the length, in bytes, of the longest string …","Returns the length, in bytes, of the longest string …","Returns the length, in bytes, of the longest string …","Returns the length (in bytes) of the longest string …","Returns the total amount of heap memory usage, in bytes, …","The minimum range of the repetition.","Returns the length, in bytes, of the smallest string …","Returns the length, in bytes, of the smallest string …","Returns the length, in bytes, of the smallest string …","Returns the length (in bytes) of the smallest string …","The name of the capture, if it exists.","Negate this character class in place.","Negate this character class.","Negate this byte class.","Create a new class from a sequence of ranges.","Create a new Unicode scalar value range for a character …","Create a new class from a sequence of ranges.","Create a new byte range for a character class.","","","","","","The original pattern string in which this error occurred.","This module provides a regular expression printer for <code>Hir</code>.","Returns the properties computed for this <code>Hir</code>.","Add a new range to this set.","Add a new range to this set.","Return the underlying ranges as a slice.","Return the underlying ranges as a slice.","Return a <code>LookSet</code> from the slice given as a native endian …","Return a new set that is equivalent to the original, but …","Creates a repetition HIR expression.","Flip the look-around assertion to its equivalent for …","Updates this set in place with the result of inserting the …","Updates this set in place with the result of intersecting …","Updates this set in place with the result of removing the …","Updates this set in place with the result of subtracting …","Updates this set in place with the result of unioning it …","Create a look-around set containing the look-around …","Return the span at which this error occurred.","This method is called before beginning traversal of the …","This method is called before beginning traversal of the …","Return the start of this range.","Return the start of this range.","Returns the total number of explicit capturing groups that …","The expression inside the capturing group, which may be …","The expression being repeated.","Returns a slice of this kind’s sub-expressions, if any.","Returns a new set that is the result of subtracting the …","Compute the symmetric difference of the given character …","Compute the symmetric difference of the given byte …","If this class consists of only ASCII ranges, then return …","","","","","","","","","","","","","","","","","","","","","","If this class consists of only ASCII ranges, then return …","Defines a translator that converts an <code>Ast</code> to an <code>Hir</code>.","Apply Unicode simple case folding to this character class, …","Expand this character class such that it contains all case …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Union this character class with the given character class, …","Union this byte class with the given byte class, in place.","Returns a new set of properties that corresponds to the …","Returns a new set that is the union of this and the one …","Executes an implementation of <code>Visitor</code> in constant stack …","This method is called between child nodes of an …","This method is called between child nodes of an …","This method is called between child nodes of a …","This method is called between child nodes of a …","This method is called on an <code>Hir</code> after descending all of …","This method is called on an <code>Hir</code> after descending all of …","This method is called on an <code>Hir</code> before descending into …","This method is called on an <code>Hir</code> before descending into …","Returns a new repetition with the same <code>min</code>, <code>max</code> and <code>greedy</code> …","Write a <code>LookSet</code> as a native endian 32-bit integer to the …","The kind of literals to extract from an <code>Hir</code> expression.","Extracts prefix or suffix literal sequences from <code>Hir</code> …","A single literal extracted from an <code>Hir</code> expression.","Extracts only prefix literals from a regex.","A sequence of literals.","Extracts only suffix literals from a regex.","Returns the bytes in this literal.","","","","","","","","","","","","","","","","","","","Modify this sequence to contain the cross product between …","Modify this sequence to contain the cross product between …","Deduplicate adjacent equivalent literals in this sequence.","","","Returns an empty sequence.","","","","","Returns a new exact literal containing the bytes given.","Extend this literal with the literal given.","Execute the extractor and return a sequence of literals.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns a new inexact literal containing the bytes given.","Returns a sequence of literals without a finite size and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Yields ownership of the bytes inside this literal.","Returns true if and only if this sequence is finite and …","Returns true if and only if this literal has zero bytes.","Returns true if and only if all literals in this sequence …","Returns true if and only if this literal is exact.","Returns true if this sequence is finite.","Returns true if and only if all literals in this sequence …","Returns true if this kind is the <code>Prefix</code> variant.","Returns true if this kind is the <code>Suffix</code> variant.","Trims all literals in this seq such that only the first <code>len</code>…","Trims this literal such that only the first <code>len</code> bytes …","Trims all literals in this seq such that only the last <code>len</code> …","Trims this literal such that only the last <code>len</code> bytes …","Set the kind of literal sequence to extract from an <code>Hir</code> …","Returns the number of literals in this sequence if the …","Returns the length of this literal in bytes.","Configure a limit on the length of the sequence that is …","Configure a limit on the maximum length of any literal in …","Configure a limit on the total number of repetitions that …","Configure a limit on the total number of literals that …","If this is a finite sequence, return its members as a …","Returns the longest common prefix from this seq.","Returns the longest common suffix from this seq.","Make all of the literals in this sequence inexact.","Marks this literal as inexact.","Converts this sequence to an infinite sequence.","Return the maximum length of the sequence that would …","Returns the length of the longest literal in this sequence.","Return the maximum length of the sequence that would …","Returns the length of the shortest literal in this …","Shrinks this seq to its minimal size while respecting the …","Create a new extractor with a default configuration.","Returns a sequence of exact literals from the given byte …","Optimizes this seq while treating its literals as prefixes …","Optimizes this seq while treating its literals as suffixes …","","Push a literal to the end of this sequence.","Returns the “rank” of the given byte.","Reverse the bytes in this literal.","Reverses all of the literals in this sequence.","Returns a sequence containing a single literal.","Sorts this sequence of literals lexicographically.","","","","","","","","","","","","","","","","","Unions the <code>other</code> sequence into this one.","Unions the <code>other</code> sequence into this one by splice the <code>other</code>","A printer for a regular expression’s high-level …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new printer.","Print the given <code>Ast</code> to the given writer. The writer must …","","","","A translator maps abstract syntax to a high level …","A builder for constructing an AST-&gt;HIR translator.","","","","","Build a translator using the current configuration.","Enable or disable the case insensitive flag (<code>i</code>) by default.","","","","","Enable or disable the CRLF mode flag (<code>R</code>) by default.","","Enable or disable the “dot matches any character” flag …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the line terminator for use with <code>(?u-s:.)</code> and <code>(?-us:.)</code>…","Enable or disable the multi-line matching flag (<code>m</code>) by …","Create a new translator builder with a default c …","Create a new translator using the default configuration.","Enable or disable the “swap greed” flag (<code>U</code>) by default.","","","Translate the given abstract syntax tree (AST) into a high …","","","","","","","Enable or disable the Unicode flag (<code>u</code>) by default.","When disabled, translation will permit the construction of …","Four successive byte ranges.","One byte range.","Three successive byte ranges.","Two successive byte ranges.","A single inclusive range of UTF-8 bytes.","Utf8Sequence represents a sequence of byte ranges.","An iterator over ranges of matching UTF-8 byte sequences.","Returns the underlying sequence of byte ranges as a slice.","","","","","","","","","","","","","End of byte range (inclusive).","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the number of byte ranges in this sequence.","Returns true if and only if a prefix of <code>bytes</code> matches this …","Returns true if and only if the given byte is in this …","Create a new iterator over UTF-8 byte ranges for the …","","","","Reverses the ranges in this sequence.","Start of byte range (inclusive).","","","","","","","","","","",""],"i":[0,4,0,0,4,0,0,4,1,2,9,4,1,2,9,1,1,4,1,2,4,1,2,1,1,1,4,4,0,0,4,4,1,2,9,9,4,4,4,1,2,9,0,1,4,1,2,9,0,0,0,0,1,1,1,1,2,1,0,2,1,4,1,2,4,9,4,1,2,9,4,1,2,9,0,4,1,2,9,1,0,1,41,41,0,23,41,45,0,23,0,0,54,37,44,41,54,45,59,55,31,0,55,37,59,0,0,0,23,31,0,23,0,31,31,0,0,0,0,0,0,31,0,23,0,0,41,43,0,0,23,31,31,49,39,41,23,59,23,45,50,50,43,61,0,0,31,31,31,31,31,54,0,58,31,31,31,31,31,0,23,0,0,37,41,0,23,0,31,31,31,31,31,31,36,36,0,59,49,44,37,0,23,45,0,41,36,59,42,42,58,31,55,43,50,36,42,53,61,45,0,41,41,45,53,0,23,31,31,31,0,31,0,0,0,37,39,41,0,36,0,31,31,31,50,50,36,59,49,37,45,59,31,38,38,45,31,31,41,36,37,0,0,39,41,50,50,50,50,50,50,50,38,41,53,53,18,23,23,33,51,27,22,35,10,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,26,26,27,23,23,23,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,25,32,32,34,33,23,38,23,23,44,23,25,46,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,61,18,23,27,57,10,10,31,31,25,32,33,34,23,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,41,51,23,56,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,22,35,47,27,25,23,43,30,58,25,46,54,47,18,10,26,29,40,30,28,48,24,52,27,19,48,32,23,56,29,40,30,28,25,32,32,51,0,25,32,10,0,47,23,48,10,23,44,45,34,22,35,26,29,40,30,28,46,47,48,24,51,52,27,56,57,18,19,25,61,61,25,46,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,23,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,10,31,25,32,33,34,23,22,35,26,36,37,38,29,39,40,41,30,42,43,28,44,45,46,47,48,49,24,50,51,52,53,54,27,55,56,57,18,19,58,59,44,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,25,25,100,100,100,101,102,103,104,104,0,0,62,63,62,63,62,62,63,62,63,62,62,63,62,63,62,62,63,62,62,63,62,63,63,62,63,62,63,62,63,62,63,0,64,64,64,64,64,64,64,64,64,64,73,78,78,78,78,78,78,78,78,69,0,73,0,0,73,0,0,0,0,0,0,73,0,73,67,67,67,89,0,0,0,0,72,72,0,73,0,73,0,0,89,0,0,73,67,67,67,69,72,72,72,72,72,0,67,67,67,67,67,67,67,67,67,67,67,67,15,67,67,80,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,15,69,70,71,15,11,72,15,73,74,69,70,75,71,76,67,68,77,78,79,80,81,11,72,15,73,74,69,70,75,71,76,67,68,77,78,79,80,81,75,76,15,80,80,80,80,80,80,80,80,80,75,76,80,70,71,15,15,15,70,71,80,75,76,11,72,15,73,74,69,70,75,71,76,67,68,77,78,79,80,11,72,15,73,74,69,70,75,71,76,67,68,77,78,79,80,79,15,89,11,11,72,72,15,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,84,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,67,80,77,68,80,70,71,80,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,82,83,81,15,79,70,71,69,80,79,69,79,70,71,80,11,15,75,76,80,0,15,69,70,71,15,79,79,79,79,79,77,69,70,71,79,79,77,69,70,71,79,68,69,70,71,70,75,71,76,82,83,81,75,76,11,0,15,70,71,70,71,80,80,15,67,80,80,80,80,80,80,11,89,89,75,76,79,68,77,73,80,70,71,70,11,72,15,73,74,69,70,75,71,76,67,68,77,78,79,80,81,11,72,15,84,71,0,69,70,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,11,72,15,73,74,69,70,82,75,71,83,76,67,68,77,78,79,80,81,84,70,71,79,80,0,89,89,89,89,89,89,89,89,77,80,0,0,0,92,0,92,90,90,91,92,93,90,91,92,93,90,91,92,93,90,91,92,93,90,90,93,93,93,91,92,93,93,90,93,90,90,90,91,91,92,93,90,91,92,93,90,90,90,93,90,93,91,92,93,90,90,93,90,93,90,93,93,92,92,93,90,93,90,91,93,90,91,91,91,91,93,93,93,93,90,93,93,93,93,93,93,91,93,93,93,90,93,0,90,93,93,93,91,92,93,90,91,92,93,90,91,92,93,90,91,92,93,90,93,93,0,94,94,94,94,94,94,94,94,94,94,0,0,95,96,95,96,95,95,95,96,95,96,95,95,95,95,96,95,96,95,96,95,95,95,96,95,95,96,96,95,96,95,96,95,96,95,95,97,97,97,97,0,0,0,97,97,98,99,97,98,99,97,98,97,98,97,98,98,97,98,97,98,97,98,99,97,98,99,97,98,99,97,99,97,97,98,99,99,97,98,97,98,97,98,97,98,99,97,98,99,97,98,99],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[1,3],1],[4,4],[1,1],[2,2],[[]],[[]],[[]],[[1,3],1],[[],1],[[1,3],1],[[4,4],3],[[],3],[5,6],[[5,6]],[[4,7],8],[[4,7],8],[[1,7],8],[[2,7],8],[[9,7],8],[[9,7],8],[10,4],[[]],[11,4],[[]],[[]],[[]],0,[[1,3],1],[[]],[[]],[[]],[[]],[12,3],[12,3],[13,3],[12,3],[[1,13],1],[[1,3],1],[[1,14],1],[[],1],[[],2],[[1,3],1],[5,[[16,[15,4]]]],[[2,5],[[16,[15,4]]]],[[1,3],1],[[]],[[]],[[]],[[],6],[[],6],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[12,[[16,[3,9]]]],[[],17],[[],17],[[],17],[[],17],[[1,3],1],0,[[1,3],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,19],[[21,[20]]]],[22,23],[24,23],0,0,0,0,0,[10,[[21,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[21,[13]]]],0,[27,[[21,[14]]]],[28,23],[29,23],[30,23],[10,10],[31,31],[25,25],[32,32],[33,33],[34,34],[23,23],[22,22],[35,35],[26,26],[36,36],[37,37],[38,38],[29,29],[39,39],[40,40],[41,41],[30,30],[42,42],[43,43],[28,28],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[24,24],[50,50],[51,51],[52,52],[53,53],[54,54],[27,27],[55,55],[56,56],[57,57],[18,18],[19,19],[58,58],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,25],60],[[32,32],60],0,0,0,[35,23],[38,14],[25,23],[23],[44],[25,23],0,0,[[10,10],3],[[31,31],3],[[25,25],3],[[32,32],3],[[33,33],3],[[34,34],3],[[23,23],3],[[22,22],3],[[35,35],3],[[26,26],3],[[36,36],3],[[37,37],3],[[38,38],3],[[29,29],3],[[39,39],3],[[40,40],3],[[41,41],3],[[30,30],3],[[42,42],3],[[43,43],3],[[28,28],3],[[44,44],3],[[45,45],3],[[46,46],3],[[47,47],3],[[48,48],3],[[49,49],3],[[24,24],3],[[50,50],3],[[51,51],3],[[52,52],3],[[53,53],3],[[54,54],3],[[27,27],3],[[55,55],3],[[56,56],3],[[57,57],3],[[18,18],3],[[19,19],3],[[58,58],3],[[59,59],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],16],[[18,59],[[21,[3]]]],[57,23],[27,[[21,[18]]]],0,[[10,7],8],[[10,7],8],[[31,7],8],[[31,7],8],[[25,7],8],[[32,7],8],[[33,7],8],[[34,7],8],[[23,7],8],[[23,7],8],[[22,7],8],[[35,7],8],[[26,7],8],[[36,7],8],[[37,7],8],[[38,7],8],[[29,7],8],[[39,7],8],[[40,7],8],[[41,7],8],[[30,7],8],[[42,7],8],[[43,7],8],[[28,7],8],[[44,7],8],[[45,7],8],[[46,7],8],[[47,7],8],[[48,7],8],[[49,7],8],[[24,7],8],[[50,7],8],[[51,7],8],[[52,7],8],[[53,7],8],[[54,7],8],[[27,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[18,7],8],[[19,7],8],[[58,7],8],[[59,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[21,[41]]]],0,[27,23],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,23],[35,23],[47,45],[27,3],[25,3],[23,3],[43,3],[30,3],[58,3],[25,3],[46,3],[54,3],0,0,[10,31],0,0,0,0,0,0,0,0,0,0,0,0,[26,23],0,0,0,0,0,[[32,32],25],[[20,20,20],32],0,0,0,[[25,25],[[21,[60]]]],[[32,32],[[21,[60]]]],[10,5],0,[[47,45]],[51,23],0,[10,25],[23,25],[44,25],[45,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,25],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[47,44],[[23,61],16],[[],16],[[],16],[48,16],[48,16],[48,16],[48,16],[48,16],[48,16],[45,16],[45,16],[45,16],[45,16],[[],16],[[],16],[23,16],[23,16],[23,16],[23,16],[[25,32],25],[[25,32],25],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[62,63],[62,62],[63,63],[[]],[[]],[[],62],[[62,7],8],[[63,7],8],[[]],[[]],[[62,3],62],[[]],[[]],[[62,14],62],[[],62],[[],63],[[62,3],62],[[63,5],[[16,[23,10]]]],[[63,5],[[16,[33,10]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],0,[[]],[[]],[[64,7],8],[[]],[[]],[[],64],[[64,23,65],8],[[],16],[[],16],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[66,[15]]],15],[67,12],[67,14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,15],[69],[70],[71],[69,15],[11,11],[72,72],[15,15],[73,73],[74,74],[69,69],[70,70],[75,75],[71,71],[76,76],[67,67],[68,68],[77,77],[78,78],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,75],60],[[76,76],60],[[[66,[15]]],15],[[80,67],3],[80,3],[80,3],[80,3],[80,3],[80,3],[80,3],[80,3],[80,3],[[],75],[[],76],[[],80],[[70,70]],[[71,71]],[78,15],[15],[[],15],[[],70],[[],71],[[],80],[75,12],[76,13],[[11,11],3],[[72,72],3],[[15,15],3],[[73,73],3],[[74,74],3],[[69,69],3],[[70,70],3],[[75,75],3],[[71,71],3],[[76,76],3],[[67,67],3],[[68,68],3],[[77,77],3],[[78,78],3],[[79,79],3],[[80,80],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[79,20],[[],15],[[],16],[[11,7],8],[[11,7],8],[[72,7],8],[[72,7],8],[[15,7],8],[[15,7],8],[[73,7],8],[[74,7],8],[[69,7],8],[[70,7],8],[[82,7],8],[[75,7],8],[[71,7],8],[[83,7],8],[[76,7],8],[[67,7],8],[[68,7],8],[[77,7],8],[[78,7],8],[[79,7],8],[[80,7],8],[[81,7],8],[[84,7],8],[[84,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[21,[67]]]],[[],80],0,0,[[80,67],80],[[70,70]],[[71,71]],[[80,80],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,73],[79,3],[70,3],[71,3],[69,3],[80,3],[79,3],[69,3],[79,3],[70,82],[71,83],[80,81],[11,72],[15,73],[75,20],[76,20],[80,20],0,[[[87,[[86,[[85,[13]]]]]]],15],[69,[[21,[[66,[13]]]]]],[70,[[21,[[66,[13]]]]]],[71,[[21,[[66,[13]]]]]],[67,15],[79,80],[79,80],[79,80],[79,80],[79,80],0,[69,[[21,[20]]]],[70,[[21,[20]]]],[71,[[21,[20]]]],[79,[[21,[20]]]],[79,20],0,[69,[[21,[20]]]],[70,[[21,[20]]]],[71,[[21,[20]]]],[79,[[21,[20]]]],0,[69],[70],[71],[88,70],[[12,12],75],[88,71],[[13,13],76],[82,[[21,[75]]]],[83,[[21,[76]]]],[81,[[21,[67]]]],[[75,75],[[21,[60]]]],[[76,76],[[21,[60]]]],[11,5],0,[15,79],[[70,75]],[[71,76]],[70,[[85,[75]]]],[71,[[85,[76]]]],[[[85,[13]]],80],[[80,67],80],[77,15],[67,67],[[80,67]],[[80,80]],[[80,67]],[[80,80]],[[80,80]],[67,80],[11,25],[[]],[[]],[75,12],[76,13],[79,[[21,[20]]]],0,0,[73,[[85,[15]]]],[[80,80],80],[[70,70]],[[71,71]],[70,[[21,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[71,[[21,[70]]]],0,[69,[[16,[84]]]],[70,[[16,[84]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[70,70]],[[71,71]],[88,79],[[80,80],80],[[15,89],16],[[],16],[[],16],[[],16],[[],16],[15,16],[15,16],[15,16],[15,16],[[77,15],77],[[80,[85,[13]]]],0,0,0,0,0,0,[90,[[85,[13]]]],[90,[[85,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[93,93],[90,90],[[]],[[]],[[]],[[]],[[90,90],60],[[93,93]],[[93,93]],[93],[[],91],[[],92],[[],93],[[93,93],3],[[90,90],3],[[],3],[[],3],[[[87,[[66,[13]]]]],90],[[90,90]],[[91,15],93],[[91,7],8],[[92,7],8],[[93,7],8],[[90,7],8],[[]],[[]],[[]],[12,90],[[]],[13,90],[88,93],[[[87,[[66,[13]]]]],90],[[],93],[[]],[[]],[[]],[[]],[90,[[66,[13]]]],[93,3],[90,3],[93,3],[90,3],[93,3],[93,3],[92,3],[92,3],[[93,20]],[[90,20]],[[93,20]],[[90,20]],[[91,92],91],[93,[[21,[20]]]],[90,20],[[91,20],91],[[91,20],91],[[91,20],91],[[91,20],91],[93,[[21,[[85,[90]]]]]],[93,[[21,[[85,[13]]]]]],[93,[[21,[[85,[13]]]]]],[93],[90],[93],[[93,93],[[21,[20]]]],[93,[[21,[20]]]],[[93,93],[[21,[20]]]],[93,[[21,[20]]]],[93],[[],91],[88,93],[93],[93],[[90,90],[[21,[60]]]],[[93,90]],[13,13],[90],[93],[90,93],[93],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[93,93]],[[93,93]],0,[[]],[[]],[[94,7],8],[[]],[[]],[[],94],[[94,15,65],8],[[],16],[[],16],[[],17],0,0,[[]],[[]],[[]],[[]],[95,96],[[95,3],95],[95,95],[96,96],[[]],[[]],[[95,3],95],[[],95],[[95,3],95],[[95,7],8],[[96,7],8],[[]],[[]],[[]],[[]],[[95,13],95],[[95,3],95],[[],95],[[],96],[[95,3],95],[[]],[[]],[[96,5,23],[[16,[15,11]]]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[95,3],95],[[95,3],95],0,0,0,0,0,0,0,[97,[[85,[98]]]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[98,98],[[]],[[]],[[97,97],60],[[98,98],60],0,[[97,97],3],[[98,98],3],[[],3],[[],3],[[97,7],8],[[98,7],8],[[99,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[97],[[]],[97,20],[[97,[85,[13]]],3],[[98,13],3],[[12,12],99],[99,21],[[97,97],[[21,[60]]]],[[98,98],[[21,[60]]]],[97],0,[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17]],"c":[],"p":[[3,"ParserBuilder"],[3,"Parser"],[15,"bool"],[4,"Error"],[15,"str"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"UnicodeWordError"],[3,"Error"],[3,"Error"],[15,"char"],[15,"u8"],[15,"u32"],[3,"Hir"],[4,"Result"],[3,"TypeId"],[3,"Flags"],[3,"FlagsItem"],[15,"usize"],[4,"Option"],[3,"Alternation"],[4,"Ast"],[3,"Assertion"],[3,"Span"],[3,"Literal"],[3,"Group"],[3,"ClassBracketed"],[3,"ClassPerl"],[3,"ClassUnicode"],[4,"ErrorKind"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Concat"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"ClassPerlKind"],[3,"ClassAscii"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[3,"Repetition"],[3,"RepetitionOp"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[3,"CaptureName"],[3,"SetFlags"],[4,"FlagsItemKind"],[4,"Flag"],[4,"Ordering"],[8,"Visitor"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Write"],[3,"Vec"],[4,"Look"],[3,"Capture"],[4,"Class"],[3,"ClassUnicode"],[3,"ClassBytes"],[4,"ErrorKind"],[4,"HirKind"],[3,"Literal"],[3,"ClassUnicodeRange"],[3,"ClassBytesRange"],[3,"Repetition"],[4,"Dot"],[3,"Properties"],[3,"LookSet"],[3,"LookSetIter"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"],[3,"CaseFoldError"],[15,"slice"],[3,"Box"],[8,"Into"],[8,"IntoIterator"],[8,"Visitor"],[3,"Literal"],[3,"Extractor"],[4,"ExtractKind"],[3,"Seq"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[4,"Utf8Sequence"],[3,"Utf8Range"],[3,"Utf8Sequences"],[13,"NamedValue"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[13,"CaptureName"]]},\
"rustc_hash":{"doc":"Fast, non-cryptographic hash used by rustc and Firefox.","t":"GGDLLLLLLLLLLLLLLL","n":["FxHashMap","FxHashSet","FxHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","write","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":[[0,"rustc_hash"]],"d":["Type alias for a hashmap using the <code>fx</code> hash algorithm.","Type alias for a hashmap using the <code>fx</code> hash algorithm.","A speedy hash algorithm for use within rustc. The hashmap …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[[]],[[]],[[],1],[1,2],[[]],[[]],[[],3],[[],3],[[],4],[[1,[6,[5]]]],[[1,7]],[[1,8]],[[1,2]],[[1,5]],[[1,9]]],"c":[],"p":[[3,"FxHasher"],[15,"u64"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[15,"u16"],[15,"u32"],[15,"usize"]]},\
"rustix":{"doc":"<code>rustix</code> provides efficient memory-safe and I/O-safe …","t":"OAAAAAIIDIIDGKLLKLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSDSDSSSDSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSGSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFFFLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLFFFFLFFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDIEDSIGDNDSSDQGNDNDDNDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLESSSSSSSSSSDNSSSSSSSSSNSSSSNSSSSSSNNNSSSSSSDDSNSNSSSNNSEDSSSSEDDSSSDSSSSSSSSSSSSSSSSGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFLLLLLLLLMLLLLLMLLLLLLLLLLLLMALLLLLLLLLLLLFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRR","n":["cstr","fd","ffi","io","ioctl","termios","AsFd","AsRawFd","BorrowedFd","FromRawFd","IntoRawFd","OwnedFd","RawFd","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","is_terminal","is_terminal","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CStr","CString","FromBytesWithNulError","NulError","as_bytes","as_bytes_with_nul","as_c_str","as_ptr","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_char","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","deref","description","description","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_until_nul","from_bytes_with_nul","from_bytes_with_nul_unchecked","from_ptr","from_raw","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","hash","hash","index","index","into","into","into","into_boxed_c_str","into_bytes","into_bytes_with_nul","into_c_string","into_raw","into_string","into_vec","is_empty","new","nul_position","partial_cmp","partial_cmp","to_bytes","to_bytes_with_nul","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string_lossy","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ACCESS","ADDRINUSE","ADDRNOTAVAIL","AFNOSUPPORT","AGAIN","ALREADY","AUTH","BADF","BADMSG","BADRPC","BUSY","CANCELED","CHILD","CLOEXEC","CONNABORTED","CONNREFUSED","CONNRESET","DEADLK","DESTADDRREQ","DOM","DQUOT","DupFlags","EXIST","Errno","FAULT","FBIG","FTYPE","FdFlags","HOSTDOWN","HOSTUNREACH","IDRM","ILSEQ","INPROGRESS","INTR","INVAL","IO","ISCONN","ISDIR","IoSlice","IoSliceMut","LOOP","MFILE","MLINK","MSGSIZE","MULTIHOP","NAMETOOLONG","NEEDAUTH","NETDOWN","NETRESET","NETUNREACH","NFILE","NOATTR","NOBUFS","NODATA","NODEV","NOENT","NOEXEC","NOLCK","NOLINK","NOMEM","NOMSG","NOPROTOOPT","NOSPC","NOSR","NOSTR","NOSYS","NOTBLK","NOTCONN","NOTDIR","NOTEMPTY","NOTRECOVERABLE","NOTSOCK","NOTSUP","NOTTY","NXIO","OPNOTSUPP","OVERFLOW","OWNERDEAD","PERM","PFNOSUPPORT","PIPE","PROCLIM","PROCUNAVAIL","PROGMISMATCH","PROGUNAVAIL","PROTO","PROTONOSUPPORT","PROTOTYPE","RANGE","REMOTE","ROFS","RPCMISMATCH","Result","SHUTDOWN","SOCKTNOSUPPORT","SPIPE","SRCH","STALE","TIME","TIMEDOUT","TOOBIG","TOOMANYREFS","TXTBSY","USERS","WOULDBLOCK","XDEV","advance","advance","advance_slices","advance_slices","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","complement","complement","contains","contains","deref","deref","deref_mut","difference","difference","dup","dup2","dup3","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fcntl_dupfd_cloexec","fcntl_getfd","fcntl_setfd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_io_error","from_iter","from_iter","from_name","from_name","from_raw_os_error","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","ioctl_fioclex","ioctl_fionbio","ioctl_fionread","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","kind","new","new","not","not","pread","preadv","pwrite","pwritev","raw_os_error","read","readv","remove","remove","retry_on_intr","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","write","writev","BadOpcode","CompileTimeOpcode","Direction","Getter","IS_MUTATING","Ioctl","IoctlOutput","NoArg","None","NoneOpcode","OPCODE","OPCODE","Opcode","Output","RawOpcode","Read","ReadOpcode","ReadWrite","ReadWriteOpcode","Setter","Write","WriteOpcode","as_ptr","as_ptr","as_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_components","hash","hash","into","into","into","into","into","into","into","into","into","into","ioctl","new","new","new","none","old","output_from_ptr","output_from_ptr","output_from_ptr","output_from_ptr","partial_cmp","partial_cmp","raw","read","read_write","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","Action","BRKINT","CLOCAL","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","ControlModes","Drain","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","EXTPROC","FLUSHO","Flush","HUPCL","ICANON","ICRNL","IEXTEN","IFlush","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INLCR","INPCK","IOFlush","IOff","IOn","ISIG","ISTRIP","IUTF8","IXANY","IXOFF","IXON","InputModes","LocalModes","NOFLSH","Now","OCRNL","OFlush","ONLCR","ONLRET","ONOCR","OOff","OOn","OPOST","OptionalActions","OutputModes","PARENB","PARMRK","PARODD","PENDIN","QueueSelector","SpecialCodeIndex","SpecialCodes","TAB0","TABDLY","TOSTOP","Termios","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VTIME","VWERASE","Winsize","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","control_modes","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","hash","hash","hash","hash","hash","hash","hash","index","index_mut","input_modes","input_speed","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","ioctl_tiocexcl","ioctl_tiocnxcl","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","isatty","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","local_modes","make_raw","not","not","not","not","output_modes","output_speed","remove","remove","remove","remove","set","set","set","set","set_input_speed","set_output_speed","set_speed","special_codes","speed","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tcdrain","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcgetwinsize","tcsendbreak","tcsetattr","tcsetpgrp","tcsetwinsize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","B0","B110","B115200","B1200","B134","B150","B1800","B19200","B200","B230400","B2400","B300","B38400","B4800","B50","B57600","B600","B75","B9600"],"q":[[0,"rustix"],[6,"rustix::fd"],[58,"rustix::ffi"],[161,"rustix::io"],[442,"rustix::ioctl"],[574,"rustix::termios"],[974,"rustix::termios::speed"]],"d":["A macro for <code>CStr</code> literals.","Export the <code>*Fd</code> types and traits that are used in rustix’…","Utilities related to FFI bindings.","I/O operations.","Unsafe <code>ioctl</code> API.","Terminal I/O stream operations.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","","","Extracts the raw file descriptor.","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given raw file …","Constructs a new instance of <code>Self</code> from the given raw file …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the raw underlying file …","","","","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Representation of a borrowed C string.","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating that an interior nul byte was found.","Returns the contents of this <code>CString</code> as a slice of bytes.","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","Returns the inner pointer to this C string.","","","","","","","","","","","","Equivalent to C’s <code>char</code> type.","","","","","","","","","","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","","Converts a Vec&lt;NonZeroU8&gt; into a <code>CString</code> without copying …","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice with any …","Creates a C string wrapper from a byte slice with exactly …","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a <code>CString</code> that was transferred to C …","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Equivalent to <code>CString::into_bytes()</code> except that the …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Consumes the <code>CString</code> and transfers ownership of the string …","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","Returns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","","","","","Yields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.","","","Converts a <code>CStr</code> into a Cow&lt;str&gt;.","","","","","","","","","","","<code>EACCES</code>","<code>EADDRINUSE</code>","<code>EADDRNOTAVAIL</code>","<code>EAFNOSUPPORT</code>","<code>EAGAIN</code>","<code>EALREADY</code>","<code>EAUTH</code>","<code>EBADF</code>","<code>EBADMSG</code>","<code>EBADRPC</code>","<code>EBUSY</code>","<code>ECANCELED</code>","<code>ECHILD</code>","<code>FD_CLOEXEC</code>","<code>ECONNABORTED</code>","<code>ECONNREFUSED</code>","<code>ECONNRESET</code>","<code>EDEADLK</code>","<code>EDESTADDRREQ</code>","<code>EDOM</code>","<code>EDQUOT</code>","<code>O_*</code> constants for use with <code>dup2</code>.","<code>EEXIST</code>","<code>errno</code>—An error code.","<code>EFAULT</code>","<code>EFBIG</code>","<code>EFTYPE</code>","<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.","<code>EHOSTDOWN</code>","<code>EHOSTUNREACH</code>","<code>EIDRM</code>","<code>EILSEQ</code>","<code>EINPROGRESS</code>","<code>EINTR</code>","<code>EINVAL</code>","<code>EIO</code>","<code>EISCONN</code>","<code>EISDIR</code>","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","<code>ELOOP</code>","<code>EMFILE</code>","<code>EMLINK</code>","<code>EMSGSIZE</code>","<code>EMULTIHOP</code>","<code>ENAMETOOLONG</code>","<code>ENEEDAUTH</code>","<code>ENETDOWN</code>","<code>ENETRESET</code>","<code>ENETUNREACH</code>","<code>ENFILE</code>","<code>ENOATTR</code>","<code>ENOBUFS</code>","<code>ENODATA</code>","<code>ENODEV</code>","<code>ENOENT</code>","<code>ENOEXEC</code>","<code>ENOLCK</code>","<code>ENOLINK</code>","<code>ENOMEM</code>","<code>ENOMSG</code>","<code>ENOPROTOOPT</code>","<code>ENOSPC</code>","<code>ENOSR</code>","<code>ENOSTR</code>","<code>ENOSYS</code>","<code>ENOTBLK</code>","<code>ENOTCONN</code>","<code>ENOTDIR</code>","<code>ENOTEMPTY</code>","<code>ENOTRECOVERABLE</code>","<code>ENOTSOCK</code>","<code>ENOTSUP</code>","<code>ENOTTY</code>","<code>ENXIO</code>","<code>EOPNOTSUPP</code>","<code>EOVERFLOW</code>","<code>EOWNERDEAD</code>","<code>EPERM</code>","<code>EPFNOSUPPORT</code>","<code>EPIPE</code>","<code>EPROCLIM</code>","<code>EPROCUNAVAIL</code>","<code>EPROGMISMATCH</code>","<code>EPROGUNAVAIL</code>","<code>EPROTO</code>","<code>EPROTONOSUPPORT</code>","<code>EPROTOTYPE</code>","<code>ERANGE</code>","<code>EREMOTE</code>","<code>EROFS</code>","<code>ERPCMISMATCH</code>","A specialized <code>Result</code> type for <code>rustix</code> APIs.","<code>ESHUTDOWN</code>","<code>ESOCKTNOSUPPORT</code>","<code>ESPIPE</code>","<code>ESRCH</code>","<code>ESTALE</code>","<code>ETIME</code>","<code>ETIMEDOUT</code>","<code>E2BIG</code>","<code>ETOOMANYREFS</code>","<code>ETXTBSY</code>","<code>EUSERS</code>","<code>EWOULDBLOCK</code>","<code>EXDEV</code>","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …","<code>dup2(fd, new)</code>—Changes the file description of a file …","<code>dup3(fd, new, flags)</code>—Changes the file description of a …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …","<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.","<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Extract an <code>Errno</code> value from a <code>std::io::Error</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Construct an <code>Errno</code> from a raw OS error number.","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","<code>ioctl(fd, FIOCLEX, NULL)</code>—Set the close-on-exec flag.","<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …","<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Shorthand for <code>std::io::Error::from(self).kind()</code>.","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …","<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.","<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …","Extract the raw OS error number from this error.","<code>read(fd, buf)</code>—Reads from a stream.","<code>readv(fd, bufs)</code>—Reads from a stream into multiple …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>f</code> until it either succeeds or fails other than …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>write(fd, buf)</code>—Writes to a stream.","<code>writev(fd, bufs)</code>—Writes to a stream from multiple …","Provides a bad opcode at compile time.","Trait for something that provides an <code>ioctl</code> opcode at …","The direction that an <code>ioctl</code> is going.","Implements the traditional “getter” pattern for <code>ioctl</code>s.","Does the <code>ioctl</code> mutate any data in the userspace?","A trait defining the properties of an <code>ioctl</code> command.","The type used by the <code>ioctl</code> to signify the output.","Implements an <code>ioctl</code> with no real arguments.","None of the above.","Provides a <code>None</code> code at compile time.","The opcode.","The opcode used by this <code>ioctl</code> command.","The opcode used by an <code>Ioctl</code>.","The type of the output data.","The type used by the <code>ioctl</code> to signify the command.","Read data from the kernel.","Provides a read code at compile time.","Read and write data to the kernel.","Provides a read/write code at compile time.","Implements the pattern for <code>ioctl</code>s where a pointer argument …","Write data to the kernel.","Provides a write code at compile time.","Get a pointer to the data to be passed to the <code>ioctl</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new opcode from a direction, group, number and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform an <code>ioctl</code> call.","Create a new no-argument <code>ioctl</code> object.","Create a new getter-style <code>ioctl</code> object.","Create a new pointer setter-style <code>ioctl</code> object.","Create a new non-mutating opcode from a group, a number …","Create a new old <code>Opcode</code> from a raw opcode.","Cast the output data to the correct type.","","","","","","Get the raw opcode.","Create a new reading opcode from a group, a number and the …","Create a new reading and writing opcode from a group, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new writing opcode from a group, a number and the …","<code>TC*</code> values for use with <code>tcflow</code>.","<code>BRKINT</code>","<code>CLOCAL</code>","<code>CREAD</code>","<code>CRTSCTS</code>","<code>CS5</code>","<code>CS6</code>","<code>CS7</code>","<code>CS8</code>","<code>CSIZE</code>","<code>CSTOPB</code>","Flags controlling special terminal modes.","<code>TCSADRAIN</code>—Make the change after all output has been …","<code>ECHO</code>","<code>ECHOCTL</code>","<code>ECHOE</code>","<code>ECHOK</code>","<code>ECHOKE</code>","<code>ECHONL</code>","<code>ECHOPRT</code>","<code>EXTPROC</code>","<code>FLUSHO</code>","<code>TCSAFLUSH</code>—Discard any pending input and then make the …","<code>HUPCL</code>","<code>ICANON</code>—A flag for the <code>c_lflag</code> field of <code>Termios</code> indicating","<code>ICRNL</code>","<code>IEXTEN</code>","<code>TCIFLUSH</code>—Flush data received but not read.","<code>IGNBRK</code>","<code>IGNCR</code>","<code>IGNPAR</code>","<code>IMAXBEL</code>","<code>INLCR</code>","<code>INPCK</code>","<code>TCIOFLUSH</code>—<code>IFlush</code> and <code>OFlush</code> combined.","<code>TCIOFF</code>—Transmits a STOP byte.","<code>TCION</code>—Transmits a START byte.","<code>ISIG</code>","<code>ISTRIP</code>","<code>IUTF8</code>","<code>IXANY</code>","<code>IXOFF</code>","<code>IXON</code>","Flags controlling terminal input.","Flags controlling “local” terminal modes.","<code>NOFLSH</code>","<code>TCSANOW</code>—Make the change immediately.","<code>OCRNL</code>","<code>TCOFLUSH</code>—Flush data written but not transmitted.","<code>ONLCR</code>","<code>ONLRET</code>","<code>ONOCR</code>","<code>TCOOFF</code>—Suspend output.","<code>TCOON</code>—Restart suspended output.","<code>OPOST</code>","<code>TCSA*</code> values for use with <code>tcsetattr</code>.","Flags controlling terminal output.","<code>PARENB</code>","<code>PARMRK</code>","<code>PARODD</code>","<code>PENDIN</code>","<code>TC*</code> values for use with <code>tcflush</code>.","Indices for use with <code>Termios::special_codes</code>.","An array indexed by <code>SpecialCodeIndex</code> indicating the …","<code>TAB0</code>","<code>TABDLY</code>","<code>TOSTOP</code>","<code>struct termios</code> for use with <code>tcgetattr</code> and <code>tcsetattr</code>.","<code>VDISCARD</code>","<code>VEOF</code>","<code>VEOL</code>","<code>VEOL2</code>","<code>VERASE</code>","<code>VINTR</code>","<code>VKILL</code>","<code>VLNEXT</code>","<code>VMIN</code>","<code>VQUIT</code>","<code>VREPRINT</code>","<code>VSTART</code>","<code>VSTOP</code>","<code>VSUSP</code>","<code>VTIME</code>","<code>VWERASE</code>","<code>struct winsize</code> for use with <code>tcgetwinsize</code>.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Low-level configuration flags.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","How is input interpreted?","Return the input communication speed.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>ioctl(fd, TIOCEXCL)</code>—Enables exclusive mode on a terminal.","<code>ioctl(fd, TIOCNXCL)</code>—Disables exclusive mode on a …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","<code>isatty(fd)</code>—Tests whether a file descriptor refers to a …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","High-level configuration flags.","<code>cfmakeraw(self)</code>—Set a <code>Termios</code> value to the settings for …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","How is output translated?","Return the output communication speed.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set the input communication speed.","Set the output communication speed.","Set the input and output communication speeds.","How are various special control codes handled?","Speeds for use with <code>Termios::set_input_speed</code> and …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","<code>tcdrain(fd, duration)</code>—Wait until all pending output has …","<code>tcflow(fd, action)</code>—Suspend or resume transmission or …","<code>tcflush(fd, queue_selector)</code>—Wait until all pending …","<code>tcgetattr(fd)</code>—Get terminal attributes.","<code>tcgetpgrp(fd)</code>—Get the terminal foreground process group.","<code>tcgetsid(fd)</code>—Return the session ID of the current …","<code>tcgetwinsize(fd)</code>—Get the current terminal window size.","<code>tcsendbreak(fd, 0)</code>—Transmit zero-valued bits.","<code>tcsetattr(fd)</code>—Set terminal attributes.","<code>tcsetpgrp(fd, pid)</code>—Set the terminal foreground process …","<code>tcsetwinsize(fd)</code>—Set the current terminal window size.","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>B0</code>","<code>B110</code>","<code>B115200</code>","<code>B1200</code>","<code>B134</code>","<code>B150</code>","<code>B1800</code>","<code>B19200</code>","<code>B200</code>","<code>B230400</code>","<code>B2400</code>","<code>B300</code>","<code>B38400</code>","<code>B4800</code>","<code>B50</code>","<code>B57600</code>","<code>B600</code>","<code>B75</code>","<code>B9600</code>"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,52,2,1,84,2,1,2,1,2,1,1,1,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,85,2,2,1,86,2,2,1,1,2,1,2,1,2,1,2,1,0,0,0,0,20,20,20,23,20,23,20,20,25,23,26,20,25,23,26,0,20,25,26,20,25,23,26,20,23,20,23,20,25,26,20,20,25,23,26,20,25,23,26,20,25,25,23,26,26,20,20,20,20,20,25,26,23,23,23,23,20,20,20,20,20,23,20,23,20,25,26,20,20,20,23,20,20,25,23,20,25,20,23,23,23,20,25,23,26,23,25,26,23,20,25,26,20,25,26,20,25,23,26,50,50,50,50,50,50,50,50,50,50,50,50,50,47,50,50,50,50,50,50,50,0,50,0,50,50,50,0,50,50,50,50,50,50,50,50,50,50,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,45,46,45,46,47,48,47,48,47,48,47,48,47,48,47,47,48,48,47,48,47,48,50,47,48,45,46,50,47,48,45,46,50,47,48,46,50,47,48,46,0,47,48,47,48,45,46,45,47,48,0,0,0,47,48,50,47,48,50,47,48,47,48,0,0,0,50,50,47,47,47,47,47,48,48,48,48,48,45,46,50,47,48,45,46,47,48,47,47,48,48,47,48,50,47,48,47,48,50,50,47,48,47,48,47,48,47,48,50,47,48,45,46,47,48,0,0,0,47,48,47,48,47,48,47,48,50,45,46,47,48,0,0,0,0,50,0,0,47,48,0,47,48,47,48,47,48,47,48,50,47,48,46,50,47,48,50,47,48,45,46,50,47,48,45,46,50,47,48,45,46,47,48,0,0,0,0,0,0,69,0,0,0,67,0,62,69,0,69,0,67,0,67,0,0,67,0,69,63,64,65,63,64,65,87,88,89,90,91,66,67,63,64,65,87,88,89,90,91,66,67,66,67,66,67,66,67,66,67,66,67,63,64,65,66,67,63,64,65,87,88,89,90,91,66,67,66,66,67,63,64,65,87,88,89,90,91,66,67,0,63,64,65,66,66,69,63,64,65,66,67,66,66,66,66,67,63,64,65,87,88,89,90,91,66,67,63,64,65,87,88,89,90,91,66,67,63,64,65,87,88,89,90,91,66,67,66,0,72,74,74,74,74,74,74,74,74,74,0,79,75,75,75,75,75,75,75,75,75,79,74,75,72,75,80,72,72,72,72,72,72,80,81,81,75,72,72,72,72,72,0,0,75,79,73,80,73,73,73,81,81,73,0,0,74,72,74,75,0,0,0,73,73,75,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,72,73,74,75,72,73,74,75,72,73,74,75,72,73,74,75,72,73,74,75,72,72,73,73,74,74,75,75,72,73,74,75,72,73,74,75,82,77,72,73,74,75,78,79,80,81,82,77,72,73,74,75,78,79,80,81,77,72,73,74,75,78,79,80,81,77,72,73,74,75,78,79,80,81,72,73,74,75,72,73,74,75,77,72,73,74,75,72,73,74,75,72,73,74,75,79,80,81,72,73,74,75,79,80,81,72,73,74,75,77,72,72,72,72,72,73,73,73,73,73,74,74,74,74,74,75,75,75,75,75,78,79,80,81,82,77,72,73,74,75,78,79,80,81,72,73,74,75,72,72,73,73,74,74,75,75,72,73,74,75,72,73,74,75,72,73,74,75,72,73,74,75,79,80,81,78,78,77,77,72,73,74,75,72,73,74,75,72,73,74,75,82,77,72,73,74,75,78,79,80,81,72,73,74,75,0,0,72,73,74,75,72,73,74,75,0,72,73,74,75,72,73,74,75,77,77,72,73,74,75,77,77,72,73,74,75,72,73,74,75,77,77,77,77,0,72,73,74,75,72,73,74,75,72,73,74,75,0,0,0,0,0,0,0,0,0,0,0,77,72,73,74,75,78,79,80,81,72,73,74,75,82,77,72,73,74,75,78,79,80,81,82,77,72,73,74,75,78,79,80,81,82,77,72,73,74,75,78,79,80,81,72,73,74,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[1,1],[[],3],[2,3],[1,3],[[]],[[]],[[]],[[]],[3,1],[1,1],[[]],[2],[[2,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[7,2],[8,2],[9,2],[[]],[10,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[[]],[3],[3,2],[[]],[[]],[[],3],[2,3],[2,17],[1,17],[[]],[2,[[6,[2,18]]]],[1,[[6,[2,18]]]],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],0,0,0,0,[20,[[22,[21]]]],[20,[[22,[21]]]],[20,23],[23,24],[20,23],[23,23],[[]],[20,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,20],[25,25],[26,26],[[]],[[]],[[23,20]],[[]],[[20,20],27],[[23,23],27],[[],20],[[],23],[20,23],[25,28],[26,28],[20],[[20,20],17],[[25,25],17],[[23,23],17],[[26,26],17],[[],17],[[],17],[[],17],[[],17],[[20,4],[[6,[5]]]],[[25,4],[[6,[5]]]],[[25,4],[[6,[5]]]],[[23,4],[[6,[5]]]],[[26,4],[[6,[5]]]],[[26,4],[[6,[5]]]],[[]],[[[30,[23,29]]],20],[23,20],[[[32,[31,29]]],20],[[[33,[23]]],20],[[]],[[]],[[[22,[21]]],[[6,[23,34]]]],[[[22,[21]]],[[6,[23,26]]]],[[[22,[21]]],23],[24,23],[24,20],[[[32,[21,29]]],20],[[[32,[21,29]]],[[6,[20,35]]]],[[[32,[21,29]]],20],[[20,36]],[[23,36]],[[20,37],23],[[23,[39,[38]]],23],[[]],[[]],[[]],[20,[[30,[23,29]]]],[20,[[32,[21,29]]]],[20,[[32,[21,29]]]],[[[30,[23,29]]],20],[20,24],[20,[[6,[40,41]]]],[25,[[32,[21,29]]]],[23,17],[[[42,[[32,[21,29]]]]],[[6,[20,25]]]],[25,38],[[20,20],[[43,[27]]]],[[23,23],[[43,[27]]]],[23,[[22,[21]]]],[23,[[22,[21]]]],[[]],[[]],[23,20],[[]],[23,[[6,[28,44]]]],[[],40],[[],40],[23,[[33,[28]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,38]],[[46,38]],[[[22,[45]],38]],[[[22,[46]],38]],[[],47],[[],48],[[47,47],47],[[48,48],48],[[47,47]],[[48,48]],[[47,47],47],[[48,48],48],[[47,47]],[[48,48]],[47,49],[47,49],[48,49],[48,49],[[47,47],47],[[48,48],48],[[47,47]],[[48,48]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[47,47],[48,48],[46,46],[[]],[[]],[[]],[[]],[51],[47,47],[48,48],[[47,47],17],[[48,48],17],[45,[[22,[21]]]],[46,[[22,[21]]]],[45,[[22,[21]]]],[[47,47],47],[[48,48],48],[52,[[53,[2]]]],[[52,2],53],[[52,2,48],53],[[],47],[[],48],[[50,50],17],[[47,47],17],[[48,48],17],[[],17],[[],17],[[],17],[[47,54]],[[48,54]],[[52,51],[[53,[2]]]],[52,[[53,[47]]]],[[52,47],53],[[50,4],55],[[50,4],55],[[47,4],55],[[47,4],55],[[47,4],55],[[47,4],55],[[47,4],55],[[48,4],55],[[48,4],55],[[48,4],55],[[48,4],55],[[48,4],55],[[45,4],[[6,[5]]]],[[46,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[49,[[43,[47]]]],[49,[[43,[48]]]],[49,47],[49,47],[49,48],[49,48],[49,47],[49,48],[18,[[43,[50]]]],[54,47],[54,48],[28,[[43,[47]]]],[28,[[43,[48]]]],[3,50],[[50,36]],[[47,36]],[[48,36]],[[47,47]],[[48,48]],[[47,47],47],[[48,48],48],[[47,47],17],[[48,48],17],[[]],[[]],[[]],[[]],[[]],[47],[48],[52,53],[[52,17],53],[52,[[53,[56]]]],[47,17],[48,17],[47,17],[48,17],[47,[[57,[47]]]],[48,[[57,[48]]]],[47,[[58,[47]]]],[48,[[58,[48]]]],[50,59],[[[22,[21]]],45],[[[22,[21]]],46],[47,47],[48,48],[[52,[22,[21]],56],[[53,[38]]]],[[52,[22,[45]],56],[[53,[38]]]],[[52,[22,[21]],56],[[53,[38]]]],[[52,[22,[46]],56],[[53,[38]]]],[50,3],[[52,[22,[21]]],[[53,[38]]]],[[52,[22,[45]]],[[53,[38]]]],[[47,47]],[[48,48]],[60,53],[[47,47,17]],[[48,48,17]],[[47,47],47],[[48,48],48],[[47,47]],[[48,48]],[[47,47],47],[[48,48],48],[[]],[[]],[[]],[[]],[[],40],[[47,47]],[[48,48]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[],19],[[],19],[[],19],[[47,47],47],[[48,48],48],[[52,[22,[21]]],[[53,[38]]]],[[52,[22,[46]]],[[53,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],61],[[[63,[62]]],61],[[[64,[62]]],61],[[[65,[62]]],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[67,67],[[]],[[]],[[66,66],27],[[67,67],27],[[66,66],17],[[67,67],17],[[],17],[[],17],[[[63,[62]],4],55],[[[64,[62]],4],55],[[[65,[62,68]],4],55],[[66,4],55],[[67,4],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[67,21,21,38],66],[[66,36]],[[67,36]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,69],53],[[],[[63,[62]]]],[[],[[64,[62]]]],[[],[[65,[62]]]],[[21,21],66],[70,66],[[71,61],53],[[71,61],53],[[71,61],53],[[71,61],53],[[66,66],[[43,[27]]]],[[67,67],[[43,[27]]]],[66,70],[[21,21],66],[[21,21],66],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[21,21],66],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],72],[[],73],[[],74],[[],75],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[72,76],[72,76],[73,76],[73,76],[74,76],[74,76],[75,76],[75,76],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[72,72],[73,73],[74,74],[75,75],[78,78],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[73,73],[74,74],[75,75],[[72,72],17],[[73,73],17],[[74,74],17],[[75,75],17],0,[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[],72],[[],73],[[],74],[[],75],[[72,72],17],[[73,73],17],[[74,74],17],[[75,75],17],[[79,79],17],[[80,80],17],[[81,81],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[72,54]],[[73,54]],[[74,54]],[[75,54]],[[77,4],55],[[72,4],55],[[72,4],55],[[72,4],55],[[72,4],55],[[72,4],55],[[73,4],55],[[73,4],55],[[73,4],55],[[73,4],55],[[73,4],55],[[74,4],55],[[74,4],55],[[74,4],55],[[74,4],55],[[74,4],55],[[75,4],55],[[75,4],55],[[75,4],55],[[75,4],55],[[75,4],55],[[78,4],55],[[79,4],55],[[80,4],55],[[81,4],55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,[[43,[72]]]],[76,[[43,[73]]]],[76,[[43,[74]]]],[76,[[43,[75]]]],[76,72],[76,72],[76,73],[76,73],[76,74],[76,74],[76,75],[76,75],[76,72],[76,73],[76,74],[76,75],[54,72],[54,73],[54,74],[54,75],[28,[[43,[72]]]],[28,[[43,[73]]]],[28,[[43,[74]]]],[28,[[43,[75]]]],[[72,36]],[[73,36]],[[74,36]],[[75,36]],[[79,36]],[[80,36]],[[81,36]],[[78,82]],[[78,82]],0,[77,49],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[72,72],17],[[73,73],17],[[74,74],17],[[75,75],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72],[73],[74],[75],[52,53],[52,53],[72,17],[73,17],[74,17],[75,17],[72,17],[73,17],[74,17],[75,17],[52,17],[72,[[57,[72]]]],[73,[[57,[73]]]],[74,[[57,[74]]]],[75,[[57,[75]]]],[72,[[58,[72]]]],[73,[[58,[73]]]],[74,[[58,[74]]]],[75,[[58,[75]]]],0,[77],[72,72],[73,73],[74,74],[75,75],0,[77,49],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[72,72,17]],[[73,73,17]],[[74,74,17]],[[75,75,17]],[[77,49],53],[[77,49],53],[[77,49],53],0,0,[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],[52,53],[[52,81],53],[[52,80],53],[52,[[53,[77]]]],[52,[[53,[0]]]],[52,[[53,[0]]]],[52,[[53,[83]]]],[52,53],[[52,79,77],53],0,[[52,83],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,72]],[[73,73]],[[74,74]],[[75,75]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[72,72],72],[[73,73],73],[[74,74],74],[[75,75],75],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"BorrowedFd"],[3,"OwnedFd"],[15,"i32"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"TcpStream"],[3,"ChildStdin"],[3,"UnixStream"],[3,"File"],[3,"ChildStderr"],[3,"TcpListener"],[3,"ChildStdout"],[15,"bool"],[3,"Error"],[3,"TypeId"],[3,"CString"],[15,"u8"],[15,"slice"],[3,"CStr"],[15,"i8"],[3,"NulError"],[3,"FromBytesWithNulError"],[4,"Ordering"],[15,"str"],[3,"Global"],[3,"Box"],[3,"NonZeroU8"],[3,"Vec"],[4,"Cow"],[3,"FromBytesUntilNulError"],[3,"FromVecWithNulError"],[8,"Hasher"],[3,"RangeFull"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[3,"IntoStringError"],[8,"Into"],[4,"Option"],[3,"Utf8Error"],[3,"IoSliceMut"],[3,"IoSlice"],[3,"FdFlags"],[3,"DupFlags"],[15,"u32"],[3,"Errno"],[6,"RawFd"],[8,"AsFd"],[6,"Result"],[8,"IntoIterator"],[6,"Result"],[15,"u64"],[3,"Iter"],[3,"IterNames"],[4,"ErrorKind"],[8,"FnMut"],[4,"c_void"],[8,"CompileTimeOpcode"],[3,"NoArg"],[3,"Getter"],[3,"Setter"],[3,"Opcode"],[4,"Direction"],[8,"Debug"],[8,"Ioctl"],[6,"RawOpcode"],[6,"IoctlOutput"],[3,"InputModes"],[3,"OutputModes"],[3,"ControlModes"],[3,"LocalModes"],[6,"tcflag_t"],[3,"Termios"],[3,"SpecialCodes"],[4,"OptionalActions"],[4,"QueueSelector"],[4,"Action"],[3,"SpecialCodeIndex"],[6,"Winsize"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"],[3,"BadOpcode"],[3,"ReadOpcode"],[3,"WriteOpcode"],[3,"ReadWriteOpcode"],[3,"NoneOpcode"]],"a":{"2big":[261],"acces":[161],"c_cc":[902],"c_cflag":[741],"c_iflag":[836],"c_ispeed":[837,899],"c_lflag":[883],"c_oflag":[889],"c_ospeed":[900],"cbaud":[900,901],"cbaudex":[900,901],"cfgetispeed":[837],"cfgetspeed":[837],"cfmakeraw":[884],"cfsetispeed":[899],"cfsetospeed":[900],"cfsetspeed":[901],"cibaud":[899,901],"cibaudex":[899,901],"errno":[184],"exta":[981],"extb":[986],"f_dupfd_cloexec":[330],"f_getfd":[331],"f_setfd":[332],"fd_cloexec":[382],"fioclex":[382],"fionbio":[383],"fionread":[384],"tcflsh":[918],"tcgetattr2":[919],"tcgets":[919],"tcgets2":[919],"tciflush":[601],"tcioff":[609],"tcioflush":[608],"tcion":[610],"tcoflush":[622],"tcooff":[626],"tcoon":[627],"tcsadrain":[586],"tcsaflush":[596],"tcsanow":[620],"tcsbrk":[923],"tcsetattr2":[924],"tcsets":[924],"tcsets2":[924],"tcxonc":[917],"tiocexcl":[864],"tiocgpgrp":[920],"tiocgsid":[921],"tiocgwinsz":[922],"tiocnxcl":[865],"tiocspgrp":[925],"tiocswinsz":[926],"winsize":[658]}},\
"ryu":{"doc":"github crates-io docs-rs","t":"DILLLLLLLLLALLLFF","n":["Buffer","Float","borrow","borrow_mut","clone","default","format","format_finite","from","into","new","raw","try_from","try_into","type_id","format32","format64"],"q":[[0,"ryu"],[15,"ryu::raw"]],"d":["Safe API for formatting floating point numbers to text.","A floating point number, f32 or f64, that can be written …","","","","","Print a floating point number into this buffer and return …","Print a floating point number into this buffer and return …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","This is a cheap operation; you don’t need to worry about …","Unsafe functions that mirror the API of the C …","","","","Print f32 to the given buffer and return number of bytes …","Print f64 to the given buffer and return number of bytes …"],"i":[0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0],"f":[0,0,[[]],[[]],[1,1],[[],1],[[1,2],3],[[1,2],3],[[]],[[]],[[],1],0,[[],4],[[],4],[[],5],[[6,7],8],[[9,7],8]],"c":[],"p":[[3,"Buffer"],[8,"Float"],[15,"str"],[4,"Result"],[3,"TypeId"],[15,"f32"],[15,"u8"],[15,"usize"],[15,"f64"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,3,7,3,7,0,3,3,3,3,7,3,7,0,3,7,3,2,7,3,7,3,7,3,7,3],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[4,1,2]],5],6],[[7,5],6],[[]],[[]],[1,[[3,[1,7]]]],[[]],[[]],[[[3,[1,2]]]],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,[[3,[1,2]]]]],"c":[],"p":[[8,"FnOnce"],[8,"Strategy"],[3,"ScopeGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"serde":{"doc":"Serde","t":"IYIQQQIYQQQQQQQILLLAKKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKOLLAKKKKKKLKKKKKKKKKKKKKKKKLKKKKKKKNNNIIIIQNIIQQQQQINDININNNNNINCNNNENNNQQQIILLLLLLLLKLKKLKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKLLLKLKLLLLLLLLLKLLLLLLKLKLLLKLKLLKLLLLLLLKLLKLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQQQQQQQQDQQQQQQQQIIQIQIQIQIQIQIQICLLLLLKKKKKKKKLLLLLLLLLLKKKKKKLLLKKKKKKLLLLLKKKKKLKKKKKKKKKKKKLKKKKKKKKLLLLLL","n":["Deserialize","Deserialize","Deserializer","Error","Error","Ok","Serialize","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":[[0,"serde"],[87,"serde::de"],[265,"serde::de::value"],[1531,"serde::ser"]],"d":["A <strong>data structure</strong> that can be deserialized from any data …","Derive macro available if serde is built with …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Derive macro available if serde is built with …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,0,5,11,11,0,0,11,11,11,11,11,11,11,0,11,11,11,0,33,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,11,0,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,28,28,28,0,0,0,0,78,28,0,0,5,41,40,39,79,0,28,0,0,28,0,28,28,28,28,28,0,28,0,28,28,28,0,28,28,28,34,6,39,0,0,27,28,27,28,27,28,27,28,37,27,33,34,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,37,27,28,6,27,31,31,27,27,28,28,27,28,27,28,78,37,37,37,5,37,79,79,41,41,40,40,40,40,40,40,41,40,79,27,28,28,27,28,27,28,79,27,28,79,37,37,0,39,39,6,27,6,6,6,6,27,6,6,27,6,6,27,6,27,6,6,6,27,6,6,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,6,6,27,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,53,53,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,53,42,43,44,45,46,47,48,49,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,52,52,52,52,52,69,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,44,45,46,47,71,0,11,80,81,82,83,84,85,86,0,11,80,81,82,83,84,85,86,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,77,77,11,11,11,76,80,81,82,83,84,85,86,77,77,77,77,77,77,77,77,77,11,22,11,11,11,80,81,77,77,84,11,11,82,83,85,86,77,77,77,77,11,11,11,11,11,84,77,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,84,77,85,86,77,77,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[[0,[3,4]]],2],0,[5,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],0,[[],10],[[],10],0,[11,2],[10,2],[[[8,[12]]],2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[28,28],[[]],[[]],[3],[[],27],[5,2],[5,2],[5,[[2,[27]]]],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[7],[[27,27],10],[[28,28],10],[29,30],[[27,29],30],[29,30],[[31,29],30],[[27,29],30],[29,[[2,[32]]]],[[28,29],30],[[28,29],30],[[]],[[]],[[]],[[]],[[]],[[9,31]],[[28,31]],[[28,31]],[[],10],[7],[[],[[2,[33]]]],[34,2],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[21]]]],[[34,34],[[2,[21]]]],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[33]]]],[34,2],[[],[[21,[9]]]],[[],[[21,[9]]]],[[[8,[7]],6],2],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[9,6],2],[[],36],[[],36],[[],2],[[7,[8,[7]]]],[[7,[8,[7]]]],0,[[],2],[34,2],[10,[[2,[37]]]],[[27,10],2],[[[8,[12]]],[[2,[37]]]],[7,[[2,[37]]]],[[[38,[12]]],[[2,[37]]]],[[[8,[12]]],[[2,[37]]]],[[27,[8,[12]]],[[2,[37]]]],[13,[[2,[37]]]],[39,2],[[27,39],2],[14,[[2,[37]]]],[15,[[2,[37]]]],[[27,15],2],[16,[[2,[37]]]],[[27,16],2],[17,[[2,[37]]]],[18,[[2,[37]]]],[19,[[2,[37]]]],[[27,19],2],[20,[[2,[37]]]],[40,2],[[27,40],2],[5,2],[[27,5],2],[[],[[2,[37]]]],[27,2],[41,2],[[27,41],2],[5,2],[[27,5],2],[7,[[2,[37]]]],[[27,7],[[2,[37]]]],[35,[[2,[37]]]],[24,[[2,[37]]]],[[27,24],2],[25,[[2,[37]]]],[23,[[2,[37]]]],[26,[[2,[37]]]],[[27,26],2],[12,[[2,[37]]]],[[],[[2,[37]]]],[27,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[[[52,[[0,[50,51]]]]],[[52,[[0,[50,51]]]]]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[[69,[51,51]]],[[69,[51,51]]]],[[[70,[51]]],[[70,[51]]]],[[[71,[51]]],[[71,[51]]]],[[[72,[51]]],[[72,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,53],[3,53],[53,7],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],9,6],2],[[[43,[37]],9,6],2],[[[44,[37]],9,6],2],[[[45,[37]],9,6],2],[[[46,[37]],9,6],2],[[[47,[37]],9,6],2],[[[48,[37]],9,6],2],[[[49,[37]],9,6],2],[[[52,[50,37]],9,6],2],[[[54,[37]],9,6],2],[[[55,[37]],9,6],2],[[[56,[37]],9,6],2],[[[57,[37]],9,6],2],[[[58,[37]],9,6],2],[[[59,[37]],9,6],2],[[[60,[37]],9,6],2],[[[61,[37]],9,6],2],[[[62,[37]],9,6],2],[[[63,[37]],9,6],2],[[[64,[37]],9,6],2],[[[65,[37]],9,6],2],[[[66,[37]],9,6],2],[[[67,[37]],9,6],2],[[[68,[37]],9,6],2],[[[69,[50,37]],9,6],2],[[[70,[41]],9,6],2],[[[71,[40]],9,6],2],[[[72,[39]],9,6],2],[[[42,[37]],7,9,6],2],[[[43,[37]],7,9,6],2],[[[44,[37]],7,9,6],2],[[[45,[37]],7,9,6],2],[[[46,[37]],7,9,6],2],[[[47,[37]],7,9,6],2],[[[48,[37]],7,9,6],2],[[[49,[37]],7,9,6],2],[[[52,[50,37]],7,9,6],2],[[[54,[37]],7,9,6],2],[[[55,[37]],7,9,6],2],[[[56,[37]],7,9,6],2],[[[57,[37]],7,9,6],2],[[[58,[37]],7,9,6],2],[[[59,[37]],7,9,6],2],[[[60,[37]],7,9,6],2],[[[61,[37]],7,9,6],2],[[[62,[37]],7,9,6],2],[[[63,[37]],7,9,6],2],[[[64,[37]],7,9,6],2],[[[65,[37]],7,9,6],2],[[[66,[37]],7,9,6],2],[[[67,[37]],7,9,6],2],[[[68,[37]],7,9,6],2],[[[69,[50,37]],7,9,6],2],[[[70,[41]],7,9,6],2],[[[71,[40]],7,9,6],2],[[[72,[39]],7,9,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[52,[50,37]]],[[2,[37]]]],[[[69,[50,37]]],[[2,[37]]]],[[53,53],10],[[42,29],30],[[43,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[48,29],30],[[49,29],30],[[[52,[[0,[50,73]]]],29],30],[[53,29],30],[[53,29],30],[[54,29],30],[[55,29],30],[[56,29],30],[[57,29],30],[[58,29],30],[[59,29],30],[[60,29],30],[[61,29],30],[[62,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[66,29],30],[[67,29],30],[[68,29],30],[[[69,[73]],29],30],[[[70,[73]],29],30],[[[71,[73]],29],30],[[[72,[73]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[23,43],[7,44],[7,45],[35,46],[[[74,[7]]],47],[[[8,[12]]],48],[[[8,[12]]],49],[50,[[52,[50]]]],[10,54],[20,55],[17,56],[18,57],[19,58],[16,59],[75,60],[12,61],[25,62],[26,63],[24,64],[9,65],[14,66],[15,67],[13,68],[50,[[69,[50]]]],[[],70],[[],71],[[],72],[[[52,[50,37]],34],[[2,[21]]]],[[[69,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34,34],[[2,[21]]]],[[[52,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34],2],[[[52,[50,37]]],[[21,[9]]]],[[[52,[50,37]]],[[21,[9]]]],[[[69,[50,37]]],[[21,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[43,[37]],34],2],[[[44,[37]],34],2],[[[45,[37]],34],2],[[[46,[37]],34],2],[[[47,[37]],34],2],[[[71,[40]],34],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],[[[0,[3,4]]],2],[3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[]],[[]],[[],10],[11,2],[10,2],[[[8,[12]]],2],[13,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[0,[22,4]],[0,[22,4]]],2],[14,2],[15,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[16,2],[17,2],[18,2],[19,2],[20,2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[7,2],[7,2],[[],2],[[],2],[[],36]],"c":[],"p":[[8,"IntoIterator"],[4,"Result"],[8,"Display"],[8,"Sized"],[8,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[8,"Deserialize"],[8,"DeserializeSeed"],[3,"String"],[3,"TypeId"],[8,"Error"],[3,"Vec"],[8,"EnumAccess"],[8,"MapAccess"],[8,"SeqAccess"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[8,"Iterator"],[8,"Clone"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"I128Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"U128Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[8,"Error"],[3,"Impossible"],[8,"IntoDeserializer"],[8,"VariantAccess"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":"YY","n":["Deserialize","Serialize"],"q":[[0,"serde_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"serde_json":{"doc":"Serde JSON","t":"NNDDDNDNNGDDNELLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLFLLLLLLLLLLLLLLLLLOALALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFFFFFLLLLLLLLLLLLLLLLLLADDIDDDLLLLLLLLLLLFLFLFLLLLLLLLLLLLLLLLLLLENNDNGNLLLLLLLLLLLLLLLLLLLLLEDDDDDNDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEDNINDNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNICNDNNDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLL","n":["Array","Bool","Deserializer","Error","Map","Null","Number","Number","Object","Result","Serializer","StreamDeserializer","String","Value","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_from","clone_into","clone_into","collect_str","custom","custom","de","default","default","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","error","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_reader","from_slice","from_str","from_str","from_value","index","index","index_mut","index_mut","into","into","into","into","into","into","into_deserializer","into_deserializer","into_iter","into_iter","into_iter","into_iter","invalid_type","json","map","next","ser","serialize","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","source","to_owned","to_owned","to_string","to_string","to_string","to_string_pretty","to_value","to_vec","to_vec_pretty","to_writer","to_writer_pretty","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","Deserializer","IoRead","Read","SliceRead","StrRead","StreamDeserializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte_offset","end","from","from","from","from_reader","from_reader","from_slice","from_slice","from_str","from_str","into","into","into","into_iter","new","new","new","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Category","Data","Eof","Error","Io","Result","Syntax","borrow","borrow_mut","classify","clone","clone_into","column","eq","equivalent","fmt","from","into","io_error_kind","is_data","is_eof","is_io","is_syntax","line","to_owned","try_from","try_into","type_id","Entry","IntoIter","Iter","IterMut","Keys","Map","Occupied","OccupiedEntry","Vacant","VacantEntry","Values","ValuesMut","and_modify","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","contains_key","entry","from","from","from","from","from","from","from","from","from","get","get","get_key_value","get_mut","get_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","len","len","len","len","len","len","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","or_insert","or_insert_with","remove","remove","remove_entry","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","AsciiControl","Backspace","CarriageReturn","CharEscape","CompactFormatter","FormFeed","Formatter","LineFeed","PrettyFormatter","Quote","ReverseSolidus","Serializer","Solidus","Tab","begin_array","begin_array","begin_array_value","begin_array_value","begin_object","begin_object","begin_object_key","begin_object_key","begin_object_value","begin_object_value","begin_string","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","end_array","end_array","end_array_value","end_array_value","end_object","end_object","end_object_key","end_object_value","end_object_value","end_string","fmt","fmt","from","from","from","into","into","into","into_inner","new","new","pretty","to_owned","to_owned","to_string","to_string_pretty","to_vec","to_vec_pretty","to_writer","to_writer_pretty","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_formatter","with_indent","write_bool","write_byte_array","write_char_escape","write_f32","write_f64","write_i128","write_i16","write_i32","write_i64","write_i8","write_null","write_number_str","write_raw_fragment","write_string_fragment","write_u128","write_u16","write_u32","write_u64","write_u8","Array","Bool","Index","Map","Null","Number","Number","Object","RawValue","Serializer","String","Value","as_array","as_array_mut","as_bool","as_f64","as_f64","as_i64","as_i64","as_null","as_number","as_object","as_object_mut","as_str","as_u64","as_u64","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect_str","deserialize","deserialize","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_str","from_string","from_value","get","get","get_mut","hash","into","into","into_deserializer","is_array","is_boolean","is_f64","is_f64","is_i64","is_i64","is_null","is_number","is_object","is_string","is_u64","is_u64","pointer","pointer_mut","serialize","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","take","to_owned","to_owned","to_raw_value","to_string","to_string","to_value","try_from","try_from","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"serde_json"],[305,"serde_json::de"],[346,"serde_json::error"],[374,"serde_json::map"],[511,"serde_json::ser"],[607,"serde_json::value"]],"d":["Represents a JSON array.","Represents a JSON boolean.","A structure that deserializes JSON into Rust values.","This type represents all possible errors that can occur …","Represents a JSON key/value type.","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.","A structure for serializing Rust values into JSON.","Iterator that deserializes a stream into multiple JSON …","Represents a JSON string.","Represents any valid JSON value.","","","","","","","","","","","","","","","","","","","","","Deserialize JSON data to a Rust data structure.","","","","","","","","","","","","","","Parses a JSON string as bytes. Note that this function …","","","","","","Parses an enum as an object like <code>{&quot;$KEY&quot;:$VALUE}</code>, where …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a newtype struct as the underlying value.","","","Parses a <code>null</code> as a None, and any other values as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When serializing or deserializing JSON goes wrong.","","","","","Display a JSON value as a string.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Convert string slice to <code>Value</code>","Convert 64-bit floating point number to <code>Value</code>","","","Convert a slice to <code>Value</code>","Convert copy-on-write string to <code>Value</code>","Convert map (with string keys) to <code>Value</code>","","Convert <code>()</code> to <code>Value</code>","Convert boolean to <code>Value</code>","","","","","","Convert 32-bit floating point number to <code>Value</code>","Convert <code>String</code> to <code>Value</code>","Convert <code>Number</code> to <code>Value</code>","Convert a <code>Vec</code> to <code>Value</code>","","Convert an iteratable type to a <code>Value</code>","Convert an iteratable type to a <code>Value</code>","Deserialize an instance of type <code>T</code> from an I/O stream of …","Deserialize an instance of type <code>T</code> from bytes of JSON text.","Deserialize an instance of type <code>T</code> from a string of JSON …","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.","","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> or","","Write into a <code>serde_json::Value</code> using the syntax …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Construct a <code>serde_json::Value</code> from a JSON literal.","A map of String to serde_json::Value.","","Serialize a Rust data structure into JSON data.","","","","","","","","","","","","","","Serialize newtypes without an object wrapper.","","","","","","","","","","","","","","","","","","","","","","Serialize the given data structure as a String of JSON.","","","Serialize the given data structure as a pretty-printed …","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …","Serialize the given data structure as a JSON byte vector.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as JSON into the I/O …","Serialize the given data structure as pretty-printed JSON …","","","","","","","","","","","","","","","","","","","The Value enum, a loosely typed way of representing any …","A structure that deserializes JSON into Rust values.","JSON input source that reads from a std::io input stream.","Trait used by the deserializer for iterating over input. …","JSON input source that reads from a slice of bytes.","JSON input source that reads from a UTF-8 string.","Iterator that deserializes a stream into multiple JSON …","","","","","","","Returns the number of bytes so far deserialized into a …","The <code>Deserializer::end</code> method should be called after a …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize an instance of type <code>T</code> from an I/O stream of …","Creates a JSON deserializer from an <code>io::Read</code>.","Deserialize an instance of type <code>T</code> from bytes of JSON text.","Creates a JSON deserializer from a <code>&amp;[u8]</code>.","Deserialize an instance of type <code>T</code> from a string of JSON …","Creates a JSON deserializer from a <code>&amp;str</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn a JSON deserializer into an iterator over values of …","Create a JSON deserializer from one of the possible …","Create a JSON stream deserializer from one of the possible …","Create a JSON input source to read from a std::io input …","Create a JSON input source to read from a slice of bytes.","Create a JSON input source to read from a UTF-8 string.","","","","","","","","","","Categorizes the cause of a <code>serde_json::Error</code>.","The error was caused by input data that was semantically …","The error was caused by prematurely reaching the end of …","This type represents all possible errors that can occur …","The error was caused by a failure to read or write bytes …","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.","The error was caused by input that was not syntactically …","","","Categorizes the cause of this error.","","","One-based column number at which the error was detected.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The kind reported by the underlying standard library I/O …","Returns true if this error was caused by input data that …","Returns true if this error was caused by prematurely …","Returns true if this error was caused by a failure to read …","Returns true if this error was caused by input that was not","One-based line number at which the error was detected.","","","","","A view into a single entry in a map, which may either be …","An owning iterator over a serde_json::Map’s entries.","An iterator over a serde_json::Map’s entries.","A mutable iterator over a serde_json::Map’s entries.","An iterator over a serde_json::Map’s keys.","Represents a JSON key/value type.","An occupied Entry.","An occupied Entry. It is part of the <code>Entry</code> enum.","A vacant Entry.","A vacant Entry. It is part of the <code>Entry</code> enum.","An iterator over a serde_json::Map’s values.","A mutable iterator over a serde_json::Map’s values.","Provides in-place mutable access to an occupied entry …","Moves all elements from other into self, leaving other …","","","","","","","","","","","","","","","","","","","Clears the map, removing all values.","Returns true if the map contains a value for the specified …","Gets the given key’s corresponding entry in the map for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns the key-value pair matching the given key.","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Inserts a key-value pair into the map.","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the <code>OccupiedEntry</code>’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Converts the entry into a mutable reference to its value.","Returns true if the map contains no elements.","Gets an iterator over the entries of the map.","Gets a mutable iterator over the entries of the map.","Returns a reference to this entry’s key.","Gets a reference to the key that would be used when …","Gets a reference to the key in the entry.","Gets an iterator over the keys of the map.","Returns the number of elements in the map.","","","","","","","Makes a new empty Map.","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the map, returning the value at the key …","Takes the value of the entry out of the map, and returns …","Removes a key from the map, returning the stored key and …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator over the values of the map.","Gets an iterator over mutable values of the map.","Makes a new empty Map with the given initial capacity.","An escaped ASCII plane control character (usually escaped …","An escaped backspace character (usually escaped as <code>\\\\b</code>)","An escaped carriage return character (usually escaped as <code>\\\\r</code>…","Represents a character escape code in a type-safe manner.","This structure compacts a JSON value with no extra …","An escaped form feed character (usually escaped as <code>\\\\f</code>)","This trait abstracts away serializing the JSON control …","An escaped line feed character (usually escaped as <code>\\\\n</code>)","This structure pretty prints a JSON value to make it human …","An escaped quote <code>&quot;</code>","An escaped reverse solidus <code>\\\\</code>","A structure for serializing Rust values into JSON.","An escaped solidus <code>/</code>","An escaped tab character (usually escaped as <code>\\\\t</code>)","Called before every array.  Writes a <code>[</code> to the specified …","","Called before every array value.  Writes a <code>,</code> if needed to …","","Called before every object.  Writes a <code>{</code> to the specified …","","Called before every object key.","","Called before every object value.  A <code>:</code> should be written to","","Called before each series of <code>write_string_fragment</code> and …","","","","","","","","","","","","Called after every array.  Writes a <code>]</code> to the specified …","","Called after every array value.","","Called after every object.  Writes a <code>}</code> to the specified …","","Called after every object key.  A <code>:</code> should be written to …","Called after every object value.","","Called after each series of <code>write_string_fragment</code> and …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwrap the <code>Writer</code> from the <code>Serializer</code>.","Creates a new JSON serializer.","Construct a pretty printer formatter that defaults to …","Creates a new JSON pretty print serializer.","","","Serialize the given data structure as a String of JSON.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as a JSON byte vector.","Serialize the given data structure as a pretty-printed …","Serialize the given data structure as JSON into the I/O …","Serialize the given data structure as pretty-printed JSON …","","","","","","","","","","Creates a new JSON visitor whose output will be written to …","Construct a pretty printer formatter that uses the <code>indent</code> …","Writes a <code>true</code> or <code>false</code> value to the specified writer.","Writes the representation of a byte array. Formatters can …","Writes a character escape code to the specified writer.","Writes a floating point value like <code>-31.26e+12</code> to the …","Writes a floating point value like <code>-31.26e+12</code> to the …","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes an integer value like <code>-123</code> to the specified writer.","Writes a <code>null</code> value to the specified writer.","Writes a number that has already been rendered to a string.","Writes a raw JSON fragment that doesn’t need any …","Writes a string fragment that doesn’t need any escaping …","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Writes an integer value like <code>123</code> to the specified writer.","Represents a JSON array.","Represents a JSON boolean.","A type that can be used to index into a <code>serde_json::Value</code>.","","Represents a JSON null value.","Represents a JSON number, whether integer or floating …","Represents a JSON number, whether integer or floating …","Represents a JSON object.","Reference to a range of bytes encompassing a single valid …","Serializer whose output is a <code>Value</code>.","Represents a JSON string.","Represents any valid JSON value.","If the <code>Value</code> is an Array, returns the associated vector. …","If the <code>Value</code> is an Array, returns the associated mutable …","If the <code>Value</code> is a Boolean, returns the associated bool. …","If the <code>Value</code> is a number, represent it as f64 if possible. …","Represents the number as f64 if possible. Returns None …","If the <code>Value</code> is an integer, represent it as i64 if …","If the <code>Number</code> is an integer, represent it as i64 if …","If the <code>Value</code> is a Null, returns (). Returns None otherwise.","If the <code>Value</code> is a Number, returns the associated <code>Number</code>. …","If the <code>Value</code> is an Object, returns the associated Map. …","If the <code>Value</code> is an Object, returns the associated mutable …","If the <code>Value</code> is a String, returns the associated str. …","If the <code>Value</code> is an integer, represent it as u64 if …","If the <code>Number</code> is an integer, represent it as u64 if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Converts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …","","Convert an owned <code>String</code> of JSON data to an owned <code>RawValue</code>.","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.","Access the JSON text underlying a raw value.","Index into a JSON array or map. A string index can be used …","Mutably index into a JSON array or map. A string index can …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the <code>Value</code> is an Array. Returns false …","Returns true if the <code>Value</code> is a Boolean. Returns false …","Returns true if the <code>Value</code> is a number that can be …","Returns true if the <code>Number</code> can be represented by f64.","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …","Returns true if the <code>Value</code> is a Null. Returns false …","Returns true if the <code>Value</code> is a Number. Returns false …","Returns true if the <code>Value</code> is an Object. Returns false …","Returns true if the <code>Value</code> is a String. Returns false …","Returns true if the <code>Value</code> is an integer between zero and …","Returns true if the <code>Number</code> is an integer between zero and …","Looks up a value by a JSON Pointer.","Looks up a value by a JSON Pointer and returns a mutable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …","","","Convert a <code>T</code> into a boxed <code>RawValue</code>.","","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …","","","","","","",""],"i":[2,2,0,0,0,2,0,2,2,0,0,0,2,0,14,50,10,3,6,2,14,50,10,3,6,2,3,2,3,3,2,6,10,10,0,3,2,3,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,14,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,0,3,10,10,3,2,2,14,50,10,3,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,0,0,0,2,0,3,2,3,2,14,50,10,3,6,2,2,2,50,3,3,3,10,0,0,50,0,3,2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,10,3,2,0,10,2,0,0,0,0,0,0,14,50,10,3,6,2,14,50,10,3,6,2,14,50,10,3,6,2,0,0,0,0,0,0,0,58,59,60,58,59,60,50,14,58,59,60,0,14,0,14,0,14,58,59,60,14,14,50,58,59,60,58,59,60,58,59,60,58,59,60,0,61,61,0,61,0,61,61,61,10,61,61,10,61,61,61,61,61,10,10,10,10,10,10,61,61,61,61,0,0,0,0,0,0,63,0,63,0,0,0,63,3,63,66,65,67,68,70,69,71,72,63,66,65,67,68,70,69,71,72,3,3,3,63,66,65,67,68,70,69,71,72,3,65,3,3,65,3,66,65,63,66,65,67,68,70,69,71,72,67,68,70,69,71,72,65,3,3,3,63,66,65,3,3,67,68,70,69,71,72,3,67,68,70,69,71,72,67,68,70,69,71,72,63,63,3,65,3,3,67,68,70,69,71,72,63,66,65,67,68,70,69,71,72,63,66,65,67,68,70,69,71,72,63,66,65,67,68,70,69,71,72,3,3,3,77,77,77,0,0,77,0,77,0,77,77,0,77,77,5,75,5,75,5,75,5,75,5,75,5,77,76,75,77,76,75,76,75,76,75,75,5,75,5,75,5,75,5,5,75,5,76,75,77,76,75,77,76,75,6,6,75,6,76,75,0,0,0,0,0,0,77,76,75,77,76,75,77,76,75,6,75,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,0,0,2,0,2,2,0,0,2,0,2,2,2,2,39,2,39,2,2,2,2,2,2,39,78,79,39,78,79,39,39,39,78,79,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,79,39,39,39,39,79,79,39,39,78,39,39,39,39,39,39,39,39,39,39,39,39,39,79,0,79,2,2,39,78,39,79,2,2,2,39,2,39,2,2,2,2,2,39,2,2,79,39,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,2,79,39,0,79,39,0,78,39,78,39,78,79,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]],[[3,[1,2]]]],[2,2],[[[3,[1,2]],[3,[1,2]]]],[[]],[[]],[[[6,[4,5]],[0,[7,8]]],9],[8,10],[8,10],0,[[],[[3,[1,2]]]],[[],2],[11,[[12,[[3,[1,2]]]]]],[11,[[12,[2]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],16,[17,[16]],15],9],[[2,16,[17,[16]],15],[[12,[10]]]],[[2,16,[17,[16]],15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],16,15],9],[[2,16,15],[[12,[10]]]],[[2,16,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],16,[17,[16]],15],9],[[2,16,[17,[16]],15],[[12,[10]]]],[[2,16,[17,[16]],15],[[12,[10]]]],[[[14,[13]],18,15],9],[[2,18,15],[[12,[10]]]],[[2,18,15],[[12,[10]]]],[[[14,[13]],16,18,15],9],[[2,16,18,15],[[12,[10]]]],[[2,16,18,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],15],9],[[2,15],[[12,[10]]]],[[2,15],[[12,[10]]]],[[[14,[13]],16,15],9],[[2,16,15],[[12,[10]]]],[[2,16,15],[[12,[10]]]],[[[3,[1,2]],[3,[1,2]]],19],[[2,20],19],[[2,21],19],[[2,22],19],[[2,23],19],[[2,24],19],[[2,25],19],[[2,26],19],[[2,23],19],[[2,27],19],[[2,19],19],[[2,27],19],[[2,28],19],[[2,16],19],[[2,26],19],[[2,25],19],[[2,25],19],[[2,29],19],[[2,28],19],[[2,29],19],[[2,19],19],[[2,30],19],[[2,22],19],[[2,22],19],[[2,21],19],[[2,24],19],[[2,16],19],[[2,2],19],[[2,23],19],[[2,19],19],[[2,24],19],[[2,27],19],[[2,18],19],[[2,18],19],[[2,29],19],[[2,20],19],[[2,30],19],[[2,18],19],[[2,30],19],[[2,28],19],[[2,1],19],[[2,20],19],[[2,26],19],[[2,21],19],[[],19],[[],19],0,[[[3,[1,2]],31]],[[10,32],33],[[10,32],33],[[[3,[1,2]],32],[[12,[34]]]],[[2,32],33],[[2,32],33],[[]],[[]],[[]],[[]],[[]],[18,2],[[]],[21,2],[24,2],[16,2],[22,2],[26,2],[27,2],[[[17,[[0,[35,[36,[2]]]]]]],2],[[[37,[16]]],2],[[[3,[1,2]]],2],[23,2],[[],2],[19,2],[[[38,[[36,[2]]]]],2],[29,2],[20,2],[28,2],[25,2],[30,2],[1,2],[39,2],[[[40,[[36,[2]]]]],2],[31,[[3,[1,2]]]],[31,2],[31,2],[41,[[9,[42]]]],[[[17,[23]]],[[9,[43]]]],[16,[[9,[43]]]],[16,[[12,[2,10]]]],[2,[[12,[42,10]]]],[[[3,[1,2]],[0,[7,44,45,46]]],2],[[2,47],2],[[[3,[1,2]],[0,[7,44,45,46]]],2],[[2,47],2],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[[]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[48,49],10],0,0,[[[50,[13,43]]],[[38,[[9,[43]]]]]],0,[[[3,[1,2]],51],12],[[2,51],12],[[[6,[4,5]],19],9],[[[6,[4,5]],[17,[23]]],9],[[[6,[4,5]],52],9],[[[6,[4,5]],30],9],[[[6,[4,5]],22],9],[[[6,[4,5]],53],9],[[[6,[4,5]],26],9],[[[6,[4,5]],29],9],[[[6,[4,5]],28],9],[[[6,[4,5]],25],9],[[[6,[4,5]],[38,[18]]],9],[[[6,[4,5]],16,[0,[7,54]]],9],[[[6,[4,5]],16,24,16,[0,[7,54]]],9],[[[6,[4,5]]],9],[[[6,[4,5]],[38,[18]]],9],[[[6,[4,5]],[0,[7,54]]],9],[[[6,[4,5]],16],9],[[[6,[4,5]],16,18],9],[[[6,[4,5]],16,24,16,18],9],[[[6,[4,5]],18],9],[[[6,[4,5]],16,18],9],[[[6,[4,5]],16,24,16,18],9],[[[6,[4,5]],55],9],[[[6,[4,5]],20],9],[[[6,[4,5]],24],9],[[[6,[4,5]],27],9],[[[6,[4,5]],23],9],[[[6,[4,5]]],9],[[[6,[4,5]],16],9],[[[6,[4,5]],16,24,16],9],[10,[[38,[56]]]],[[]],[[]],[[[0,[7,54]]],[[9,[1]]]],[[],1],[[],1],[[[0,[7,54]]],[[9,[1]]]],[54,[[12,[2,10]]]],[[[0,[7,54]]],[[9,[[40,[23]]]]]],[[[0,[7,54]]],[[9,[[40,[23]]]]]],[[4,[0,[7,54]]],9],[[4,[0,[7,54]]],9],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[13,43]]],18],[[[14,[13]]],9],[[]],[[]],[[]],[41,[[9,[42]]]],[41,[[14,[[58,[41]]]]]],[[[17,[23]]],[[9,[43]]]],[[[17,[23]]],[[14,[59]]]],[16,[[9,[43]]]],[16,[[14,[60]]]],[[]],[[]],[[]],[[[14,[13]]],[[50,[13,43]]]],[13,[[14,[13]]]],[13,[[50,[13,43]]]],[41,[[58,[41]]]],[[[17,[23]]],59],[16,60],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],57],[[],57],[[],57],0,0,0,0,0,0,0,[[]],[[]],[10,61],[61,61],[[]],[10,18],[[61,61],19],[[],19],[[61,32],33],[[]],[[]],[10,[[38,[62]]]],[10,19],[10,19],[10,19],[10,19],[10,18],[[]],[[],12],[[],12],[[],57],0,0,0,0,0,0,0,0,0,0,0,0,[[63,64],63],[[[3,[1,2]],[3,[1,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[3,[1,2]],[0,[7,44,45,46]]],19],[[[3,[1,2]],[36,[1]]],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]],[0,[7,44,45,46]]],[[38,[2]]]],[65,2],[[[3,[1,2]],[0,[7,44,45,46]]],38],[[[3,[1,2]],[0,[7,44,45,46]]],[[38,[2]]]],[65,2],[[[3,[1,2]],1,2],[[38,[2]]]],[[66,2],2],[[65,2],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,2],[[[3,[1,2]]],19],[[[3,[1,2]]],67],[[[3,[1,2]]],68],[63,1],[66,1],[65,1],[[[3,[1,2]]],69],[[[3,[1,2]]],18],[67,18],[68,18],[70,18],[69,18],[71,18],[72,18],[[],[[3,[1,2]]]],[67,38],[68,38],[70,38],[69,38],[71,38],[72,38],[67,38],[68,38],[70,38],[69,38],[71,38],[72,38],[[63,2],2],[[63,64],2],[[[3,[1,2]],[0,[7,44,45,46]]],[[38,[2]]]],[65,2],[[[3,[1,2]],[0,[7,44,45,46]]],38],[[[3,[1,2]],73]],[67],[68],[70],[69],[71],[72],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[],57],[[[3,[1,2]]],71],[[[3,[1,2]]],72],[18,[[3,[1,2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]],19],74],[[75,[0,[7,4]],19],74],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]],19],74],[[75,[0,[7,4]],19],74],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]]],74],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[75,75],[[]],[[]],[[],75],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]]],74],[[[0,[7,4]]],74],[[75,[0,[7,4]]],74],[[[0,[7,4]]],74],[[76,32],33],[[75,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4,5]]],4],[4,[[6,[4]]]],[[],75],[4,[[6,[4,75]]]],[[]],[[]],[[[0,[7,54]]],[[9,[1]]]],[[[0,[7,54]]],[[9,[1]]]],[[[0,[7,54]]],[[9,[[40,[23]]]]]],[[[0,[7,54]]],[[9,[[40,[23]]]]]],[[4,[0,[7,54]]],9],[[4,[0,[7,54]]],9],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],57],[[],57],[[],57],[[4,5],[[6,[4,5]]]],[[[17,[23]]],75],[[[0,[7,4]],19],74],[[[0,[7,4]],[17,[23]]],74],[[[0,[7,4]],77],74],[[[0,[7,4]],30],74],[[[0,[7,4]],22],74],[[[0,[7,4]],53],74],[[[0,[7,4]],26],74],[[[0,[7,4]],29],74],[[[0,[7,4]],28],74],[[[0,[7,4]],25],74],[[[0,[7,4]]],74],[[[0,[7,4]],16],74],[[[0,[7,4]],16],74],[[[0,[7,4]],16],74],[[[0,[7,4]],55],74],[[[0,[7,4]],20],74],[[[0,[7,4]],24],74],[[[0,[7,4]],27],74],[[[0,[7,4]],23],74],0,0,0,0,0,0,0,0,0,0,0,0,[2,[[38,[[40,[2]]]]]],[2,[[38,[[40,[2]]]]]],[2,[[38,[19]]]],[2,[[38,[22]]]],[39,[[38,[22]]]],[2,[[38,[28]]]],[39,[[38,[28]]]],[2,38],[2,[[38,[39]]]],[2,[[38,[[3,[1,2]]]]]],[2,[[38,[[3,[1,2]]]]]],[2,[[38,[16]]]],[2,[[38,[27]]]],[39,[[38,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[[]],[[78,[0,[7,8]]],[[9,[2]]]],[11,[[12,[79]]]],[11,[[12,[39]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,16,[17,[16]],15],[[12,[10]]]],[[39,16,[17,[16]],15],12],[[39,16,[17,[16]],15],12],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,16,15],[[12,[10]]]],[[39,16,15],12],[[39,16,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,16,[17,[16]],15],[[12,[10]]]],[[39,16,[17,[16]],15],12],[[39,16,[17,[16]],15],12],[[79,18,15],[[12,[10]]]],[[39,18,15],12],[[39,18,15],12],[[79,16,18,15],[[12,[10]]]],[[39,16,18,15],12],[[39,16,18,15],12],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[39,15],[[12,[10]]]],[[79,15],[[12,[10]]]],[[39,15],12],[[39,15],12],[[79,16,15],[[12,[10]]]],[[39,16,15],12],[[39,16,15],12],[[39,39],19],[[],19],[[79,32],33],[[79,32],33],[[39,32],33],[[39,32],33],[[]],[28,39],[18,39],[[]],[23,39],[21,39],[25,39],[20,39],[27,39],[26,39],[29,39],[24,39],[22,[[38,[39]]]],[16,[[12,[39]]]],[1,[[12,[[80,[79]],10]]]],[2,[[12,[42,10]]]],[79,16],[[2,47],[[38,[2]]]],[[2,47],[[38,[2]]]],[[39,81]],[[]],[[]],[79],[2,19],[2,19],[2,19],[39,19],[2,19],[39,19],[2,19],[2,19],[2,19],[2,19],[2,19],[39,19],[[2,16],[[38,[2]]]],[[2,16],[[38,[2]]]],[[79,51],12],[[39,51],12],[[78,19],[[9,[2]]]],[[78,[17,[23]]],[[9,[2]]]],[[78,52],[[9,[2]]]],[[78,30],[[9,[2]]]],[[78,22],[[9,[2]]]],[[78,53],[[9,[2]]]],[[78,26],[[9,[2]]]],[[78,29],[[9,[2]]]],[[78,28],[[9,[2]]]],[[78,25],[[9,[2]]]],[[78,[38,[18]]],9],[[78,16,[0,[7,54]]],[[9,[2]]]],[[78,16,24,16,[0,[7,54]]],[[9,[2]]]],[78,[[9,[2]]]],[[78,[38,[18]]],9],[[78,[0,[7,54]]],[[9,[2]]]],[[78,16],[[9,[2]]]],[[78,16,18],9],[[78,16,24,16,18],9],[[78,18],9],[[78,16,18],9],[[78,16,24,16,18],9],[[78,55],[[9,[2]]]],[[78,20],[[9,[2]]]],[[78,24],[[9,[2]]]],[[78,27],[[9,[2]]]],[[78,23],[[9,[2]]]],[78,[[9,[2]]]],[[78,16],[[9,[2]]]],[[78,16,24,16],[[9,[2]]]],[2,2],[79],[[]],[[[0,[7,54]]],[[12,[[80,[79]],10]]]],[[],1],[[],1],[54,[[12,[2,10]]]],[[],12],[[],12],[[],12],[[],12],[[],57],[[],57],[[],57]],"c":[],"p":[[3,"String"],[4,"Value"],[3,"Map"],[8,"Write"],[8,"Formatter"],[3,"Serializer"],[8,"Sized"],[8,"Display"],[6,"Result"],[3,"Error"],[8,"Deserializer"],[4,"Result"],[8,"Read"],[3,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[15,"u16"],[15,"isize"],[15,"f64"],[15,"u8"],[15,"u32"],[15,"i8"],[15,"i16"],[15,"u64"],[15,"i64"],[15,"i32"],[15,"f32"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"Clone"],[8,"Into"],[4,"Cow"],[4,"Option"],[3,"Number"],[3,"Vec"],[8,"Read"],[8,"DeserializeOwned"],[8,"Deserialize"],[8,"Ord"],[8,"Eq"],[8,"Hash"],[8,"Index"],[4,"Unexpected"],[8,"Expected"],[3,"StreamDeserializer"],[8,"Serializer"],[15,"char"],[15,"i128"],[8,"Serialize"],[15,"u128"],[8,"Error"],[3,"TypeId"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[4,"Category"],[4,"ErrorKind"],[4,"Entry"],[8,"FnOnce"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"IntoIter"],[3,"Values"],[3,"ValuesMut"],[8,"FnMut"],[6,"Result"],[3,"PrettyFormatter"],[3,"CompactFormatter"],[4,"CharEscape"],[3,"Serializer"],[3,"RawValue"],[3,"Box"],[8,"Hasher"]]},\
"simd_adler32":{"doc":"simd-adler32","t":"DIFLLALLLLLLKLLALLLLLLFF","n":["Adler32","Adler32Hash","adler32","borrow","borrow_mut","bufread","clone","clone_into","default","finish","from","from_checksum","hash","into","new","read","reset","to_owned","try_from","try_into","type_id","write","adler32","adler32"],"q":[[0,"simd_adler32"],[22,"simd_adler32::bufread"],[23,"simd_adler32::read"]],"d":["An adler32 hash generator type.","A Adler-32 hash-able type.","Compute Adler-32 hash on <code>Adler32Hash</code> type.","","","BufRead-based hashing.","","","","Returns the hash value for the values written so far.","Returns the argument unchanged.","Constructs a new <code>Adler32</code> using existing checksum.","Feeds this value into <code>Adler32</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Adler32</code>.","Reader-based hashing.","Resets the internal state.","","","","","Computes hash for supplied data and stores results in …","Compute Adler-32 hash on buf reader until EOF.","Compute Adler-32 hash on reader until EOF."],"i":[0,0,0,3,3,0,3,3,3,3,3,3,1,3,3,0,3,3,3,3,3,3,0,0],"f":[0,0,[1,2],[[]],[[]],0,[3,3],[[]],[[],3],[3,2],[[]],[2,3],[[],2],[[]],[[],3],0,[3],[[]],[[],4],[[],4],[[],5],[[3,[7,[6]]]],[8,[[9,[2]]]],[10,[[9,[2]]]]],"c":[],"p":[[8,"Adler32Hash"],[15,"u32"],[3,"Adler32"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[8,"BufRead"],[6,"Result"],[8,"Read"]]},\
"siphasher":{"doc":"","t":"AAACCCCDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDDDLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["prelude","sip","sip128","_","_","sip","sip128","SipHasher","SipHasher13","SipHasher24","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","default","finish","finish","finish","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","key","key","key","keys","keys","keys","new","new","new","new_with_key","new_with_key","new_with_key","new_with_keys","new_with_keys","new_with_keys","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize","Hash128","Hasher128","SipHasher","SipHasher13","SipHasher24","as_bytes","as_u128","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","default","default","default","default","finish","finish","finish","finish128","finish128","finish128","finish128","fmt","fmt","fmt","fmt","from","from","from","from","from","h1","h2","hash","hash","hash","into","into","into","into","key","key","key","keys","keys","keys","new","new","new","new_with_key","new_with_key","new_with_key","new_with_keys","new_with_keys","new_with_keys","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize"],"q":[[0,"siphasher"],[3,"siphasher::prelude"],[7,"siphasher::sip"],[79,"siphasher::sip128"]],"d":["","An implementation of SipHash.","An implementation of SipHash with a 128-bit output.","","","","","An implementation of SipHash 2-4.","An implementation of SipHash 1-3.","An implementation of SipHash 2-4.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the keys used by this hasher","Get the keys used by this hasher","Get the keys used by this hasher","Creates a new <code>SipHasher13</code> with the two initial keys set to …","Creates a new <code>SipHasher24</code> with the two initial keys set to …","Creates a new <code>SipHasher</code> with the two initial keys set to 0.","Creates a <code>SipHasher13</code> from a 16 byte key.","Creates a <code>SipHasher24</code> from a 16 byte key.","Creates a <code>SipHasher</code> from a 16 byte key.","Creates a <code>SipHasher13</code> that is keyed off the provided keys.","Creates a <code>SipHasher24</code> that is keyed off the provided keys.","Creates a <code>SipHasher</code> that is keyed off the provided keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 128-bit (2x64) hash output","","An implementation of SipHash128 2-4.","An implementation of SipHash128 1-3.","An implementation of SipHash128 2-4.","Convert into a 16-bytes vector","Convert into a <code>u128</code>","Convert into <code>(u64, u64)</code>","","","","","","","","","","","","","","","","","","","","Return a 128-bit hash","Return a 128-bit hash","Return a 128-bit hash","Return a 128-bit hash","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the keys used by this hasher","Get the keys used by this hasher","Get the keys used by this hasher","Creates a new <code>SipHasher13</code> with the two initial keys set to …","Creates a new <code>SipHasher24</code> with the two initial keys set to …","Creates a new <code>SipHasher</code> with the two initial keys set to 0.","Creates a <code>SipHasher13</code> from a 16 byte key.","Creates a <code>SipHasher24</code> from a 16 byte key.","Creates a <code>SipHasher</code> from a 16 byte key.","Creates a <code>SipHasher13</code> that is keyed off the provided keys.","Creates a <code>SipHasher24</code> that is keyed off the provided keys.","Creates a <code>SipHasher</code> that is keyed off the provided keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,15,15,15,15,17,18,19,15,17,18,19,15,17,18,19,15,17,18,19,17,18,19,20,17,18,19,15,17,18,19,15,15,17,18,19,15,15,17,18,19,15,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,15,17,18,19,15,17,18,19,15,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[],1],[[],2],[[],3],[1,4],[2,4],[3,4],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[[1,[8,[7]]],4],[[2,[8,[7]]],4],[[3,[8,[7]]],4],[[]],[[]],[[]],[1,[[9,[7]]]],[2,[[9,[7]]]],[3,[[9,[7]]]],[1],[2],[3],[[],1],[[],2],[[],3],[[[9,[7]]],1],[[[9,[7]]],2],[[[9,[7]]],3],[[4,4],1],[[4,4],2],[[4,4],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[1,[8,[7]]]],[[2,[8,[7]]]],[[3,[8,[7]]]],[[1,12]],[[2,12]],[[3,12]],[[1,13]],[[2,13]],[[3,13]],[[1,4]],[[2,4]],[[3,4]],[[1,7]],[[2,7]],[[3,7]],[[1,14]],[[2,14]],[[3,14]],0,0,0,0,0,[15,[[9,[7]]]],[15,16],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[17,17],[18,18],[19,19],[[],15],[[],17],[[],18],[[],19],[17,4],[18,4],[19,4],[[],15],[17,15],[18,15],[19,15],[[15,5],6],[[17,5],6],[[18,5],6],[[19,5],6],[[]],[16,15],[[]],[[]],[[]],0,0,[[17,[8,[7]]],15],[[18,[8,[7]]],15],[[19,[8,[7]]],15],[[]],[[]],[[]],[[]],[17,[[9,[7]]]],[18,[[9,[7]]]],[19,[[9,[7]]]],[17],[18],[19],[[],17],[[],18],[[],19],[[[9,[7]]],17],[[[9,[7]]],18],[[[9,[7]]],19],[[4,4],17],[[4,4],18],[[4,4],19],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[17,[8,[7]]]],[[18,[8,[7]]]],[[19,[8,[7]]]],[[17,12]],[[18,12]],[[19,12]],[[17,13]],[[18,13]],[[19,13]],[[17,4]],[[18,4]],[[19,4]],[[17,7]],[[18,7]],[[19,7]],[[17,14]],[[18,14]],[[19,14]]],"c":[],"p":[[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[15,"array"],[4,"Result"],[3,"TypeId"],[15,"u16"],[15,"u32"],[15,"usize"],[3,"Hash128"],[15,"u128"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"SipHasher"],[8,"Hasher128"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"]],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[15,0,15,0,0,0,1,0,0,2,2,2,2,4,2,2,2,4,10,2,2,4,15,10,2,2,4,15,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,10,2,4,2,2,2,10,2,4,15,15,10,2,2,2,2,2,4,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,2,4,15,2,2,10,2,2,2,4,2,2,10,2,2,10,4,10,4,2,2,2,2,2,2,2,2,2,2,2,2,1,10,4,0,2,2,2,4,27,15,2,10,2,4,15,2,10,2,4,15,2,2,10,2,4,15,2,28],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[4,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],3],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[[2,[1]]],5],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[4,[[0,[1,6]]]]],[[4,[[0,[1,6]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],[2,[1]]],7],[[[2,[1]]]],[[[2,[1]],8]],[[[2,[1]],8]],[[],[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[9,[5]]],[[10,[1]]]],[[[10,[1]]]],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]],[2,[1]]],11],[[[2,[1]],12]],[[[2,[1]],3]],[[[10,[1]],13],14],[[[2,[1]],13],14],[[[4,[1]],13],14],[[15,13],14],[[15,13],14],[[]],[16,[[2,[1]]]],[[]],[17],[3,[[2,[1]]]],[1,[[2,[1]]]],[[]],[18,15],[[]],[1,[[2,[1]]]],[[1,5],[[2,[1]]]],[[[19,[1]],5],[[2,[1]]]],[5,[[2,[1]]]],[12,[[2,[1]]]],[[5,5],[[2,[1]]]],[3,[[2,[1]]]],[16,[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],20]],[[[2,[1]],[21,[3]]]],[[[2,[1]],[21,[3]]]],[[[2,[1]]],5],[[[2,[1]],5]],[[[2,[1]],5,3]],[[[2,[1]],5,12]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[22,[3]]]],[[[2,[1]]],[[23,[1,[2,[1]]]]]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[[2,[1]]],16],[[[2,[1]]],11],[[[10,[1]]],5],[[[2,[1]]],5],[[],[[2,[1]]]],[[[10,[1]]],24],[[[4,[1]]],24],[[[10,[1]]],24],[[[4,[1]]],24],[[[2,[1]],[2,[1]]],[[24,[7]]]],[[[2,[1]]],24],[[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5,8]],[[[2,[1]],8]],[[[2,[1]],8]],[[[2,[1]],5]],[[[2,[1]]]],[[],5],[[[10,[1]]]],[[[4,[1]]]],0,[[[2,[1]]],11],[[[2,[1]],5]],[[]],[[]],[[],2],[[],25],[[[2,[1]],5]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[[2,[1]],5],[[23,[15]]]],[[],26],[[],26],[[],26],[[],26],[5,[[2,[1]]]],0],"c":[],"p":[[8,"Array"],[3,"SmallVec"],[15,"slice"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[8,"FnMut"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[3,"Vec"],[15,"never"],[6,"LayoutErr"],[19,"MaybeUninit"],[8,"Hasher"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":"GGGCGCGCGGCAAAAAAADDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLGGGGGGDDCCLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":[[0,"spin"],[18,"spin::barrier"],[37,"spin::lazy"],[51,"spin::lock_api"],[57,"spin::mutex"],[96,"spin::mutex::spin"],[134,"spin::once"],[162,"spin::relax"],[182,"spin::rwlock"]],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>SpinMutex</code> and returns a guard that permits …","","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","Returns the argument unchanged.","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,16,15,16,15,16,16,15,16,16,15,15,15,15,16,15,15,16,15,15,15,16,15,15,15,0,15,16,15,16,15,15,15,16,15,0,0,20,20,21,20,21,20,21,21,21,20,21,21,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,21,20,21,20,20,20,21,20,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,27,28,27,28,27,28,27,28,7,27,28,27,28,27,28,27,28,0,0,0,0,23,23,24,25,26,23,24,25,26,23,24,25,26,25,23,25,26,25,24,25,26,23,24,24,25,25,26,26,23,23,23,23,23,24,25,26,23,23,24,25,26,23,23,24,25,26,23,23,23,23,23,23,23,24,25,26,23,24,25,26,23,23,23,23,23,26,23,23,23,24,25,26,23,23,23,23,26,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[[4,[7]]],1],0,[8],[[]],[[]],[[],[[8,[9]]]],[[[8,[10,7]]]],[[[8,[11]],12],13],[[[8,[10,7]]]],[[]],[[]],[[],8],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[15,[[0,[14,9]]]]]],[[[16,[14]]],14],[[[16,[14]]],14],[[[15,[[0,[14,11]]]],12],13],[[[16,[[0,[14,11]]]],12],13],[[[16,[[0,[14,17]]]],12],13],[[[15,[14]]]],[[]],[[],15],[18],[[]],[[[15,[14]]],14],[[]],[[]],[15],[[[15,[7]]],2],[[[15,[14]]],2],[[[16,[14]]],14],[[[15,[7]]]],[[[15,[14,7]]],[[16,[14]]]],[[],15],0,[[],5],[[],5],[[],5],[[],5],[[[15,[7]]],2],[[[15,[14]]],[[19,[[16,[14]]]]]],[[],6],[[],6],[[[15,[7]]]],0,0,[20],[[]],[[]],[[]],[[]],[[],[[20,[[0,[14,9]]]]]],[[[21,[14]]],14],[[[21,[14]]],14],[[[21,[14]]]],[[[20,[[0,[14,11]]]],12],13],[[[21,[[0,[14,17]]]],12],13],[[[21,[[0,[14,11]]]],12],13],[[[20,[14]]]],[[]],[[],20],[18],[[]],[[[20,[14]]],14],[[]],[[]],[20],[[[20,[7]]],2],[[[20,[14]]],2],[[[21,[14]]],14],[[[20,[14,7]]],[[21,[14]]]],[[[20,[7]]]],[[],20],[[],5],[[],5],[[],5],[[],5],[[[20,[14]]],[[19,[[21,[14]]]]]],[[[20,[7]]],2],[[],6],[[],6],[[[20,[7]]]],0,0,[22],[[]],[[]],[[[22,[7]],10]],[[],22],[22],[[[22,[11]],12],13],[[],22],[[]],[18],[22,19],[22,19],[22],[22],[[],22],[[]],[22],[22,2],[[],22],[[[22,[7]]],19],[[[22,[7]],10],5],[[],5],[[],5],[22,19],[[],6],[[[22,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[[0,[14,9]]]]]],[[[24,[14]]],14],[[[25,[14]]],14],[[[26,[14]]],14],[[[25,[14]]],14],[[[23,[7]]]],[[[25,[14]]],[[24,[14]]]],[[[26,[14]]],[[24,[14]]]],[[[25,[14]]],[[26,[14]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[[0,[14,11]]]],12],13],[[[24,[[0,[14,17]]]],12],13],[[[24,[[0,[14,11]]]],12],13],[[[25,[[0,[14,11]]]],12],13],[[[25,[[0,[14,17]]]],12],13],[[[26,[[0,[14,17]]]],12],13],[[[26,[[0,[14,11]]]],12],13],[[[23,[14]]]],[[[23,[14]]]],[18],[[],23],[[]],[[]],[[]],[[]],[[[23,[14]]],14],[[]],[[]],[[]],[[]],[23],[[[23,[7]]],2],[[[24,[14]]],14],[[[25,[14]]],14],[[[26,[14]]],14],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[],23],[[[23,[14,7]]],[[24,[14]]]],[[[23,[14]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[14]]],[[19,[[24,[14]]]]]],[[[23,[7]]],2],[[[26,[14]]],[[5,[[25,[14]],[26,[14]]]]]],[[[23,[14]]],[[19,[[26,[14]]]]]],[[[23,[14]]],[[19,[[25,[14]]]]]],[[],6],[[],6],[[],6],[[],6],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[26,[14,7]]],[[25,[14,7]]]],[[[23,[14,7]]],[[26,[14,7]]]],[[[23,[14,7]]],[[25,[14,7]]]],[[[23,[14]]],3]],"c":[],"p":[[3,"BarrierWaitResult"],[15,"bool"],[15,"usize"],[3,"Barrier"],[4,"Result"],[3,"TypeId"],[8,"RelaxStrategy"],[3,"Lazy"],[8,"Default"],[8,"FnOnce"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"Mutex"],[3,"MutexGuard"],[8,"Display"],[15,"never"],[4,"Option"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"],[3,"Spin"],[3,"Loop"]]},\
"static_assertions":{"doc":"Banner","t":"OOOOOOOOOOOOOOOOOOO","n":["assert_cfg","assert_eq_align","assert_eq_size","assert_eq_size_ptr","assert_eq_size_val","assert_fields","assert_impl_all","assert_impl_any","assert_impl_one","assert_not_impl_all","assert_not_impl_any","assert_obj_safe","assert_trait_sub_all","assert_trait_super_all","assert_type_eq_all","assert_type_ne_all","const_assert","const_assert_eq","const_assert_ne"],"q":[[0,"static_assertions"]],"d":["Asserts that a given configuration is set.","Asserts that types are equal in alignment.","Asserts that types are equal in size.","Asserts that values pointed to are equal in size.","Asserts that values are equal in size.","Asserts that the type has the given fields.","Asserts that the type implements <em>all</em> of the given traits.","Asserts that the type implements <em>any</em> of the given traits.","Asserts that the type implements exactly one in a set of …","Asserts that the type does <strong>not</strong> implement <em>all</em> of the given …","Asserts that the type does <strong>not</strong> implement <em>any</em> of the given …","Asserts that the traits support dynamic dispatch (…","Asserts that the trait is a child of all of the other …","Asserts that the trait is a parent of all of the other …","Asserts that <em>all</em> types in a list are equal to each other.","Asserts that <em>all</em> types are <strong>not</strong> equal to each other.","Asserts that constant expressions evaluate to <code>true</code>.","Asserts that constants are equal in value.","Asserts that constants are <strong>not</strong> equal in value."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for …","t":"NNDNNNNDDDEEDDNNDNNDDNNDDNINLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Always","AlwaysAnsi","Ansi","Ansi256","Auto","Black","Blue","Buffer","BufferWriter","BufferedStandardStream","Color","ColorChoice","ColorChoiceParseError","ColorSpec","Cyan","Green","HyperlinkSpec","Magenta","Never","NoColor","ParseColorError","Red","Rgb","StandardStream","StandardStreamLock","White","WriteColor","Yellow","ansi","as_mut_slice","as_slice","bg","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","default","default","description","dimmed","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fg","flush","flush","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","get_mut","get_mut","get_ref","get_ref","intense","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","invalid","is_empty","is_none","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","is_synchronous","italic","len","lock","new","new","new","no_color","open","print","reset","reset","reset","reset","reset","reset","reset","reset","separator","set_bg","set_bold","set_color","set_color","set_color","set_color","set_color","set_color","set_color","set_dimmed","set_fg","set_hyperlink","set_hyperlink","set_hyperlink","set_hyperlink","set_hyperlink","set_hyperlink","set_hyperlink","set_intense","set_italic","set_reset","set_strikethrough","set_underline","stderr","stderr","stderr","stdout","stdout","stdout","strikethrough","supports_color","supports_color","supports_color","supports_color","supports_color","supports_color","supports_color","supports_hyperlinks","supports_hyperlinks","supports_hyperlinks","supports_hyperlinks","supports_hyperlinks","supports_hyperlinks","supports_hyperlinks","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","uri","write","write","write","write","write","write","write_all"],"q":[[0,"termcolor"]],"d":["Try very hard to emit colors. This includes emitting ANSI …","AlwaysAnsi is like Always, except it never tries to use …","Satisfies <code>WriteColor</code> using standard ANSI escape sequences.","","Try to use colors, but don’t force the issue. If the …","","","Write colored text to memory.","Writes colored buffers to stdout or stderr.","Like <code>StandardStream</code>, but does buffered writing.","The set of available colors for the terminal …","ColorChoice represents the color preferences of an end …","An error that occurs when parsing a <code>ColorChoice</code> fails.","A color specification.","","","A hyperlink specification.","","Never emit colors.","Satisfies <code>WriteColor</code> but ignores all color options.","An error from parsing an invalid color specification.","","","Satisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional …","<code>StandardStreamLock</code> is a locked reference to a …","","This trait describes the behavior of writers that support …","","Create a buffer that uses ANSI escape sequences.","Return the underlying data of the buffer as a mutable …","Return the underlying data of the buffer.","Get the background color.","Get whether this is bold or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Buffer</code> with the current color preferences.","Clears this buffer.","Clears this color specification so that it has no …","","","","","","","","","","","","","Creates a hyperlink specification representing no …","","","","Get whether this is dimmed or not.","","","","","","","","","Get the foreground color.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Return a mutable reference to the inner writer.","Return a mutable reference to the inner writer.","Return a reference to the inner writer.","Return a reference to the inner writer.","Get whether this is intense or not.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this buffer and return the underlying raw data.","Consume this <code>NoColor</code> value and return the inner writer.","Consume this <code>Ansi</code> value and return the inner writer.","Return the string that couldn’t be parsed as a valid …","Returns true if and only if this buffer is empty.","Returns true if this color specification has no colors or …","Returns true if and only if the underlying writer must …","","","","","","","Get whether this is italic or not.","Returns the length of this buffer in bytes.","Lock the underlying writer.","Create a new writer that satisfies <code>WriteColor</code> but drops …","Create a new writer that satisfies <code>WriteColor</code> using …","Create a new color specification that has no colors or …","Create a buffer that drops all color information.","Creates a new hyperlink specification.","Prints the contents of the given buffer.","Reset the current color settings to their original …","","","","","","","Get whether reset is enabled or not.","If set, the separator given is printed between buffers. By …","Set the background color.","Set whether the text is bolded or not.","Set the color settings of the writer.","","","","","","","Set whether the text is dimmed or not.","Set the foreground color.","Set the current hyperlink of the writer.","","","","","","","Set whether the text is intense or not.","Set whether the text is italicized or not.","Set whether to reset the terminal whenever color settings …","Set whether the text is strikethrough or not.","Set whether the text is underlined or not.","Create a new <code>StandardStream</code> with the given color …","Create a new <code>BufferedStandardStream</code> with the given color …","Create a new <code>BufferWriter</code> that writes to stderr with the …","Create a new <code>StandardStream</code> with the given color …","Create a new <code>BufferedStandardStream</code> with the given color …","Create a new <code>BufferWriter</code> that writes to stdout with the …","Get whether this is strikethrough or not.","Returns true if and only if the underlying writer supports …","","","","","","","Returns true if and only if the underlying writer supports …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get whether this is underline or not.","Returns the URI of the hyperlink if one is attached to …","","","","","","",""],"i":[9,9,0,5,9,5,5,0,0,0,0,0,0,0,5,5,0,5,9,0,0,5,5,0,0,5,0,5,1,1,1,4,4,9,10,14,16,17,8,1,19,20,4,5,11,12,9,10,14,16,17,8,1,19,20,4,5,11,12,8,1,4,9,10,4,5,11,12,9,10,4,5,11,12,12,9,4,11,4,9,4,5,11,9,4,5,11,4,14,16,17,1,19,20,9,10,10,14,16,17,8,1,19,20,4,5,11,11,12,9,10,14,16,17,8,1,19,20,4,5,11,12,9,5,19,20,19,20,4,9,10,14,16,17,8,1,19,20,4,5,11,12,1,19,20,11,1,4,29,14,16,17,1,19,20,4,1,14,19,20,4,1,12,8,29,14,16,17,1,19,20,4,8,4,4,29,14,16,17,1,19,20,4,4,29,14,16,17,1,19,20,4,4,4,4,4,14,17,8,14,17,8,4,29,14,16,17,1,19,20,29,14,16,17,1,19,20,9,10,4,5,11,12,10,11,9,10,14,16,17,8,1,19,20,4,5,11,12,9,10,14,16,17,8,1,19,20,4,5,11,12,9,10,14,16,17,8,1,19,20,4,5,11,12,4,12,14,16,17,1,19,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[1,[[3,[2]]]],[1,[[3,[2]]]],[4,[[6,[5]]]],[4,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,1],[1],[4],[9,9],[10,10],[4,4],[5,5],[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],9],[[],4],[11,13],[4,7],[[9,9],7],[[4,4],7],[[5,5],7],[[11,11],7],[[],7],[[],7],[[],7],[[],7],[4,[[6,[5]]]],[14,15],[16,15],[17,15],[1,15],[[[19,[18]]],15],[[[20,[18]]],15],[[9,21],22],[[10,21],22],[[10,21],22],[[14,21],22],[[16,21],22],[[17,21],22],[[8,21],22],[[1,21],22],[[[19,[23]],21],22],[[[20,[23]],21],22],[[4,21],22],[[5,21],22],[[11,21],22],[[11,21],22],[[12,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[24,[9,10]]]],[13,[[24,[5,11]]]],[[[19,[18]]],18],[[[20,[18]]],18],[[[19,[18]]],18],[[[20,[18]]],18],[4,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[25,[2]]]],[[[19,[18]]],18],[[[20,[18]]],18],[11,13],[1,7],[4,7],[[],7],[14,7],[16,7],[17,7],[1,7],[[[19,[18]]],7],[[[20,[18]]],7],[4,7],[1,26],[14,16],[18,[[19,[18]]]],[18,[[20,[18]]]],[[],4],[[],1],[[[3,[2]]],12],[[8,1],15],[[],15],[14,15],[16,15],[17,15],[1,15],[[[19,[18]]],15],[[[20,[18]]],15],[4,7],[[8,[6,[[25,[2]]]]]],[[4,[6,[5]]],4],[[4,7],4],[4,15],[[14,4],15],[[16,4],15],[[17,4],15],[[1,4],15],[[[19,[18]],4],15],[[[20,[18]],4],15],[[4,7],4],[[4,[6,[5]]],4],[12,15],[[14,12],15],[[16,12],15],[[17,12],15],[[1,12],15],[[[19,[18]],12],15],[[[20,[18]],12],15],[[4,7],4],[[4,7],4],[[4,7],4],[[4,7],4],[[4,7],4],[9,14],[9,17],[9,8],[9,14],[9,17],[9,8],[4,7],[[],7],[14,7],[16,7],[17,7],[1,7],[[[19,[18]]],7],[[[20,[18]]],7],[[],7],[14,7],[16,7],[17,7],[1,7],[[[19,[18]]],7],[[[20,[18]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[4,7],[12,[[6,[[3,[2]]]]]],[[14,[3,[2]]],[[15,[26]]]],[[16,[3,[2]]],[[15,[26]]]],[[17,[3,[2]]],[[15,[26]]]],[[1,[3,[2]]],[[15,[26]]]],[[[19,[18]],[3,[2]]],[[15,[26]]]],[[[20,[18]],[3,[2]]],[[15,[26]]]],[[[20,[18]],[3,[2]]],15]],"c":[],"p":[[3,"Buffer"],[15,"u8"],[15,"slice"],[3,"ColorSpec"],[4,"Color"],[4,"Option"],[15,"bool"],[3,"BufferWriter"],[4,"ColorChoice"],[3,"ColorChoiceParseError"],[3,"ParseColorError"],[3,"HyperlinkSpec"],[15,"str"],[3,"StandardStream"],[6,"Result"],[3,"StandardStreamLock"],[3,"BufferedStandardStream"],[8,"Write"],[3,"NoColor"],[3,"Ansi"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Result"],[3,"Vec"],[15,"usize"],[3,"String"],[3,"TypeId"],[8,"WriteColor"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","t":"SDSDSIDDDISISLLLLLLLLLLLLLLLLLLLLLOOLALLLLLLLLLLKLOKLLLLLLLOOAKLOLOKLALLLLLLLLLLLLLLLLLLLLLLOOALXLLLLLLLLLLLLLLALLLLLLLLKLLLLLKKLKLLLAOOALLLLLOOLLLLLLLLLLLLLLOODDDDLLLLLLFLFFLLLLLFDLLLLLLLLLLLLLLLLLLIDDDDDDIDIKLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDSDRSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDDDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDILLLLLLLLLLLLLLLLLLLKLKLKLLKLLLLLLLLLLLLLLLLLLLLKLLKLKLLLFFLLLLLLLLLLLLLLLLLF","n":["DEBUG","Dispatch","ERROR","Event","INFO","Instrument","Level","Metadata","Span","Subscriber","TRACE","Value","WARN","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone_into","clone_into","clone_into","clone_span","clone_span","cmp","current_span","current_span","debug","debug_span","default","dispatcher","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downgrade","drop","drop_span","drop_span","enabled","enabled","enabled","enter","enter","eq","eq","eq","eq","equivalent","equivalent","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","ge","ge","gt","gt","hash","hash","in_current_span","info","info_span","instrument","instrument","instrument","into","into","into","into","is","is","is","is","is","is_event","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","module_path","name","new","new","new_span","new_span","none","on_register_dispatch","partial_cmp","partial_cmp","record","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","span","span","span_enabled","subscriber","target","to_owned","to_owned","to_owned","to_string","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warn","warn_span","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow_mut","clone","clone_into","fmt","from","get_default","into","set_default","set_global_default","to_owned","try_from","try_into","type_id","upgrade","with_default","Event","borrow","borrow_mut","child_of","dispatch","fields","fmt","from","into","is_contextual","is_root","metadata","new","new_child_of","parent","record","try_from","try_into","type_id","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","clone_into","clone_into","clone_into","contains","debug","display","eq","eq","eq","equivalent","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Instrument","Instrumented","WithDispatch","WithSubscriber","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dispatcher","fmt","fmt","from","from","in_current_span","inner","inner","inner_mut","inner_mut","inner_pin_mut","inner_pin_mut","inner_pin_ref","inner_pin_ref","instrument","into","into","into_future","into_future","into_inner","into_inner","poll","poll","span","span_mut","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_current_subscriber","with_subscriber","DEBUG","ERROR","INFO","LevelFilter","OFF","ParseLevelFilterError","STATIC_MAX_LEVEL","TRACE","WARN","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","current","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_level","from_str","ge","ge","gt","gt","hash","into","into","into_level","le","le","lt","lt","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","child_of","clone","clone_into","contains","contains","current","deref","drop","drop","enter","entered","eq","equivalent","exit","field","fields","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from_non_zero_u64","from_u64","has_field","hash","id","id","in_scope","into","into","into","into","into","into_non_zero_u64","into_u64","is_contextual","is_disabled","is_empty","is_empty","is_none","is_root","len","metadata","metadata","new","new","new","new_disabled","new_root","new_root","none","or_current","parent","record","record","record","record_all","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","with_subscriber","DefaultGuard","Interest","NoSubscriber","SetGlobalDefaultError","Subscriber","always","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","current_span","default","downcast_raw","drop","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","set_default","set_global_default","sometimes","to_owned","to_owned","to_string","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_default"],"q":[[0,"tracing"],[160,"tracing::dispatcher"],[180,"tracing::event"],[199,"tracing::field"],[323,"tracing::instrument"],[370,"tracing::level_filters"],[426,"tracing::span"],[526,"tracing::subscriber"]],"d":["The “debug” level.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Attaches spans to a <code>std::future::Future</code>.","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","Trait representing the functions required to collect trace …","The “trace” level.","A field value of an erased type.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","","","","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been cloned.","","Returns a type representing this subscriber’s view of …","Returns a type representing this subscriber’s view of …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","Dispatches trace events to <code>Subscriber</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","<strong>This method is deprecated.</strong>","Notifies the subscriber that a span ID has been dropped.","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Records that a span has been can_enter.","","","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Instruments this type with the current <code>Span</code>, returning an …","Constructs an event at the info level.","Constructs a span at the info level.","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Instruments a function to create and enter a <code>tracing</code> span …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Invoked when this subscriber becomes a <code>Dispatch</code>.","","","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Registers a new callsite with this collector, returning …","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Collects and records trace data.","Returns a string describing the part of the system where …","","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the subscriber that a span ID has been dropped, …","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","Returns the argument unchanged.","Executes a closure with a reference to this thread’s …","Calls <code>U::from(self)</code>.","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a <code>std::future::Future</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","A <code>Future</code> that has been instrumented with a <code>tracing</code> …","Extension trait allowing futures to be instrumented with a …","","","","","","","","","Borrows the <code>Dispatch</code> that is entered when this type is …","","","Returns the argument unchanged.","Returns the argument unchanged.","Instruments this type with the current <code>Span</code>, returning an …","Borrows the wrapped type.","Borrows the wrapped type.","Mutably borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes the <code>Instrumented</code>, returning the wrapped type.","Consumes the <code>Instrumented</code>, returning the wrapped type.","","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","","","","","","Attaches the current default <code>Subscriber</code> to this type, …","Attaches the provided <code>Subscriber</code> to this type, returning a …","The “debug” level.","The “error” level.","The “info” level.","A filter comparable to a verbosity <code>Level</code>.","The “off” level.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “trace” level.","The “warn” level.","","","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a <code>Subscriber</code> describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","","","Constructs a new <code>Span</code> as child of the given parent span, …","Returns <code>Attributes</code> describing a new child span of the …","","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","Returns a handle to the span considered by the <code>Subscriber</code> …","","","","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a guard that …","","","Exits this span, returning the underlying <code>Span</code>.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the set of all fields defined by this span’s …","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Id</code>, if it is enabled.","Executes the given function in the context of this span.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns <code>true</code> if this span was disabled by the subscriber …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns this span’s <code>Metadata</code>, if it is enabled.","Returns a reference to the new span’s metadata.","Constructs a new <code>Span</code> with the given metadata and set of …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new span that is <em>completely disabled</em>.","Returns this span, if it was enabled by the current …","Returns the new span’s explicitly-specified parent, if …","Records that the field described by <code>field</code> has the value …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","Records all the fields in the provided <code>ValueSet</code>.","","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Invokes a function with a reference to this span’s ID …","A guard that resets the current default dispatcher to the …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns a new <code>NoSubscriber</code>.","Visit the construction of a new span, returning a new span …","","Invoked when this subscriber becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Sets the <code>Subscriber</code> as the default for the current thread …","Sets this subscriber as the global default for the …","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","Sets this <code>Subscriber</code> as the default for the current thread …"],"i":[1,0,1,0,1,0,0,0,0,0,1,0,1,1,5,3,6,1,5,3,6,1,3,5,6,1,5,6,1,12,6,1,12,6,0,0,6,0,12,12,12,12,12,6,6,5,12,6,12,6,0,12,6,5,3,1,1,3,1,0,0,0,12,6,0,12,0,12,6,0,3,3,19,19,5,3,6,1,1,5,3,6,6,1,1,1,1,1,1,5,1,71,0,0,0,71,0,5,3,6,1,12,12,12,12,6,3,3,1,1,3,0,3,1,1,12,3,3,3,6,12,6,6,12,1,1,19,12,6,12,6,12,6,0,0,0,0,3,5,6,1,1,0,0,12,6,5,3,6,1,5,3,6,1,5,3,6,1,0,0,0,0,0,0,14,14,14,14,14,14,0,14,0,0,14,14,14,14,14,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,68,32,32,32,18,42,32,49,43,46,48,18,42,32,49,43,46,48,42,32,32,46,48,32,46,48,18,0,0,18,32,49,18,32,49,18,18,18,42,42,32,32,49,43,46,46,48,18,42,32,49,43,46,48,32,18,42,32,49,43,46,48,18,43,18,42,18,18,42,32,18,43,19,42,49,46,48,33,33,33,33,33,33,33,33,33,32,46,48,18,42,32,46,18,42,32,49,43,46,48,18,42,32,49,43,46,48,18,42,32,49,43,46,48,0,0,0,0,60,28,60,28,60,28,60,28,60,60,28,60,28,71,60,28,60,28,60,28,60,28,71,60,28,60,28,60,28,60,28,28,28,60,28,60,28,60,28,60,28,72,72,16,16,16,0,16,0,0,16,16,16,65,16,65,16,65,16,65,16,16,16,16,16,16,16,65,65,16,16,16,65,16,16,16,16,16,16,16,16,65,16,16,16,16,16,16,16,16,65,16,65,16,65,16,65,16,65,0,0,0,0,0,0,0,73,67,66,7,31,34,67,66,7,31,34,5,31,7,7,31,34,5,66,67,66,5,5,7,7,66,5,31,67,66,7,31,34,5,67,66,7,31,34,7,7,5,7,5,66,5,67,66,7,31,34,7,7,31,5,31,34,5,31,34,5,31,5,31,34,5,5,31,5,5,31,5,31,34,5,7,67,66,7,31,34,67,66,7,31,34,67,66,7,31,34,31,5,0,0,0,0,0,35,39,38,35,70,39,38,35,70,35,70,35,70,12,12,70,12,38,12,12,70,12,70,12,70,12,12,70,39,39,38,35,70,39,38,35,70,39,38,35,70,35,35,35,12,35,70,12,70,12,12,70,12,70,12,70,0,0,35,35,70,39,12,39,38,35,70,39,38,35,70,39,38,35,70,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[5,5],[6,6],[1,1],[[]],[[]],[[]],[7,7],[[6,7],7],[[1,1],8],[[],9],[6,9],0,0,[[],6],0,[10,11],[12,[[11,[13]]]],[12,[[11,[13]]]],[12,[[11,[13]]]],[12,[[11,[13]]]],[6,[[11,[13]]]],[6,14],[5],[7],[[6,7]],[3,15],[[6,3],15],0,[7],[[6,7]],[[5,5],15],[[3,3],15],[[1,1],15],[[1,16],15],[[],15],[[],15],0,0,0,[17],[[6,17]],0,[17,15],0,[7],[[6,7]],0,[3,18],[3,[[11,[2]]]],[[19,20],[[22,[21]]]],[[19,20],[[22,[21]]]],[[5,20],23],[[3,20],[[22,[21]]]],[[6,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[]],[[]],[[]],[[[0,[12,24,25]]],6],[[]],[2,[[22,[1,26]]]],[[1,1],15],[[1,16],15],[[1,16],15],[[1,1],15],[[5,27]],[[1,27]],[[],28],0,0,0,[5,28],0,[[]],[[]],[[]],[[]],[12,15],[12,15],[12,15],[12,15],[6,15],[3,15],[3,15],[[1,16],15],[[1,1],15],[3,1],0,[3,[[11,[29]]]],[[1,16],15],[[1,1],15],[[],[[11,[16]]]],[3,[[11,[2]]]],[3,2],[[2,2,1,[11,[2]],[11,[29]],[11,[2]],18,30],3],[[[0,[12,24,25]]],6],[31,7],[[6,31],7],[[],6],[6],[[1,1],[[11,[8]]]],[[1,16],[[11,[8]]]],[[32,33]],[[7,34]],[[6,7,34]],[[7,7]],[[6,7,7]],[3,35],[[6,3],35],0,0,0,0,[3,2],[[]],[[]],[[]],[[],36],0,0,[7,15],[[6,7],15],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[14,20],[[22,[21]]]],[[]],[37],[[]],[6,38],[6,[[22,[39]]]],[[]],[[],22],[[],22],[[],10],[14,[[11,[6]]]],[[6,40]],0,[[]],[[]],[[[41,[[11,[7]]]],3,42]],[[3,42]],[17,43],[[17,20],[[22,[21]]]],[[]],[[]],[17,15],[17,15],[17,3],[[3,42],17],[[[41,[[11,[7]]]],3,42],17],[17,[[11,[7]]]],[[17,33]],[[],22],[[],22],[[],10],0,0,0,0,0,0,0,0,0,0,[3,[[11,[32]]]],[[32,3],[[11,[32]]]],[[32,3],[[11,[32]]]],[32,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,4],[32,4],[32,32],[[[46,[[0,[44,45]]]]],[[46,[[0,[44,45]]]]]],[[[48,[[0,[44,47]]]]],[[48,[[0,[44,47]]]]]],[[]],[[]],[[]],[[18,32],15],[47,[[48,[47]]]],[45,[[46,[45]]]],[[18,18],15],[[32,32],15],[[49,49],15],[[],15],[[],15],[[],15],[[18,[0,[[50,[2]],51]]],[[11,[32]]]],[[18,20],[[22,[21]]]],[[18,20],[[22,[21]]]],[[42,20],[[22,[21]]]],[[42,20],[[22,[21]]]],[[32,20],[[22,[21]]]],[[32,20],[[22,[21]]]],[[49,20],[[22,[21]]]],[[43,20],[[22,[21]]]],[[[46,[45]],20],[[22,[21]]]],[[[46,[45]],20],[[22,[21]]]],[[[48,[47]],20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[18,15],[42,15],[18,43],[18,52],[42,52],[32,2],[[[53,[2]],4],18],[43,[[11,[32]]]],[[32,33]],[[42,33]],[[49,32,33]],[[[46,[45]],32,33]],[[[48,[47]],32,33]],[[32,15]],[[32,47]],[[32,54]],[[32,55]],[[32,56]],[[32,57]],[[32,2]],[[32,58]],[[32,59]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[[60,[44]]],[[60,[44]]]],[[[28,[44]]],[[28,[44]]]],[[]],[[]],[60,6],[[[60,[47]],20],23],[[[28,[47]],20],23],[[]],[[]],[[],28],[60],[28],[60],[28],[[[61,[60]]],61],[[[61,[28]]],61],[[[61,[60]]],61],[[[61,[28]]],61],[5,28],[[]],[[]],[[]],[[]],[60],[28],[[[61,[[60,[62]]]],63],64],[[[61,[[28,[62]]]],63],64],[28,5],[28,5],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],60],[[[41,[6]]],60],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[65,65],[[]],[[]],[[16,16],8],[[],16],[[16,1],15],[[16,16],15],[[],15],[[16,20],[[22,[21]]]],[[16,20],[[22,[21]]]],[[65,20],[[22,[21]]]],[[65,20],[[22,[21]]]],[[[11,[1]]],16],[1,16],[[]],[[]],[1,16],[2,[[22,[16]]]],[[16,16],15],[[16,1],15],[[16,16],15],[[16,1],15],[[16,27]],[[]],[[]],[16,[[11,[1]]]],[[16,16],15],[[16,1],15],[[16,16],15],[[16,1],15],[[16,1],[[11,[8]]]],[[16,16],[[11,[8]]]],[[]],[[]],[[],36],[[],36],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],0,0,0,0,0,0,0,[[],[[11,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[[11,[7]]]],3,42],5],[[7,3,42],31],[7,7],[[]],[[31,32],15],[[34,32],15],[[],5],[66,5],[67],[66],[5,67],[5,66],[[7,7],15],[[],15],[66,5],[[5,[0,[68,51]]],[[11,[32]]]],[31,18],[[67,20],23],[[66,20],23],[[7,20],[[22,[21]]]],[[31,20],[[22,[21]]]],[[34,20],[[22,[21]]]],[[5,[41,[[11,[7]]]]],5],[[]],[[]],[[]],[[]],[[]],[69,7],[59,7],[[5,[0,[68,51]]],15],[[7,27]],[5,[[11,[7]]]],[66,[[11,[7]]]],[[5,40]],[[]],[[]],[[]],[[]],[[]],[7,69],[7,59],[31,15],[5,15],[31,15],[34,15],[5,15],[31,15],[34,52],[5,[[11,[3]]]],[31,3],[[3,42],5],[[3,42],31],[42,34],[3,5],[[3,42],5],[[3,42],31],[[],5],[5,5],[31,[[11,[7]]]],[[5,[0,[68,51]],19],5],[[31,33]],[[34,33]],[[5,42],5],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[31,42],[[5,40],11],0,0,0,0,0,[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[70,70],[[]],[[]],[7,7],[[],9],[[],70],[10,11],[38],[7],[3,15],[[70,3],15],[7],[[70,7]],[17],[[70,17]],[17,15],[7],[[70,7]],[[39,20],[[22,[21]]]],[[39,20],[[22,[21]]]],[[38,20],[[22,[21]]]],[[35,20],[[22,[21]]]],[[70,20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,15],[35,15],[35,15],[[],[[11,[16]]]],[[],35],[[],70],[31,7],[[70,31],7],[6],[[7,34]],[[70,7,34]],[[7,7]],[[70,7,7]],[3,35],[[70,3],35],[[[0,[12,24,25]]],38],[[[0,[12,24,25]]],[[22,[39]]]],[[],35],[[]],[[]],[[],36],[7,15],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[[0,[12,24,25]],40]]],"c":[46,47,549],"p":[[3,"Level"],[15,"str"],[3,"Metadata"],[3,"Identifier"],[3,"Span"],[3,"Dispatch"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[4,"Option"],[8,"Subscriber"],[8,"Any"],[3,"WeakDispatch"],[15,"bool"],[3,"LevelFilter"],[3,"Event"],[3,"FieldSet"],[8,"Value"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Send"],[8,"Sync"],[3,"ParseLevelError"],[8,"Hasher"],[3,"Instrumented"],[15,"u32"],[3,"Kind"],[3,"Attributes"],[3,"Field"],[8,"Visit"],[3,"Record"],[3,"Interest"],[3,"String"],[8,"FnMut"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[8,"FnOnce"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[8,"Clone"],[8,"Display"],[3,"DisplayValue"],[8,"Debug"],[3,"DebugValue"],[3,"Empty"],[8,"Borrow"],[8,"Sized"],[15,"usize"],[15,"slice"],[8,"Error"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[3,"WithDispatch"],[3,"Pin"],[8,"Future"],[3,"Context"],[4,"Poll"],[3,"ParseLevelFilterError"],[3,"EnteredSpan"],[3,"Entered"],[8,"AsField"],[3,"NonZeroU64"],[3,"NoSubscriber"],[8,"Instrument"],[8,"WithSubscriber"],[8,"AsId"]]},\
"tracing_attributes":{"doc":"A procedural macro attribute for instrumenting functions …","t":"X","n":["instrument"],"q":[[0,"tracing_attributes"]],"d":["Instruments a function to create and enter a <code>tracing</code> span …"],"i":[0],"f":[0],"c":[],"p":[]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","t":"IDDDCCDDDDILLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALLKKLLLLLLLLLLAKLKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLAKOLKLLLLLKKLKAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDLLLLLLLLLLLLLLLLKLLFFLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFFLLLLLLLLLLLLLFDLLLLLLLLLLDDDDDDIDILLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSDDDDSDDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLLLLLLLLLLLKLKLKLLKLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLL","n":["Callsite","Dispatch","Event","Field","Interest","Kind","Level","LevelFilter","Metadata","Once","Subscriber","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","call_once_force","callsite","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_span","cmp","cmp","current_span","default","dispatcher","downcast_raw","drop_span","enabled","enter","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event","event","event_enabled","exit","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","identify_callsite","into","into","into","into","into","into","into","is_completed","le","le","le","le","lt","lt","lt","lt","max_level_hint","metadata","metadata","metadata","new","new_span","on_register_dispatch","partial_cmp","partial_cmp","partial_cmp","partial_cmp","record","record_follows_from","register_callsite","set_interest","span","subscriber","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Callsite","DefaultCallsite","Identifier","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from","hash","interest","into","into","metadata","metadata","new","rebuild_interest_cache","register","register","set_interest","set_interest","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DefaultGuard","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_span","current_span","downcast_ref","downgrade","drop","drop_span","enabled","enter","event","exit","fmt","fmt","fmt","fmt","from","from","from","get_default","into","into","into","is","new","new_span","none","record","record_follows_from","register_callsite","set_default","set_global_default","to_owned","to_string","try_close","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade","with_default","Event","child_of","dispatch","fields","is_contextual","is_root","metadata","new","new_child_of","parent","record","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone_into","clone_into","contains","debug","display","eq","eq","equivalent","equivalent","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_error","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","DEBUG","DEBUG","ERROR","ERROR","EVENT","HINT","INFO","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","TRACE","WARN","WARN","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone_into","clone_into","current","eq","equivalent","fields","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from_level","hint","into","into","into","into_level","is_event","is_event","is_hint","is_span","is_span","level","line","module_path","name","new","target","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Attributes","Current","Id","Record","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","clone","clone_into","contains","contains","eq","equivalent","fields","fmt","fmt","fmt","fmt","from","from","from","from","from_non_zero_u64","from_u64","hash","id","into","into","into","into","into_inner","into_non_zero_u64","into_u64","is_contextual","is_empty","is_empty","is_known","is_root","len","metadata","metadata","new","new","new","new_root","none","parent","record","record","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","Interest","NoSubscriber","Subscriber","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_span","current_span","default","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is","is","is","is","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","to_owned","to_owned","try_close","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"tracing_core"],[158,"tracing_core::callsite"],[192,"tracing_core::dispatcher"],[248,"tracing_core::event"],[259,"tracing_core::field"],[364,"tracing_core::metadata"],[439,"tracing_core::span"],[508,"tracing_core::subscriber"]],"d":["Trait implemented by callsites.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","<code>Event</code>s represent single points in time where something …","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","","","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","A synchronization primitive which can be used to run a …","Trait representing the functions required to collect trace …","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once()</code> except ignores …","Callsites represent the source locations from which spans …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","","","Returns a type representing this subscriber’s view of …","Returns the current default dispatcher","Dispatches trace events to <code>Subscriber</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","Records that a span has been entered.","","","","","","","","","","","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","<code>Span</code> and <code>Event</code> key-value data.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Statically constructs an <code>Identifier</code> for the provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if some <code>call_once()</code> call has completed …","","","","","","","","","Returns the highest verbosity level that this <code>Subscriber</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Statically constructs new span metadata.","Creates a new <code>Once</code> value.","Visit the construction of a new span, returning a new span …","Invoked when this subscriber becomes a <code>Dispatch</code>.","","","","","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this subscriber, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in the execution of a …","Collectors collect and record trace data.","","","","","","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","","","","","","","","","","","","","Trait implemented by callsites.","A default <code>Callsite</code> implementation.","Uniquely identifies a <code>Callsite</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the callsite’s cached <code>Interest</code>, or registers it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the metadata associated with the callsite.","","Returns a new <code>DefaultCallsite</code> with the specified <code>Metadata</code>.","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Registers this callsite with the global callsite registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","","","A guard that resets the current default dispatcher to the …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","Notifies the subscriber that a span ID has been dropped.","Returns true if a span with the specified metadata would be","Records that a span has been can_enter.","Records that an <code>Event</code> has occurred.","Records that a span has been exited.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Executes a closure with a reference to this thread’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets the dispatch as the default dispatch for the duration …","Sets this dispatch as the global default for the duration …","","","Notifies the subscriber that a span ID has been dropped, …","","","","","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","Sets this dispatch as the default for the duration of a …","<code>Event</code>s represent single points in time where something …","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Records a type implementing <code>Error</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","","","The “debug” level.","The “debug” level.","The “error” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Subscriber</code>s can assume this <code>Kind</code> means …","The “info” level.","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “trace” level.","The “warn” level.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","Sets that this <code>Kind</code> is a hint.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>.","Return true if the callsite kind is <code>Span</code>","Returns the level of verbosity of the described span or …","Returns the line number in the source code file where the …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Returns a string describing the part of the system where …","","","","","","","","","","","","","","Attributes provided to a <code>Subscriber</code> describing a new span …","Indicates what the <code>Subscriber</code> considers the “current” …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","","Borrows the <code>Id</code> of the current span, if one exists and is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if the <code>Subscriber</code> that constructed this …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns a reference to the new span’s metadata.","Borrows the <code>Metadata</code> of the current span, if one exists …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new <code>Current</code> that indicates the current …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new <code>Current</code> that indicates the current …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Indicates a <code>Subscriber</code>’s interest in a particular …","A no-op <code>Subscriber</code>.","Trait representing the functions required to collect trace …","Returns an <code>Interest</code> indicating the subscriber is always …","","","","","","","","","Notifies the subscriber that a span ID has been cloned.","Returns a type representing this subscriber’s view of …","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>Subscriber</code> value if it is …","Returns some reference to this <code>[</code>Subscriber…","Returns some reference to this <code>Subscriber</code> value if it is …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns <code>true</code> if the subscriber is always interested in …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns the highest verbosity level that this <code>Subscriber</code> …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns a new <code>NoSubscriber</code>.","Visit the construction of a new span, returning a new span …","","Invoked when this subscriber becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this subscriber, returning …","","Returns an <code>Interest</code> indicating the subscriber is sometimes …","","","Notifies the subscriber that a span ID has been dropped, …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,13,5,15,1,6,7,3,13,5,15,1,6,7,3,3,3,0,5,1,6,7,5,1,6,7,20,6,7,20,5,0,20,20,20,20,13,1,6,6,7,7,13,1,6,7,0,20,20,20,0,13,5,15,1,1,6,6,7,7,3,13,5,5,15,1,6,7,7,7,3,6,7,6,6,7,7,6,6,7,7,1,6,7,0,13,5,15,1,6,7,3,3,6,6,7,7,6,6,7,7,20,0,31,0,3,20,20,6,6,7,7,20,20,20,31,0,0,5,1,6,7,1,6,7,20,13,5,15,1,6,7,3,13,5,15,1,6,7,3,13,5,15,1,6,7,3,0,0,0,29,30,29,30,29,29,29,29,29,30,29,30,29,30,29,30,31,30,30,0,0,30,31,30,29,29,30,29,30,29,30,0,0,0,0,35,32,34,35,32,34,32,32,5,5,5,5,34,5,5,5,5,5,35,35,32,34,35,32,34,0,35,32,34,5,5,5,5,5,5,5,0,0,32,35,5,35,32,34,35,32,34,35,32,34,32,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,46,38,47,39,43,45,46,38,47,39,43,45,38,1,43,45,43,45,46,0,0,46,47,46,47,46,46,46,38,38,50,50,47,39,43,43,45,46,38,47,39,43,45,46,38,47,39,43,45,46,39,46,38,46,46,38,1,46,39,50,38,47,43,45,40,40,40,40,40,40,40,40,40,43,45,46,38,43,46,38,47,39,43,45,46,38,47,39,43,45,46,38,47,39,43,45,6,7,6,7,59,59,6,7,0,0,0,0,7,0,0,59,6,7,6,7,6,59,60,23,59,60,23,13,59,60,59,60,7,59,59,13,13,59,60,60,23,23,59,60,23,7,59,59,60,23,7,13,59,59,13,59,13,13,13,13,13,13,59,60,60,23,59,60,23,59,60,23,59,60,23,0,0,0,0,8,25,26,10,8,25,26,10,25,8,8,25,26,8,8,25,8,25,26,10,8,25,26,10,8,8,8,10,8,25,26,10,10,8,8,25,25,26,10,25,26,25,10,25,26,10,25,10,25,25,26,8,8,25,26,10,8,25,26,10,8,25,26,10,25,0,0,0,27,27,63,27,63,27,63,27,63,20,20,63,20,20,20,20,20,20,20,63,20,63,20,63,20,20,63,27,63,27,63,27,63,20,20,20,20,27,27,27,20,27,63,20,63,20,20,63,20,63,20,63,27,27,63,20,27,63,27,63,27,63],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4]],[[3,4]],0,[5,5],[1,1],[6,6],[7,7],[[]],[[]],[[]],[[]],[8,8],[[6,6],9],[[7,7],9],[[],10],[[],5],0,[11,12],[8],[13,14],[8],[[13,13],14],[[1,1],14],[[6,6],14],[[6,7],14],[[7,6],14],[[7,7],14],[[],14],[[],14],[[],14],[[],14],0,[15],[15,14],[8],0,[[13,16],17],[[5,16],17],[[15,16],17],[[1,16],17],[[1,16],17],[[6,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[3,16],[[19,[18]]]],[[]],[[]],[[[0,[20,21,22]]],5],[[]],[[]],[[]],[[[12,[6]]],7],[[]],[6,7],[[]],[2,[[19,[6,23]]]],[2,[[19,[7]]]],[[6,6],14],[[6,7],14],[[7,7],14],[[7,6],14],[[6,6],14],[[6,7],14],[[7,6],14],[[7,7],14],[[1,24]],[[6,24]],[[7,24]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,14],[[6,7],14],[[6,6],14],[[7,7],14],[[7,6],14],[[6,6],14],[[6,7],14],[[7,6],14],[[7,7],14],[[],[[12,[7]]]],0,[[],13],0,[[],3],[25,8],[5],[[6,6],[[12,[9]]]],[[6,7],[[12,[9]]]],[[7,6],[[12,[9]]]],[[7,7],[[12,[9]]]],[[8,26]],[[8,8]],[13,27],[27],0,0,[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[8,14],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[29,29],[[]],[[29,29],14],[[],14],[[29,16],17],[[30,16],17],[[]],[[]],[[29,24]],[30,27],[[]],[[]],[[],13],[30,13],[13,30],[[]],[31],[30,27],[27],[[30,27]],[[]],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[]],[[5,8],8],[5,10],[5,[[12,[33]]]],[5,32],[34],[[5,8]],[[5,13],14],[[5,8]],[[5,15]],[[5,8]],[[35,16],17],[[35,16],17],[[32,16],17],[[34,16],17],[[]],[[]],[[]],[36],[[]],[[]],[[]],[5,14],[[[0,[20,21,22]]],5],[[5,25],8],[[],5],[[5,8,26]],[[5,8,8]],[[5,13],27],[5,34],[5,[[19,[35]]]],[[]],[[],28],[[5,8],14],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[32,[[12,[5]]]],[[5,4]],0,[[[37,[[12,[8]]]],13,38]],[[13,38]],[15,39],[15,14],[15,14],[15,13],[[13,38],15],[[[37,[[12,[8]]]],13,38],15],[15,[[12,[8]]]],[[15,40]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,29],[1,29],[[[43,[[0,[41,42]]]]],[[43,[[0,[41,42]]]]]],[[[45,[[0,[41,44]]]]],[[45,[[0,[41,44]]]]]],[[]],[[]],[[46,1],14],[44,[[45,[44]]]],[42,[[43,[42]]]],[[46,46],14],[[47,47],14],[[],14],[[],14],[[46,[0,[[48,[2]],49]]],[[12,[1]]]],[[46,16],17],[[46,16],17],[[38,16],17],[[38,16],17],[[50,16],17],[[50,16],17],[[47,16],17],[[39,16],17],[[[43,[42]],16],17],[[[43,[42]],16],17],[[[45,[44]],16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46],[[]],[46,14],[38,14],[46,39],[46,51],[38,51],[1,2],[[[52,[2]],29],46],[39,[[12,[1]]]],[[1,40]],[[38,40]],[[47,1,40]],[[[43,[42]],1,40]],[[[45,[44]],1,40]],[[1,14]],[[1,44]],[[1,53]],[[1,54]],[[1,55]],[[1,56]],[[1,2]],[[1,57]],[[1,58]],[[]],[[]],[[],28],[[],28],[[],28],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,2],[[]],[[]],[[]],[[]],[[]],[[]],[13,29],[59,59],[60,60],[[]],[[]],[[],7],[[59,59],14],[[],14],[13,46],[13,[[12,[2]]]],[[59,16],17],[[60,16],17],[[60,16],17],[[23,16],17],[[23,16],17],[[]],[[]],[[]],[6,7],[59,59],[[]],[[]],[[]],[7,[[12,[6]]]],[13,14],[59,14],[59,14],[13,14],[59,14],[13,6],[13,[[12,[61]]]],[13,[[12,[2]]]],[13,2],[[2,2,6,[12,[2]],[12,[61]],[12,[2]],46,59],13],[13,2],[[]],[[]],[[],28],[[],28],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,13,38],25],[8,8],[[]],[[25,1],14],[[26,1],14],[[8,8],14],[[],14],[25,46],[[8,16],17],[[25,16],17],[[26,16],17],[[10,16],17],[[]],[[]],[[]],[[]],[62,8],[58,8],[[8,24]],[10,[[12,[8]]]],[[]],[[]],[[]],[[]],[10,12],[8,62],[8,58],[25,14],[25,14],[26,14],[10,14],[25,14],[26,51],[25,13],[10,[[12,[13]]]],[[13,38],25],[38,26],[[8,13],10],[[13,38],25],[[],10],[25,[[12,[8]]]],[[25,40]],[[26,40]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11],[[],11],[[],11],[25,38],0,0,0,[[],27],[[]],[[]],[[]],[[]],[27,27],[63,63],[[]],[[]],[8,8],[[],10],[[],63],[11,12],[20,[[12,[33]]]],[20,[[12,[33]]]],[20,[[12,[33]]]],[20,[[12,[33]]]],[8],[13,14],[[63,13],14],[8],[[63,8]],[15],[[63,15]],[15,14],[8],[[63,8]],[[27,16],17],[[63,16],17],[[]],[[]],[[]],[[]],[20,14],[20,14],[20,14],[20,14],[27,14],[27,14],[27,14],[[],[[12,[7]]]],[[],27],[[],63],[25,8],[[63,25],8],[5],[[8,26]],[[63,8,26]],[[8,8]],[[63,8,8]],[13,27],[[63,13],27],[[],27],[[]],[[]],[8,14],[[],19],[[],19],[[],19],[[],19],[[],11],[[],11]],"c":[44,209,528],"p":[[3,"Field"],[15,"str"],[3,"Once"],[8,"FnOnce"],[3,"Dispatch"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[4,"Option"],[3,"Metadata"],[15,"bool"],[3,"Event"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Subscriber"],[8,"Send"],[8,"Sync"],[3,"ParseLevelError"],[8,"Hasher"],[3,"Attributes"],[3,"Record"],[3,"Interest"],[3,"String"],[3,"Identifier"],[3,"DefaultCallsite"],[8,"Callsite"],[3,"WeakDispatch"],[8,"Any"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[8,"FnMut"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[8,"Visit"],[8,"Clone"],[8,"Display"],[3,"DisplayValue"],[8,"Debug"],[3,"DebugValue"],[3,"FieldSet"],[3,"Empty"],[8,"Borrow"],[8,"Sized"],[8,"Value"],[15,"usize"],[15,"slice"],[8,"Error"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[3,"Kind"],[3,"ParseLevelFilterError"],[15,"u32"],[3,"NonZeroU64"],[3,"NoSubscriber"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","t":"RIIKKKK","n":["UNICODE_VERSION","UnicodeWidthChar","UnicodeWidthStr","width","width","width_cjk","width_cjk"],"q":[[0,"unicode_width"]],"d":["The version of Unicode that this version of unicode-width …","Methods for determining displayed width of Unicode …","Methods for determining displayed width of Unicode strings.","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns.","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns."],"i":[0,0,0,3,4,3,4],"f":[0,0,0,[[],[[2,[1]]]],[[],1],[[],[[2,[1]]]],[[],1]],"c":[],"p":[[15,"usize"],[4,"Option"],[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","t":"RIKK","n":["UNICODE_VERSION","UnicodeXID","is_xid_continue","is_xid_start"],"q":[[0,"unicode_xid"]],"d":["The version of Unicode that this version of unicode-xid is …","Methods for determining if a character is a valid …","Returns whether the specified <code>char</code> satisfies the ‘…","Returns whether the specified character satisfies the ‘…"],"i":[0,0,2,2],"f":[0,0,[[],1],[[],1]],"c":[],"p":[[15,"bool"],[8,"UnicodeXID"]]},\
"urlencoding":{"doc":"To encode a string, do the following:","t":"DLLLLLLFFFFLLLLLLLLLLLLLLLLLL","n":["Encoded","append_to","borrow","borrow_mut","clone","clone_into","cmp","decode","decode_binary","encode","encode_binary","eq","equivalent","fmt","fmt","from","hash","into","new","partial_cmp","str","to_owned","to_str","to_string","to_string","try_from","try_into","type_id","write"],"q":[[0,"urlencoding"]],"d":["Wrapper type that implements <code>Display</code>. Encodes on the fly, …","Perform urlencoding into a string","","","","","","Decode percent-encoded string assuming UTF-8 encoding.","Decode percent-encoded string as binary data, in any …","Percent-encodes every byte except alphanumerics and <code>-</code>, <code>_</code>, <code>.</code>…","Percent-encodes every byte except alphanumerics and <code>-</code>, <code>_</code>, <code>.</code>…","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Long way of writing <code>Encoded(data)</code>","","Same as new, but hints a more specific type, so you can …","","","","Perform urlencoding to a string","","","","Perform urlencoding into a writer"],"i":[0,4,4,4,4,4,4,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[[[4,[[3,[[2,[1]]]]]],5]],[[]],[[]],[[[4,[6]]],[[4,[6]]]],[[]],[[[4,[7]],[4,[7]]],8],[9,[[12,[[10,[9]],11]]]],[[[2,[1]]],[[10,[[2,[1]]]]]],[9,[[10,[9]]]],[[[2,[1]]],[[10,[9]]]],[[[4,[13]],[4,[13]]],14],[[],14],[[[4,[15]],16],17],[[[4,[[3,[[2,[1]]]]]],16],17],[[]],[[[4,[18]],19]],[[]],[[[3,[[2,[1]]]]],[[4,[[3,[[2,[1]]]]]]]],[[[4,[20]],[4,[20]]],[[21,[8]]]],[9,[[4,[9]]]],[[]],[[[4,[[3,[[2,[1]]]]]]],[[10,[9]]]],[[],5],[[[4,[[3,[[2,[1]]]]]]],5],[[],12],[[],12],[[],22],[[[4,[[3,[[2,[1]]]]]],23],24]],"c":[],"p":[[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Encoded"],[3,"String"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[15,"str"],[4,"Cow"],[3,"FromUtf8Error"],[4,"Result"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"Hasher"],[8,"PartialOrd"],[4,"Option"],[3,"TypeId"],[8,"Write"],[6,"Result"]]},\
"wgpu":{"doc":"A cross-platform graphics and compute library based on …","t":"SSSSSSDDNENNNEENNNNNNNNNNNNNNNNNNSSSSSSSSSNEDNNNNNNNNNNNNNNNNDDDDDDEEDEEDNDNNGNDDEGGDDDDSSSSSSSSSRRSSSSSNNNNDDDDDDGENEDDDDDNNDNNNNNNNNNNSSSSSSSSSNNNNNNNNDNDDGENNNDDNNNNENGNNNNNNEENNNNNNDSSSSSSEDNNNENNNNNNNNNNNNDNENSSSNENNNNNNSSSSSSSDGDGDGDDDNNNENDNDDNNNGNNDNNNNNENNNSRSSSSSSSSSSSSNGEENNNNDSSSNNNNNNSNNNNNNNNNNNNDDDNNNNNNSSSSSSSRDDNDNNNENENEEDDEDSRRRDGEDDNNNNNNNNNNNNSSSSSSSNNNDDGDDDDDDDDDNNGDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSDNNNEEDGEDDDEDNNNNNNNNNNNNNNNNNNNNNNNDNEDNNENEDNNDDGEEDSSSSSSSSSSSDNEGEEDDEDDNNDENNNNNNSSSSNNNNNNNNNNNINNNNNNNSSSSSSSRSSSNNNNNNDDEDENNSSNNIINNNSSNNNMLMMMLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLMMMMLMMMMMMMMMLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMLLLLLLLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLMMMMLLMMMMMLLLMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMLMMLLMMMMLLLLMMMCMLLLLLLLLLLLLLLMMMMLLMMMMLLLLLMLLLMLLLLMMLMMMLLLLMMMMMLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLMLLLMMMMLMMMMLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLAMMOMMMLMLLLMMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMDIDDDDIDFLLLFMMMMLLLLLLLLLLLLLLLLLLLLMKKLLLLKKKKFLLLLLLLLLLLLLLLLFLFFMMLLLLLLMFLFFLLKKKKKLLLLLLLLLLLLLLLLLLLLLLMMMMLMMM","n":["ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","ComputePass","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","Constant","Cpu","CreateSurfaceError","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX11","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","Device","DeviceDescriptor","DeviceType","Discard","DiscreteGpu","DisplayP3","DownlevelCapabilities","DownlevelFlags","Dst","DstAlpha","Dx11","Dx12","Dx12Compiler","Dxc","DynamicOffset","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Error","ErrorFilter","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","Fxc","GL","GREEN","GREEN","Gl","Gles3MinorVersion","Glsl","Good","Greater","GreaterEqual","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","Id","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageCopyTextureTagged","ImageCopyTextureTaggedBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MaintainBase","MapMode","Max","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","Naga","Nearest","Never","NonFiltering","None","NotEqual","OVER","Occlusion","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Operations","Origin2d","Origin3d","Other","OutOfMemory","OutOfMemory","OutOfMemory","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Point","PointList","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","QueueWriteBufferView","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SHADER_UNUSED_VERTEX_OUTPUT","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SURFACE_VIEW_FORMATS","Sampler","Sampler","Sampler","SamplerArray","SamplerBindingType","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Store","StoreOp","SubmissionIndex","Suboptimal","Subtract","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unorm","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","Validation","Validation","Version0","Version1","Version2","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","WaitForSubmissionIndex","WasmNotSend","WasmNotSync","Wgsl","Write","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","add_srgb_suffix","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_modes","alpha_to_coverage_enabled","anisotropy_clamp","array_layer_count","array_layer_count","array_stride","as_entire_binding","as_entire_buffer_binding","as_hal","as_hal","as_hal","as_hal","as_hal_mut","as_image_copy","as_mut","as_mut","as_ref","aspect","aspect","aspect","aspect","aspect_specific_format","attributes","b","back","backend","backends","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin_compute_pass","begin_occlusion_query","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bias","bind_group_layouts","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_dimensions","block_size","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffers","bytes_per_row","check_limits","check_limits_with_fail_fn","clamp","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","color_space","compare","compare","compare","compare","compare","compare","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_with_aspect","configure","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_from_hal","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_surface_from_core_animation_layer","create_texture","create_texture_from_hal","create_texture_with_data","create_view","cull_mode","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref","deref_mut","deref_mut","destroy","destroy","destroy","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","dispatch_workgroups","dispatch_workgroups_indirect","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","driver","driver_info","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","end_occlusion_query","end_of_pass_write_index","end_of_pass_write_index","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","features","finish","finish","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","format","format","format","format","format","format","formats","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_core","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","front","front_face","g","generate_report","get_bind_group_layout","get_bind_group_layout","get_capabilities","get_current_texture","get_default_config","get_downlevel_capabilities","get_info","get_mapped_range","get_mapped_range_mut","get_presentation_timestamp","get_texture_format_features","get_timestamp_period","gles_minor_version","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","global_id","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","include_spirv_raw","include_wgsl","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_surface_supported","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","layer_range","layout","layout","layout","layout","limits","limits","limits","load","lod_max_clamp","lod_min_clamp","mag_filter","map_async","map_index","map_label","mask","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_count","mip_level_size","mip_range","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","multiview","multiview","naga","name","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","not","not","occlusion_query_set","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","pop_error_scope","power_preference","premultiplied_alpha","present","present_modes","primitive","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","push_error_scope","query_set","query_set","r","range","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","request_adapter","request_device","required_features","resolve_query_set","resolve_target","resource","rows_per_image","sample_count","sample_count","sample_count_supported","sample_type","set","set","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_blend_constant","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","size","size","size","size","slice","slope_scale","source","source","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","texture","texture","texture","timestamp_writes","timestamp_writes","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string","to_string","to_string","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unclipped_depth","union","union","union","union","union","union","union","union","union","union","unmap","usage","usage","usages","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","view","view","visibility","width","width","with_env","write_buffer","write_buffer_with","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","x","y","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","dxc_path","dxil_path","description","source","source","defines","shader","stage","block","channel","filterable","BufferInitDescriptor","DeviceExt","DispatchIndirect","DownloadBuffer","DrawIndexedIndirect","DrawIndirect","RenderEncoder","StagingBelt","align_to","as_bytes","as_bytes","as_bytes","backend_bits_from_env","base_index","base_instance","base_instance","base_vertex","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contents","create_buffer_init","create_texture_with_data","default","default","default","deref","draw","draw_indexed","draw_indexed_indirect","draw_indirect","dx12_shader_compiler_from_env","eq","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gles_minor_version_from_env","hash","initialize_adapter_from_env","initialize_adapter_from_env_or_default","instance_count","instance_count","into","into","into","into","into","into","label","make_spirv_raw","new","parse_backends_from_comma_list","power_preference_from_env","read_buffer","recall","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","usage","vertex_count","vertex_count","vertex_offset","write_buffer","x","y","z"],"q":[[0,"wgpu"],[3398,"wgpu::BindingType"],[3407,"wgpu::BufferBindingType"],[3408,"wgpu::Dx12Compiler"],[3410,"wgpu::Error"],[3413,"wgpu::ShaderSource"],[3416,"wgpu::TextureFormat"],[3418,"wgpu::TextureSampleType"],[3419,"wgpu::util"]],"d":["Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to indexed draw …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","An element of a <code>BindGroupDescriptor</code>, consisting of a …","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Slice into a <code>Buffer</code>.","Different ways that you can use a buffer.","Read only view into a mapped buffer.","Write only view into mapped buffer.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Loads the specified value for this attachment into the …","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a <code>CommandBuffer</code>.","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Describes the timestamp writes of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Cpu / Software Rendering.","<code>Instance::create_surface()</code> or a related function failed.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 7+","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Supported physical device types.","Discards the resulting value of the render pass for this …","Discrete GPU with separate CPU/GPU memory.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","D.component","D.alpha","Direct3D-11 (Windows)","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","Error type","Filter for error scopes.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Describes the fragment processing in a render pipeline.","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","Selects which OpenGL ES 3 minor version to request.","GLSL module as a string slice.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the “first instance” in …","A timestamp that is invalid due to the platform not having …","Opaque globally-unique identifier","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object debugging label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Loads the existing value for this attachment into the …","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","Passed to <code>Device::poll</code> to control how and if it should …","Type of buffer mapping.","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","Naga module.","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","Catch only out-of-memory errors.","There is no more memory left to allocate a new frame.","Out of memory error","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Handle to a pipeline layout.","Describes a <code>PipelineLayout</code>.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","A read-only view into a staging buffer.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass: a list of render …","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Describes the timestamp writes of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device from an <code>Adapter</code> failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Allows vertex shaders to have outputs which are not …","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Supports specifying which view formats are allowed when …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Binding is backed by an array of samplers.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for use with <code>Device::create_shader_module</code>.","Descriptor for a shader module given by SPIR-V binary, for …","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","Stores the resulting value of the render pass for this …","Operation to perform to the output attachment at the end …","Identifier for a particular call to <code>Queue::submit</code>. Can be …","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Defines the capabilities of a given surface and adapter.","Describes a <code>Surface</code>.","Result of an unsuccessful call to …","Status of the received surface image.","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","8 bit integer RGBA, [0, 255] converted to/from …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Catch only validation errors.","Validation error, signifying a bug in code or data","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a <code>VertexAttribute</code> (input).","Describes the vertex processing in a render pipeline.","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","On native backends, block until the given submission has …","","","WGSL module as a string slice.","Map only for writing","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","Adds an <code>Srgb</code> suffix to the given texture format, if the …","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Must be at least 1. If this is not 1, all filter modes …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","Return the binding view of the entire buffer.","Return the binding view of the entire buffer.","Return a reference to a specific backend instance, if …","Apply a callback to this <code>Adapter</code>’s underlying backend …","Apply a callback to this <code>Device</code>’s underlying backend …","Returns the inner hal Texture using a callback. The hal …","Returns the inner hal Surface using a callback. The hal …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","","Aspect of the texture. Color textures must be …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","The list of attributes which comprise a single vertex.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base array layer.","Base mip level.","Base mip level.","Begins recording of a compute pass.","Start a occlusion query on this render pass. It can be …","Start a pipeline statistics query on this render pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","Depth bias state.","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","Returns the dimension of a block of texels.","Returns the texel block size of this format.","Border color to use when address_mode is …he buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absolute).","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","The color space of this texture.","","","","","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","Returns the number of components this format has taking …","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","Creates a <code>Buffer</code> from a wgpu-hal Buffer.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a surface from a raw window handle.","Creates a surface from <code>CoreAnimationLayer</code>.","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Creates a view of this texture.","The face culling mode.","Enable debugging and validation flags.","","","","","","","","","","","","","Creates a new instance of wgpu with default options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","Returns the depth or layer count of this <code>Texture</code>.","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","The effect of draw calls on the depth and stencil aspects …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written to.","","","","","","Destroy this device.","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","<code>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the dimension of this <code>Texture</code>.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","","Draws primitives from the active vertex buffer(s).","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","Draws primitives from the active vertex buffer(s) based on …","Driver name","Driver info","","","","","","","","","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","End the occlusion query on this render pass. It can be …","The index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","End the pipeline statistics query on this render pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","Retrieves all available <code>Adapter</code>s that match the given …xecute a render bundle, which is a set of pre-recorded …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is preformed when stencil test fails.","List all features that are supported with this adapter.","List all features that may be used with this device.","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instancendicates that only a fallback adapter can be returned. …","Returns the format of this <code>Texture</code>.","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the texture view. Either must be the same as the …","Format of the depth/stencil buffer, must be special depth …","Format of the input","Format of the attachment.","List of supported formats to use with the given adapter. …","The compiled fragment stage, its entry point, and the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","Create an new instance of wgpu from a wgpu-core instance.","Create an new instance of wgpu from a wgpu-hal instance.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Generates memory report.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the capabilities of the surface when used with the …","Returns the next texture to be presented by the swapchain …","Return a default <code>SurfaceConfiguration</code> from width and …","Get info about the adapter itself.","Get info about the adapter itself.","Synchronously and immediately map a buffer for reading. If …","Synchronously and immediately map a buffer for writing. If …","Generates a timestamp using the clock used by the …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Which OpenGL ES 3 minor version to request.","Returns a globally-unique identifier for this <code>Adapter</code>.","Returns a globally-unique identifier for this <code>Device</code>.","Returns a globally-unique identifier for this <code>Buffer</code>.","Returns a globally-unique identifier for this <code>Texture</code>.","Returns a globally-unique identifier for this <code>TextureView</code>.","Returns a globally-unique identifier for this <code>Sampler</code>.","Returns a globally-unique identifier for this <code>Surface</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>BindGroup</code>.","Returns a globally-unique identifier for this <code>ShaderModule</code>.","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this …","Returns a globally-unique identifier for this <code>RenderBundle</code>.","Returns a globally-unique identifier for this <code>QuerySet</code>.","Returns a globally-unique identifier for this <code>Queue</code>.","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of this <code>Texture</code>.","Height of the extent","Macro to load raw SPIR-V data statically, for use with …","Macro to load a WGSL module statically.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of this command buffer.","Returns the layer range of a subresource range describes …","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","List the “best” limits that are supported by this …","List all limits that were requested of this device.","Additional limits","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the callback …","Map on the wait index type.","Takes a closure and maps the label of the command buffer …","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","Returns the mip_level_count of this <code>Texture</code>.","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Returns the mip level range of a subresource range …","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Dispatches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","If this render bundle will rendering to multiple array …","","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Create an new instance of wgpu.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Defines where the occlusion query results will be stored …","Base offset of the buffer, in bytes.","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Registers a callback when the previous call to submit …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","Check for resource cleanups and mapping callbacks.","Polls all devices.","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Pop an error scope.","Power preference for the adapter.","The premultiplication of this texture","Schedule this texture to be presented on the owning …","List of supported presentation modes to use with the given …","The properties of the pipeline at the primitive assembly …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Push an error scope.","The query set to write to.","The query set to write to.","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Returns the required features (if any) in order to use the …","Resolve a query set, writing the results into the supplied …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Returns the sample_count of this <code>Texture</code>.","Sample count this render bundle is capable of rendering …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","Sets the blend color as used by some of the blending modes.","Sets the active index buffer.","","Sets the active index buffer.","","Sets the active render pipeline.","","Sets the active compute pipeline.","","Sets the active render pipeline.","","Set push constant data for subsequent draw calls.","Set push constant data for subsequent dispatch calls.","Set push constant data.","","Sets the scissor rectangle used during the rasterization …","Sets the stencil reference.","Assign a vertex buffer to a slot.","","","Assign a vertex buffer to a slot.","Sets the viewport used during the rasterization stage to …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the length of the buffer allocation in bytes.","Returns the size of this <code>Texture</code>.","Returns the byte size of the format.","Size of the binding in bytes, or <code>None</code> for using the rest …","Use only a portion of this Buffer for a given operation. …","Slope depth biasing factor.","","","","Source code for the shader.","Binary SPIR-V data, in 4-byte words.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","If the stencil aspect of the depth stencil attachment is …","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The color state of the render targets.","Accessible view of the frame.","The texture to be copied to/from.","The texture to be copied to/from.","Defines which timestamp values will be written for this …","Defines which timestamp values will be written for this …","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backend.","","","","","","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret verticeshe type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Flushes any pending write operations and unmaps the buffer …","Returns the allowed usages for this <code>Buffer</code>.","Returns the allowed usages of this <code>Texture</code>.","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions that are built on top of …","<code>Backend</code>-specific vendor ID of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","The view to use as an attachment.","The view to use as an attachment.","Which shader stages can see this binding.","Returns the width of this <code>Texture</code>.","Width of the extent","Returns this set of flags, affected by environment …","Schedule a data write into <code>buffer</code> starting at <code>offset</code>.","Schedule a data write into <code>buffer</code> starting at <code>offset</code> via …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a write of some data into a texture.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","X position of the origin","","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","Description of the validation error.","Lower level source of the error.","Lower level source of the error.","Defines to unlock configured shader features.","The source code of the shader.","The shader stage that the shader targets. For example, …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","The structure expected in <code>indirect_buffer</code> for …","CPU accessible buffer used to download data back from the …","The structure expected in <code>indirect_buffer</code> for …","The structure expected in <code>indirect_buffer</code> for …","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Efficiently performs many buffer writes by sharing and …","Aligns a <code>value</code> to an <code>alignment</code>.","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Returns the bytes representation of the struct, ready to …","Get a set of backend bits from the environment variable …","The base index within the index buffer.","The instance ID of the first instance to draw. Has to be …","The instance ID of the first instance to draw. Has to be …","The Index of the first vertex to draw.","","","","","","","","","","","","","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","Choose which DX12 shader compiler to use from the …","","","","","Prepare currently mapped buffers for use in a submission.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Choose which minor OpenGL ES version to use from the …","","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","The number of instances to draw.","The number of instances to draw.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of a buffer. This will show up in graphics …","Version of make_spirv intended for use with …","Create a new staging belt.","Generates a set of backends from a comma separated list of …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","<code>wgt::Features::PUSH_CONSTANTS</code> must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","The number of vertices to draw.","The number of vertices to draw.","The value added to the vertex index before indexing into …","Allocate the staging belt slice of <code>size</code> to be uploaded …","The number of work groups in X dimension.","The number of work groups in Y dimension.","The number of work groups in Z dimension."],"i":[3,3,8,8,56,5,0,0,54,0,28,99,1,0,0,108,107,107,134,70,70,70,70,70,70,70,70,70,70,70,70,70,70,5,3,110,7,8,110,2,5,3,60,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,43,0,13,125,0,13,0,0,0,0,0,0,0,0,0,3,11,11,8,5,6,5,11,3,0,0,9,10,9,10,5,59,115,115,72,0,0,0,0,0,0,0,0,124,0,0,0,0,0,0,53,49,0,51,51,59,51,111,51,111,51,51,111,4,3,5,3,5,4,3,2,2,95,95,122,1,1,1,1,1,0,28,0,0,0,0,73,49,129,0,0,53,53,43,43,0,133,0,1,1,1,1,43,99,0,0,1,1,1,1,1,1,0,7,6,11,5,5,5,0,0,107,107,62,0,124,122,106,106,106,106,106,106,106,106,106,106,0,60,0,133,2,8,110,43,0,67,180,99,99,71,44,97,5,9,9,5,3,109,0,0,0,0,0,0,0,0,0,107,95,95,0,108,0,102,0,0,49,95,95,0,99,99,0,62,58,58,116,72,0,98,180,44,3,0,9,9,2,5,7,7,7,7,7,3,3,3,107,0,0,0,54,43,54,115,0,5,6,5,67,116,99,124,44,99,55,132,53,53,53,53,53,53,53,53,108,131,131,0,0,0,49,61,98,179,98,180,3,3,3,3,56,2,3,0,0,0,132,0,62,58,87,0,108,0,108,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,8,110,10,55,56,3,105,123,123,0,0,0,0,0,0,0,0,0,0,0,0,115,95,0,0,0,54,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,2,3,3,3,3,3,3,3,9,10,7,3,5,0,13,125,13,0,0,0,0,0,0,0,0,0,0,122,106,106,106,106,106,106,106,106,48,48,48,106,106,106,106,53,53,53,53,53,129,1,0,28,0,0,121,125,0,73,0,0,180,54,0,0,0,0,0,0,3,10,3,3,3,3,3,3,3,3,110,0,125,0,0,0,0,0,0,0,0,0,13,13,0,0,98,180,132,131,58,58,9,3,5,5,122,93,106,106,93,106,106,106,106,106,106,0,121,71,106,106,106,106,71,4,6,9,3,6,11,5,0,3,5,2,61,179,134,134,134,102,0,0,0,0,0,49,43,5,110,87,87,0,0,67,105,123,112,113,53,95,131,110,1,80,80,80,2,3,4,5,6,7,8,9,10,11,3,3,69,56,164,65,80,78,42,83,12,12,15,17,19,20,21,20,23,26,27,78,128,130,42,1,83,110,88,50,165,78,42,78,42,29,32,32,31,29,75,89,91,79,81,126,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,57,1,1,80,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,14,127,84,120,37,37,90,29,29,43,44,2,46,3,4,37,47,5,48,49,50,6,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,7,67,68,69,70,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,9,107,108,10,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,43,44,2,46,3,4,37,47,5,48,49,50,6,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,7,67,68,69,70,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,9,107,108,10,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,47,5,48,109,56,35,96,130,47,5,48,109,80,97,46,51,2,3,4,5,6,7,8,9,10,11,5,1,1,21,63,90,2,3,4,5,6,7,8,9,10,11,2,3,5,6,7,8,9,10,11,29,29,29,29,65,126,15,19,19,19,19,19,19,19,17,19,19,19,19,19,19,19,19,15,15,19,19,19,20,63,4,44,46,3,4,37,47,51,54,55,58,59,62,15,63,65,72,73,74,8,78,79,80,35,88,90,30,93,95,96,97,102,107,108,164,110,113,114,28,115,116,118,120,121,122,42,133,134,165,91,97,77,20,114,119,86,96,35,91,23,27,26,23,26,19,12,20,50,50,2,3,4,5,6,7,8,9,10,11,20,78,31,31,37,37,32,32,152,152,32,32,152,152,32,32,152,152,32,32,152,152,50,50,23,17,19,12,20,162,154,21,141,140,155,150,153,145,168,29,32,31,169,34,170,27,26,55,165,2,3,4,5,6,7,8,9,10,11,32,75,89,32,31,82,94,84,85,92,15,43,44,2,46,3,4,37,47,5,48,49,50,6,51,52,53,54,55,56,57,58,59,60,61,62,63,65,7,69,70,71,1,72,73,74,8,78,80,83,88,90,91,93,95,96,97,98,99,102,103,104,105,106,9,107,108,10,109,110,111,112,113,114,28,115,116,117,118,119,121,122,123,124,125,126,129,42,131,11,134,43,43,43,44,44,44,2,2,2,46,46,46,3,3,3,4,4,4,37,37,37,47,47,47,5,5,5,48,48,48,49,49,49,50,50,50,6,6,6,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,63,63,63,65,65,65,7,7,7,69,69,69,70,70,70,71,71,71,1,1,1,72,72,72,73,73,73,74,74,74,8,8,8,78,78,78,83,83,83,88,88,88,90,90,90,91,91,91,93,93,93,95,95,95,96,96,96,97,97,97,98,98,98,99,99,99,102,102,102,103,103,103,104,104,104,105,105,105,106,106,106,9,9,9,107,107,107,108,108,108,10,10,10,109,109,109,111,111,111,112,112,112,113,113,113,114,114,114,28,28,28,115,115,115,116,116,116,117,117,117,118,118,118,119,119,119,121,121,121,122,122,122,123,123,123,124,124,124,125,125,125,126,126,126,129,129,129,42,42,42,131,131,131,11,11,11,134,134,134,32,2,3,4,5,6,7,8,9,10,11,97,17,19,29,152,47,69,165,43,44,2,2,2,2,2,46,3,3,3,3,3,4,4,4,4,4,37,47,5,5,5,5,5,48,49,50,6,6,6,6,6,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,7,7,7,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,8,8,8,8,78,79,80,81,82,35,83,84,85,86,88,89,90,30,91,92,93,94,95,96,170,97,98,98,99,100,100,101,101,102,103,103,104,105,106,27,26,179,179,9,9,9,9,9,107,108,10,10,10,10,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,11,11,11,11,133,134,165,46,20,57,78,91,104,119,164,86,43,44,2,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,100,101,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,2,3,4,5,6,7,8,9,10,11,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,2,3,4,5,6,7,8,9,10,11,4,15,15,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,88,63,110,15,153,145,21,21,21,17,17,66,66,17,17,161,165,17,19,12,20,162,154,21,141,140,155,150,153,145,169,34,161,1,1,1,125,1,43,44,2,46,3,4,37,47,5,48,6,51,52,53,54,55,56,57,58,59,60,62,63,65,7,69,70,71,1,72,73,74,8,83,88,90,91,93,95,96,97,99,102,104,106,9,107,108,10,111,112,113,114,28,115,116,117,118,119,121,122,123,124,125,126,131,11,134,20,114,0,0,2,3,4,5,6,7,8,9,10,11,29,32,31,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,1,1,91,91,1,1,2,3,4,5,6,7,8,9,10,11,88,90,42,109,88,91,97,1,91,58,17,87,47,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,68,156,78,79,80,82,35,86,30,92,94,96,118,42,82,86,92,127,17,19,47,74,80,80,80,66,87,118,65,37,37,37,37,37,37,37,37,37,37,37,37,114,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,80,37,37,128,130,20,78,42,114,42,80,84,85,92,32,32,32,32,86,86,96,0,50,88,97,99,15,2,3,4,5,6,7,8,9,10,11,35,14,104,120,161,19,55,76,128,130,47,5,48,61,109,97,114,19,15,63,29,32,31,19,46,130,170,164,86,79,29,32,31,19,75,89,110,117,88,53,2,3,4,5,6,7,8,9,10,11,1,15,17,1,29,76,81,120,20,96,7,1,2,3,4,5,6,7,8,9,10,11,32,32,31,152,152,32,32,32,152,152,32,32,31,152,152,32,32,31,152,152,32,32,32,32,152,152,32,104,47,12,20,106,14,12,90,100,101,179,68,156,55,117,19,91,77,119,83,19,74,63,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,161,170,2,3,4,5,6,7,8,9,10,11,85,170,128,130,35,30,113,112,43,44,2,46,3,4,37,47,5,48,49,50,6,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,7,67,68,69,70,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,9,107,108,10,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,43,98,100,101,103,179,128,130,2,3,4,5,6,7,8,9,10,11,63,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,126,43,44,2,46,3,4,37,47,5,48,49,50,6,23,51,52,53,54,55,56,57,58,59,60,61,62,15,17,19,63,64,12,65,66,7,20,162,154,21,141,140,155,67,68,156,150,153,145,168,29,32,31,152,69,70,169,34,161,13,71,1,14,72,73,74,75,76,77,8,78,79,80,81,82,35,83,84,85,86,87,88,89,90,30,91,92,93,94,95,96,170,97,98,99,100,101,102,103,104,105,106,27,26,179,9,107,108,10,164,180,109,110,111,112,113,114,28,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,42,131,132,11,133,134,165,63,2,3,4,5,6,7,8,9,10,11,12,12,20,164,55,37,37,0,50,86,0,76,77,126,20,114,4,161,161,57,88,161,29,32,31,112,113,112,113,113,213,213,214,214,215,215,214,215,213,216,217,217,218,219,218,220,220,220,221,221,222,0,0,0,0,0,0,0,0,0,207,208,209,0,208,207,208,207,211,210,143,207,208,209,211,210,143,207,208,209,143,207,208,209,143,207,208,209,143,223,223,207,208,209,210,224,224,224,224,0,143,143,143,143,211,211,143,207,208,209,211,210,143,207,208,209,0,143,0,0,207,208,211,210,143,207,208,209,143,0,211,0,0,210,211,224,224,224,224,224,143,207,208,209,211,210,143,207,208,209,211,210,143,207,208,209,211,210,143,207,208,209,143,207,208,208,211,209,209,209],"fc":[],"p":[[4,"TextureFormat"],[3,"Backends"],[3,"Features"],[3,"InstanceFlags"],[3,"DownlevelFlags"],[3,"ShaderStages"],[3,"TextureFormatFeatureFlags"],[3,"ColorWrites"],[3,"BufferUsages"],[3,"TextureUsages"],[3,"PipelineStatisticsTypes"],[3,"Buffer"],[4,"BindingResource"],[3,"BufferBinding"],[3,"Instance"],[4,"Option"],[3,"Adapter"],[8,"FnOnce"],[3,"Device"],[3,"Texture"],[3,"Surface"],[6,"ImageCopyTexture"],[3,"QueueWriteBufferView"],[15,"u8"],[15,"slice"],[3,"BufferViewMut"],[3,"BufferView"],[4,"TextureAspect"],[3,"CommandEncoder"],[3,"ComputePassDescriptor"],[3,"ComputePass"],[3,"RenderPass"],[15,"u32"],[3,"QuerySet"],[3,"RenderPassDescriptor"],[15,"u64"],[3,"Limits"],[15,"bool"],[8,"FnMut"],[6,"BufferAddress"],[6,"BufferSize"],[3,"ImageSubresourceRange"],[4,"Backend"],[4,"PowerPreference"],[8,"Clone"],[3,"RequestAdapterOptionsBase"],[3,"DownlevelCapabilities"],[4,"ShaderModel"],[4,"DeviceType"],[3,"AdapterInfo"],[4,"TextureViewDimension"],[3,"Id"],[4,"BlendFactor"],[4,"BlendOperation"],[3,"BlendComponent"],[3,"BlendState"],[3,"ColorTargetState"],[4,"PrimitiveTopology"],[4,"FrontFace"],[4,"Face"],[4,"ErrorFilter"],[4,"PolygonMode"],[3,"PrimitiveState"],[3,"SubmissionIndex"],[3,"MultisampleState"],[3,"BufferSlice"],[4,"ShaderSource"],[3,"ShaderModuleDescriptor"],[3,"TextureFormatFeatures"],[4,"AstcBlock"],[4,"AstcChannel"],[4,"LoadOp"],[4,"StoreOp"],[3,"Operations"],[3,"RenderPassTimestampWrites"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[3,"TextureViewDescriptor"],[3,"PipelineLayoutDescriptor"],[3,"SamplerDescriptor"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"VertexBufferLayout"],[3,"VertexState"],[3,"FragmentState"],[3,"RenderPipelineDescriptor"],[4,"MaintainBase"],[3,"StencilState"],[3,"ComputePassTimestampWrites"],[3,"DepthBiasState"],[3,"DepthStencilState"],[3,"ComputePipelineDescriptor"],[4,"IndexFormat"],[3,"BindGroupLayoutDescriptor"],[4,"StencilOperation"],[3,"RenderBundleEncoderDescriptor"],[3,"StencilFaceState"],[4,"SurfaceError"],[4,"CompareFunction"],[3,"RequestDeviceError"],[3,"CreateSurfaceError"],[4,"VertexStepMode"],[3,"BufferAsyncError"],[3,"VertexAttribute"],[4,"MapMode"],[4,"VertexFormat"],[4,"PresentMode"],[4,"CompositeAlphaMode"],[3,"PresentationTimestamp"],[3,"Color"],[4,"TextureDimension"],[3,"Origin2d"],[3,"Origin3d"],[3,"Extent3d"],[4,"AddressMode"],[4,"FilterMode"],[3,"PushConstantRange"],[3,"CommandBufferDescriptor"],[3,"RenderBundleDepthStencil"],[3,"ImageDataLayout"],[4,"BufferBindingType"],[4,"TextureSampleType"],[4,"StorageTextureAccess"],[4,"SamplerBindingType"],[4,"BindingType"],[3,"BindGroupLayoutEntry"],[3,"ImageCopyBufferBase"],[3,"ImageCopyTextureBase"],[4,"PredefinedColorSpace"],[3,"ImageCopyTextureTaggedBase"],[4,"SamplerBorderColor"],[4,"QueryType"],[4,"Dx12Compiler"],[4,"Gles3MinorVersion"],[4,"Ordering"],[6,"SurfaceConfiguration"],[6,"ImageCopyBuffer"],[8,"HalApi"],[3,"ExposedAdapter"],[3,"BindGroup"],[3,"BindGroupLayout"],[6,"BufferDescriptor"],[3,"BufferInitDescriptor"],[6,"CommandEncoderDescriptor"],[3,"ComputePipeline"],[3,"OpenDevice"],[6,"DeviceDescriptor"],[3,"Path"],[4,"Result"],[3,"PipelineLayout"],[6,"QuerySetDescriptor"],[3,"RenderBundleEncoder"],[3,"RenderPipeline"],[3,"Sampler"],[3,"ShaderModule"],[3,"ShaderModuleDescriptorSpirV"],[8,"HasRawWindowHandle"],[8,"HasRawDisplayHandle"],[4,"c_void"],[6,"TextureDescriptor"],[3,"Queue"],[3,"TextureView"],[8,"Default"],[3,"SurfaceCapabilities"],[3,"InstanceDescriptor"],[3,"Range"],[15,"i32"],[3,"CommandBuffer"],[3,"RenderBundle"],[3,"SurfaceTexture"],[8,"ExactSizeIterator"],[8,"PartialEq"],[8,"IntoIterator"],[6,"RenderBundleDescriptor"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[4,"Error"],[4,"SurfaceStatus"],[4,"RequestDeviceError"],[3,"InstanceError"],[3,"Instance"],[15,"str"],[3,"GlobalReport"],[15,"f32"],[8,"Hasher"],[8,"Hash"],[3,"Iter"],[3,"IterNames"],[8,"WasmNotSend"],[8,"Send"],[8,"UncapturedErrorHandler"],[3,"Box"],[6,"Maintain"],[8,"Future"],[6,"RequestAdapterOptions"],[6,"DynamicOffset"],[8,"RangeBounds"],[8,"Error"],[3,"String"],[8,"Copy"],[3,"TypeId"],[8,"Add"],[8,"Rem"],[8,"Sub"],[3,"DrawIndirect"],[3,"DrawIndexedIndirect"],[3,"DispatchIndirect"],[3,"DownloadBuffer"],[3,"StagingBelt"],[4,"Cow"],[13,"StorageTexture"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"Dxc"],[13,"Validation"],[13,"OutOfMemory"],[13,"Glsl"],[13,"Astc"],[13,"Float"],[8,"DeviceExt"],[8,"RenderEncoder"]]},\
"wgpu_core":{"doc":"This library safely implements WebGPU on native platforms. …","t":"GDRRRGAALLAAALLOOOOOOAAFAAAALAAAAALLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDDDDDDEDGNNNNENDENENNNDNNEEENNNNNNNNNENNNNNNNNNNNNNNNDNNNNNNNNNNNNDDNENNNNNNNNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNENNDDNNNNNNNNNNNNNNNENNNEDEDDDEDNNENENNENNNNNNNNENNENNNNNNNNENGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDENNNNENNNNEDDGDDDNEDDDDDEEDNENNNNNNNNNNNENNENNNNNNNENNNNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMALLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMLLLMLLLMMMMAMMMMMLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGCNGEEDDNNNNNDNDDNNNEENNRNDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLMAAMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMNNNNDNNNEENDDNNENNNDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMEDNNLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLMLLLLLLLFLLLLLMMLLLLLMLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLISKKKKKIDDDEMMMMMMLLLLLLLLMMMMMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLGGGGGGGGGRDGGGGGGGGGGGGGILLLLLLLLLLLLLLLLKLLLLLLKLKLQIIIDDGQLLLLLLLLKLLLKLLLKKLLLLLLLDENDEDNDNDNNNNNNENNNNNEGEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSNNNNEDDNEEENENNNNNNNNNNNDNNNGENNNNNNNNNNNNNNNNNNNDDNDDSDNNDDENNNNNNNNDDDNSSNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLMMMMLMLLMLLLLLMMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMNERNNNNNNNNNNEDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMDLLLLLLLLLLNNNNNNNDEGNGEDDDNEEEEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDGNIDDEDNSDEGEEDDEENNNNNNNNNNNNNNNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLMLLLLLLLMMMLLLLLLL","n":["Label","LifeGuard","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_VERTEX_BUFFERS","RawString","api","binding_model","borrow","borrow_mut","command","device","error","fmt","from","gfx_if_dx11_hidden","gfx_if_dx12_hidden","gfx_if_gles_hidden","gfx_if_metal_hidden","gfx_if_vulkan_hidden","gfx_select","global","hal_api","hal_label","hub","id","identity","instance","into","pipeline","present","registry","resource","storage","try_from","try_into","type_id","Empty","Metal","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_instance_from_hal","create_instance_from_hal","fmt","fmt","from","from","get_surface","get_surface","get_surface_mut","get_surface_mut","hub","hub","instance_as_hal","instance_as_hal","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ArrayUnsupported","BindError","BindGroup","BindGroupDescriptor","BindGroupDynamicBindingData","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntryError","BindGroupLayoutInner","BindGroupLayouts","BindingArrayLengthMismatch","BindingArrayPartialLengthMismatch","BindingArrayZeroLength","BindingRangeTooLarge","BindingResource","BindingSizeTooSmall","BindingTypeMaxCountError","BindingTypeMaxCountErrorKind","BindingZeroSize","BindingZone","BindingsNumMismatch","Buffer","BufferArray","BufferBinding","BufferRangeTooLarge","ConflictBinding","CreateBindGroupError","CreateBindGroupLayoutError","CreatePipelineLayoutError","DepthStencilAspect","Device","Device","Device","DuplicateBinding","DynamicBindingOutOfBounds","DynamicStorageBuffers","DynamicUniformBuffers","Entry","GetBindGroupLayoutError","InvalidBindGroupLayout","InvalidBindingIndex","InvalidBuffer","InvalidGroupIndex","InvalidLayout","InvalidPipeline","InvalidSampler","InvalidStorageTextureFormat","InvalidStorageTextureMipLevelCount","InvalidTexture","InvalidTextureDimension","InvalidTextureMultisample","InvalidTextureSampleType","InvalidTextureView","InvalidVisibility","LateMinBufferBindingSizeMismatch","MisalignedPushConstantRange","MismatchedDynamicOffsetCount","MissingBindingDeclaration","MissingBufferUsage","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingStages","MissingTextureUsage","MoreThanOnePushConstantRangePerStage","PartialRangeMatch","Pipeline","PipelineLayout","PipelineLayoutDescriptor","PushConstantRangeTooLarge","PushConstantUploadError","ResourceUsageConflict","SampleTypeFloatFilterableBindingMultisampled","SampledTextures","Sampler","SamplerArray","Samplers","SingleBindingExpected","Stage","StorageBuffers","StorageReadNotSupported","StorageTextureCube","StorageTextureReadWrite","StorageTextures","TextureView","TextureViewArray","TooLarge","TooManyBindings","TooManyBindings","TooManyGroups","Unaligned","UnalignedBufferOffset","UnalignedDynamicBinding","UniformBuffers","UnmatchedStages","WrongBindingType","WrongSamplerComparison","WrongSamplerFiltering","bind_group_layouts","binding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_size","buffer_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compact_index","count","entries","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_index","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kind","label","label","label","label","layout","life_guard","life_guard","life_guard","limit","offset","push_constant_ranges","resource","shader_size","size","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zone","actual","alignment","binding","binding","binding_range","buffer_size","expected","group","group","group","idx","idx","limit_name","maximum_dynamic_offset","offset","offset","actual","actual","actual","actual","actual","binding","binding","binding","binding","binding","binding","binding","binding","binding","buffer","buffer","expected","expected","expected","expected","given","layout_cmp","layout_dimension","layout_flt","layout_format","layout_multisampled","layout_sample_type","limit","min","mip_level_count","range","sampler_cmp","sampler_flt","size","view_dimension","view_format","view_format","view_samples","binding","binding","error","maximum","actual","bound","index","index","index","intersected","max","max","provided","range","actual","actual","actual","end_offset","idx","idx","idx","matched","missing","offset","range","unmatched","AlreadyStarted","AlreadyStopped","AttachmentErrorLocation","AttachmentSampleCountMismatch","AttachmentsDimensionMismatch","BakedCommands","BasePassRef","BeginOcclusionQuery","BeginPipelineStatisticsQuery","Beginning","Bind","Bind","BindGroupIndexOutOfRange","BindGroupIndexOutOfRange","BindingSizeTooSmall","BindingSizeTooSmall","BufferOffsetAlignment","BufferOverrun","BufferOverrun","BufferOverrun","Bundle","Clear","ClearError","Color","ColorAttachment","ColorAttachment","ColorAttachmentError","CommandBuffer","CommandEncoderError","ComputePass","ComputePassDescriptor","ComputePassError","ComputePassErrorInner","ComputePassTimestampWrites","CopyAspectNotOne","CopyDstMissingAspects","CopyError","CopyFromForbiddenTextureFormat","CopySide","CopySrcMissingAspects","CopyToForbiddenTextureFormat","CreateRenderBundleError","Depth","Destination","DestroyedBuffer","DestroyedBuffer","Device","Discard","Dispatch","Dispatch","DispatchError","Draw","Draw","DrawError","Encoder","Encoder","Encoder","Encoder","End","EndOcclusionQuery","EndPipelineStatisticsQuery","ExecuteBundle","ExecutionError","ExternalCopyToForbiddenTextureFormat","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","IncompatibleBindGroup","IncompatibleBindGroup","IncompatibleBundleReadOnlyDepthStencil","IncompatibleBundleTargets","IncompatiblePipelineRods","IncompatiblePipelineTargets","IncompatibleType","IndexBeyondLimit","IndirectBufferOverrun","IndirectBufferOverrun","IndirectCountBufferOverrun","InstanceBeyondLimit","Invalid","InvalidAttachment","InvalidBindGroup","InvalidBindGroup","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBuffer","InvalidBytesPerRow","InvalidCommandEncoder","InvalidCopySize","InvalidDepthOps","InvalidDepthStencilAttachmentFormat","InvalidDepthTextureExtent","InvalidDevice","InvalidDevice","InvalidDevice","InvalidDimensionExternal","InvalidDynamicOffsetCount","InvalidFormat","InvalidGroupSize","InvalidIndirectBuffer","InvalidMipLevel","InvalidPipeline","InvalidPipeline","InvalidPopDebugGroup","InvalidPopDebugGroup","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidQuerySet","InvalidRenderBundle","InvalidResolveSampleCounts","InvalidRowsPerImage","InvalidSampleCount","InvalidSampleCount","InvalidScissorRect","InvalidStencilOps","InvalidTexture","InvalidTexture","InvalidTextureAspect","InvalidTextureLayerRange","InvalidTextureLevelRange","InvalidTextureMipLevel","InvalidValuesOffset","InvalidViewportDepth","InvalidViewportRect","Load","LoadOp","MemoryInitFailure","MismatchedResolveTextureFormat","MissingAttachments","MissingBlendConstant","MissingBufferUsage","MissingBufferUsage","MissingBufferUsage","MissingClearTextureFeature","MissingCopyDstUsageFlag","MissingCopyDstUsageFlag","MissingCopySrcUsageFlag","MissingDownlevelFlags","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIndexBuffer","MissingOcclusionQuerySet","MissingPipeline","MissingPipeline","MissingRenderAttachmentUsageFlag","MissingTextureAspect","MissingTextureUsage","MissingVertexBuffer","MultiViewDimensionMismatch","MultiViewMismatch","NoValidTextureClearMode","NotRecording","Occlusion","OutOfBounds","OutOfMemory","Pass","PassChannel","PassErrorScope","PipelineStatistics","PopDebugGroup","PushConstants","PushConstants","QueryError","QueryOverrun","QueryReset","QueryUse","QueryUse","QueryUseError","Rect","RenderBundle","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderBundleError","RenderCommand","RenderCommandError","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPassError","RenderPassErrorInner","RenderPassTimestampLocation","RenderPassTimestampWrites","Resolve","ResolveError","ResourceUsageConflict","ResourceUsageConflict","SameSourceDestinationBuffer","SetBindGroup","SetIndexBuffer","SetPipelineCompute","SetPipelineRender","SetPushConstant","SetScissorRect","SetVertexBuffer","SetViewport","SimplifiedQueryType","Source","Store","StoreOp","SurfaceTextureDropped","TextureFormatsNotCopyCompatible","TextureOverrun","TextureViewIsNotRenderable","Timestamp","TooMany","Transfer","TransferError","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBufferOffset","UnalignedBytesPerRow","UnalignedCopyHeight","UnalignedCopyOriginX","UnalignedCopyOriginY","UnalignedCopySize","UnalignedCopyWidth","UnalignedFillSize","Unimplemented","Unimplemented","UnmatchedIndexFormats","UnspecifiedBytesPerRow","UnspecifiedRowsPerImage","UnsupportedResolveTargetFormat","UsageConflict","Use","UsedTwiceInsideRenderpass","VertexBeyondLimit","WriteTimestamp","beginning_of_pass_write_index","beginning_of_pass_write_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_ffi","channel","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_formats","commands","compute_ffi","default","default","default","default","depth","depth_stencil","depth_stencil_attachment","dummy","dynamic_offsets","end_of_pass_write_index","end_of_pass_write_index","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","fmt_pretty","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","h","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_finished","label","label","label","label","label","life_guard","life_guard","load_op","multiview","new","new","new","occlusion_query_set","parent","parent_id","parent_id","push_constant_data","query_set","query_set","read_only","render_ffi","resolve_target","sample_count","scope","scope","scope","set_index_buffer","set_index_buffer","source","source","source","source","source","source","source","source","source","source","source","source","stencil","store_op","string_data","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","w","x","y","index","resolve","buffer_size","end_offset","start_offset","subresource_array_layer_count","subresource_base_array_layer","subresource_base_mip_level","subresource_mip_level_count","subresource_range_aspects","texture_format","texture_layer_range","texture_level_range","given","limit","buffer_size","end_offset","index","max","offset","current","index","limit","buffer","index","index","index_limit","instance_limit","last_index","last_instance","last_vertex","pipeline","slot","slot","vertex_limit","indexed","indirect","indirect","pipeline","pipeline","active_query_index","new_query_index","query_index","query_index","query_set_size","query_type","set_type","actual","expected","index","max","actual_extent","actual_location","actual_location","actual_samples","begin_count_offset","buffer_size","bundle_depth","bundle_stencil","count","count_buffer_size","dst","dst","end_count_offset","end_offset","expected_extent","expected_location","expected_location","expected_samples","format","location","location","location","location","offset","pass_depth","pass_stencil","reason","src","src","buffer_end_offset","buffer_size","buffer_start_offset","end_query","end_query","query_set_size","start_query","start_query","stride","aspect","aspect","aspect","buffer_size","count","dimension","dst_format","end_offset","end_offset","format","format","format","level","requested","sample_count","side","side","src_format","start_offset","start_offset","texture_size","total","wgpu_render_bundle_draw","wgpu_render_bundle_draw_indexed","wgpu_render_bundle_draw_indexed_indirect","wgpu_render_bundle_draw_indirect","wgpu_render_bundle_insert_debug_marker","wgpu_render_bundle_pop_debug_group","wgpu_render_bundle_push_debug_group","wgpu_render_bundle_set_bind_group","wgpu_render_bundle_set_index_buffer","wgpu_render_bundle_set_pipeline","wgpu_render_bundle_set_push_constants","wgpu_render_bundle_set_vertex_buffer","wgpu_compute_pass_begin_pipeline_statistics_query","wgpu_compute_pass_dispatch_workgroups","wgpu_compute_pass_dispatch_workgroups_indirect","wgpu_compute_pass_end_pipeline_statistics_query","wgpu_compute_pass_insert_debug_marker","wgpu_compute_pass_pop_debug_group","wgpu_compute_pass_push_debug_group","wgpu_compute_pass_set_bind_group","wgpu_compute_pass_set_pipeline","wgpu_compute_pass_set_push_constant","wgpu_compute_pass_write_timestamp","wgpu_render_pass_begin_occlusion_query","wgpu_render_pass_begin_pipeline_statistics_query","wgpu_render_pass_draw","wgpu_render_pass_draw_indexed","wgpu_render_pass_draw_indexed_indirect","wgpu_render_pass_draw_indirect","wgpu_render_pass_end_occlusion_query","wgpu_render_pass_end_pipeline_statistics_query","wgpu_render_pass_execute_bundles","wgpu_render_pass_insert_debug_marker","wgpu_render_pass_multi_draw_indexed_indirect","wgpu_render_pass_multi_draw_indexed_indirect_count","wgpu_render_pass_multi_draw_indirect","wgpu_render_pass_multi_draw_indirect_count","wgpu_render_pass_pop_debug_group","wgpu_render_pass_push_debug_group","wgpu_render_pass_set_bind_group","wgpu_render_pass_set_blend_constant","wgpu_render_pass_set_index_buffer","wgpu_render_pass_set_pipeline","wgpu_render_pass_set_push_constants","wgpu_render_pass_set_scissor_rect","wgpu_render_pass_set_stencil_reference","wgpu_render_pass_set_vertex_buffer","wgpu_render_pass_set_viewport","wgpu_render_pass_write_timestamp","BufferMapPendingClosure","Device","Device","DeviceDescriptor","DeviceError","HostMap","ImplicitPipelineContext","ImplicitPipelineIds","IncompatibleColorAttachment","IncompatibleDepthStencilAttachment","IncompatibleMultiview","IncompatibleSampleCount","Invalid","InvalidDevice","Lost","MissingDownlevelFlags","MissingFeatures","OutOfMemory","Read","RenderBundle","RenderPassCompatibilityCheckType","RenderPassCompatibilityError","RenderPipeline","ResourceCreationFailed","SHADER_STAGE_COUNT","StuckGpu","UserClosures","WaitIdleError","Write","WrongDevice","WrongSubmissionIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","global","group_ids","group_ids","into","into","into","into","into","into","into","into","into","into","into","mappings","queue","resource","root_id","root_id","source","submissions","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","actual","actual","actual","actual","expected","expected","expected","expected","indices","ty","ty","ty","ty","Buffer","BufferStillMapped","DestroyedBuffer","DestroyedTexture","InvalidQueue","MemoryInitFailure","Queue","Queue","QueueSubmitError","QueueWriteError","StuckGpu","SubmittedWorkDoneClosure","SubmittedWorkDoneClosureC","SurfaceOutputDropped","SurfaceUnconfigured","TempResource","Texture","Transfer","Unmap","WrappedSubmissionIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","index","into","into","into","into","into","into","into","queue_id","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","CreateDeviceError","Device","FailedToCreateZeroBuffer","OutOfMemory","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_buffer_from_hal","fmt","fmt","from","from","from","into","into","is_valid","life_guard","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ContextError","ErrorFormatter","PrettyError","bind_group_label","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_label","buffer_label_with_key","cause","command_buffer_label","compute_pipeline_label","error","fmt","fmt","fmt_pretty","fmt_pretty","format_pretty_any","from","from","into","into","label","label","label_key","note","query_set_label","render_pipeline_label","sampler_label","source","string","texture_label","texture_label_with_key","texture_view_label","texture_view_label_with_key","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Global","GlobalReport","adapter_as_hal","adapter_downlevel_capabilities","adapter_drop","adapter_features","adapter_get_info","adapter_get_presentation_timestamp","adapter_get_texture_format_features","adapter_is_surface_supported","adapter_limits","adapter_request_device","bind_group_drop","bind_group_label","bind_group_layout_drop","bind_group_layout_label","borrow","borrow","borrow_mut","borrow_mut","buffer_destroy","buffer_drop","buffer_get_mapped_range","buffer_label","buffer_map_async","buffer_unmap","clear_backend","command_buffer_drop","command_buffer_label","command_encoder_clear_buffer","command_encoder_clear_texture","command_encoder_copy_buffer_to_buffer","command_encoder_copy_buffer_to_texture","command_encoder_copy_texture_to_buffer","command_encoder_copy_texture_to_texture","command_encoder_drop","command_encoder_finish","command_encoder_insert_debug_marker","command_encoder_pop_debug_group","command_encoder_push_debug_group","command_encoder_resolve_query_set","command_encoder_run_compute_pass","command_encoder_run_render_pass","command_encoder_write_timestamp","compute_pipeline_drop","compute_pipeline_get_bind_group_layout","compute_pipeline_label","create_adapter_from_hal","create_buffer_error","create_buffer_from_hal","create_device_from_hal","create_render_bundle_error","create_texture_error","create_texture_from_hal","device_as_hal","device_create_bind_group","device_create_bind_group_layout","device_create_buffer","device_create_command_encoder","device_create_compute_pipeline","device_create_pipeline_layout","device_create_query_set","device_create_render_bundle_encoder","device_create_render_pipeline","device_create_sampler","device_create_shader_module","device_create_shader_module_spirv","device_create_texture","device_destroy","device_downlevel_properties","device_drop","device_features","device_label","device_limits","device_lose","device_poll","device_start_capture","device_stop_capture","drop","enumerate_adapters","fmt","from","from","from_hal_instance","from_instance","generate_report","instance","instance_as_hal","instance_create_surface","instance_create_surface_metal","into","into","metal","new","pipeline_layout_drop","pipeline_layout_label","poll_all_devices","query_set_drop","query_set_label","queue_create_staging_buffer","queue_get_timestamp_period","queue_on_submitted_work_done","queue_submit","queue_validate_write_buffer","queue_write_buffer","queue_write_staging_buffer","queue_write_texture","render_bundle_drop","render_bundle_encoder_finish","render_bundle_label","render_pipeline_drop","render_pipeline_get_bind_group_layout","render_pipeline_label","request_adapter","sampler_drop","sampler_label","shader_module_drop","shader_module_label","surface_as_hal_mut","surface_configure","surface_drop","surface_get_capabilities","surface_get_current_texture","surface_present","surface_texture_discard","surfaces","surfaces","texture_as_hal","texture_create_view","texture_destroy","texture_drop","texture_label","texture_view_drop","texture_view_label","try_from","try_from","try_into","try_into","type_id","type_id","HalApi","VARIANT","create_instance_from_hal","get_surface","get_surface_mut","hub","instance_as_hal","Access","Hub","HubReport","Hubs","Root","adapters","adapters","bind_group_layouts","bind_group_layouts","bind_groups","bind_groups","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","command_buffers","command_buffers","compute_pipelines","compute_pipelines","devices","devices","fmt","from","from","from","from","generate_report","into","into","into","into","is_empty","pipeline_layouts","pipeline_layouts","query_sets","query_sets","render_bundles","render_bundles","render_pipelines","render_pipelines","samplers","samplers","shader_modules","shader_modules","staging_buffers","texture_views","texture_views","textures","textures","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AdapterId","BindGroupId","BindGroupLayoutId","BufferId","CommandBufferId","CommandEncoderId","ComputePassEncoderId","ComputePipelineId","DeviceId","EPOCH_MASK","Id","PipelineLayoutId","QuerySetId","QueueId","RenderBundleEncoderId","RenderBundleId","RenderPassEncoderId","RenderPipelineId","SamplerId","ShaderModuleId","StagingBufferId","SurfaceId","TextureId","TextureViewId","TypedId","backend","borrow","borrow_mut","clone","clone_into","cmp","compare","eq","equivalent","equivalent","equivalent","fmt","from","from_raw","hash","into","into_raw","into_raw","partial_cmp","to_owned","try_from","try_into","type_id","unzip","unzip","zip","zip","Filter","GlobalIdentityHandlerFactory","IdentityHandler","IdentityHandlerFactory","IdentityManager","IdentityManagerFactory","Input","Input","alloc","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","free","free","from","from","ids_are_generated_in_wgpu","ids_are_generated_in_wgpu","into","into","process","spawn","spawn","try_from","try_from","try_into","try_into","type_id","type_id","Adapter","AdapterInputs","DeviceLost","FailedLimit","GetSurfaceSupportError","HalSurface","IdSet","Instance","Internal","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidAdapter","InvalidSurface","InvalidSurface","InvalidSurface","IsSurfaceSupportedError","LimitsExceeded","Mask","NoGraphicsQueue","NotFound","OutOfMemory","RequestAdapterError","RequestAdapterOptions","RequestDeviceError","Surface","Unsupported","UnsupportedFeature","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_capabilities","into","into","into","into","into","into","into","into","into","into","into","is_surface_supported","label","life_guard","life_guard","metal","metal","name","new","parse_backends_from_comma_list","raw","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BLEND_CONSTANT","BindGroup","BlendFactorOnUnsupportedTarget","ColorAttachment","ColorState","ColorStateError","ComputePipeline","ComputePipelineDescriptor","ConservativeRasterizationNonFillPolygonMode","CreateComputePipelineError","CreateRenderPipelineError","CreateShaderModuleError","DepthStencilState","DepthStencilStateError","Device","Device","Device","FormatNotBlendable","FormatNotColor","FormatNotDepth","FormatNotMultisampled","FormatNotMultisampled","FormatNotRenderable","FormatNotRenderable","FormatNotStencil","FragmentState","Generation","Implicit","Implicit","ImplicitBindGroupCount","ImplicitLayoutError","IncompatibleFormat","Internal","Internal","InvalidGroupIndex","InvalidLayout","InvalidLayout","InvalidMinMaxBlendFactors","InvalidSampleCount","InvalidVertexAttributeOffset","InvalidWriteMask","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingIds","Naga","Parsing","Pipeline","PipelineExpectsShaderToUseDualSourceBlending","PipelineFlags","ProgrammableStageDescriptor","ReflectionError","RenderPipeline","RenderPipelineDescriptor","STENCIL_REFERENCE","ShaderError","ShaderExpectsPipelineToUseDualSourceBlending","ShaderLocationClash","ShaderModule","ShaderModuleDescriptor","ShaderModuleSource","Stage","Stage","StripIndexFormatForNonStripTopology","TooManyVertexAttributes","TooManyVertexBuffers","UnalignedShader","UnalignedVertexStride","Validation","VertexBufferLayout","VertexState","VertexStep","VertexStrideTooLarge","WRITES_DEPTH","WRITES_STENCIL","Wgsl","all","array_stride","attributes","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","default","depth_stencil","difference","empty","entry_point","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","label","label","label","label","label","layout","layout","life_guard","life_guard","life_guard","location","mode","module","multisample","multiview","not","primitive","remove","set","shader_bound_checks","source","source","source","source","source","source","stage","stage","stage","step_mode","stride","sub","sub_assign","symmetric_difference","targets","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vertex","pipeline","shader","binding","error","error","factor","given","given","given","group","index","index","limit","limit","limit","location","offset","size","stage","stage","stride","strip_index_format","target","topology","bind","group","limit","AlreadyAcquired","ConfigureSurfaceError","DESIRED_NUM_FRAMES","Device","Device","Invalid","InvalidSurface","InvalidViewFormat","MissingDownlevelFlags","NotConfigured","PreviousOutputExists","StillReferenced","StuckGpu","SurfaceError","SurfaceOutput","UnsupportedAlphaMode","UnsupportedFormat","UnsupportedPresentMode","UnsupportedQueueFamily","UnsupportedUsage","ZeroArea","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","source","source","status","texture_id","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","available","available","available","requested","requested","requested","Registry","borrow","borrow_mut","fmt","from","into","label_for_resource","try_from","try_into","type_id","unregister_locked","Aborted","AccessError","AlreadyDestroyed","AlreadyMapped","AlreadyMapped","ArrayLayerCount","Aspects","Buffer","BufferAccessError","BufferAccessResult","BufferCopy","BufferDescriptor","BufferMapAsyncStatus","BufferMapCallback","BufferMapCallbackC","BufferMapOperation","ContextLost","CreateBufferError","CreateQuerySetError","CreateSamplerError","CreateTextureError","CreateTextureViewError","DestroyError","Destroyed","Device","Device","Device","Device","Device","Dimension","Error","Failed","FormatReinterpretation","Invalid","Invalid","Invalid","InvalidAlignment","InvalidAnisotropy","InvalidArrayLayerCount","InvalidAspect","InvalidCompressedDimension","InvalidCubeTextureViewSize","InvalidCubemapArrayTextureDepth","InvalidCubemapTextureDepth","InvalidDepthDimension","InvalidDimension","InvalidDimensionUsages","InvalidFilterModeWithAnisotropy","InvalidFormatUsages","InvalidLodMaxClamp","InvalidLodMinClamp","InvalidMipLevelCount","InvalidMultisampledFormat","InvalidMultisampledStorageBinding","InvalidMultisampledTextureViewDimension","InvalidRange","InvalidSampleCount","InvalidSampleCount","InvalidTexture","InvalidTextureViewDimension","InvalidUsage","InvalidUsage","InvalidUsageFlags","InvalidViewFormat","LimitExceeded","MagFilter","MapAborted","MapAlreadyPending","MapAlreadyPending","MaxBufferSize","MinFilter","MipLevelCount","MipmapFilter","MissingBufferUsage","MissingDownlevelFlags","MissingDownlevelFlags","MissingFeatures","MissingFeatures","MissingFeatures","MultisampledDepthOrArrayLayer","MultisampledNotRenderAttachment","NegativeRange","None","NotMapped","NotMultipleOfBlockHeight","NotMultipleOfBlockWidth","OutOfBoundsOverrun","OutOfBoundsUnderrun","OutOfMemory","QuerySet","QuerySetDescriptor","RenderPass","Resource","Sampler","SamplerDescriptor","SamplerFilterErrorType","StagingBuffer","Success","TYPE","Texture","TextureClearMode","TextureDescriptor","TextureDimensionError","TextureErrorDimension","TextureView","TextureViewDescriptor","TextureViewDestroyError","TextureViewNotRenderableReason","TooManyArrayLayers","TooManyMipLevels","TooManyObjects","TooManyQueries","UnalignedOffset","UnalignedRange","UnalignedRangeSize","UnalignedSize","Usage","UsageMismatch","X","Y","Z","Zero","ZeroArrayLayerCount","ZeroCount","ZeroMipLevelCount","address_modes","anisotropy_clamp","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","default","dimension","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c","from_rust","host","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","label","label","label","label","life_guard","life_guard","life_guard","life_guard","life_guard","life_guard","life_guard","lod_max_clamp","lod_min_clamp","mag_filter","min_filter","mipmap_filter","range","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","end","index","index","max","min","offset","range_size","start","maximum","requested","count","maximum","anisotropic_clamp","filter_mode","filter_type","lod_max_clamp","lod_min_clamp","maximum","requested","depth","depth","dim","requested","requested","requested","requested_aspect","texture","texture","texture_format","total","total","view","view","clear_views","is_color","block_height","block_width","dim","format","format","given","height","limit","width","Storage","StorageReport","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","element_size","fmt","fmt","from","from","into","into","is_empty","num_error","num_occupied","num_vacant","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"wgpu_core"],[37,"wgpu_core::api"],[71,"wgpu_core::binding_model"],[465,"wgpu_core::binding_model::BindError"],[481,"wgpu_core::binding_model::CreateBindGroupError"],[519,"wgpu_core::binding_model::CreateBindGroupLayoutError"],[523,"wgpu_core::binding_model::CreatePipelineLayoutError"],[533,"wgpu_core::binding_model::PushConstantUploadError"],[545,"wgpu_core::command"],[1408,"wgpu_core::command::AttachmentErrorLocation"],[1410,"wgpu_core::command::ClearError"],[1421,"wgpu_core::command::ColorAttachmentError"],[1423,"wgpu_core::command::ComputePassErrorInner"],[1428,"wgpu_core::command::DispatchError"],[1431,"wgpu_core::command::DrawError"],[1443,"wgpu_core::command::PassErrorScope"],[1448,"wgpu_core::command::QueryUseError"],[1455,"wgpu_core::command::RenderCommandError"],[1459,"wgpu_core::command::RenderPassErrorInner"],[1488,"wgpu_core::command::ResolveError"],[1497,"wgpu_core::command::TransferError"],[1519,"wgpu_core::command::bundle_ffi"],[1531,"wgpu_core::command::compute_ffi"],[1542,"wgpu_core::command::render_ffi"],[1568,"wgpu_core::device"],[1741,"wgpu_core::device::RenderPassCompatibilityError"],[1754,"wgpu_core::device::queue"],[1859,"wgpu_core::device::resource"],[1888,"wgpu_core::error"],[1932,"wgpu_core::global"],[2072,"wgpu_core::hal_api"],[2079,"wgpu_core::hub"],[2146,"wgpu_core::id"],[2198,"wgpu_core::identity"],[2231,"wgpu_core::instance"],[2387,"wgpu_core::pipeline"],[2781,"wgpu_core::pipeline::ColorStateError"],[2783,"wgpu_core::pipeline::CreateRenderPipelineError"],[2805,"wgpu_core::pipeline::CreateShaderModuleError"],[2808,"wgpu_core::present"],[2871,"wgpu_core::present::ConfigureSurfaceError"],[2877,"wgpu_core::registry"],[2888,"wgpu_core::resource"],[3322,"wgpu_core::resource::BufferAccessError"],[3330,"wgpu_core::resource::CreateBufferError"],[3332,"wgpu_core::resource::CreateQuerySetError"],[3334,"wgpu_core::resource::CreateSamplerError"],[3339,"wgpu_core::resource::CreateTextureError"],[3341,"wgpu_core::resource::CreateTextureViewError"],[3355,"wgpu_core::resource::TextureClearMode"],[3357,"wgpu_core::resource::TextureDimensionError"],[3366,"wgpu_core::storage"]],"d":["","Information needed to decide when it’s safe to free some …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Dispatch on an <code>Id</code>’s backend to a backend-generic method.","","","","Allocating resource ids, and tracking the resources they …","","","","Calls <code>U::from(self)</code>.","","Presentation.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Describes a group of bindings and the resources to be …","","Bindable resource and the slot to bind it to.","Bind group layout.","Describes a <code>BindGroupLayout</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a pipeline layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Debug label of the bind group.","Debug label of the bind group layout.","Debug label of the pipeine layout.","The <code>BindGroupLayout</code> that corresponds to this bind group.","","","","","","Set of push constant ranges this pipeline uses. Each …","Resource to attach to the bindingescribes an attachment location in words.","","","","","","","","","","","","","","","","","","","Clear the output attachment with the clear color. Clearing …","Error encountered while attempting a clear.","","","","","","","","","Error encountered when performing a compute pass.","Error encountered when performing a compute pass.","Describes the writing of timestamp values in a compute …","","","Error encountered while attempting to do a copy on a …","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","Discards the content of the render target.","","","","","","Error validating a draw call.","","","","","","","","","Error type returned from <code>RenderBundleEncoder::new</code> if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not clear output attachment.","Operation to perform to the output attachment at the start …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes an individual channel within a render pass, such …","","","","","","Error encountered when dealing with queries","","","","","Error encountered while trying to use queries","","","","","Describes a <code>RenderBundleEncoder</code>.","Error encountered when finishing recording a render bundle.","","Error encountered when encoding a render command. This is …","","Describes a color attachment to a render pass.","Describes a depth/stencil attachment to a render pass.","Describes the attachments of a render pass.","Error encountered when performing a render pass.","Error encountered when performing a render pass.","Location to write a timestamp to (beginning or end of the …","Describes the writing of timestamp values in a render pass.","","Error encountered while trying to resolve a query.","","","","","","","","","","","","","","Store the result of the renderpass.","Operation to perform to the output attachment at the end …","","","","","","","","Error encountered while attempting a data transfer.","","","","","","","","","","","","","","","","","","","","","","The index of the query set at which a start timestamp of …","The index of the query set at which a start timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What operations will be performed on this color attachment.","If load_op is <code>LoadOp::Clear</code>, the attachment will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color attachments of the render pass.","The formats of the color attachments that this render …","","","","","","","What operations will be performed on the depth part of the …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","","","The index of the query set at which an end timestamp of …","The index of the query set at which an end timestamp of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Debug label of the render bundle encoder.","","","","","","Operation to perform to the output attachment at the start …","If this render bundle will rendering to multiple array …","","","","Defines where the occlusion query results will be stored …","","","","","The query set to write the timestamps to.","The query set to write the timestamp to.","If true, the relevant channel is not changed by a …","","The view that will receive the resolved output if …","Sample count this render bundle is capable of rendering to.","","","","","","","","","","","","","","","","","","What operations will be performed on the stencil part of …","Operation to perform to the output attachment at the end …","","Defines where and when timestamp values will be written …","Defines where and when timestamp values will be written …he view to use as an attachment.","The view to use as an attachment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","Safety","Safety","","","Safety","","","","","","Safety","","Safety","Safety","","Safety","","","","","","","","","","Safety","Safety","","","","","","Safety","Safety","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A texture or buffer to be freed soon.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Safety","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure describing a logical device. Some members are …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","Safety","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","Assign <code>id_in</code> an error with the given <code>label</code>.","Safety","Safety","","","","","","","","","","","","Safety","","","","","","","","","Check <code>device_id</code> for freeable resources and completed …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Safety","","","Safety","","Safety","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Poll all devices on all backends.","","","","","","","","","","","","","","","Get an ID of one of the bind group layouts. The ID adds a …","","","","","","","Safety","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","Type system for enforcing the lock order on <code>Hub</code> fields.","All the resources for a particular backend in a <code>Global</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a wgpu object.","","","","","","","","","","","","","","Trait carrying methods for direct <code>Id</code> access.","","","","","","","","","","","","","Returns the argument unchanged.","Safety","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The type of filter this factory constructs.","A factory that can build <code>IdentityHandler</code>s for all resource …","A type that can build true ids from proto-ids, and free …","A type that can produce <code>IdentityHandler</code> filters for ids of …","A simple structure to allocate <code>Id</code> identifiers.","A global identity handler factory based on <code>IdentityManager</code>.","","The type of proto-id consumed by this filter, to produce a …","Allocate a fresh, never-before-seen id with the given …","","","","","","","","Free the true id <code>id</code>.","Free <code>id</code>. It will never be returned from <code>alloc</code> again.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Given a proto-id value <code>id</code>, return a true id for <code>backend</code>.","Create an <code>IdentityHandler&lt;I&gt;</code> implementation that can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error when requesting a device from the adaptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Generates a set of backends from a comma separated list of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a compute pipeline.","","","","","","","","","","","","","","","","","","Describes fragment processing in a render pipeline.","","","","Number of implicit bind groups derived at pipeline …","","","","","","","","","","","","","","","","","","","","","","Describes a programmable pipeline stage.","","","Describes a render (graphics) pipeline.","","","","","","","","","","","","","","","","Describes how the vertex buffer is interpreted.","Describes the vertex process in a render pipeline.","How a render pipeline will retrieve attributes from a …","","","","","Get a flags value with all known bits set.","The stride, in bytes, between elements of this buffer.","The list of attributes which comprise a single vertex.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The effect of draw calls on the depth and stencil aspects …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The name of the entry point in the compiled shader. There …","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The fragment processing state for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","","","","Whether the buffer is indexed by vertex number or instance …","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The properties of the pipeline at the primitive assembly …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","The compiled compute stage and its entry point.","The compiled vertex stage and its entry point.","The compiled fragment stage and its entry point.","How often this vertex buffer is “stepped” forward.","The byte stride in the buffer between one attribute value …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The effect of draw calls on the color aspect of the output …","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The vertex processing state for this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Unregister the resource at <code>id</code>.","Mapping was aborted (by unmapping or destroying the buffer …","","","The buffer is already mapped.","","","","","","","","","The status code provided to the buffer mapping callback.","","","","The context is Lost.","","","","","","","","","","","","","","An unknown error.","","","The buffer is in an invalid state.","","","The range isn’t properly aligned.","","","","","","","","","","","","","","","","","","","The range isn’t fully contained in the buffer.","","","","","","","Incompatible usage flags.","","","","","Mapping was already requested.","","","","","","","","","","AddressMode::ClampToBorder requires feature …","","","","","","","","","","","","","","","","","Describes a <code>Sampler</code>","","A temporary buffer, consumed by the command that uses it.","The Buffer is sucessfully mapped, <code>get_mapped_range</code> can be …","","","","","","","","Describes a <code>TextureView</code>.","","","","","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","Must be at least 1. If this is not 1, all filter modes …","Border color to use when address_mode is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is enabled, this is a comparison sampler using the …","","The dimension of the texture view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the texture view, or <code>None</code> for the same format as …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Debug label of the texture view.","Debug label of the sampler.","","","","","","","","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","How to filter the texture when it needs to be minified …","How to filter between mip map levels","Range within the texture that is accessible via this view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A table of <code>T</code> values indexed by the id type <code>I</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,9,10,18,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,20,0,0,20,0,20,31,31,0,20,19,0,0,0,20,19,20,27,20,32,23,23,19,0,27,19,20,33,20,33,20,20,20,20,20,20,20,20,19,0,27,32,20,20,18,18,27,28,20,27,28,21,0,0,27,0,20,18,23,31,31,23,20,21,23,20,18,18,23,31,31,28,19,27,27,28,20,32,23,28,20,20,20,29,24,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,34,30,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,34,22,25,26,29,30,34,29,29,29,30,30,30,34,34,34,18,18,19,19,20,20,21,21,22,22,23,24,25,26,27,27,28,28,29,38,30,31,32,32,39,33,33,34,34,20,27,45,267,47,18,18,18,19,19,20,20,21,22,23,24,25,26,27,27,27,28,29,38,30,31,32,39,33,34,34,29,30,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,22,45,25,26,29,25,45,47,38,22,30,29,24,34,30,18,19,20,27,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,18,19,20,21,22,27,28,32,33,34,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,45,267,47,18,19,20,21,22,23,24,25,26,27,28,29,38,30,31,32,39,33,34,22,268,269,269,270,270,270,268,268,269,270,269,270,269,270,269,270,271,272,273,274,275,276,275,277,278,279,280,281,282,283,284,273,271,272,274,275,276,282,279,283,280,277,278,276,273,281,284,282,283,284,279,278,280,277,285,286,285,286,287,288,288,289,290,289,290,287,289,290,291,292,293,294,294,291,292,291,292,294,294,293,66,66,0,78,78,0,0,85,85,73,58,78,58,61,57,60,67,54,67,81,85,68,0,76,51,78,0,0,0,0,0,0,0,0,81,81,0,81,0,81,81,0,76,80,52,61,78,69,58,85,0,78,85,0,58,65,78,82,73,85,85,85,0,81,0,0,0,57,60,78,78,61,61,66,60,58,78,78,60,84,78,58,61,54,58,65,81,81,54,81,78,78,81,54,58,81,81,61,77,57,58,81,58,61,58,78,58,61,65,78,61,78,81,51,81,61,78,54,81,81,54,54,81,78,61,61,68,0,81,78,78,60,58,61,67,54,54,81,81,58,78,81,58,78,60,78,57,60,81,54,61,60,78,78,54,84,64,66,78,85,0,0,64,85,58,61,0,67,85,58,78,0,0,0,0,0,0,0,78,0,0,0,0,0,0,0,0,0,65,0,58,78,81,85,85,85,85,85,85,85,85,0,80,69,0,78,81,81,78,64,77,82,0,54,61,81,81,81,81,81,81,81,54,52,61,60,81,81,78,61,65,66,60,85,55,74,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,71,70,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,75,50,83,0,50,56,63,75,72,50,75,88,83,55,74,50,55,57,60,64,68,69,70,71,72,73,74,75,50,50,50,55,55,55,57,57,57,60,60,60,64,64,64,68,68,68,69,69,69,70,70,70,73,73,73,74,74,74,90,91,50,88,51,51,52,52,53,53,54,54,55,56,57,57,58,58,59,59,60,60,61,61,63,64,65,65,66,66,67,67,68,69,70,71,72,73,74,75,76,76,77,77,78,78,79,79,80,81,81,82,82,83,84,84,85,85,52,53,58,59,61,65,78,79,81,85,95,90,91,295,94,50,88,51,51,52,53,54,55,56,57,57,58,58,58,58,58,58,58,58,59,60,60,61,61,61,63,64,64,65,65,65,65,66,67,68,69,70,71,72,73,74,75,76,77,78,78,78,78,78,78,78,78,78,78,78,79,80,81,81,81,82,82,82,83,84,85,63,50,68,69,73,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,94,50,56,75,83,95,94,70,50,90,91,88,75,88,90,91,83,55,74,70,0,71,50,53,59,79,91,88,51,53,57,58,59,60,61,65,78,79,81,82,72,70,83,56,75,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,51,52,53,54,57,58,59,60,61,65,66,67,76,77,78,79,81,82,84,85,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,95,90,91,295,94,50,88,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,71,72,63,63,63,296,296,297,297,297,298,298,299,299,300,300,298,299,301,301,302,302,303,303,302,304,305,304,306,307,308,309,310,309,310,311,306,311,310,311,312,312,313,312,313,314,314,315,316,315,317,317,318,318,319,319,320,320,321,321,322,323,324,324,323,322,325,326,322,323,320,320,321,321,327,327,328,325,326,323,324,324,328,325,326,329,329,329,330,329,330,330,329,329,331,332,333,334,335,336,337,334,336,331,332,333,338,335,339,334,336,337,334,336,336,338,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,0,0,0,0,0,92,92,92,92,43,0,43,0,0,43,116,117,0,0,117,43,0,115,0,0,116,43,115,174,115,116,117,92,120,118,43,42,41,119,174,115,116,117,92,120,118,43,42,41,119,115,116,117,92,118,43,42,41,119,115,116,117,92,118,43,42,41,119,120,116,116,116,116,115,115,116,117,92,92,118,118,43,43,42,42,41,41,119,174,115,115,116,117,92,120,118,43,43,42,41,119,0,174,119,174,115,116,117,92,120,118,43,42,41,119,120,0,0,174,119,115,120,115,116,117,92,118,43,42,41,119,115,92,118,43,42,41,174,115,116,117,92,120,118,43,42,41,119,174,115,116,117,92,120,118,43,42,41,119,174,115,116,117,92,120,118,43,42,41,119,340,341,342,343,340,341,342,343,340,340,341,342,343,126,125,125,125,0,124,124,125,0,0,125,0,0,125,125,0,126,124,125,0,128,129,122,126,123,124,125,128,129,122,126,123,124,125,128,122,123,124,125,122,123,124,125,122,126,123,123,124,124,125,125,128,129,122,126,123,124,124,124,124,125,125,125,129,129,122,128,129,122,126,123,124,125,122,124,125,122,123,124,125,123,124,125,128,129,122,126,123,124,125,128,129,122,126,123,124,125,128,129,122,126,123,124,125,128,0,0,132,132,133,132,133,132,132,132,133,132,132,133,132,132,133,132,133,133,132,132,132,133,132,133,132,133,132,0,0,0,40,40,40,138,40,138,40,40,138,40,40,40,138,138,344,138,0,40,138,40,138,40,138,138,40,40,40,40,138,138,40,40,40,40,138,40,138,40,138,40,138,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,187,16,187,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,187,16,187,16,16,16,16,16,16,16,16,187,187,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,187,16,16,16,16,16,16,16,16,187,16,187,16,187,0,46,46,46,46,46,46,0,0,0,0,0,17,208,17,208,17,208,345,17,346,208,345,17,346,208,17,208,17,208,17,208,17,208,208,345,17,346,208,17,345,17,346,208,208,17,208,17,208,17,208,17,208,17,208,17,208,17,17,208,17,208,345,17,346,208,345,17,346,208,345,17,346,208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,214,209,209,209,209,209,209,214,209,214,209,244,0,0,0,0,0,0,347,213,213,140,213,140,213,213,140,347,213,213,140,15,140,213,140,347,244,140,213,140,213,140,213,140,0,0,216,0,0,0,185,0,216,0,154,202,216,154,202,198,0,216,185,216,198,216,0,0,0,0,202,216,14,13,217,185,215,11,154,202,216,147,198,14,13,217,185,215,11,154,202,216,147,198,215,154,202,216,147,198,215,154,202,216,147,198,11,11,215,215,154,154,202,202,216,216,147,147,198,198,14,13,217,185,215,11,154,202,216,216,147,198,13,14,13,217,185,215,11,154,202,216,147,198,217,13,13,217,13,11,11,11,0,14,216,215,154,202,216,147,198,215,154,202,216,147,198,14,13,217,185,215,11,154,202,216,147,198,14,13,217,185,215,11,154,202,216,147,198,14,13,217,185,215,11,154,202,216,147,198,220,223,230,230,230,0,0,0,230,0,0,0,230,0,237,224,230,228,228,229,228,229,228,229,229,0,237,224,230,0,0,228,224,230,237,224,230,228,230,230,228,224,230,237,230,223,180,237,223,230,0,0,223,0,0,220,0,230,230,0,0,0,224,230,230,230,230,230,230,237,0,0,0,230,220,220,180,220,225,225,220,220,220,220,220,220,220,220,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,226,179,221,222,223,173,224,225,226,227,177,228,229,230,220,231,179,221,222,223,173,224,225,226,227,177,228,229,230,220,231,220,220,231,177,220,220,222,220,220,220,220,220,179,233,221,221,221,237,237,222,223,223,173,224,224,238,225,226,227,177,228,228,229,229,230,230,220,220,220,220,220,231,239,177,180,179,233,221,237,237,237,237,237,222,223,223,223,173,224,224,224,224,238,225,226,227,177,228,229,230,230,230,230,230,230,230,220,231,239,220,220,220,220,220,220,220,221,220,220,220,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,220,220,220,220,220,233,179,221,173,177,173,177,233,238,239,237,231,222,177,177,220,177,220,220,179,221,237,223,224,230,221,173,226,227,225,231,220,220,220,227,179,221,222,223,173,224,225,226,227,177,228,229,230,220,231,221,237,223,224,228,229,230,220,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,180,179,233,221,237,222,223,173,224,238,225,226,227,177,228,229,230,220,231,239,220,177,348,348,349,350,351,352,353,354,355,349,355,356,353,354,355,357,357,349,350,351,356,358,352,358,359,359,359,204,0,0,204,200,204,200,200,200,204,200,204,200,0,0,200,200,200,200,200,200,204,200,203,204,200,203,204,200,204,200,204,204,200,200,203,204,204,200,200,200,200,203,204,200,203,204,200,203,203,204,200,204,200,204,200,203,204,200,203,204,200,203,360,361,362,360,361,362,0,245,245,245,245,245,245,245,245,245,245,258,248,159,258,127,252,252,0,0,0,259,0,0,0,0,0,258,0,0,0,0,0,0,127,127,248,251,255,256,252,258,127,253,258,127,159,258,255,253,253,251,253,253,253,251,251,251,255,251,255,255,251,251,251,253,258,250,251,253,253,248,251,258,251,250,254,127,258,127,248,254,252,254,127,248,251,251,255,256,250,251,127,259,127,250,250,127,127,253,0,0,259,0,0,0,0,0,258,243,0,0,0,0,0,0,0,0,0,253,253,255,256,127,127,127,248,252,248,249,249,249,250,253,256,253,178,178,178,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,264,161,127,248,249,250,251,206,252,253,207,178,254,255,256,159,127,248,249,250,251,206,252,253,207,178,254,255,256,159,178,206,206,257,206,178,206,206,206,258,127,127,248,248,259,260,249,250,250,251,251,206,252,252,261,253,253,207,207,178,262,254,255,255,256,256,263,159,159,206,264,257,161,135,265,258,127,127,248,248,248,248,259,260,249,250,251,251,251,251,206,252,261,253,207,178,262,254,255,255,255,256,256,256,263,159,257,257,161,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,243,265,206,178,243,135,265,260,261,262,263,178,178,178,178,178,206,127,248,251,255,256,127,248,249,250,251,206,252,253,207,178,254,255,256,159,127,248,250,251,252,253,207,255,256,159,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,264,257,161,135,265,258,127,248,259,260,249,250,251,206,252,261,253,207,178,262,254,255,256,263,159,264,363,364,365,365,364,366,367,363,368,368,369,369,370,370,370,371,371,372,372,373,374,375,376,377,375,378,379,380,378,376,377,379,380,381,381,382,383,384,383,382,384,382,384,383,0,0,266,247,266,247,266,266,266,266,266,247,266,247,266,247,266,266,266,266,266,266,247,266,247,266,247],"f":[0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[[1,2],3],[[]],0,0,0,0,0,0,0,0,[[[5,[4]],6],[[5,[4]]]],0,0,0,0,[[]],0,0,0,0,0,[[],7],[[],7],[[],8],0,0,[[]],[[]],[[]],[[]],[9,9],[10,10],[[]],[[]],[4,11],[4,11],[[9,2],[[7,[12]]]],[[10,2],[[7,[12]]]],[[]],[[]],[13,[[5,[[14,[9]]]]]],[13,[[5,[[14,[10]]]]]],[13,[[5,[[14,[9]]]]]],[13,[[5,[[14,[10]]]]]],[[[16,[15]]],[[17,[9,15]]]],[[[16,[15]]],[[17,[10,15]]]],[11,5],[11,5],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[29,29],35],[[30,30],35],[[34,34],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[18,2],3],[[18,2],3],[[19,2],3],[[19,2],3],[[20,2],3],[[20,2],3],[[21,2],3],[[21,2],3],[[22,2],3],[[22,2],3],[[23,2],3],[[24,2],3],[[25,2],3],[[26,2],3],[[27,2],3],[[27,2],3],[[28,2],3],[[28,2],3],[[29,2],3],[[[38,[[0,[36,37]]]],2],3],[[30,2],3],[[31,2],3],[[32,2],3],[[32,2],3],[[39,2],3],[[33,2],3],[[33,2],3],[[34,2],3],[[34,2],3],[[20,40]],[[27,40]],[[]],[[]],[[]],[41,18],[42,18],[[]],[[]],[43,19],[[]],[43,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,27],[43,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[29,44]],[[30,44]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[45,[37]]],4],0,0,0,0,[[[45,[37]]],1],[[[47,[46]]],1],[[[38,[37]]],1],0,0,0,0,0,0,[18,[[5,[48]]]],[19,[[5,[48]]]],[20,[[5,[48]]]],[27,[[5,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[[[63,[62]]],[[63,[62]]]],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[[[70,[62]]],[[70,[62]]]],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[[[83,[62]]],[[83,[62]]]],[84,84],[85,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],50],[[],56],[[],[[63,[86]]]],[[],75],0,0,0,[87,88],0,0,0,[[50,50],35],[[55,55],35],[[57,57],35],[[60,60],35],[[64,64],35],[[68,68],35],[[69,69],35],[[[70,[89]],[70,[89]]],35],[[71,71],35],[[72,72],35],[[73,73],35],[[74,74],35],[[75,75],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[90,2],3],[[91,2],3],[[50,2],3],[[88,2],3],[[51,2],3],[[51,2],3],[[52,2],3],[[52,2],3],[[53,2],3],[[53,2],3],[[54,2],3],[[54,2],3],[[55,2],3],[[56,2],3],[[57,2],3],[[57,2],3],[[58,2],3],[[58,2],3],[[59,2],3],[[59,2],3],[[60,2],3],[[60,2],3],[[61,2],3],[[61,2],3],[[[63,[36]],2],3],[[64,2],3],[[65,2],3],[[65,2],3],[[66,2],3],[[66,2],3],[[67,2],3],[[67,2],3],[[68,2],3],[[69,2],3],[[[70,[36]],2],3],[[71,2],3],[[72,2],3],[[73,2],3],[[74,2],3],[[75,2],3],[[76,2],3],[[76,2],3],[[77,2],3],[[77,2],3],[[78,2],3],[[78,2],3],[[79,2],3],[[79,2],3],[[80,2],3],[[81,2],3],[[81,2],3],[[82,2],3],[[82,2],3],[[[83,[36]],2],3],[[84,2],3],[[84,2],3],[[85,2],3],[[85,2],3],[[52,40]],[[53,40]],[[58,40]],[[59,40]],[[61,40]],[[65,40]],[[78,40]],[[79,40]],[[81,40]],[[85,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,51],[[]],[[]],[[]],[[]],[[]],[34,57],[[]],[32,58],[84,58],[[]],[41,58],[57,58],[28,58],[66,58],[42,58],[[]],[34,60],[[]],[92,61],[28,61],[[]],[[]],[93,64],[[]],[84,65],[67,65],[66,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,78],[61,78],[66,78],[77,78],[43,78],[60,78],[84,78],[41,78],[32,78],[92,78],[[]],[[]],[[]],[54,81],[41,81],[[]],[81,82],[84,82],[[]],[[]],[[]],0,[[50,44]],[[68,44]],[[69,44]],[[73,44]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[94,[46]]],35],[[[94,[46]]],4],0,0,0,0,[[[95,[46]]],1],[[[94,[46]]],1],0,0,[[96,56],90],[[96,75],91],[[50,87,[5,[[0,[0]]]]],[[7,[88,51]]]],0,[88,87],[90,96],[91,96],0,0,0,0,0,0,0,0,0,0,[[91,97,98,99,[5,[100]]]],[[88,97,98,99,[5,[100]]]],[51,[[5,[48]]]],[53,[[5,[48]]]],[57,[[5,[48]]]],[58,[[5,[48]]]],[59,[[5,[48]]]],[60,[[5,[48]]]],[61,[[5,[48]]]],[65,[[5,[48]]]],[78,[[5,[48]]]],[79,[[5,[48]]]],[81,[[5,[48]]]],[82,[[5,[48]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[88,101,101,101,101]],[[88,101,101,101,102,101]],[[88,97,99]],[[88,97,99]],[[88,103]],[88],[[88,103]],[[88,101,104,105,106]],[[88,97,98,99,[5,[100]]]],[[88,107]],[[88,108,101,101,109]],[[88,101,97,99,[5,[100]]]],[[90,110,101]],[[90,101,101,101]],[[90,97,99]],[90],[[90,103,101]],[90],[[90,103,101]],[[90,101,104,105,106]],[[90,111]],[[90,101,101,109]],[[90,110,101]],[[91,101]],[[91,110,101]],[[91,101,101,101,101]],[[91,101,101,101,102,101]],[[91,97,99]],[[91,97,99]],[91],[91],[[91,112,106]],[[91,103,101]],[[91,97,99,101]],[[91,97,99,97,99,101]],[[91,97,99,101]],[[91,97,99,97,99,101]],[91],[[91,103,101]],[[91,101,104,105,106]],[[91,113]],[[91,97,98,99,[5,[100]]]],[[91,107]],[[91,108,101,101,109]],[[91,101,101,101,101]],[[91,101]],[[91,101,97,99,[5,[100]]]],[[91,114,114,114,114,114,114]],[[91,110,101]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[116,116],[117,117],[92,92],[118,118],[43,43],[42,42],[41,41],[119,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],120],[[116,116],35],[[],35],[[],35],[[],35],[[115,2],3],[[115,2],3],[[116,2],3],[[117,2],3],[[92,2],3],[[92,2],3],[[118,2],3],[[118,2],3],[[43,2],3],[[43,2],3],[[42,2],3],[[42,2],3],[[41,2],3],[[41,2],3],[[119,2],3],[[]],[[]],[43,115],[[]],[[]],[[]],[[]],[[]],[121,43],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[115,[[5,[48]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[122,122],[123,123],[124,124],[125,125],[[]],[[]],[[]],[[]],[[122,2],3],[[[126,[[0,[36,37]]]],2],3],[[123,2],3],[[123,2],3],[[124,2],3],[[124,2],3],[[125,2],3],[[125,2],3],[[]],[[]],[[]],[[]],[[]],[81,124],[43,124],[[]],[54,124],[127,125],[43,125],[[]],[128,129],[[[131,[130]]],129],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[124,[[5,[48]]]],[125,[[5,[48]]]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,[[]],[[]],[[]],[[]],[132,132],[[]],[[[133,[46]],87,134],[[135,[46]]]],[[132,2],3],[[132,2],3],[[]],[[]],[43,132],[[]],[[]],[[[133,[46]]],35],[[[133,[46]]],1],[132,[[5,[48]]]],[[]],[[],49],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,[[40,104]],[[40,136]],[[]],[[]],[[]],[[]],[[40,97]],[[40,97,4]],0,[[40,137]],[[40,111]],[[40,48]],[[138,2],3],[[138,2],3],[40],[[138,40]],[[139,[16,[140]],48]],[[]],[[]],[[]],[[]],[[40,4,4]],0,0,[[40,141]],[[40,110]],[[40,107]],[[40,142]],[138,[[5,[48]]]],0,[[40,143]],[[40,143,4]],[[40,144]],[[40,144,4]],[[],49],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,[[[16,[15]],145,130]],[[[16,[15]],145],[[7,[146,147]]]],[[[16,[15]],145]],[[[16,[15]],145],[[7,[148,147]]]],[[[16,[15]],145],[[7,[149,147]]]],[[[16,[15]],145],[[7,[150,147]]]],[[[16,[15]],145,151],[[7,[152,147]]]],[[[16,[15]],145,153],[[7,[35,154]]]],[[[16,[15]],145],[[7,[155,147]]]],[[[16,[15]],145,156,[5,[157]],[158,[15,87]]]],[[[16,[15]],104]],[[[16,[15]],104],49],[[[16,[15]],136]],[[[16,[15]],136],49],[[]],[[]],[[]],[[]],[[[16,[15]],97],[[7,[159]]]],[[[16,[15]],97,35]],[[[16,[15]],97,99,[5,[99]]],[[7,[127]]]],[[[16,[15]],97],49],[[[16,[15]],97,[160,[99]],161],162],[[[16,[15]],97],162],[[[16,[15]]]],[[[16,[15]],137]],[[[16,[15]],137],49],[[[16,[15]],96,97,99,[5,[100]]],[[7,[54]]]],[[[16,[15]],96,143,163],[[7,[54]]]],[[[16,[15]],96,97,99,97,99,99],[[7,[82]]]],[[[16,[15]],96,164,165,166],[[7,[82]]]],[[[16,[15]],96,165,164,166],[[7,[82]]]],[[[16,[15]],96,165,165,166],[[7,[82]]]],[[[16,[15]],96]],[[[16,[15]],96,[168,[167]]]],[[[16,[15]],96,4],[[7,[84]]]],[[[16,[15]],96],[[7,[84]]]],[[[16,[15]],96,4],[[7,[84]]]],[[[16,[15]],96,110,101,101,97,99],[[7,[65]]]],[[[16,[15]],96,90],[[7,[59]]]],[[[16,[15]],96,91],[[7,[79]]]],[[[16,[15]],96,110,101],[[7,[65]]]],[[[16,[15]],111]],[[[16,[15]],111,101,[158,[15,136]]]],[[[16,[15]],111],49],[[[16,[15]],[169,[46]],[158,[15,145]]],145],[[[16,[15]],[158,[15,97]],167]],[[[16,[15]],87,134,[158,[15,97]]]],[[[16,[15]],145,[170,[46]],156,[5,[157]],[158,[15,87]]]],[[[16,[15]],[158,[15,112]],167]],[[[16,[15]],[158,[15,143]],167]],[[[16,[15]],87,171,[158,[15,143]]]],[[[16,[15]],87,130]],[[[16,[15]],87,25,[158,[15,104]]]],[[[16,[15]],87,26,[158,[15,136]]]],[[[16,[15]],87,134,[158,[15,97]]]],[[[16,[15]],87,[172,[167]],[158,[15,96]]]],[[[16,[15]],87,173,[158,[15,111]],[5,[[174,[15]]]]]],[[[16,[15]],87,29,[158,[15,175]]]],[[[16,[15]],87,176,[158,[15,110]]]],[[[16,[15]],87,50]],[[[16,[15]],87,177,[158,[15,107]],[5,[[174,[15]]]]]],[[[16,[15]],87,178,[158,[15,142]]]],[[[16,[15]],87,179,180,[158,[15,181]]]],[[[16,[15]],87,179,[183,[[182,[101]]]],[158,[15,181]]]],[[[16,[15]],87,171,[158,[15,143]]]],[[[16,[15]],87]],[[[16,[15]],87],[[7,[146,118]]]],[[[16,[15]],87]],[[[16,[15]],87],[[7,[148,118]]]],[[[16,[15]],87],49],[[[16,[15]],87],[[7,[155,118]]]],[[[16,[15]],87,[5,[4]]]],[[[16,[15]],87,[184,[122]]],[[7,[35,115]]]],[[[16,[15]],87]],[[[16,[15]],87]],[[[16,[15]]]],[[[16,[15]],[185,[[158,[15,145]]]]],[[186,[145]]]],[[187,2],3],[[]],[[]],[[4,15],[[16,[15]]]],[[15,11],[[16,[15]]]],[[[16,[15]]],187],0,[[[16,[15]]],5],[[[16,[15]],188,189,[158,[15,153]]],153],[[[16,[15]],190,[158,[15,153]]],153],[[]],[[]],0,[[4,15,191],[[16,[15]]]],[[[16,[15]],175]],[[[16,[15]],175],49],[[[16,[15]],35],[[7,[35,115]]]],[[[16,[15]],110]],[[[16,[15]],110],49],[[[16,[15]],192,100,[158,[15,193]]],[[7,[124]]]],[[[16,[15]],192],[[7,[114,123]]]],[[[16,[15]],192,129],[[7,[123]]]],[[[16,[15]],192,[182,[137]]],[[7,[122,125]]]],[[[16,[15]],192,97,194,194],[[7,[124]]]],[[[16,[15]],192,97,99,[182,[109]]],[[7,[124]]]],[[[16,[15]],192,97,99,193],[[7,[124]]]],[[[16,[15]],192,165,[182,[109]],195,166],[[7,[124]]]],[[[16,[15]],112]],[[[16,[15]],88,196,[158,[15,112]]]],[[[16,[15]],112],49],[[[16,[15]],107]],[[[16,[15]],107,101,[158,[15,136]]]],[[[16,[15]],107],49],[[[16,[15]],197,[185,[[158,[15,145]]]]],[[7,[145,198]]]],[[[16,[15]],142]],[[[16,[15]],142],49],[[[16,[15]],181]],[[[16,[15]],181],49],[[[16,[15]],153,130]],[[[16,[15]],153,87,[199,[[186,[151]]]]],[[5,[200]]]],[[[16,[15]],153]],[[[16,[15]],153,145],[[7,[201,202]]]],[[[16,[15]],153,[158,[15,143]]],[[7,[203,204]]]],[[[16,[15]],153],[[7,[205,204]]]],[[[16,[15]],153],[[7,[204]]]],0,0,[[[16,[15]],143,130]],[[[16,[15]],143,206,[158,[15,144]]]],[[[16,[15]],143],[[7,[159]]]],[[[16,[15]],143,35]],[[[16,[15]],143],49],[[[16,[15]],144,35],[[7,[207]]]],[[[16,[15]],144],49],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,[4,11],[13,[[5,[14]]]],[13,[[5,[14]]]],[[[16,[15]]],[[17,[15]]]],[11,5],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[208,2],3],[[]],[[]],[[]],[[]],[[[17,[46,15]]],208],[[]],[[]],[[]],[[]],[208,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[209,210],[[]],[[]],[209,209],[[]],[[209,209],211],[[],211],[[209,209],35],[[],35],[[],35],[[],35],[[209,2],3],[[]],[212,209],[[209,44]],[[]],[[],212],[209,212],[[209,209],[[5,[211]]]],[[]],[[],7],[[],7],[[],8],[[]],[209],[[101,101,210]],[[101,101,210],209],0,0,0,0,0,0,0,0,[[213,210],214],[[]],[[]],[[]],[[]],[[],213],[[213,2],3],[[140,2],3],[[]],[[213,[0,[214,36]]]],[[]],[[]],[[],35],[[],35],[[]],[[]],[210],[[]],[140],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,215],[154,154],[202,202],[216,216],[147,147],[198,198],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],0,[[215,2],3],[[215,2],3],[[154,2],3],[[154,2],3],[[202,2],3],[[202,2],3],[[216,2],3],[[216,2],3],[[147,2],3],[[147,2],3],[[198,2],3],[[198,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,216],[[]],[[]],[[13,[217,[46]]],[[7,[218,202]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[217,[46]],13],35],[13,4],[13,1],[[[217,[37]]],1],0,0,0,[[4,191],11],[4,219],0,[216,[[5,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],220],0,0,[[220,220],220],[[220,220]],[[220,220],220],[[220,220]],[220,101],[220,101],[[220,220],220],[[220,220]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[179,179],[[[221,[62]]],[[221,[62]]]],[222,222],[223,223],[173,173],[224,224],[225,225],[226,226],[227,227],[177,177],[228,228],[229,229],[230,230],[220,220],[231,231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[220,220],[[220,220],35],[[],231],0,[[220,220],220],[[],220],0,[[220,220],35],[[],35],[[],35],[[],35],[[220,232]],[[179,2],3],[[[233,[[0,[36,37]]]],2],3],[[[221,[[235,[234]]]],2],3],[[[221,[236]],2],3],[[[221,[36]],2],3],[[237,2],3],[[237,2],3],[[222,2],3],[[223,2],3],[[223,2],3],[[173,2],3],[[224,2],3],[[224,2],3],[[[238,[[0,[36,37]]]],2],3],[[225,2],3],[[226,2],3],[[227,2],3],[[177,2],3],[[228,2],3],[[228,2],3],[[229,2],3],[[229,2],3],[[230,2],3],[[230,2],3],[[220,2],3],[[220,2],3],[[220,2],3],[[220,2],3],[[220,2],3],[[231,2],3],[[[239,[[0,[36,37]]]],2],3],0,[[]],[[]],[[]],[[]],[42,237],[43,237],[[]],[[[221,[236]]],237],[[[221,[[235,[234]]]]],237],[[]],[27,223],[[]],[19,223],[[]],[[]],[41,224],[43,224],[223,224],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,230],[229,230],[41,230],[42,230],[43,230],[[]],[223,230],[[]],[[]],[[]],[101,[[5,[220]]]],[101,220],[101,220],[101,220],[232,220],[4,[[5,[220]]]],[[220,44]],0,[[220,220]],[[220,220],220],[[220,220],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[220],[220,35],[220,35],[220,[[240,[220]]]],[220,[[241,[220]]]],[[[233,[37]]],4],0,0,0,0,0,0,[[[233,[37]]],1],[[[238,[37]]],1],[[[239,[37]]],1],[[237,4],[[5,[242]]]],0,0,0,0,[220,220],0,[[220,220]],[[220,220,35]],0,[[[221,[48]]],[[5,[48]]]],[237,[[5,[48]]]],[223,[[5,[48]]]],[224,[[5,[48]]]],[230,[[5,[48]]]],0,0,0,0,0,0,[[220,220],220],[[220,220]],[[220,220],220],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[220,220]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[220,220],220],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[200,200],[[]],[[]],[[204,2],3],[[204,2],3],[[200,2],3],[[200,2],3],[[203,2],3],[43,204],[[]],[115,200],[41,200],[43,200],[[]],[[]],[[]],[[]],[[]],[204,[[5,[48]]]],[200,[[5,[48]]]],0,0,[[]],[[]],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,[[]],[[]],[[[245,[[0,[36,243]],[0,[36,214]],[0,[36,[244,[[0,[36,214]]]]]]]],2],3],[[]],[[]],[[[245,[243,[0,[214,246]],[244,[[0,[214,246]]]]]],[0,[214,246]]],49],[[],7],[[],7],[[],8],[[[245,[243,[0,[214,246]],[244,[[0,[214,246]]]]]],[0,[214,246]],[247,[243,[0,[214,246]]]]],[[5,[243]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[127,127],[248,248],[249,249],[250,250],[251,251],[206,206],[252,252],[253,253],[207,207],[178,178],[254,254],[255,255],[256,256],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],206],0,[257],[[206,206],35],[[178,178],35],[[],35],[[],35],[[],35],[[258,2],3],[[127,2],3],[[127,2],3],[[248,2],3],[[248,2],3],[[[259,[[0,[36,37]]]],2],3],[[[260,[[0,[36,37]]]],2],3],[[249,2],3],[[250,2],3],[[250,2],3],[[251,2],3],[[251,2],3],[[206,2],3],[[252,2],3],[[252,2],3],[[[261,[[0,[36,37]]]],2],3],[[253,2],3],[[253,2],3],[[207,2],3],[[207,2],3],[[178,2],3],[[[262,[[0,[36,37]]]],2],3],[[254,2],3],[[255,2],3],[[255,2],3],[[256,2],3],[[256,2],3],[[[263,[[0,[36,37]]]],2],3],[[159,2],3],[[159,2],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[43,127],[[]],[[]],[127,248],[41,248],[43,248],[[]],[[]],[[]],[[]],[250,251],[41,251],[[]],[43,251],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,255],[42,255],[42,256],[43,256],[[]],[[]],[[]],[264,257],[[[131,[130]]],257],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[[265,[37]]],4],0,0,[[],1],[[[135,[37]]],1],[[[265,[37]]],1],[[[260,[37]]],1],[[[261,[37]]],1],[[[262,[37]]],1],[[[263,[37]]],1],0,0,0,0,0,0,[127,[[5,[48]]]],[248,[[5,[48]]]],[251,[[5,[48]]]],[255,[[5,[48]]]],[256,[[5,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[266,266],[[]],[[],266],0,[[266,2],3],[[[247,[36,[0,[36,214]]]],2],3],[[]],[[]],[[]],[[]],[266,35],0,0,0,[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8]],"c":[],"p":[[3,"LifeGuard"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Option"],[3,"InstanceFlags"],[4,"Result"],[3,"TypeId"],[3,"Empty"],[3,"Metal"],[3,"Instance"],[3,"Error"],[3,"Surface"],[3,"HalSurface"],[8,"GlobalIdentityHandlerFactory"],[3,"Global"],[3,"Hub"],[4,"BindGroupLayoutEntryError"],[4,"CreateBindGroupLayoutError"],[4,"CreateBindGroupError"],[4,"BindingZone"],[3,"BindingTypeMaxCountError"],[4,"BindingTypeMaxCountErrorKind"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"BindGroupLayoutDescriptor"],[4,"CreatePipelineLayoutError"],[4,"PushConstantUploadError"],[3,"PipelineLayoutDescriptor"],[3,"BufferBinding"],[4,"BindingResource"],[4,"BindError"],[4,"GetBindGroupLayoutError"],[3,"LateMinBufferBindingSizeMismatch"],[15,"bool"],[8,"Debug"],[8,"Api"],[3,"PipelineLayout"],[3,"BindGroupDynamicBindingData"],[3,"ErrorFormatter"],[3,"MissingDownlevelFlags"],[3,"MissingFeatures"],[4,"DeviceError"],[8,"Hasher"],[3,"BindGroupLayout"],[8,"HalApi"],[3,"BindGroup"],[8,"Error"],[3,"String"],[3,"RenderBundleEncoderDescriptor"],[4,"CreateRenderBundleError"],[4,"ExecutionError"],[3,"RenderBundleError"],[4,"ClearError"],[3,"ComputePassTimestampWrites"],[3,"ComputePassDescriptor"],[4,"DispatchError"],[4,"ComputePassErrorInner"],[3,"ComputePassError"],[4,"DrawError"],[4,"RenderCommandError"],[8,"Clone"],[3,"Rect"],[4,"SimplifiedQueryType"],[4,"QueryError"],[4,"QueryUseError"],[4,"ResolveError"],[4,"LoadOp"],[4,"StoreOp"],[3,"PassChannel"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[4,"RenderPassTimestampLocation"],[3,"RenderPassTimestampWrites"],[3,"RenderPassDescriptor"],[4,"AttachmentErrorLocation"],[4,"ColorAttachmentError"],[4,"RenderPassErrorInner"],[3,"RenderPassError"],[4,"CopySide"],[4,"TransferError"],[4,"CopyError"],[3,"BasePassRef"],[4,"CommandEncoderError"],[4,"PassErrorScope"],[8,"Default"],[6,"DeviceId"],[3,"RenderBundleEncoder"],[8,"PartialEq"],[3,"ComputePass"],[3,"RenderPass"],[4,"RenderPassCompatibilityError"],[4,"QueryType"],[3,"CommandBuffer"],[3,"RenderBundle"],[6,"CommandEncoderId"],[6,"BufferId"],[4,"IndexFormat"],[6,"BufferAddress"],[6,"BufferSize"],[15,"u32"],[15,"i32"],[6,"RawString"],[6,"BindGroupId"],[6,"DynamicOffset"],[15,"usize"],[6,"RenderPipelineId"],[3,"ShaderStages"],[15,"u8"],[6,"QuerySetId"],[6,"ComputePipelineId"],[6,"RenderBundleId"],[3,"Color"],[15,"f32"],[4,"WaitIdleError"],[4,"HostMap"],[4,"RenderPassCompatibilityCheckType"],[3,"InvalidDevice"],[3,"ImplicitPipelineContext"],[3,"UserClosures"],[4,"DeviceError"],[3,"WrappedSubmissionIndex"],[3,"InvalidQueue"],[4,"QueueWriteError"],[4,"QueueSubmitError"],[4,"TempResource"],[4,"BufferAccessError"],[3,"SubmittedWorkDoneClosureC"],[3,"SubmittedWorkDoneClosure"],[8,"FnOnce"],[3,"Box"],[4,"CreateDeviceError"],[3,"Device"],[6,"BufferDescriptor"],[3,"Buffer"],[6,"BindGroupLayoutId"],[6,"CommandBufferId"],[3,"ContextError"],[8,"Write"],[3,"IdentityManagerFactory"],[8,"Display"],[6,"SamplerId"],[6,"TextureId"],[6,"TextureViewId"],[6,"AdapterId"],[3,"DownlevelCapabilities"],[3,"InvalidAdapter"],[3,"Features"],[3,"AdapterInfo"],[3,"PresentationTimestamp"],[4,"TextureFormat"],[3,"TextureFormatFeatures"],[6,"SurfaceId"],[4,"IsSurfaceSupportedError"],[3,"Limits"],[6,"DeviceDescriptor"],[3,"Path"],[6,"Input"],[4,"DestroyError"],[3,"Range"],[3,"BufferMapOperation"],[6,"BufferAccessResult"],[3,"ImageSubresourceRange"],[6,"ImageCopyBuffer"],[6,"ImageCopyTexture"],[3,"Extent3d"],[6,"Label"],[3,"CommandBufferDescriptor"],[3,"ExposedAdapter"],[3,"OpenDevice"],[6,"TextureDescriptor"],[3,"CommandEncoderDescriptor"],[3,"ComputePipelineDescriptor"],[3,"ImplicitPipelineIds"],[6,"PipelineLayoutId"],[6,"QuerySetDescriptor"],[3,"RenderPipelineDescriptor"],[3,"SamplerDescriptor"],[3,"ShaderModuleDescriptor"],[4,"ShaderModuleSource"],[6,"ShaderModuleId"],[15,"slice"],[4,"Cow"],[4,"Maintain"],[4,"AdapterInputs"],[3,"Vec"],[3,"GlobalReport"],[4,"RawDisplayHandle"],[4,"RawWindowHandle"],[4,"c_void"],[3,"InstanceDescriptor"],[6,"QueueId"],[6,"StagingBufferId"],[15,"u64"],[3,"ImageDataLayout"],[6,"RenderBundleDescriptor"],[6,"RequestAdapterOptions"],[4,"RequestAdapterError"],[3,"SurfaceConfiguration"],[4,"ConfigureSurfaceError"],[3,"SurfaceCapabilities"],[4,"GetSurfaceSupportError"],[3,"SurfaceOutput"],[4,"SurfaceError"],[4,"SurfaceStatus"],[3,"TextureViewDescriptor"],[4,"TextureViewDestroyError"],[3,"HubReport"],[3,"Id"],[4,"Backend"],[4,"Ordering"],[3,"NonZeroU64"],[3,"IdentityManager"],[8,"TypedId"],[3,"FailedLimit"],[4,"RequestDeviceError"],[3,"Adapter"],[3,"SurfaceCapabilities"],[3,"Backends"],[3,"PipelineFlags"],[3,"ShaderError"],[3,"ProgrammableStageDescriptor"],[4,"ImplicitLayoutError"],[4,"CreateComputePipelineError"],[3,"VertexBufferLayout"],[3,"VertexState"],[3,"FragmentState"],[4,"ColorStateError"],[4,"DepthStencilStateError"],[4,"CreateRenderPipelineError"],[3,"VertexStep"],[8,"IntoIterator"],[3,"ShaderModule"],[4,"ValidationError"],[3,"WithSpan"],[3,"ParseError"],[4,"CreateShaderModuleError"],[3,"ComputePipeline"],[3,"RenderPipeline"],[3,"Iter"],[3,"IterNames"],[3,"SourceLocation"],[8,"Resource"],[8,"IdentityHandlerFactory"],[3,"Registry"],[8,"Copy"],[3,"Storage"],[4,"CreateBufferError"],[4,"TextureErrorDimension"],[4,"TextureDimensionError"],[4,"CreateTextureError"],[4,"TextureViewNotRenderableReason"],[4,"CreateTextureViewError"],[4,"SamplerFilterErrorType"],[4,"CreateSamplerError"],[4,"CreateQuerySetError"],[3,"BufferMapCallback"],[4,"BufferMapAsyncStatus"],[4,"TextureClearMode"],[3,"Texture"],[3,"TextureView"],[3,"Sampler"],[3,"QuerySet"],[3,"BufferMapCallbackC"],[3,"StagingBuffer"],[3,"StorageReport"],[3,"BindGroupLayoutInner"],[13,"MismatchedDynamicOffsetCount"],[13,"UnalignedDynamicBinding"],[13,"DynamicBindingOutOfBounds"],[13,"BindingArrayPartialLengthMismatch"],[13,"BindingArrayLengthMismatch"],[13,"BindingSizeTooSmall"],[13,"BindingsNumMismatch"],[13,"WrongBindingType"],[13,"BufferRangeTooLarge"],[13,"InvalidTextureMultisample"],[13,"InvalidTextureSampleType"],[13,"InvalidTextureDimension"],[13,"InvalidStorageTextureFormat"],[13,"InvalidStorageTextureMipLevelCount"],[13,"WrongSamplerComparison"],[13,"WrongSamplerFiltering"],[13,"BindingRangeTooLarge"],[13,"Entry"],[13,"InvalidBindingIndex"],[13,"TooManyGroups"],[13,"MisalignedPushConstantRange"],[13,"MoreThanOnePushConstantRangePerStage"],[13,"PushConstantRangeTooLarge"],[13,"PartialRangeMatch"],[13,"MissingStages"],[13,"UnmatchedStages"],[13,"TooLarge"],[3,"BakedCommands"],[13,"Color"],[13,"BufferOverrun"],[13,"InvalidTextureLayerRange"],[13,"InvalidTextureLevelRange"],[13,"MissingTextureAspect"],[13,"TooMany"],[13,"IndirectBufferOverrun"],[13,"BindGroupIndexOutOfRange"],[13,"InvalidGroupSize"],[13,"IncompatibleBindGroup"],[13,"UnmatchedIndexFormats"],[13,"MissingVertexBuffer"],[13,"IncompatibleBindGroup"],[13,"IndexBeyondLimit"],[13,"InstanceBeyondLimit"],[13,"VertexBeyondLimit"],[13,"Draw"],[13,"Dispatch"],[13,"AlreadyStarted"],[13,"OutOfBounds"],[13,"UsedTwiceInsideRenderpass"],[13,"IncompatibleType"],[13,"InvalidDynamicOffsetCount"],[13,"BindGroupIndexOutOfRange"],[13,"AttachmentsDimensionMismatch"],[13,"AttachmentSampleCountMismatch"],[13,"IndirectCountBufferOverrun"],[13,"IndirectBufferOverrun"],[13,"IncompatibleBundleReadOnlyDepthStencil"],[13,"InvalidResolveSampleCounts"],[13,"MismatchedResolveTextureFormat"],[13,"UnsupportedResolveTargetFormat"],[13,"TextureViewIsNotRenderable"],[13,"BufferOverrun"],[13,"QueryOverrun"],[13,"InvalidTextureAspect"],[13,"CopyFromForbiddenTextureFormat"],[13,"CopyToForbiddenTextureFormat"],[13,"BufferOverrun"],[13,"InvalidMipLevel"],[13,"TextureOverrun"],[13,"TextureFormatsNotCopyCompatible"],[13,"InvalidTextureMipLevel"],[13,"InvalidSampleCount"],[13,"IncompatibleColorAttachment"],[13,"IncompatibleDepthStencilAttachment"],[13,"IncompatibleSampleCount"],[13,"IncompatibleMultiview"],[8,"PrettyError"],[4,"Root"],[3,"Hubs"],[8,"IdentityHandler"],[13,"IncompatibleFormat"],[13,"UnalignedShader"],[13,"Stage"],[13,"Internal"],[13,"BlendFactorOnUnsupportedTarget"],[13,"TooManyVertexBuffers"],[13,"TooManyVertexAttributes"],[13,"VertexStrideTooLarge"],[13,"UnalignedVertexStride"],[13,"InvalidVertexAttributeOffset"],[13,"StripIndexFormatForNonStripTopology"],[13,"InvalidGroupIndex"],[13,"UnsupportedFormat"],[13,"UnsupportedPresentMode"],[13,"UnsupportedAlphaMode"],[13,"NegativeRange"],[13,"OutOfBoundsUnderrun"],[13,"OutOfBoundsOverrun"],[13,"UnalignedOffset"],[13,"UnalignedRangeSize"],[13,"MaxBufferSize"],[13,"TooManyQueries"],[13,"InvalidFilterModeWithAnisotropy"],[13,"InvalidLodMaxClamp"],[13,"InvalidMipLevelCount"],[13,"InvalidCubemapTextureDepth"],[13,"InvalidCubemapArrayTextureDepth"],[13,"InvalidArrayLayerCount"],[13,"TooManyMipLevels"],[13,"TooManyArrayLayers"],[13,"InvalidAspect"],[13,"InvalidTextureViewDimension"],[13,"FormatReinterpretation"],[13,"RenderPass"],[13,"NotMultipleOfBlockHeight"],[13,"NotMultipleOfBlockWidth"],[13,"LimitExceeded"]]},\
"wgpu_hal":{"doc":"This library describes the internal unsafe graphics …","t":"DIQDIDDSQDDQDDQDDDDDDDSSSSSSSSSSSDDQIQDNDDQDDSSSSDDINNNQEGSSNDQGDSSSSIQDDSGNNNSSRRRRRSSSSSDGSNDSSDNNNSSSEQDDDSRQIQSDDDQDNSSSSSSSSSSSSQDEEQDNIQDDEQSQDDDDDDDQDSSSHSDDKMMMLLLLLLLLMAMLMMLMAKKKKKMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMKLLLLLLLLKKLKKKMKKKKKKKKKKKKKKMMMMMMKKKKKKKKKKKKKKMLLLLLLLLMMKKKKMKKKKKKMMMALLLLLLLLKKKMMKKMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMMMMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKMMLLLLLLLLMMMKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLKLLMMALMMMMMMMMMMLLLLLLLLLMMKMMKMMMMMMMMMMMLLLLLLLLKKMMMMMMLLLLLLLLKKKKKKKKKKMMMMMMLLLLMMMMKMMKLLLLLLLLLLLLLLLLKMKMMLLLLLLLLMMMMMKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKMMMMMMMMMMMMMMMMKMKMMCCRAFAAAAAAAAARRRRRRRRRRRDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDSDSSSDDDDSDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AcquiredSurfaceTexture","Adapter","Adapter","Alignments","Api","Attachment","AttachmentOps","BASE_VERTEX_INSTANCE","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutFlags","Buffer","BufferBarrier","BufferBinding","BufferCopy","BufferDescriptor","BufferMapping","BufferTextureCopy","BufferUses","COLOR","COLOR_ATTACHMENT","COLOR_ATTACHMENT_BLEND","COLOR_TARGET","COMPLEX","COPY_DST","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","COPY_SRC","Capabilities","ColorAttachment","CommandBuffer","CommandEncoder","CommandEncoder","CommandEncoderDescriptor","Compilation","ComputePassDescriptor","ComputePassTimestampWrites","ComputePipeline","ComputePipelineDescriptor","CopyExtent","DEPTH","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_READ","DEPTH_STENCIL_WRITE","DebugSource","DepthStencilAttachment","Device","Device","Device","Device","Device","DeviceError","DropGuard","EXCLUSIVE","EXCLUSIVE","EntryPoint","ExposedAdapter","Fence","FenceValue","FormatAspects","INCLUSIVE","INCLUSIVE","INDEX","INDIRECT","Instance","Instance","InstanceDescriptor","InstanceError","LOAD","Label","Linkage","Lost","Lost","MAP_READ","MAP_WRITE","MAX_ANISOTROPY","MAX_BIND_GROUPS","MAX_COLOR_ATTACHMENTS","MAX_MIP_LEVELS","MAX_VERTEX_BUFFERS","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MemoryFlags","MemoryRange","NUM_WORK_GROUPS","Naga","NagaShader","ORDERED","ORDERED","OpenDevice","Other","OutOfMemory","Outdated","PARTIALLY_BOUND","PREFER_COHERENT","PRESENT","PipelineError","PipelineLayout","PipelineLayoutDescriptor","PipelineLayoutFlags","ProgrammableStage","QUERY_RESOLVE","QUERY_SIZE","QuerySet","Queue","Queue","RESOURCE","Rect","RenderPassDescriptor","RenderPassTimestampWrites","RenderPipeline","RenderPipelineDescriptor","ResourceCreationFailed","SAMPLED","SAMPLED_LINEAR","SAMPLED_MINMAX","STENCIL","STORAGE","STORAGE_ATOMIC","STORAGE_READ","STORAGE_READ","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORAGE_READ_WRITE","STORE","Sampler","SamplerDescriptor","ShaderError","ShaderInput","ShaderModule","ShaderModuleDescriptor","SpirV","Surface","Surface","SurfaceCapabilities","SurfaceConfiguration","SurfaceError","SurfaceTexture","TRANSIENT","Texture","TextureBarrier","TextureBinding","TextureCopy","TextureCopyBase","TextureDescriptor","TextureFormatCapabilities","TextureUses","TextureView","TextureViewDescriptor","UNIFORM","UNINITIALIZED","UNKNOWN","VALIDATION_CANARY","VERTEX","ValidationCanary","VertexBufferLayout","acquire_texture","adapter","address_modes","alignments","all","all","all","all","all","all","all","all","anisotropy_clamp","api","array_layer","array_layer_count","array_stride","aspect","at_mip_level","attributes","auxil","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","beginning_of_pass_write_index","beginning_of_pass_write_index","bind_group_layouts","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer_copy_offset","buffer_copy_pitch","buffer_layout","buffers","capabilities","clamp_size_to_virtual","clamp_size_to_virtual","clear_buffer","clear_value","clear_value","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_attachments","color_targets","compare","complement","complement","complement","complement","complement","complement","complement","complement","composite_alpha_mode","composite_alpha_modes","configure","contains","contains","contains","contains","contains","contains","contains","contains","copy_buffer_to_buffer","copy_buffer_to_texture","copy_extent","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","count","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","current_extent","debug_source","depth","depth_ops","depth_stencil","depth_stencil_attachment","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dimension","discard_encoding","discard_texture","dispatch","dispatch_indirect","downlevel","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","dst_base","dst_offset","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","end_compute_pass","end_debug_marker","end_encoding","end_of_pass_write_index","end_of_pass_write_index","end_query","end_render_pass","entries","entries","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exit","extend","extend","extend","extend","extend","extend","extend","extend","extent","extent","extents","features","file_name","flags","flags","flags","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","formats","fragment_stage","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","get_and_reset","get_fence_value","get_presentation_timestamp","get_timestamp_period","gles_minor_version","h","hash","hash","hash","hash","hash","hash","hash","hash","height","info","info","init","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invalidate_mapped_ranges","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_coherent","is_cube_compatible","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_one","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","label","label","label","label","label","label","layout","layout","layout","limits","lod_clamp","mag_filter","map","map_buffer","map_extent_to_copy_size","max_copy_size","memory_flags","memory_flags","metal","min","min_filter","mip_level","mip_level_count","mipmap_filter","module","module","multisample","multiview","multiview","name","new","not","not","not","not","not","not","not","not","occlusion_query_set","offset","open","ops","origin","present","present_mode","present_modes","primitive","ptr","push_constant_ranges","query_set","query_set","queue","queue","range","range","remove","remove","remove","remove","remove","remove","remove","remove","reset_all","reset_queries","resolve_target","resource_index","runtime_checks","sample_count","sample_count","samplers","set","set","set","set","set","set","set","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","size","size","size","size","size","size","source","source","source","source","source_code","src_base","src_offset","stage","start_capture","stencil_ops","step_mode","stop_capture","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","surface_capabilities","swap_chain_size","swap_chain_sizes","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target","target","texture","texture","texture_base","texture_format_capabilities","textures","timestamp_writes","timestamp_writes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","union","union","union","union","union","union","union","union","unmap_buffer","usage","usage","usage","usage","usage","usage","usage","usage","usage","vertex_buffers","vertex_stage","view","view","view_formats","view_formats","w","wait","width","write_timestamp","x","y","Empty","Metal","MAX_I32_BINDING_SIZE","db","map_naga_stage","amd","apple","arm","broadcom","imgtec","intel","mesa","nvidia","qualcomm","VENDOR","VENDOR","VENDOR","VENDOR","VENDOR","DEVICE_KABY_LAKE_MASK","DEVICE_SKY_LAKE_MASK","VENDOR","VENDOR","VENDOR","VENDOR","Api","Context","Encoder","Resource","acquire_texture","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_buffer","clone","clone_into","configure","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_texture","create_texture_view","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","discard_encoding","discard_texture","dispatch","dispatch_indirect","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","enumerate_adapters","exit","flush_mapped_ranges","fmt","fmt","fmt","from","from","from","from","get_fence_value","get_presentation_timestamp","get_timestamp_period","init","insert_debug_marker","into","into","into","into","invalidate_mapped_ranges","map_buffer","open","present","reset_all","reset_queries","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","submit","surface_capabilities","texture_format_capabilities","to_owned","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfigure","unmap_buffer","wait","write_timestamp","Adapter","Api","BindGroup","BindGroupLayout","Buffer","CommandBuffer","CommandEncoder","ComputePipeline","Device","Fence","INSIDE_WGPU_PASSES","Instance","ON_BLIT_ENCODER","ON_COMPUTE_ENCODER","ON_RENDER_ENCODER","PipelineLayout","QuerySet","Queue","RenderPipeline","STAGE_BOUNDARIES","Sampler","ShaderModule","Surface","SurfaceTexture","Texture","TextureView","TimestampQuerySupport","acquire_texture","all","begin_compute_pass","begin_debug_marker","begin_encoding","begin_query","begin_render_pass","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_from_raw","clear_buffer","clone","clone","clone","clone_into","clone_into","clone_into","complement","configure","contains","copy_buffer_to_buffer","copy_buffer_to_texture","copy_query_results","copy_texture_to_buffer","copy_texture_to_texture","create_bind_group","create_bind_group_layout","create_buffer","create_command_encoder","create_compute_pipeline","create_fence","create_pipeline_layout","create_query_set","create_render_pipeline","create_sampler","create_shader_module","create_surface","create_surface_from_layer","create_texture","create_texture_view","default","destroy_bind_group","destroy_bind_group_layout","destroy_buffer","destroy_command_encoder","destroy_compute_pipeline","destroy_fence","destroy_pipeline_layout","destroy_query_set","destroy_render_pipeline","destroy_sampler","destroy_shader_module","destroy_surface","destroy_texture","destroy_texture_view","device_from_raw","difference","discard_encoding","discard_texture","dispatch","dispatch_indirect","dispose","draw","draw_indexed","draw_indexed_indirect","draw_indexed_indirect_count","draw_indirect","draw_indirect_count","drop","empty","end_compute_pass","end_debug_marker","end_encoding","end_query","end_render_pass","enumerate_adapters","exit","extend","flush_mapped_ranges","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_layer","from_name","from_view","get_fence_value","get_presentation_timestamp","get_timestamp_period","init","insert","insert_debug_marker","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","invalidate_mapped_ranges","is_all","is_empty","iter","iter_names","map_buffer","not","open","present","present_with_transaction","queue_from_raw","raw_device","remove","reset_all","reset_queries","set","set_bind_group","set_blend_constants","set_compute_pipeline","set_index_buffer","set_push_constants","set_render_pipeline","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_viewport","start_capture","stop_capture","sub","sub_assign","submit","surface_capabilities","symmetric_difference","texture_format_capabilities","texture_from_raw","to_owned","to_owned","to_owned","toggle","transition_buffers","transition_textures","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconfigure","union","unmap_buffer","wait","write_timestamp"],"q":[[0,"wgpu_hal"],[1428,"wgpu_hal::api"],[1430,"wgpu_hal::auxil"],[1433,"wgpu_hal::auxil::db"],[1442,"wgpu_hal::auxil::db::amd"],[1443,"wgpu_hal::auxil::db::apple"],[1444,"wgpu_hal::auxil::db::arm"],[1445,"wgpu_hal::auxil::db::broadcom"],[1446,"wgpu_hal::auxil::db::imgtec"],[1447,"wgpu_hal::auxil::db::intel"],[1450,"wgpu_hal::auxil::db::mesa"],[1451,"wgpu_hal::auxil::db::nvidia"],[1452,"wgpu_hal::auxil::db::qualcomm"],[1453,"wgpu_hal::empty"],[1582,"wgpu_hal::metal"]],"d":["","","","","","","","Include support for base vertex/instance drawing.","","BindGroup descriptor.","","","BindGroupLayout descriptor.","Pipeline layout creation flags.","","","","","","","","Similar to <code>wgt::BufferUsages</code> but for internal use.","","Format can be used as color and input attachment.","Format can be used as color (with blending) and input …","The color target of a renderpass.","Flag used by the wgpu-core texture tracker to say a …","Format can be copied to.","The destination of a hardware copy.","The destination of a hardware copy.","Format can be copied from.","The source of a hardware copy.","The source of a hardware copy.","","","","Encoder for commands in command buffers. Serves as a …","","","","","","","Describes a compute pipeline.","","","Format can be used as depth-stencil and input attachment.","Read-only depth stencil usage.","Read-write depth stencil usage","","","","","","","","","Drop guard to signal wgpu-hal is no longer using an …","The combination of states that a buffer must exclusively …","The combination of states that a texture must exclusively …","","","","","Texture format capability flags.","The combination of states that a buffer may be in <em>at the </em>…","The combination of states that a texture may be in <em>at the </em>…","The index buffer used for drawing.","The indirect or count buffer in a indirect draw or …","","","","Error occurring while trying to create an instance, or …","","","","","","The argument to a read-only mapping.","The argument to a write-only mapping.","","","","","","Format can be used for render pass resolve targets.","Format can be multisampled by x16.","Format can be multisampled by x2.","Format can be multisampled by x4.","Format can be multisampled by x8.","","","Include support for num work groups builtin.","","Naga shader module.","The combination of all usages that the are guaranteed to …","The combination of all usages that the are guaranteed to …","","","","","Allows for bind group binding arrays to be shorter than …","","Ready to present image to the surface.","","","","Pipeline layout creation flags.","Describes a programmable pipeline stage.","A buffer used to store query results.","Size of a single occlusion/timestamp query, when copied …","","","","Read-only sampled or fetched resource.","","","","","Describes a render (graphics) pipeline.","","Format can be sampled.","Format can be sampled with a linear sampler.","Format can be sampled with a min/max reduction sampler.","","Format can be used as storage with write-only access.","Format can be used as storage with atomics.","A read-only storage buffer used in a bind group.","Read-only storage buffer usage. Corresponds to a UAV in …","Format can be used as storage with read and read/write …","A read-write or write-only buffer used in a bind group.","Read-write or write-only storage buffer usage.","","","","","Shader input.","","","","","","Describes information about what a <code>Surface</code>’s …","","","","","","","","","","","Texture format capability flags.","Similar to <code>wgt::TextureUsages</code> but for internal use.","","TextureView descriptor.","A uniform buffer bound in a bind group.","The texture is in unknown state.","Flag used by the wgpu-core texture tracker to say that the …","Stores if any API validation error has occurred in this …","A vertex buffer used for drawing.","Flag for internal testing.","Describes how the vertex buffer is interpreted.","Returns the next texture to be presented by the swapchain …","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","The stride, in bytes, between elements of this buffer.","","","The list of attributes which comprise a single vertex.","","","","Begin encoding a new command buffer.","Safety:","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The buffer being bound.","","The alignment of the start of the buffer used as a GPU …","The alignment of the row pitch of the texture data stored …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The effect of draw calls on the color aspect of the output …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Alpha composition mode.","List of supported alpha composition modes.","Configures the surface to use the given device.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","Copy from buffer to texture. Works with a single array …","","","Copy from texture to buffer. Works with a single array …","Copy from one texture to another. Works with a single …","","","Creates a bind group layout.","Creates a new buffer.","","","","","","","","","","Creates a new texture.","","Current extent of the surface, if known.","Source codes for debug","","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Discard currently recorded list, if any.","","","","","","","","","","","","","","A dummy API implementation.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","Safety:","","","","The name of the entry point in the compiled shader. There …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit connection to this logical device.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Requested texture extent. Must be in …","","Range of supported extents.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the surface textures.","List of supported texture formats.","The fragment stage for this pipeline.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns true if any API validation error has occurred in …","","Creates a <code>PresentationTimestamp</code> using the adapter’s WSI.","","","","","","","","","","","","","Analysis information of the module.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if only one flag is set","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","","","","","","","","","","Metal API internals.","","","","","","Shader module IR.","The compiled shader module for this stage.","The multi-sampling properties of the pipeline.","If the pipeline will be used with a multiview render pass, …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The offset at which the bound region starts.","","","Origin within a texture. Note: for 1D and 2D textures, Z …","","Vertical synchronization mode.","List of supported V-sync modes.","The properties of the pipeline at the primitive assembly …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Reclaims all resources that are allocated for this encoder.","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the bind group at <code>index</code> to <code>group</code>, assuming the layout …","","","","","","","","","","","","The size of the region bound, in bytes.","","","","","","","","","","","The compiled compute stage and its entry point.","","","How often this vertex buffer is “stepped” forward.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Submits the command buffers for execution on GPU.","The presentation configuration no longer matches the …","Returns the capabilities of working with a specified …","Number of textures in the swap chain. Must be in …","Range for the swap chain sizes.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","Return the set of supported capabilities for a texture …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …nconfigures the surface on the given device.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Supported texture usage flags.","","","","","Allowed usage of surface textures,","","","Contains either a single mutating usage as a target, or a …","The format of any vertex buffers used with this pipeline.","The vertex stage for this pipeline.","","","Allows views of this texture to have a different format …","Allows views of swapchain texture to have a different …","","Calling wait with a lower value than the current fence …","","","","","","","Maximum binding size for the shaders that only support <code>i32</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Within any wgpu render/compute pass.","","Within existing blit encoders.","Within existing dispatch encoders.","Within existing draw encoders.","","","","","On creating Metal encoders.","","","","","","","Similar to <code>MTLCounterSamplingPoint</code>, but a bit higher …","","Get a flags value with all known bits set.","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","","Get a flags value with the bits of a flag with the given …","If not called on the main thread, this will panic.","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","",""],"i":[0,0,40,0,0,0,0,6,40,0,0,40,0,0,40,0,0,0,0,0,0,0,9,8,8,13,13,8,12,13,8,12,13,0,0,40,0,40,0,27,0,0,40,0,0,9,8,13,13,0,0,0,27,28,4,40,0,0,12,13,28,0,40,0,0,12,13,12,12,0,40,0,0,11,0,28,20,4,12,12,0,0,0,0,0,8,8,8,8,8,0,0,6,70,0,12,13,0,4,20,4,7,10,13,0,40,0,0,0,12,0,40,0,40,13,0,0,0,40,0,20,8,8,8,9,8,8,12,13,8,12,13,11,40,0,0,0,40,0,70,0,40,0,0,0,40,10,40,0,0,0,0,0,0,0,40,0,12,13,13,0,12,0,0,138,75,37,32,6,7,8,9,10,11,12,13,37,0,57,14,50,57,16,50,0,139,139,139,139,139,61,62,41,44,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,37,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,42,54,31,31,25,45,75,24,25,139,59,60,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,33,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,33,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,21,51,37,6,7,8,9,10,11,12,13,52,33,138,6,7,8,9,10,11,12,13,139,139,14,139,139,139,44,140,140,140,140,140,140,140,140,140,140,140,141,140,140,33,78,16,60,51,21,140,140,140,140,140,140,140,140,140,140,140,141,140,140,82,6,7,8,9,10,11,12,13,14,36,139,138,139,139,32,139,139,139,139,139,139,24,56,30,0,6,7,8,9,10,11,12,13,139,139,139,61,62,139,139,38,45,48,141,20,27,28,4,6,7,8,9,10,11,12,13,20,20,20,27,27,27,28,28,28,4,4,4,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,140,6,7,8,9,10,11,12,13,52,21,33,75,47,30,38,41,140,78,20,20,27,27,28,28,4,4,29,29,6,6,6,6,6,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,14,36,52,33,51,78,70,69,84,20,27,27,28,28,4,4,29,6,7,8,9,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,6,7,8,9,10,11,12,13,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,84,140,142,143,30,53,6,7,8,9,10,11,12,13,16,78,75,141,6,7,8,9,10,11,12,13,139,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,6,7,8,9,10,11,12,13,140,6,7,8,9,10,11,12,13,34,14,6,7,8,9,10,11,12,13,9,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,69,35,14,36,37,38,41,45,46,49,51,21,17,45,49,51,32,37,37,9,140,16,57,35,14,0,16,37,57,14,37,78,48,51,51,21,30,9,6,7,8,9,10,11,12,13,21,42,142,59,57,143,52,33,51,34,41,61,62,82,46,36,55,6,7,8,9,10,11,12,13,139,139,59,44,69,14,21,45,6,7,8,9,10,11,12,13,139,139,139,139,139,139,139,139,139,139,35,14,42,56,24,25,27,28,4,29,47,24,56,49,140,60,50,140,6,7,8,9,10,11,12,13,6,7,8,9,10,11,12,13,143,3,142,52,33,6,7,8,9,10,11,12,13,59,60,3,55,25,142,45,21,17,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,33,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,20,27,28,4,29,6,7,8,9,10,11,12,13,139,139,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,78,70,69,84,20,27,28,4,29,6,7,8,9,10,11,12,13,30,31,32,75,33,3,82,34,35,14,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,24,25,58,59,60,61,21,62,17,138,6,7,8,9,10,11,12,13,140,33,35,14,36,43,52,54,55,58,51,51,43,58,14,52,53,140,16,139,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,106,106,106,106,106,104,105,106,107,104,105,106,107,106,105,105,104,106,106,106,106,106,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,106,104,106,106,106,106,106,106,106,106,106,106,106,106,106,104,104,104,105,106,107,104,105,106,107,104,104,104,104,106,104,105,106,107,104,104,104,104,106,106,106,106,106,106,106,106,106,106,106,106,104,104,104,104,104,105,106,106,104,105,106,107,104,105,106,107,104,105,106,107,104,104,104,106,0,0,0,0,0,0,0,0,0,0,110,0,110,110,110,0,0,0,0,110,0,0,0,0,0,0,0,108,110,111,111,111,111,111,110,110,110,110,110,110,110,110,126,133,131,117,108,123,120,111,109,110,113,113,116,114,128,124,119,122,118,125,112,121,130,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,117,111,109,110,112,109,110,112,110,108,110,111,111,111,111,111,117,117,117,117,117,117,117,117,117,117,117,126,126,117,117,118,117,117,117,117,117,117,117,117,117,117,117,126,117,117,117,110,111,108,111,111,108,111,111,111,111,111,111,111,110,111,111,111,111,111,126,117,110,117,111,109,110,110,110,110,110,113,116,114,128,124,119,122,118,125,112,121,130,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,110,110,110,110,110,108,110,108,117,133,131,126,110,111,110,110,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,110,117,110,110,110,110,117,110,133,131,108,131,117,110,111,111,110,111,111,111,111,111,111,111,111,111,111,117,117,110,110,131,133,110,133,117,109,110,112,110,111,111,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,126,133,131,117,108,123,120,111,109,110,113,116,114,128,124,119,122,118,125,112,121,130,108,110,117,117,111],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[5,[[2,[3]],4]]]],0,0,0,[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],0,0,0,[14,15],0,0,[[16,15],16],0,0,[17],[18],[19,[[5,[20]]]],[15],[21],0,0,0,0,[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[6,15],[6,15],[7,15],[7,15],[8,15],[8,15],[9,22],[9,22],[10,15],[10,15],[11,22],[11,22],[12,23],[12,23],[13,23],[13,23],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[24,16,16]],[[25,16]],[26],0,0,[20,20],[27,27],[28,28],[4,4],[29,29],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[14,14],[36,36],[37,37],[38,38],[[[41,[[0,[39,40]]]]],[[41,[[0,[39,40]]]]]],[[[42,[40]]],[[42,[40]]]],[[[43,[40]]],[[43,[40]]]],[44,44],[[[45,[[0,[39,40]]]]],[[45,[[0,[39,40]]]]]],[[[46,[[0,[39,40]]]]],[[46,[[0,[39,40]]]]]],[47,47],[[[48,[40]]],[[48,[40]]]],[[[49,[[0,[39,40]]]]],[[49,[[0,[39,40]]]]]],[50,50],[[[51,[[0,[39,40]]]]],[[51,[[0,[39,40]]]]]],[52,52],[[[53,[39]]],[[53,[39]]]],[[[54,[[0,[39,40]]]]],[[54,[[0,[39,40]]]]]],[[[55,[[0,[39,40]]]]],[[55,[[0,[39,40]]]]]],[56,56],[57,57],[16,16],[24,24],[25,25],[[[58,[40]]],[[58,[40]]]],[[[59,[40]]],[[59,[40]]]],[[[60,[[0,[39,40]]]]],[[60,[[0,[39,40]]]]]],[[[61,[40]]],[[61,[40]]]],[[[21,[[0,[39,40]]]]],[[21,[[0,[39,40]]]]]],[[[62,[40]]],[[62,[40]]]],[[[17,[[0,[39,40]]]]],[[17,[[0,[39,40]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],0,0,[52,[[5,[4]]]],[[6,6],63],[[7,7],63],[[8,8],63],[[9,9],63],[[10,10],63],[[11,11],63],[[12,12],63],[[13,13],63],[64],[64],[14,16],[[[65,[15]],66,67]],[[13,64]],[[13,64]],0,[45,[[5,[20]]]],[38,[[5,[20]]]],[35,[[5,[20]]]],[46,[[5,[20]]]],[49,[[5,[28]]]],[[],[[5,[20]]]],[41,[[5,[20]]]],[[[68,[19]]],[[5,[20]]]],[51,[[5,[28]]]],[37,[[5,[20]]]],[[69,70],[[5,[27]]]],[[71,72],[[5,[29]]]],[14,[[5,[20]]]],[36,[[5,[20]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],0,0,[[]],[[]],[[[73,[15]]]],[66],0,[[15,15,15,15]],[[15,15,74,15,15]],[[66,15]],[[66,66,15]],[[66,15]],[[66,66,15]],0,0,0,0,[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[]],[[]],[[],[[5,[20]]]],0,0,[15],[[]],0,0,0,[[],[[76,[75]]]],[[20,20],63],[[27,27],63],[[28,28],63],[[4,4],63],[[6,6],63],[[7,7],63],[[8,8],63],[[9,9],63],[[10,10],63],[[11,11],63],[[12,12],63],[[13,13],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[]],[[6,77]],[[7,77]],[[8,77]],[[9,77]],[[10,77]],[[11,77]],[[12,77]],[[13,77]],0,0,0,0,0,0,0,0,[64],[[78,79],80],[[20,79],80],[[20,79],80],[[27,79],80],[[27,79],80],[[28,79],80],[[28,79],80],[[4,79],80],[[4,79],80],[[29,79],80],[[29,79],80],[[6,79],80],[[6,79],80],[[6,79],80],[[6,79],80],[[6,79],80],[[7,79],80],[[7,79],80],[[7,79],80],[[7,79],80],[[7,79],80],[[8,79],80],[[8,79],80],[[8,79],80],[[8,79],80],[[8,79],80],[[9,79],80],[[9,79],80],[[9,79],80],[[9,79],80],[[9,79],80],[[10,79],80],[[10,79],80],[[10,79],80],[[10,79],80],[[10,79],80],[[11,79],80],[[11,79],80],[[11,79],80],[[11,79],80],[[11,79],80],[[12,79],80],[[12,79],80],[[12,79],80],[[12,79],80],[[12,79],80],[[13,79],80],[[13,79],80],[[13,79],80],[[13,79],80],[[13,79],80],[[30,79],80],[[31,79],80],[[32,79],80],[[[75,[[0,[81,40]]]],79],80],[[33,79],80],[[[3,[[0,[81,40]]]],79],80],[[[82,[[0,[81,40]]]],79],80],[[34,79],80],[[35,79],80],[[14,79],80],[[36,79],80],[[37,79],80],[[38,79],80],[[[41,[[0,[81,40]]]],79],80],[[[42,[[0,[81,40]]]],79],80],[[[43,[[0,[81,40]]]],79],80],[[44,79],80],[[[45,[[0,[81,40]]]],79],80],[[[46,[[0,[81,40]]]],79],80],[[47,79],80],[[[48,[[0,[81,40]]]],79],80],[[[49,[[0,[81,40]]]],79],80],[[50,79],80],[[[51,[[0,[81,40]]]],79],80],[[52,79],80],[[[53,[81]],79],80],[[[54,[[0,[81,40]]]],79],80],[[[55,[[0,[81,40]]]],79],80],[[56,79],80],[[57,79],80],[[16,79],80],[[24,79],80],[[25,79],80],[[[58,[[0,[81,40]]]],79],80],[[[59,[[0,[81,40]]]],79],80],[[[60,[[0,[81,40]]]],79],80],[[[61,[[0,[81,40]]]],79],80],[[[21,[[0,[81,40]]]],79],80],[[[62,[[0,[81,40]]]],79],80],[[[17,[[0,[81,40]]]],79],80],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[20,27],[[]],[[]],[20,28],[20,4],[[]],[[]],[[]],[[]],[[]],[83,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[2,[6]]]],[15,[[2,[7]]]],[15,[[2,[8]]]],[22,[[2,[9]]]],[15,[[2,[10]]]],[22,[[2,[11]]]],[23,[[2,[12]]]],[23,[[2,[13]]]],[15,6],[15,6],[15,7],[15,7],[15,8],[15,8],[22,9],[22,9],[15,10],[15,10],[22,11],[22,11],[23,12],[23,12],[23,13],[23,13],[15,6],[15,7],[15,8],[22,9],[15,10],[22,11],[23,12],[23,13],[77,6],[77,7],[77,8],[77,9],[77,10],[77,11],[77,12],[77,13],[18,[[2,[6]]]],[18,[[2,[7]]]],[18,[[2,[8]]]],[18,[[2,[9]]]],[18,[[2,[10]]]],[18,[[2,[11]]]],[18,[[2,[12]]]],[18,[[2,[13]]]],[84,63],[[],[[5,[85,20]]]],[[],86],[[],87],0,0,[[6,88]],[[7,88]],[[8,88]],[[9,88]],[[10,88]],[[11,88]],[[12,88]],[[13,88]],0,0,0,[30,[[5,[29]]]],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[18],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[6,6],63],[[7,7],63],[[8,8],63],[[9,9],63],[[10,10],63],[[11,11],63],[[12,12],63],[[13,13],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[7],[8],[9],[10],[11],[12],[13],[64],[6,63],[7,63],[8,63],[9,63],[10,63],[11,63],[12,63],[13,63],0,[14,63],[6,63],[7,63],[8,63],[9,63],[10,63],[11,63],[12,63],[13,63],[9,63],[6,[[89,[6]]]],[7,[[89,[7]]]],[8,[[89,[8]]]],[9,[[89,[9]]]],[10,[[89,[10]]]],[11,[[89,[11]]]],[12,[[89,[12]]]],[13,[[89,[13]]]],[6,[[90,[6]]]],[7,[[90,[7]]]],[8,[[90,[8]]]],[9,[[90,[9]]]],[10,[[90,[10]]]],[11,[[90,[11]]]],[12,[[90,[12]]]],[13,[[90,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,91],[26,[[5,[34,20]]]],[[92,93],16],[[57,16],16],0,0,0,[[16,16],16],0,0,0,0,0,0,0,0,0,0,[[83,91],9],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],0,0,[[94,95],[[5,[82,20]]]],0,0,[[],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[64],[[[65,[15]]]],0,0,0,0,0,0,[[6,6,63]],[[7,7,63]],[[8,8,63]],[[9,9,63]],[[10,10,63]],[[11,11,63]],[[12,12,63]],[[13,13,63]],[[15,[97,[96]]]],[[[73,[87]]]],[[]],[[42,98]],[[99,15,[97,[15]]]],[[]],[[[53,[15]]]],[15],[[15,42]],[[[53,[87]],[65,[87]]]],0,0,0,0,0,0,[27,[[2,[100]]]],[28,[[2,[100]]]],[4,[[2,[100]]]],[29,[[2,[100]]]],0,0,0,0,[[],63],0,0,[[]],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[[97,2],[[5,[20]]]],0,[[],[[2,[33]]]],0,0,[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],0,0,0,0,0,[83,8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],101],[[],101],[[],101],[[],101],[[],101],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[12,12]],[[13,13]],[64],[64],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[]],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[],[[5,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,15],[[5,[63,20]]]],0,[15],0,0,0,0,0,0,[103,99],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[104,[2,[1]]],[[5,[[2,[[3,[105]]]],4]]]],[[106,[17,[105]]]],[[106,18]],[[106,19],[[5,[20]]]],[[106,107,15]],[[106,[21,[105]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[106,107,26]],[105,105],[[]],[[104,104,52],[[5,[4]]]],[[106,107,107]],[[106,107,107]],[[106,107,[65,[15]],107,66,67]],[[106,107,13,107]],[[106,107,13,107]],[[104,[45,[105]]],[[5,[107,20]]]],[[104,38],[[5,[107,20]]]],[[104,35],[[5,[107,20]]]],[[104,[46,[105]]],[[5,[106,20]]]],[[104,[49,[105]]],[[5,[107,28]]]],[104,[[5,[107,20]]]],[[104,[41,[105]]],[[5,[107,20]]]],[[104,[68,[19]]],[[5,[107,20]]]],[[104,[51,[105]]],[[5,[107,28]]]],[[104,37],[[5,[107,20]]]],[[104,69,70],[[5,[107,27]]]],[[104,71,72],[[5,[104,29]]]],[[104,14],[[5,[107,20]]]],[[104,107,36],[[5,[107,20]]]],[[104,107]],[[104,107]],[[104,107]],[[104,106]],[[104,107]],[[104,107]],[[104,107]],[[104,107]],[[104,107]],[[104,107]],[[104,107]],[[104,104]],[[104,107]],[[104,107]],[106],[[104,107]],[[106,[73,[15]]]],[[106,107,66]],[[106,15,15,15,15]],[[106,15,15,74,15,15]],[[106,107,66,15]],[[106,107,66,107,66,15]],[[106,107,66,15]],[[106,107,66,107,66,15]],[106],[106],[106,[[5,[107,20]]]],[[106,107,15]],[106],[104,[[76,[[75,[105]]]]]],[[104,104]],[[104,107]],[[105,79],80],[[106,79],80],[[107,79],80],[[]],[[]],[[]],[[]],[[104,107],[[5,[85,20]]]],[104,86],[104,87],[30,[[5,[104,29]]]],[[106,18]],[[]],[[]],[[]],[[]],[[104,107]],[[104,107,26],[[5,[34,20]]]],[[104,94,95],[[5,[[82,[105]],20]]]],[[104,104,107],[[5,[4]]]],[106],[[106,107,[65,[15]]]],[[106,107,15,107,[97,[96]]]],[[106,[73,[87]]]],[[106,107]],[[106,[42,[105]],98]],[[106,107,99,15,[97,[15]]]],[[106,107]],[[106,[53,[15]]]],[[106,15]],[[106,15,[42,[105]]]],[[106,[53,[87]],[65,[87]]]],[104,63],[104],[[104,[97,[107]],2],[[5,[20]]]],[[104,104],[[2,[33]]]],[[104,83],8],[[]],[[106,64]],[[106,64]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[104,104]],[[104,107],[[5,[20]]]],[[104,107,85,15],[[5,[63,20]]]],[[106,107,15]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[108,[2,[1]]],[[5,[[2,[[3,[109]]]],4]]]],[[],110],[[111,[17,[109]]]],[[111,18]],[[111,19],[[5,[20]]]],[[111,112,15]],[[111,[21,[109]]]],[[110,110],110],[[110,110]],[[110,110],110],[[110,110]],[110,15],[110,15],[[110,110],110],[[110,110]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[115,66],116],[[111,116,26]],[109,109],[110,110],[112,112],[[]],[[]],[[]],[110,110],[[108,117,52],[[5,[4]]]],[[110,110],63],[[111,116,116,64]],[[111,116,114,64]],[[111,112,[65,[15]],116,66,67]],[[111,114,13,116,64]],[[111,114,13,114,64]],[[117,[45,[109]]],[[5,[118,20]]]],[[117,38],[[5,[119,20]]]],[[117,35],[[5,[116,20]]]],[[117,[46,[109]]],[[5,[111,20]]]],[[117,[49,[109]]],[[5,[120,28]]]],[117,[[5,[121,20]]]],[[117,[41,[109]]],[[5,[122,20]]]],[[117,[68,[19]]],[[5,[112,20]]]],[[117,[51,[109]]],[[5,[123,28]]]],[[117,37],[[5,[124,20]]]],[[117,69,70],[[5,[125,27]]]],[[126,71,72],[[5,[108,29]]]],[[126,127],108],[[117,14],[[5,[114,20]]]],[[117,114,36],[[5,[128,20]]]],[[],118],[[117,118]],[[117,119]],[[117,116]],[[117,111]],[[117,120]],[[117,121]],[[117,122]],[[117,112]],[[117,123]],[[117,124]],[[117,125]],[[126,108]],[[117,114]],[[117,128]],[[129,94],117],[[110,110],110],[111],[[108,113]],[[111,[73,[15]]]],[[111,116,66]],[108],[[111,15,15,15,15]],[[111,15,15,74,15,15]],[[111,116,66,15]],[[111,116,66,116,66,15]],[[111,116,66,15]],[[111,116,66,116,66,15]],[111],[[],110],[111],[111],[111,[[5,[130,20]]]],[[111,112,15]],[111],[126,[[76,[[75,[109]]]]]],[[117,131]],[[110,77]],[[117,116]],[[111,79],80],[[109,79],80],[[110,79],80],[[110,79],80],[[110,79],80],[[110,79],80],[[110,79],80],[[113,79],80],[[116,79],80],[[114,79],80],[[128,79],80],[[124,79],80],[[119,79],80],[[122,79],80],[[118,79],80],[[125,79],80],[[112,79],80],[[121,79],80],[[130,79],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[2,[110]]]],[15,110],[15,110],[15,110],[77,110],[127,108],[18,[[2,[110]]]],[[132,[2,[0]]],108],[[117,121],[[5,[85,20]]]],[133,86],[131,87],[30,[[5,[126,29]]]],[[110,110]],[[111,18]],[[110,110],110],[[110,110],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110],[[117,116]],[110,63],[110,63],[110,[[89,[110]]]],[110,[[90,[110]]]],[[117,116,26],[[5,[34,20]]]],[110,110],[[133,94,95],[[5,[[82,[109]],20]]]],[[131,108,113],[[5,[4]]]],0,[[134,87],131],[117,[[135,[129]]]],[[110,110]],[[111,64]],[[111,112,[65,[15]]]],[[110,110,63]],[[111,122,15,118,[97,[96]]]],[[111,[73,[87]]]],[[111,120]],[[111,[42,[109]],98]],[[111,122,99,15,[97,[15]]]],[[111,123]],[[111,[53,[15]]]],[[111,15]],[[111,15,[42,[109]]]],[[111,[53,[87]],[65,[87]]]],[117,63],[117],[[110,110],110],[[110,110]],[[131,[97,[130]],2],[[5,[20]]]],[[133,108],[[2,[33]]]],[[110,110],110],[[133,83],8],[[136,83,137,15,15,16],114],[[]],[[]],[[]],[[110,110]],[[111,64]],[[111,64]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[],102],[[108,117]],[[110,110],110],[[117,116],[[5,[20]]]],[[117,121,85,15],[[5,[63,20]]]],[[111,112,15]]],"c":[],"p":[[3,"Duration"],[4,"Option"],[3,"AcquiredSurfaceTexture"],[4,"SurfaceError"],[4,"Result"],[3,"PipelineLayoutFlags"],[3,"BindGroupLayoutFlags"],[3,"TextureFormatCapabilities"],[3,"FormatAspects"],[3,"MemoryFlags"],[3,"AttachmentOps"],[3,"BufferUses"],[3,"TextureUses"],[3,"TextureDescriptor"],[15,"u32"],[3,"CopyExtent"],[3,"ComputePassDescriptor"],[15,"str"],[6,"Label"],[4,"DeviceError"],[3,"RenderPassDescriptor"],[15,"u8"],[15,"u16"],[3,"TextureCopy"],[3,"BufferTextureCopy"],[6,"MemoryRange"],[4,"ShaderError"],[4,"PipelineError"],[3,"InstanceError"],[3,"InstanceDescriptor"],[3,"Alignments"],[3,"Capabilities"],[3,"SurfaceCapabilities"],[3,"BufferMapping"],[3,"BufferDescriptor"],[3,"TextureViewDescriptor"],[3,"SamplerDescriptor"],[3,"BindGroupLayoutDescriptor"],[8,"Clone"],[8,"Api"],[3,"PipelineLayoutDescriptor"],[3,"BufferBinding"],[3,"TextureBinding"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"CommandEncoderDescriptor"],[3,"DebugSource"],[3,"ProgrammableStage"],[3,"ComputePipelineDescriptor"],[3,"VertexBufferLayout"],[3,"RenderPipelineDescriptor"],[3,"SurfaceConfiguration"],[3,"Rect"],[3,"BufferBarrier"],[3,"TextureBarrier"],[3,"BufferCopy"],[3,"TextureCopyBase"],[3,"Attachment"],[3,"ColorAttachment"],[3,"DepthStencilAttachment"],[3,"RenderPassTimestampWrites"],[3,"ComputePassTimestampWrites"],[15,"bool"],[8,"Iterator"],[3,"Range"],[6,"BufferAddress"],[6,"BufferSize"],[3,"QuerySetDescriptor"],[3,"ShaderModuleDescriptor"],[4,"ShaderInput"],[4,"RawDisplayHandle"],[4,"RawWindowHandle"],[15,"array"],[15,"i32"],[3,"ExposedAdapter"],[3,"Vec"],[8,"IntoIterator"],[3,"NagaShader"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"OpenDevice"],[4,"TextureFormat"],[3,"ValidationCanary"],[6,"FenceValue"],[3,"PresentationTimestamp"],[15,"f32"],[8,"Hasher"],[3,"Iter"],[3,"IterNames"],[4,"TextureAspect"],[3,"Extent3d"],[4,"TextureDimension"],[3,"Features"],[3,"Limits"],[6,"DynamicOffset"],[15,"slice"],[4,"IndexFormat"],[3,"ShaderStages"],[8,"Error"],[3,"String"],[3,"TypeId"],[4,"ShaderStage"],[3,"Context"],[3,"Api"],[3,"Encoder"],[3,"Resource"],[3,"Surface"],[3,"Api"],[3,"TimestampQuerySupport"],[3,"CommandEncoder"],[3,"QuerySet"],[3,"SurfaceTexture"],[3,"Texture"],[3,"Buffer"],[3,"Buffer"],[3,"Device"],[3,"BindGroup"],[3,"BindGroupLayout"],[3,"ComputePipeline"],[3,"Fence"],[3,"PipelineLayout"],[3,"RenderPipeline"],[3,"Sampler"],[3,"ShaderModule"],[3,"Instance"],[3,"MetalLayerRef"],[3,"TextureView"],[3,"Device"],[3,"CommandBuffer"],[3,"Queue"],[6,"c_void"],[3,"Adapter"],[3,"CommandQueue"],[6,"Mutex"],[3,"Texture"],[4,"MTLTextureType"],[8,"Surface"],[8,"CommandEncoder"],[8,"Device"],[8,"Instance"],[8,"Adapter"],[8,"Queue"]]},\
"wgpu_types":{"doc":"This library describes the API surface of WebGPU that is …","t":"SSSSSSDNENNNEENNNNNNNNNNNNNNNNNNSSSSSSSSSNEDNNNNNNNNNNNNNNNNDEDEEDNNGEDGDSSSSSSSSSRRSSSSSNNNDDDDDENENNNNNNNNNNNNSSSSSSSSSNNNNNNNNDNDDENDNDDDDDNNNNENGNNNNNNNNNNNNDSSSSSSEDNNNENNNNNNNNNNNNNENSSSNENNNNNSSSSSSSDDDDDNNNENNDDNNNNNDNNNNNNSRSSSSSSSSSSSSNENNNNDSSSNNNNNSNNNNNNNNNNNNDDNNSSSSSSSRNDNNNENENEEDDEDSRRRDENNNNNNNNNNNNSSSSSSSNNDDNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSNEEDGEDNNNNNNNNNNNNNNNNNNNNNNNDNEDNNENNDDESSSSSSSSSSSNEDEEDDEDENNNNNSSSSNNNNNNNNNNNNNNNNNNSSSSSSSRSSSNNNNDEENNSSNNIINSSNNNMLLLLLLLLLLLLLMMMMMLMMMMLAMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMMLLLLLLLLLLMMAMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMLLLMLLLLLLLLLLLLLLMMMMMLLLLLMLMMMMMMMMLLLLLLLLLLLLLMLMLLLLLLLLLLLLMMLMMMMMMMOOOMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMLLLMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMIKF","n":["ADDRESS_MODE_CLAMP_TO_BORDER","ADDRESS_MODE_CLAMP_TO_ZERO","ALL","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","AdapterInfo","Add","AddressMode","All","Always","Astc","AstcBlock","AstcChannel","Auto","AutoNoVsync","AutoVsync","Automatic","B10x10","B10x5","B10x6","B10x8","B12x10","B12x12","B4x4","B5x4","B5x5","B6x5","B6x6","B8x5","B8x6","B8x8","BASE_VERTEX","BGRA8UNORM_STORAGE","BLACK","BLENDABLE","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDINGS_NOT_16_BYTE_ALIGNED","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbFloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroupLayoutEntry","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","BufferAddress","BufferBindingType","BufferDescriptor","BufferSize","BufferUsages","CLEAR_TEXTURE","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Color","ColorTargetState","ColorWrites","CommandBufferDescriptor","CommandEncoderDescriptor","CompareFunction","Comparison","CompositeAlphaMode","Constant","Cpu","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEBUG","DEPTH32FLOAT_STENCIL8","DEPTH_BIAS_CLAMP","DEPTH_CLIP_CONTROL","DEPTH_TEXTURE_AND_BUFFER_COPIES","DISCARD_HAL_LABELS","DUAL_SOURCE_BLENDING","DX11","DX12","DecrementClamp","DecrementWrap","Depth","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","DepthBiasState","DepthOnly","DepthStencilState","DeviceDescriptor","DeviceType","DiscreteGpu","DispatchIndirectArgs","DisplayP3","DownlevelCapabilities","DownlevelFlags","DownlevelLimits","DrawIndexedIndirectArgs","DrawIndirectArgs","Dst","DstAlpha","Dx11","Dx12","Dx12Compiler","Dxc","DynamicOffset","EacR11Snorm","EacR11Unorm","EacRg11Snorm","EacRg11Unorm","Empty","Equal","Etc2Rgb8A1Unorm","Etc2Rgb8A1UnormSrgb","Etc2Rgb8Unorm","Etc2Rgb8UnormSrgb","Etc2Rgba8Unorm","Etc2Rgba8UnormSrgb","Extent3d","FILTERABLE","FRAGMENT","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","FULL_DRAW_INDEX_UINT32","Face","Features","Fifo","FifoRelaxed","Fill","FilterMode","Filtering","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","Front","FrontFace","Fxc","GL","GREEN","GREEN","Gl","Gles3MinorVersion","Good","Greater","GreaterEqual","Hdr","HighPerformance","IGNORE","INDEPENDENT_BLEND","INDEX","INDIRECT","INDIRECT_EXECUTION","INDIRECT_FIRST_INSTANCE","INVALID_TIMESTAMP","ImageCopyBuffer","ImageCopyTexture","ImageCopyTextureTagged","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Inherit","Instance","InstanceDescriptor","InstanceFlags","IntegratedGpu","Invert","Keep","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTISAMPLED_SHADING","MULTISAMPLE_RESOLVE","MULTISAMPLE_X16","MULTISAMPLE_X2","MULTISAMPLE_X4","MULTISAMPLE_X8","MULTIVIEW","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","Max","Metal","Min","MirrorRepeat","MultisampleState","NONBLOCKING_QUERY_RESOLVE","NONE","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","Nearest","Never","NonFiltering","None","NotEqual","OVER","Occlusion","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrc1","OneMinusSrc1Alpha","OneMinusSrcAlpha","Opaque","OpaqueBlack","OpaqueWhite","Origin2d","Origin3d","Other","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineStatistics","PipelineStatisticsTypes","Point","PointList","Poll","PolygonMode","PostMultiplied","PowerPreference","PreMultiplied","PredefinedColorSpace","PresentMode","PresentationTimestamp","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySetDescriptor","QueryType","R16Float","R16Sint","R16Snorm","R16Uint","R16Unorm","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","RG11B10UFLOAT_RENDERABLE","ReadOnly","ReadWrite","RenderBundleDepthStencil","RenderBundleDescriptor","Repeat","Replace","RequestAdapterOptions","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Snorm","Rg16Uint","Rg16Unorm","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Uint","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Snorm","Rgba16Uint","Rgba16Unorm","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_EARLY_DEPTH_TEST","SHADER_F16","SHADER_F64","SHADER_I16","SHADER_PRIMITIVE_INDEX","SHADER_UNUSED_VERTEX_OUTPUT","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","SURFACE_VIEW_FORMATS","Sampler","SamplerBindingType","SamplerBorderColor","ShaderBoundChecks","ShaderLocation","ShaderModel","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","Src","Src1","Src1Alpha","SrcAlpha","SrcAlphaSaturated","Srgb","Stencil8","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Suboptimal","Subtract","SurfaceCapabilities","SurfaceConfiguration","SurfaceStatus","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC","TEXTURE_COMPRESSION_ASTC_HDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TEXTURE_FORMAT_16BIT_NORM","TIMESTAMP_QUERY","TIMESTAMP_QUERY_INSIDE_PASSES","TRANSPARENT","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureViewDimension","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNRESTRICTED_EXTERNAL_TEXTURE_COPIES","UNRESTRICTED_INDEX_BUFFER","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","Uniform","Unorm","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","UnormSrgb","VALIDATION","VERTEX","VERTEX","VERTEX_ATTRIBUTE_64BIT","VERTEX_FRAGMENT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VIEW_FORMATS","VULKAN","Version0","Version1","Version2","Vertex","VertexAttribute","VertexFormat","VertexStepMode","VirtualGpu","Vulkan","WEBGPU_TEXTURE_FORMAT_SUPPORT","WHITE","Wait","WaitForSubmissionIndex","WasmNotSend","WasmNotSync","WriteOnly","ZERO","ZERO","Zero","Zero","Zero","a","add_srgb_suffix","all","all","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_mode","alpha_modes","alpha_to_coverage_enabled","array_layer_count","array_layer_count","aspect","aspect","aspect","aspect_specific_format","assertions","b","back","backend","backends","base_array_layer","base_mip_level","base_vertex","bias","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","block_dimensions","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytes_per_row","check_limits","check_limits_with_fail_fn","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","color_space","compare","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","compliant","components","components_with_aspect","compute_render_extent","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","contains_invalid_bits","count","count","count","cull_mode","debugging","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_or_array_layers","depth_read_only","depth_write_enabled","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dimension","downlevel_defaults","downlevel_webgl2_defaults","driver","driver_info","dst_factor","dx12_shader_compiler","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","first_index","first_instance","first_instance","first_vertex","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","format","format","format","format","format","format","formats","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_build_config","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","front","front_face","g","gles_minor_version","group_size_x","group_size_y","group_size_z","guaranteed_format_features","has_color_aspect","has_depth_aspect","has_dynamic_offset","has_stencil_aspect","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","index_count","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","instance_count","instance_count","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_combined_depth_stencil_format","is_compressed","is_depth_enabled","is_depth_read_only","is_depth_stencil_component","is_depth_stencil_format","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_full_resource","is_invalid","is_read_only","is_read_only","is_read_only","is_srgb","is_stencil_read_only","is_strip","is_wait","is_webgpu_compliant","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","label","label","label","label","label","label","label","layer_range","layout","limits","limits","map_index","map_label","map_label","map_label","map_label","map_label","map_label","map_label","map_label_and_view_formats","map_view_formats","mapped_at_creation","mask","math","max_bind_groups","max_bindings_per_bind_group","max_buffer_size","max_compute_invocations_per_workgroup","max_compute_workgroup_size_x","max_compute_workgroup_size_y","max_compute_workgroup_size_z","max_compute_workgroup_storage_size","max_compute_workgroups_per_dimension","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_inter_stage_shader_components","max_mips","max_non_sampler_bindings","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level","mip_level_count","mip_level_count","mip_level_size","mip_level_size","mip_range","name","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","not","not","offset","offset","operation","origin","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","polygon_mode","power_preference","premultiplied_alpha","present_mode","present_modes","r","range","read_mask","ref_second_blend_source","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove_srgb_suffix","required_features","rows_per_image","runtime_checks","sample_count","sample_count_supported","sample_type","set","set","set","set","set","set","set","set","set","set","shader_location","shader_model","size","size","size","slope_scale","src_factor","stages","stencil","stencil_read_only","strict_assert","strict_assert_eq","strict_assert_ne","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","texture","texture","to_2d","to_3d","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_tagged","to_untagged","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked","unclipped_depth","union","union","union","union","union","union","union","union","union","union","usage","usage","usage","usages","uses_constant","using_alignment","using_resolution","vendor","vertex_count","view_formats","view_formats","visibility","width","width","with_env","write_mask","write_mask","x","x","y","y","z","access","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","dxc_path","dxil_path","block","channel","filterable","StrictAssertUnwrapExt","strict_unwrap_unchecked","align_to"],"q":[[0,"wgpu_types"],[2411,"wgpu_types::BindingType"],[2420,"wgpu_types::BufferBindingType"],[2421,"wgpu_types::Dx12Compiler"],[2423,"wgpu_types::TextureFormat"],[2425,"wgpu_types::TextureSampleType"],[2426,"wgpu_types::assertions"],[2428,"wgpu_types::math"]],"d":["Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Allows the use of <code>AddressMode::ClampToBorder</code> with a border …","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","block compressed texture. 16 bytes per block.","ASTC block dimensions","ASTC RGBA channel","Chooses either <code>Opaque</code> or <code>Inherit</code> automatically，depending …","Chooses Immediate -&gt; Mailbox -&gt; Fifo (on web) based on …","Chooses FifoRelaxed -&gt; Fifo based on availability.","No explicit minor version is requested, the driver …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to indexed draw …","Allows the [<code>wgpu::TextureUsages::STORAGE_BINDING</code>] usage on …","","If not present, the texture can’t be blended into the …","Enable blue channel writes","","Supported when targeting the web through webassembly","Supports buffer bindings with sizes that aren’t a …","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Describes a single binding inside a bind group.","Specific type of a binding.","Describes a blend component of a <code>BlendState</code>.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline, within …","WebGPU in the browser","A buffer binding.","Integral type used for buffer offsets.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Different ways that you can use a buffer.","Enables clear to zero for textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","Binding is visible from the compute shader of a compute …","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Describes a <code>CommandBuffer</code>.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","Use as a comparison sampler instead of a normal sampler. …","Specifies how the alpha channel of the textures should be …","Constant","Cpu / Software Rendering.","A cubemap texture. <code>texture_cube</code> in WGSL and <code>textureCube</code> in …","A cubemap array texture. <code>texture_cube_array</code> in WGSL and …","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture_1d</code> in WGSL and <code>texture1D</code>…","1D texture","A two dimensional texture. <code>texture_2d</code> in WGSL and <code>texture2D</code>…","2D texture","A two dimensional array texture. <code>texture_2d_array</code> in WGSL …","A three dimensional texture. <code>texture_3d</code> in WGSL and …","3D texture","Generate debug information in shaders and objects.","Allows for explicit creation of textures of format …","Supports depth bias clamping","By default, polygon depth is clipped to 0-1 range …","Supports copies between depth textures and buffers.","Don’t pass labels to wgpu-hal.","Allows two outputs from a shader to be used for blending. …","Supported on Windows 7+","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with 16 bit integer depth.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Special depth/stencil format with 32 bit floating point …","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","Describes a <code>Device</code>.","Supported physical device types.","Discrete GPU with separate CPU/GPU memory.","Argument buffer layout for dispatch_indirect commands.","Display-P3 color space","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","Represents the sets of additional limits on an adapter, …","Argument buffer layout for draw_indexed_indirect commands.","Argument buffer layout for draw_indirect commands.","D.component","D.alpha","Direct3D-11 (Windows)","Direct3D-12 (Windows)","Selects which DX12 shader compiler to use.","The Dxc compiler is new, fast and maintained.","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value. …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Extent of a texture related operation.","If not present, the texture can’t be sampled with a …","Binding is visible from the fragment shader of a render …","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Supports full 32-bit range indices (2^32-1 as opposed to …","Face of a vertex.","Features that are not guaranteed to be supported.","Presentation frames are kept in a First-In-First-Out queue …","Presentation frames are kept in a First-In-First-Out queue …","Polygons are filled","Texel mixing mode when sampling between texels.","The sampling result is produced based on more than a …","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2&lt;f32&gt;</code> in …","Four half-precision floats (no Rust equiv). <code>vec4&lt;f32&gt;</code> in …","One single-precision float (f32). <code>f32</code> in shaders.","Two single-precision floats (f32). <code>vec2&lt;f32&gt;</code> in shaders.","Three single-precision floats (f32). <code>vec3&lt;f32&gt;</code> in shaders.","Four single-precision floats (f32). <code>vec4&lt;f32&gt;</code> in shaders.","One double-precision float (f64). <code>f32</code> in shaders. Requires …","Two double-precision floats (f64). <code>vec2&lt;f32&gt;</code> in shaders. …","Three double-precision floats (f64). <code>vec3&lt;f32&gt;</code> in shaders. …","Four double-precision floats (f64). <code>vec4&lt;f32&gt;</code> in shaders. …","Front face","Vertex winding order which classifies the “front” face …","The Fxc compiler (default) is old, slow and unmaintained.","Supported on Linux/Android, the web through webassembly …","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","Selects which OpenGL ES 3 minor version to request.","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","floating-point RGBA, linear-color float can be outside of …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blend operations per color attachment.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","Allows non-zero value for the “first instance” in …","A timestamp that is invalid due to the platform not having …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to a texture, …","Layout of a texture in a buffer’s memory.","Subresource range within an image","Presentation frames are not queued at all. The moment a …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","The alpha channel, if it exists, of the textures is …","Vertex data is advanced every instance.","Options for creating an instance.","Instance debugging flags.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Supports sample-rate shading.","Allows a texture of this format to back a view passed as …","Allows <code>TextureDescriptor::sample_count</code> to be <code>16</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>2</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>4</code>.","Allows <code>TextureDescriptor::sample_count</code> to be <code>8</code>.","Enables multiview render passes and <code>builtin(view_index)</code> in …","Allows the user to call <code>RenderPass::multi_draw_indirect</code> …","Allows the user to call …","Presentation frames are kept in a single-frame queue. …","Passed to <code>Device::poll</code> to control how and if it should …","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","If this is true, calls to <code>CommandEncoder::resolve_query_set</code>…","Binding is not visible from any shader stage.","Supports textures with mipmaps which have a non power of …","Nearest neighbor sampling.","Function never passes","The sampling result is produced based on a single color …","Power usage is not considered when choosing an adapter.","Function passes if new value is not equal to existing …","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S1.component","1.0 - S1.alpha","1.0 - S.alpha","The alpha channel, if it exists, of the textures is …","[0, 0, 0, 1]","[1, 1, 1, 1]","Origin of a copy from a 2D image.","Origin of a copy to/from a texture.","Other or Unknown.","The surface under the swap chain has changed.","Allows the user to create bind groups containing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Check the device for a single time without blocking.","Type of drawing mode for polygons","The alpha channel, if it exists, of the textures is …","Power Preference when choosing a physical adapter.","The alpha channel, if it exists, of the textures is …","Color spaces supported on the web.","Behavior of the presentation engine based on frame rate.","Nanosecond timestamp used by the presentation engine.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","Allow a buffer to be the destination buffer for a […","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Describes how to create a QuerySet.","Type of query contained in a QuerySet.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 16 bit integer per channel. [0, 65535] …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil texture while using …","Enable red channel writes","","Allows a texture to be an output attachment of a render …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Allows for usage of textures of format …","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader and …","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","Options for requesting adapter.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 16 bit integer per channel. [0, …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha. 16 bit integer per channel. […","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Allows shaders to use the <code>early_depth_test</code> attribute.","Allows shaders to acquire the FP16 ability","Enables 64-bit floating point types in SPIR-V shaders.","Allows shaders to use i16. Not currently supported in <code>naga</code>…","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Allows vertex shaders to have outputs which are not …","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Supports specifying which view formats are allowed when …","A sampler that can be used to sample a texture.","Specific type of a sampler binding.","Color variation to use when sampler addressing mode is …","Describes how shader bound checks should be performed.","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed shorts (i16). <code>vec4&lt;i32&gt;</code> in shaders.","One signed int (i32). <code>i32</code> in shaders.","Two signed ints (i32). <code>vec2&lt;i32&gt;</code> in shaders.","Three signed ints (i32). <code>vec3&lt;i32&gt;</code> in shaders.","Four signed ints (i32). <code>vec4&lt;i32&gt;</code> in shaders.","Two signed bytes (i8). <code>vec2&lt;i32&gt;</code> in shaders.","Four signed bytes (i8). <code>vec4&lt;i32&gt;</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","S.component","S1.component","S1.alpha","S.alpha","min(S.alpha, 1.0 - D.alpha)","sRGB color space","Stencil format with 8 bit integer stencil.","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","The swap chain is operational, but it does no longer …","Src - Dst","Defines the capabilities of a given surface and adapter.","Configures a <code>Surface</code> for presentation.","Status of the received surface image.","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables ASTC HDR family of compressed textures.","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables normalized <code>16-bit</code> texture formats.","Enables use of Timestamp Queries. These queries tell the …","Allows for timestamp queries inside render passes.","","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Dimensions of a particular texture view.","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","With this feature not present, there are the following …","Supports buffers to combine <code>BufferUsages::INDEX</code> with …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned shorts (u16). <code>vec4&lt;u32&gt;</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>u32</code> in shaders.","Two unsigned ints (u32). <code>vec2&lt;u32&gt;</code> in shaders.","Three unsigned ints (u32). <code>vec3&lt;u32&gt;</code> in shaders.","Four unsigned ints (u32). <code>vec4&lt;u32&gt;</code> in shaders.","Two unsigned bytes (u8). <code>vec2&lt;u32&gt;</code> in shaders.","Four unsigned bytes (u8). <code>vec4&lt;u32&gt;</code> in shaders.","A buffer for uniform values.","8 bit integer RGBA, [0, 255] converted to/from …","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","8 bit integer RGBA, Srgb-color [0, 255] converted to/from …","Enable validation, if possible.","Binding is visible from the vertex shader of a render …","Allow a buffer to be the vertex buffer in a draw operation.","Enables using 64-bit types for vertex attributes.","Binding is visible from the vertex and fragment shaders of …","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supports specifying which view format values are allowed …","Supported on Windows, Linux/Android, and macOS/iOS via …","Request an ES 3.0 context.","Request an ES 3.1 context.","Request an ES 3.2 context.","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Vertex Format for a <code>VertexAttribute</code> (input).","Whether a vertex buffer is indexed by vertex or by …","Virtual / Hosted.","Vulkan API","Supports all the texture usages described in WebGPU. If …","","Same as WaitForSubmissionIndex but waits for the most …","On native backends, block until the given submission has …","","","The texture can only be written in the shader and it:","Zero origin.","Zero origin.","0.0","Set stencil value to zero.","On the Metal backend, this is equivalent to …","Alpha component of the color","Adds an <code>Srgb</code> suffix to the given texture format, if the …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","Specifies how the alpha channel of the textures should be …","List of supported alpha modes to use with the given …","When enabled, produces another sample mask per pixel based …","Returns the number of array layers.","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The copy aspect.","The copy aspect.","Aspect of the texture. Color textures must be …","Returns the aspect-specific format of the original format","Macros for validation internal to the wgpu.","Blue component of the color","Back face mode.","Backend used for device","Which <code>Backends</code> to enable.","Base array layer.","Base mip level.","Added to each index value before indexing into the vertex …","Depth bias state.","Binding index. Must match shader index and be unique …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The blending that is used for this pipeline.","Returns the dimension of a block of texels.","Returns the texel block size of this formathe buffer to be copied to/from.","Bytes per “row” in an image.","Compares every limits within self is within the limits …","Compares every limits within self is within the limits …","Depth bias clamp value (absoluteolor equation.","The color space of this texture.","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","All flags that indicate if the backend is WebGPU compliant","Returns the number of components this format has.","Returns the number of components this format has taking …","Computes the render extent of this texture.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","Returns true if the bitflags contains bits that are not …","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Total count of queries the set contains. Must not be zero. …","The face culling mode.","Enable debugging and validation flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","The depth of the extent or the number of array layers","If the depth aspect of the depth stencil attachment is …","If disabled, depth will not be written to.","<code>Backend</code>-specific device ID of the adapter","Type of device","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Dimensions of the texture.","These default limits are guaranteed to be compatible with …","These default limits are guaranteed to be compatible with …","Driver name","Driver info","Multiplier for the destination, which is stored in the …","Which DX12 shader compiler to use.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Operation that is preformed when stencil test fails.","Features that the device should support. If any feature is …","Offset into the index buffer, in indices, begin drawing …","First instance to draw.","First instance to draw.","Offset into the vertex buffers, in vertices, to begin …","Combined boolean flags.","Additional property flags for the format.","Flags to tune the behavior of the instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the depth/stencil buffer, must be special depth …","Format of the input","The texture format of the swap chain. The only formats …","Format of the texture.","Format of the attachment.","List of supported formats to use with the given adapter. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Infer good defaults from the build type","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Front face mode.","The face to consider the front for the purpose of culling …","Green component of the color","Which OpenGL ES 3 minor version to request.","X dimension of the grid of workgroups to dispatch.","Y dimension of the grid of workgroups to dispatch.","Z dimension of the grid of workgroups to dispatch.","Returns the format features guaranteed by the WebGPU spec.","Returns <code>true</code> if the format has a color aspect","Returns <code>true</code> if the format has a depth aspect","Returns true for buffer bindings with dynamic offset …","Returns <code>true</code> if the format has a stencil aspect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the swap chain. Must be the same size as the …","Height of the extent","The number of indices to draw.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The number of instances to draw.","The number of instances to draw.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if the format is a combined depth-stencil …","Returns <code>true</code> for compressed formats.","Returns true if the depth testing is enabled.","Returns true if the state doesn’t mutate the depth …","Returns <code>true</code> if <code>self</code> is a depth or stencil component of …","Returns <code>true</code> if the format is a depth and/or stencil format","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns if the given range represents a full resource, …","Returns true if this timestamp is the invalid timestamp.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true if the face state doesn’t mutate the target …","Returns <code>true</code> for srgb formats.","Returns true if the state doesn’t mutate the stencil.","Returns true for strip topologies.","This maintain represents a wait of some kind.","Returns true if the underlying platform offers complete …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Debug label for the device.","Debug label of a buffer. This will show up in graphics …","Debug label for the command encoder. This will show up in …","Debug label of the texture. This will show up in graphics …","Debug label of this command buffer.","Debug label of the render bundle encoder. This will show …","Debug label for the query set.","Returns the layer range of a subresource range describes …","The layout of the texture data in this buffer.","Additional limits","Limits that the device should support. If any limit is “…","Map on the wait index type.","Takes a closure and maps the label of the device …","Takes a closure and maps the label of the buffer …","Takes a closure and maps the label of the command encoder …","Takes a closure and maps the label of the texture …","Takes a closure and maps the label of the command buffer …","Takes a closure and maps the label of the render bundle …","Takes a closure and maps the label of the query set …","Maps the label and view_formats of the texture descriptor …","Map view_formats of the texture descriptor into another.","Allows a buffer to be mapped immediately after they are …","Bitmask that restricts the samples of a pixel modified by …","Utilitary math functions.","Amount of bind groups that can be attached to a pipeline …","Maximum binding index allowed in <code>create_bind_group_layout</code>. …","A limit above which buffer allocations are guaranteed to …","Maximum value of the product of the <code>workgroup_size</code> …","The maximum value of the workgroup_size X dimension for a …","The maximum value of the workgroup_size Y dimension for a …","The maximum value of the workgroup_size Z dimension for a …","Maximum number of bytes used for workgroup memory in a …","The maximum value for each dimension of a …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Maximum allowed number of components (scalars) of input or …","Calculates the maximum possible count of mipmaps.","Maximum number of live non-sampler bindings.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","The target mip level of the texture.","Mip count of texture. For a texture with no extra mips, …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level. Does <em>not</em> …","Calculates the extent at a given mip level.","Returns the mip level range of a subresource range …","Adapter name","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Creates a new configuration where the shader is bound …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","The binary operation applied to the source and destination,","The base texel of the texture in the selected <code>mip_level</code>. …","The base texel of the texture in the selected <code>mip_level</code>.","","","","","","Operation that is performed when stencil test success.","Calculates the physical size backing a texture of the given","Controls the way each polygon is rasterized. Can be either …","Power preference for the adapter.","The premultiplication of this texture","Presentation mode of the swap chain. Fifo is the only mode …","List of supported presentation modes to use with the given …","Red component of the color","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Returns <code>true</code> if the blend factor references the second …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Strips the <code>Srgb</code> suffix from the given texture format.","Returns the required features (if any) in order to use the …","“Rows” that make up a single “image”.","Query whether runtime bound checks are enabled in this …","Sample count of texture. If this is not 1, texture must …","Sample count supported by a given texture format.","Returns the sample type compatible with this format and …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the byte size of the format.","Size of a buffer, in bytes.","Size of the texture. All components must be greater than …","Slope depth biasing factor.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Stencil state.","If the stencil aspect of the depth stencil attachment is …","This is equivalent to <code>std::assert</code> if the <code>strict_asserts</code> …","This is equivalent to <code>std::assert_eq</code> if the <code>strict_asserts</code> …","This is equivalent to <code>std::assert_ne</code> if the <code>strict_asserts</code> …","When drawing strip topologies with indices, this is the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The texture to be copied to/from.","The texture to be copied to/from.","Removes the third dimension from this origin","Adds the third dimension to this origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the string name of the backend.","Adds color space and premultiplied alpha information to …","Removes the colorspace information from the type.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The primitive topology used to interpret vertices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the binding","Kind of query that this query set should contain.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new configuration where the shader isn’t bound …","If set to true, the polygon depth is not clipped to 0-1 …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Usages of a buffer. If the buffer is used in any way that …","The usage of the swap chain. The only supported usage is …","Allowed usages of the texture. If used in other ways, the …","Bitflag of supported texture usages for the surface to use …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","<code>Backend</code>-specific vendor ID of the adapter","The number of vertices to draw.","Specifies what view formats will be allowed when calling …","Specifies what view formats will be allowed when calling …","Which shader stages can see this binding.","Width of the swap chain. Must be the same size as the …","Width of the extent","Returns this set of flags, affected by environment …","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","","X position of the origin","","Y position of the origin","Z position of the origin","Allowed access to this texture.","Format of the texture.","Indicates that the binding has a dynamic offset.","The minimum size for a <code>BufferBinding</code> matching this entry, …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it:","Path to the <code>dxcompiler.dll</code> file, or path to the directory …","Path to the <code>dxil.dll</code> file, or path to the directory …","compressed block dimensions","ASTC RGBA channel","If this is <code>false</code>, the texture can’t be sampled with a …","Unwrapping using strict_asserts","Unchecked unwrap, with a <code>strict_assert</code> backed assertion of …","Aligns a <code>value</code> to an <code>alignment</code>."],"i":[3,3,8,8,35,5,0,33,0,14,53,1,0,0,60,59,59,94,44,44,44,44,44,44,44,44,44,44,44,44,44,44,5,3,63,7,8,63,2,5,3,39,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,21,79,0,0,0,0,0,3,11,11,8,5,6,5,11,3,0,0,9,10,9,10,5,38,68,68,0,0,0,0,0,0,78,0,32,28,31,31,38,31,64,31,64,31,31,64,4,3,5,3,5,4,3,2,2,51,51,76,1,1,1,1,1,0,14,0,0,0,28,0,83,0,0,0,0,0,32,32,21,21,0,93,0,1,1,1,1,21,53,1,1,1,1,1,1,0,7,6,11,5,5,5,0,0,59,59,40,0,78,76,56,56,56,56,56,56,56,56,56,56,39,0,93,2,8,63,21,0,104,53,53,45,22,52,5,9,9,5,3,62,0,0,0,0,0,59,51,51,0,60,54,0,0,28,51,51,53,53,0,40,37,37,69,104,22,3,0,9,9,2,5,7,7,7,7,7,3,3,3,59,0,33,21,33,68,0,5,6,5,69,53,78,22,53,34,88,32,32,32,32,32,32,32,32,60,86,86,0,0,28,104,3,3,3,3,35,2,3,0,88,0,40,37,46,0,60,0,60,0,0,0,0,0,0,9,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,5,8,63,10,34,35,3,77,77,0,0,68,51,0,33,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,2,3,3,3,3,3,3,3,9,10,7,3,5,79,0,0,0,0,0,0,76,56,56,56,56,56,56,56,56,27,27,27,56,56,56,56,32,32,32,32,32,83,1,0,14,0,0,75,79,0,104,33,0,0,0,3,10,3,3,3,3,3,3,3,3,63,79,0,0,0,0,0,0,0,0,0,104,88,86,37,37,9,3,5,5,76,50,56,56,50,56,56,56,56,56,56,75,45,56,56,56,56,45,4,6,9,3,6,11,5,0,3,5,2,94,94,94,54,0,0,0,28,21,5,63,46,46,0,0,77,65,66,32,51,86,63,1,2,3,4,5,6,7,8,9,10,11,3,3,43,35,61,97,42,12,85,82,84,85,1,0,63,47,29,98,85,85,90,49,80,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,36,1,1,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,81,74,18,18,48,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,25,26,5,27,62,35,84,52,24,31,2,3,4,5,6,7,8,9,10,11,5,1,1,12,41,48,2,3,4,5,6,7,8,9,10,11,2,3,5,6,7,8,9,10,11,42,80,87,41,4,22,24,3,4,18,25,26,30,31,33,34,37,38,40,41,42,8,47,48,50,51,52,54,58,59,60,97,63,66,67,14,68,69,71,73,74,75,76,85,92,93,94,98,49,52,67,72,49,29,29,2,3,4,5,6,7,8,9,10,11,12,18,18,29,29,34,98,2,3,4,5,6,7,8,9,10,11,21,22,2,24,3,4,18,25,26,5,27,28,29,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,62,63,64,65,66,67,12,14,68,69,70,71,72,73,75,76,77,78,79,80,83,85,86,11,94,21,22,2,24,3,4,18,25,26,5,27,28,29,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,62,64,65,66,67,12,14,68,69,70,71,72,73,75,76,77,78,79,80,83,85,86,11,94,2,3,4,5,6,7,8,9,10,11,52,30,90,89,90,89,26,43,98,21,22,2,2,2,2,2,24,3,3,3,3,3,4,4,4,4,4,18,25,26,5,5,5,5,5,27,28,29,30,6,6,6,6,6,31,32,33,34,35,36,37,38,39,40,41,42,7,7,7,7,7,43,44,45,1,8,8,8,8,8,47,48,49,50,51,52,53,54,55,56,9,9,9,9,9,57,58,59,60,10,10,10,10,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,11,11,11,11,89,90,91,92,93,94,98,24,36,49,55,61,12,72,97,21,22,2,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,2,3,4,5,6,7,8,9,10,11,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,2,3,4,5,6,7,8,9,10,11,4,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,47,41,63,98,91,91,91,1,1,1,79,1,21,22,2,24,3,4,18,25,26,5,27,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,64,65,66,67,12,14,68,69,70,71,72,73,75,76,77,78,79,80,86,11,94,61,67,90,2,3,4,5,6,7,8,9,10,11,89,90,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,1,1,49,49,1,1,2,3,4,5,6,7,8,9,10,11,47,48,85,62,47,49,52,1,49,37,46,26,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,30,57,58,12,71,73,87,85,81,26,30,46,30,57,58,12,71,73,87,12,61,57,42,0,18,18,18,18,18,18,18,18,18,18,18,18,67,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,82,84,12,85,67,12,85,29,47,52,53,92,2,3,4,5,6,7,8,9,10,11,55,74,34,82,84,25,26,5,27,62,52,67,41,24,84,61,97,63,70,47,32,2,3,4,5,6,7,8,9,10,11,1,1,74,92,12,7,1,2,3,4,5,6,7,8,9,10,11,55,26,56,57,12,48,34,70,49,72,0,0,0,41,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,2,3,4,5,6,7,8,9,10,11,82,84,66,65,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,61,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,21,82,84,2,3,4,5,6,7,8,9,10,11,41,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,80,87,21,22,2,24,3,4,18,25,26,5,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,7,43,44,45,1,8,46,47,48,49,50,51,52,53,54,55,56,9,57,58,59,60,10,97,61,104,62,63,64,65,66,67,12,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,89,90,91,92,93,94,98,92,41,2,3,4,5,6,7,8,9,10,11,57,61,12,97,34,18,18,29,89,61,12,80,61,67,4,36,47,65,66,65,66,66,118,118,119,119,120,120,119,120,118,121,122,122,123,123,124,0,125,0],"fc":[],"p":[[4,"TextureFormat"],[3,"Backends"],[3,"Features"],[3,"InstanceFlags"],[3,"DownlevelFlags"],[3,"ShaderStages"],[3,"TextureFormatFeatureFlags"],[3,"ColorWrites"],[3,"BufferUsages"],[3,"TextureUsages"],[3,"PipelineStatisticsTypes"],[3,"TextureDescriptor"],[15,"u32"],[4,"TextureAspect"],[4,"Option"],[15,"u64"],[15,"u8"],[3,"Limits"],[15,"bool"],[8,"FnMut"],[4,"Backend"],[4,"PowerPreference"],[8,"Clone"],[3,"RequestAdapterOptions"],[3,"DownlevelLimits"],[3,"DownlevelCapabilities"],[4,"ShaderModel"],[4,"DeviceType"],[3,"AdapterInfo"],[3,"DeviceDescriptor"],[4,"TextureViewDimension"],[4,"BlendFactor"],[4,"BlendOperation"],[3,"BlendComponent"],[3,"BlendState"],[3,"ColorTargetState"],[4,"PrimitiveTopology"],[4,"FrontFace"],[4,"Face"],[4,"PolygonMode"],[3,"PrimitiveState"],[3,"MultisampleState"],[3,"TextureFormatFeatures"],[4,"AstcBlock"],[4,"AstcChannel"],[4,"Maintain"],[3,"StencilState"],[3,"DepthBiasState"],[3,"DepthStencilState"],[4,"IndexFormat"],[4,"StencilOperation"],[3,"StencilFaceState"],[4,"CompareFunction"],[4,"VertexStepMode"],[3,"VertexAttribute"],[4,"VertexFormat"],[3,"BufferDescriptor"],[3,"CommandEncoderDescriptor"],[4,"PresentMode"],[4,"CompositeAlphaMode"],[3,"SurfaceConfiguration"],[3,"PresentationTimestamp"],[3,"Color"],[4,"TextureDimension"],[3,"Origin2d"],[3,"Origin3d"],[3,"Extent3d"],[4,"AddressMode"],[4,"FilterMode"],[3,"PushConstantRange"],[3,"CommandBufferDescriptor"],[3,"RenderBundleDepthStencil"],[3,"RenderBundleDescriptor"],[3,"ImageDataLayout"],[4,"BufferBindingType"],[4,"TextureSampleType"],[4,"StorageTextureAccess"],[4,"SamplerBindingType"],[4,"BindingType"],[3,"BindGroupLayoutEntry"],[3,"ImageCopyBuffer"],[3,"ImageCopyTexture"],[4,"PredefinedColorSpace"],[3,"ImageCopyTextureTagged"],[3,"ImageSubresourceRange"],[4,"SamplerBorderColor"],[3,"QuerySetDescriptor"],[4,"QueryType"],[3,"DrawIndirectArgs"],[3,"DrawIndexedIndirectArgs"],[3,"DispatchIndirectArgs"],[3,"ShaderBoundChecks"],[4,"Dx12Compiler"],[4,"Gles3MinorVersion"],[4,"Ordering"],[8,"Default"],[3,"SurfaceCapabilities"],[3,"InstanceDescriptor"],[8,"PartialEq"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"SurfaceStatus"],[15,"str"],[8,"Hasher"],[8,"Hash"],[3,"Iter"],[3,"IterNames"],[3,"Range"],[8,"FnOnce"],[8,"Copy"],[4,"Result"],[3,"TypeId"],[8,"Add"],[8,"Rem"],[8,"Sub"],[13,"StorageTexture"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"Dxc"],[13,"Astc"],[13,"Float"],[8,"StrictAssertUnwrapExt"]]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","t":"AAAAAAANNDDNNDDIEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNSNNNNNNNNGNNNNNGNSNNNNNNNNNNNNNNNNNNNENDNNNNENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNDNNNNNSNNNNNNNNNNNNNNDNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNGNNNNNNNENNNNNNNNDNENNNNNNNNNENNNNNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEEDDDDDSNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAANENIIINNNENNIILLLLLLLLLLLLLLLLLLLKLKKLLKKKKKKLKKKKKLLLLLLLLKKKKKKKKKKKKKIQKNNNNNENNSNNNNNNNEENNNNNNNENNNNDENNNSSNNNNNNNNNNNNNNNNNNENNNNNNNNNEENNNNDDDDDENNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLMMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clamp","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","hash","hash","hash","height","height","into","into","into","into","into","into","new","new","new","new","new","new","serialize","serialize","serialize","serialize","serialize","serialize","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Commit","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Disabled","Down","DroppedFile","E","ElementState","Enabled","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Ime","Ime","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Occluded","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Preedit","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","SmartMagnify","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadMagnify","TouchpadPressure","TouchpadRotate","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","axis","button","codepoint","delta","delta","state","value","device_id","event","event","window_id","altitude_angle","force","max_possible_force","requested_resume","requested_resume","start","start","axis","button","delta","delta","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","phase","phase","position","pressure","scale_factor","stage","state","value","Always","ControlFlow","DeviceEventFilter","EventLoop","EventLoopBuilder","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","ExitWithCode","Never","Poll","Unfocused","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_proxy","default","default","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hide_application","hide_other_applications","into","into","into","into","into","into","into","new","new","partial_cmp","primary_monitor","raw_display_handle","raw_display_handle","run","run_return","send_event","set_device_event_filter","set_exit","set_exit_with_code","set_poll","set_wait","set_wait_timeout","set_wait_until","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_activate_ignoring_other_apps","with_activation_policy","with_default_menu","with_user_event","with_user_event","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","ns_screen","partial_cmp","partial_cmp","position","refresh_rate_millihertz","refresh_rate_millihertz","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","macos","run_return","Accessory","ActivationPolicy","Both","EventLoopBuilderExtMacOS","EventLoopWindowTargetExtMacOS","MonitorHandleExtMacOS","None","OnlyLeft","OnlyRight","OptionAsAlt","Prohibited","Regular","WindowBuilderExtMacOS","WindowExtMacOS","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","has_shadow","hash","hide_application","hide_other_applications","into","into","is_document_edited","native_id","ns_screen","ns_view","ns_window","option_as_alt","serialize","set_document_edited","set_has_shadow","set_option_as_alt","set_simple_fullscreen","simple_fullscreen","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_accepts_first_mouse","with_activate_ignoring_other_apps","with_activation_policy","with_default_menu","with_disallow_hidpi","with_fullsize_content_view","with_has_shadow","with_movable_by_window_background","with_option_as_alt","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","EventLoopExtRunReturn","UserEvent","run_return","Alias","AllScroll","AlwaysOnBottom","AlwaysOnTop","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","CLOSE","Cell","ColResize","Confined","ContextMenu","Copy","Critical","Crosshair","CursorGrabMode","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","East","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","ImePurpose","Informational","Light","Locked","MAXIMIZE","MINIMIZE","Move","NResize","NeResize","NeswResize","NoDrop","None","Normal","Normal","North","NorthEast","NorthWest","NotAllowed","NsResize","NwResize","NwseResize","OsError","Password","Progress","ResizeDirection","RowResize","SResize","SeResize","South","SouthEast","SouthWest","SwResize","Terminal","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","West","Window","WindowAttributes","WindowBuilder","WindowButtons","WindowId","WindowLevel","ZoomIn","ZoomOut","active","all","available_monitors","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","content_protected","current_monitor","decorations","default","default","default","default","default","default","deserialize","deserialize","deserialize","difference","drag_resize_window","drag_window","drop","dummy","empty","enabled_buttons","enabled_buttons","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_rgba","fullscreen","fullscreen","has_focus","has_shadow","hash","hash","hash","hash","hash","id","inner_position","inner_size","inner_size","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_decorated","is_document_edited","is_empty","is_maximized","is_minimized","is_resizable","is_visible","max_inner_size","maximized","min_inner_size","new","new","not","ns_view","ns_window","option_as_alt","outer_position","outer_size","parent_window","partial_cmp","partial_cmp","position","preferred_theme","primary_monitor","raw_display_handle","raw_window_handle","remove","request_redraw","request_user_attention","resizable","resize_increments","resize_increments","scale_factor","serialize","serialize","serialize","set","set_content_protected","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_document_edited","set_enabled_buttons","set_fullscreen","set_has_shadow","set_ime_allowed","set_ime_position","set_ime_purpose","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_option_as_alt","set_outer_position","set_resizable","set_resize_increments","set_simple_fullscreen","set_theme","set_title","set_transparent","set_visible","set_window_icon","set_window_level","simple_fullscreen","source","sub","sub_assign","symmetric_difference","theme","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","transparent","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","visible","window_attributes","window_icon","window_level","with_accepts_first_mouse","with_active","with_content_protected","with_decorations","with_disallow_hidpi","with_enabled_buttons","with_fullscreen","with_fullsize_content_view","with_has_shadow","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_movable_by_window_background","with_option_as_alt","with_parent_window","with_position","with_resizable","with_resize_increments","with_theme","with_title","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","with_transparent","with_visible","with_window_icon","with_window_level","byte_count","height","pixel_count","width","width_x_height"],"q":[[0,"winit"],[7,"winit::dpi"],[160,"winit::error"],[198,"winit::event"],[721,"winit::event::DeviceEvent"],[728,"winit::event::Event"],[732,"winit::event::Force"],[735,"winit::event::StartCause"],[739,"winit::event::WindowEvent"],[770,"winit::event_loop"],[894,"winit::monitor"],[941,"winit::platform"],[943,"winit::platform::macos"],[1015,"winit::platform::run_return"],[1018,"winit::window"],[1455,"winit::window::BadIcon"]],"d":["UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","Notifies when text should be inserted into the editor …","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","Notifies when the IME was disabled.","","A file has been dropped into the window.","","Describes the input state of a key.","Notifies when the IME was enabled.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Describes input method events.","An event from an input method.","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis. This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","The window has been occluded (completely hidden from view).","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","Notifies when a new composing text should be set at the …","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Smart magnification event.","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad magnification event with two-finger pinch gesture.","Touchpad pressure event.","Touchpad rotation event with two-finger rotation gesture.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","(x, y) change in position in unspecified units.","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","Always filter out device events.","Set by the user callback given to the <code>EventLoop::run</code> …","Filter controlling the propagation of device events.","Provides a way to retrieve events from the system and from …","Object that allows building the event loop.","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Alias for <code>ExitWithCode</code><code>(0)</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","Report all device events regardless of window focus.","When the current loop iteration finishes, immediately …","Filter out device events while the window is not focused.","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Alias for <code>EventLoopBuilder::new().build()</code>.","Start building a new event loop.","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","Change <code>DeviceEvent</code> filter mode.","Sets this to <code>Exit</code>.","Sets this to <code>ExitWithCode</code><code>(code)</code>.","Sets this to <code>Poll</code>.","Sets this to <code>Wait</code>.","Sets this to wait until a timeout has expired.","Sets this to <code>WaitUntil</code><code>(instant)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start building a new event loop, with the given type as …","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode in mHz.","The monitor refresh rate used by the system.","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.","Corresponds to <code>NSApplicationActivationPolicy</code>.","Both <code>Option</code> keys are treated as <code>Alt</code>.","","Additional methods on <code>EventLoopWindowTarget</code> that are …","Additional methods on <code>MonitorHandle</code> that are specific to …","No special handling is applied for <code>Option</code> key.","The left <code>Option</code> key is treated as <code>Alt</code>.","The right <code>Option</code> key is treated as <code>Alt</code>.","Option as alt behavior.","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to MacOS.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether or not the window has shadow.","","Hide the entire application. In most applications this is …","Hide the other applications. In most applications this is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the window’s edit state.","Returns the identifier of the monitor for Cocoa.","Returns a pointer to the NSScreen representing this …","Returns a pointer to the cocoa <code>NSView</code> that is used by this …","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …","Getter for the <code>WindowExtMacOS::set_option_as_alt</code>.","","Put the window in a state which indicates a file save is …","Sets whether or not the window has shadow.","Set option as alt behavior as described in <code>OptionAsAlt</code>.","Toggles a fullscreen mode that doesn’t require a new …","Returns whether or not the window is in simple fullscreen …","","","","","","","","","Window accepts click-through mouse events.","Used to prevent the application from automatically …","Sets the activation policy for the application.","Used to control whether a default menubar menu is created.","","Makes the window content appear behind the titlebar.","","Enables click-and-drag behavior for the entire window, not …","Set whether the <code>OptionAsAlt</code> key is interpreted as the <code>Alt</code> …","Hides the window title.","Hides the window titlebar buttons.","Hides the window titlebar.","Makes the titlebar transparent and allows the content to …","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","","","The window will always be below normal windows.","The window will always be on top of normal windows.","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","The cursor is confined to the window area.","","","Platform-specific","A simple crosshair.","The behavior of cursor grabbing.","Describes the appearance of the mouse cursor.","Use the dark variant.","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Generic IME purposes for use in <code>Window::set_ime_purpose</code>.","Platform-specific","Use the light variant.","The cursor is locked inside the window area to the certain …","","","Indicates something is to be moved.","","","","","No grabbing of the cursor is performed.","The default.","No special hints for the IME (default).","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","The IME is used for password input.","Progress indicator. Shows that processing is being done. …","Defines the orientation that a window resize will be …","","","","","","","","The IME is used to input into a terminal.","Indicates text that may be selected or edited.","The theme variant to use.","Platform-specific","","","Program busy indicator.","","Represents a window.","Attributes to use when creating a window.","Object that allows building windows.","","Identifier of a window. Unique for each window.","A window level groups windows with respect to their …","","","","Returns the set containing all flags.","Returns the list of all the monitors available on the …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the monitor on which the window currently resides.","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Resizes the window with the left mouse button until the …","Moves the window with the left mouse button until the …","","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","Gets the enabled window buttons.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates an icon from 32bpp RGBA data.","Gets the window’s current fullscreen state.","","Gets whether the window has keyboard focus.","","","","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Gets the window’s current decorations state.","","Returns <code>true</code> if no flags are currently stored.","Gets the window’s current maximized state.","Gets the window’s current minimized state.","Gets the window’s current resizable state.","Gets the window’s current visibility state.","","","","Creates a new Window for platforms where this is …","Initializes a new builder with default values.","Returns the complement of this set of flags.","","","","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","","","","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> used by the …","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Removes the specified flags in-place.","Emits a <code>Event::RedrawRequested</code> event in the associated …","Requests user attention to the window, this has no effect …","","Returns window resize increments if any were set.","","Returns the scale factor that can be used to map logical …","","","","Inserts or removes the specified flags depending on the …","Prevents the window contents from being captured by other …","Set grabbing mode on the cursor preventing it from leaving …","Modifies whether the window catches cursor events.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","","Sets the enabled window buttons.","Sets the window to fullscreen or back.","","Sets whether the window should get IME events","Sets location of IME candidate box in client area …","Sets the IME purpose for the window using <code>ImePurpose</code>.","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","","Modifies the position of the window.","Sets whether the window is resizable or not.","Sets window resize increments.","","Sets the current window theme. Use <code>None</code> to fallback to …","Modifies the title of the window.","Change the window transparency state.","Modifies the window’s visibility.","Sets the window icon.","Change the window level.","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the current window theme.","Gets the current title of the window.","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Get whether the window will support transparency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Get the current window attributes.","","","","Whether the window will be initially focused or not.","Prevents the window contents from being captured by other …","Sets whether the window should have a border, a title bar, …","","Sets the enabled window buttons.","Sets whether the window should be put into fullscreen upon …","","","Requests the window to be of specific dimensions.","Sets the maximum dimensions a window can have.","Request that the window is maximized upon creation.","Sets the minimum dimensions a window can have.","","","Build window with parent window.","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","Build window with resize increments hint.","Sets a specific theme for the window.","Sets the initial title of the window in the title bar.","","","","","Sets whether the background of the window should be …","Sets whether the window will be initially visible or …","Sets the window icon.","Sets the window level.","","","","",""],"i":[0,0,0,0,0,0,0,6,10,0,0,6,10,0,0,0,0,0,2,3,4,5,6,10,2,3,4,5,6,10,1,2,3,4,5,6,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,10,10,10,1,3,5,2,4,2,3,4,5,4,5,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,6,10,3,5,6,10,2,3,4,5,6,10,2,4,6,10,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,6,10,0,4,5,2,3,2,3,0,27,0,27,0,27,26,29,27,26,29,26,26,27,27,26,26,29,29,27,26,29,27,26,29,26,27,26,29,27,26,29,27,26,29,27,26,29,46,31,46,46,37,46,46,46,46,46,0,35,46,46,46,37,0,46,31,46,42,40,46,46,35,46,46,39,46,46,46,35,35,35,46,46,46,35,0,33,0,39,46,35,46,0,39,46,40,46,46,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,35,0,46,46,46,46,35,35,46,0,35,34,46,46,46,46,46,37,46,46,46,46,46,46,46,46,46,46,0,35,46,46,46,46,31,46,46,44,46,45,33,46,46,33,46,46,44,46,35,0,37,0,35,37,0,35,37,35,40,46,46,46,46,46,33,46,46,42,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,35,44,46,46,46,46,46,46,45,46,46,34,46,39,43,46,46,46,46,46,46,46,46,35,33,33,43,37,35,34,33,46,44,46,46,31,35,0,46,46,46,46,35,46,46,0,40,46,33,46,46,46,37,35,0,35,0,35,35,35,46,46,46,46,33,46,0,46,46,46,34,46,46,46,46,46,46,46,46,0,33,46,46,46,46,31,31,31,31,31,31,31,31,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,36,46,31,31,31,31,31,38,39,40,43,44,45,46,31,41,31,36,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,34,36,38,39,40,43,44,46,31,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,31,31,31,31,41,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,31,31,31,31,36,38,39,40,43,44,46,31,41,31,31,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,31,31,41,31,33,38,42,31,36,46,31,41,31,38,38,39,40,43,44,45,46,31,31,31,38,31,31,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,35,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,31,31,38,91,92,93,94,95,92,91,96,97,96,97,98,98,98,99,100,99,100,101,102,103,104,105,106,107,108,109,103,102,104,110,105,111,101,106,106,107,103,102,112,103,104,105,107,111,112,111,102,101,57,0,0,0,0,0,0,0,55,55,57,55,57,55,55,50,53,50,54,52,55,56,57,53,50,54,52,55,56,57,52,54,55,56,57,54,55,56,57,57,53,53,52,55,57,53,55,56,57,55,56,57,53,50,54,55,56,56,57,53,50,54,52,55,56,57,56,57,50,50,53,50,54,52,55,56,57,53,52,57,50,53,50,53,53,54,50,55,55,55,55,55,55,54,55,56,57,56,53,50,54,52,55,56,57,53,50,54,52,55,56,57,53,50,54,52,55,56,57,52,52,52,53,52,0,0,66,66,58,66,58,66,58,66,58,66,58,66,58,66,58,66,66,58,66,58,66,66,58,66,58,58,58,66,58,58,66,58,58,66,58,66,58,66,66,58,66,58,66,58,58,0,0,65,0,69,0,0,0,69,69,69,0,65,65,0,0,65,69,65,69,65,69,65,69,65,69,69,65,69,65,69,65,69,65,69,113,65,114,114,65,69,113,115,115,113,113,113,69,113,113,113,113,113,65,69,65,69,65,69,65,69,116,117,117,117,116,116,116,116,116,116,116,116,116,0,118,118,77,77,82,82,77,0,79,84,71,77,77,76,77,77,81,77,0,0,80,77,84,77,78,77,79,0,77,77,77,77,0,0,81,80,76,71,71,77,77,77,77,77,76,82,83,78,78,78,77,77,77,77,84,83,77,0,77,77,77,78,78,78,77,83,77,0,0,77,77,77,78,0,0,0,0,0,0,77,77,75,71,72,71,71,71,71,71,71,71,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,70,73,74,70,75,76,77,78,79,80,81,71,82,83,73,74,70,75,76,77,78,79,80,81,71,82,83,74,71,71,71,75,72,75,70,75,77,81,82,83,76,77,80,71,72,72,72,74,71,72,75,74,76,77,78,79,80,81,71,82,83,74,76,77,78,79,80,81,71,82,83,71,72,84,84,73,74,70,75,76,77,78,79,80,81,71,71,71,71,71,82,83,72,72,84,73,74,74,70,75,76,77,77,78,79,80,81,71,82,83,71,71,71,71,73,72,75,72,72,74,76,77,78,71,72,72,72,75,71,71,71,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,71,72,72,71,72,72,72,72,75,75,75,72,70,71,72,72,72,72,72,75,74,71,75,75,72,72,72,71,72,72,75,72,75,72,76,77,80,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,84,71,71,71,72,72,75,73,74,70,75,76,77,78,79,80,81,71,82,83,84,71,70,75,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,72,84,73,74,70,75,76,77,78,79,80,81,71,82,83,71,75,70,75,75,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,119,120,120,120,120],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[7,[6]],[7,[6]],[7,[6]],8],6],[[[2,[9]]],[[2,[9]]]],[[[3,[9]]],[[3,[9]]]],[[[4,[9]]],[[4,[9]]]],[[[5,[9]]],[[5,[9]]]],[6,6],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[11]]]],[[],[[3,[11]]]],[[],[[4,[11]]]],[[],[[5,[11]]]],[12,[[14,[[2,[13]]]]]],[12,[[14,[[3,[13]]]]]],[12,[[14,[[4,[13]]]]]],[12,[[14,[[5,[13]]]]]],[12,[[14,[6]]]],[12,[[14,[10]]]],[[[2,[15]],[2,[15]]],16],[[[3,[15]],[3,[15]]],16],[[[4,[15]],[4,[15]]],16],[[[5,[15]],[5,[15]]],16],[[6,6],16],[[10,10],16],[[],16],[[],16],[[],16],[[],16],[[[2,[17]],18],19],[[[3,[17]],18],19],[[[4,[17]],18],19],[[[5,[17]],18],19],[[6,18],19],[[10,18],19],[[[20,[1]]],[[2,[1]]]],[[]],[[],[[2,[1]]]],[[[20,[1]]],[[3,[1]]]],[[]],[[],[[3,[1]]]],[[[20,[1]]],[[4,[1]]]],[[]],[[],[[4,[1]]]],[[[20,[1]]],[[5,[1]]]],[[],[[5,[1]]]],[[]],[[[4,[1]]],6],[[]],[[[5,[1]]],6],[[[3,[1]]],10],[[[2,[1]]],10],[[]],[8],[[[7,[[2,[1]]]],8],[[3,[1]]]],[[[7,[[4,[1]]]],8],[[5,[1]]]],[[[7,[[3,[1]]]],8],[[2,[1]]]],[[[7,[[5,[1]]]],8],[[4,[1]]]],[[[2,[21]],22]],[[[3,[21]],22]],[[[4,[21]],22]],[[[5,[21]],22]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[],5],[[[7,[6]]],6],[[[7,[10]]],10],[[[2,[23]],24],14],[[[3,[23]],24],14],[[[4,[23]],24],14],[[[5,[23]],24],14],[[6,24],14],[[10,24],14],[[[3,[1]],8],[[2,[1]]]],[[[5,[1]],8],[[4,[1]]]],[[6,8],[[4,[1]]]],[[10,8],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],8],[[3,[1]]]],[[[4,[1]],8],[[5,[1]]]],[[6,8],[[5,[1]]]],[[10,8],[[3,[1]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[8,16],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[[]],[[27,18],[[14,[28]]]],[[27,18],19],[[26,18],[[14,[28]]]],[[26,18],[[14,[28]]]],[[29,18],[[14,[28]]]],[[29,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[31,16],[[31,31],31],[[31,31]],[[31,31],31],[[31,31]],[31,32],[[31,31],31],[[31,31]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[9]]],[[33,[9]]]],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],47],[[46,46],47],[[31,31],47],[31,31],[[31,31],16],[31,16],[[],31],[12,[[14,[38]]]],[12,[[14,[39]]]],[12,[[14,[40]]]],[12,[[14,[43]]]],[12,[[14,[44]]]],[12,[[14,[45]]]],[12,[[14,[46]]]],[12,[[14,[31]]]],0,[[31,31],31],[[],36],[[],31],[[[33,[15]],[33,[15]]],16],[[34,34],16],[[35,35],16],[[36,36],16],[[37,37],16],[[38,38],16],[[39,39],16],[[40,40],16],[[41,41],16],[[42,42],16],[[43,43],16],[[44,44],16],[[45,45],16],[[46,46],16],[[31,31],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[31,48]],[[[33,[17]],18],19],[[34,18],19],[[35,18],19],[[36,18],19],[[37,18],19],[[38,18],19],[[39,18],19],[[40,18],19],[[41,18],19],[[42,18],19],[[43,18],19],[[44,18],19],[[45,18],19],[[46,18],19],[[31,18],19],[[31,18],19],[[31,18],19],[[31,18],19],[[31,18],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[49,[31]]]],[32,31],[32,31],[48,31],[[36,22]],[[38,22]],[[39,22]],[[40,22]],[[43,22]],[[44,22]],[[46,22]],[[31,22]],0,[[31,31]],[[31,31],31],[[31,31],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,16],[31,16],0,[31,16],[33,[[14,[33,33]]]],0,[42,8],[31,31],[[36,36],[[49,[47]]]],[[46,46],[[49,[47]]]],[[31,31],[[49,[47]]]],0,[[31,31]],0,[[38,24],14],[[39,24],14],[[40,24],14],[[43,24],14],[[44,24],14],[[45,24],14],[[46,24],14],[[31,24],14],[[31,31,16]],[31,16],0,[[31,31],31],[[31,31]],[[31,31],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[49,[33]]]],[35,[[49,[35]]]],[[31,31]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[31,31],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,53],[54,54],[55,55],[[[56,[9]]],[[56,[9]]]],[57,57],[[]],[[]],[[]],[[]],[[57,57],47],[53,54],[[],53],[[],[[52,[11]]]],[[],55],[[],57],[53,50],[[55,55],16],[[[56,[15]],[56,[15]]],16],[[57,57],16],[[],16],[[],16],[[],16],[[53,18],19],[[50,18],19],[[54,18],19],[[55,18],19],[[56,18],19],[[[56,[17]],18],19],[[57,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[21]],22]],[[57,22]],[50],[50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],52],[[57,57],[[49,[47]]]],[50,[[49,[58]]]],[53,59],[50,59],[[53,60],61],[[53,60],62],[54,[[14,[56]]]],[[50,57]],[55],[[55,62]],[55],[55],[[55,63]],[[55,64]],[[]],[[]],[[]],[[]],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[52,16],52],[[52,65],52],[[52,16],52],[[],53],[[],52],0,0,[66,67],[[]],[[]],[[]],[[]],[66,66],[58,58],[[]],[[]],[[66,66],47],[[58,58],47],[[66,66],16],[[58,58],16],[[],16],[[],16],[[66,18],19],[[66,18],19],[[58,18],19],[[]],[[]],[[66,22]],[[]],[[]],[66,58],[58,[[49,[30]]]],[58,32],[58,[[49,[68]]]],[[66,66],[[49,[47]]]],[[58,58],[[49,[47]]]],[58,[[3,[62]]]],[66,32],[58,[[49,[32]]]],[58,8],[66,[[5,[32]]]],[58,[[5,[32]]]],[[]],[[]],[[],30],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[58,51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[65,65],[69,69],[[]],[[]],[[],65],[[],69],[12,[[14,[69]]]],[[65,65],16],[[69,69],16],[[],16],[[],16],[[65,18],19],[[69,18],19],[[]],[[]],[[],16],[[65,22]],[[]],[[]],[[]],[[]],[[],16],[[],32],[[],[[49,[68]]]],[[],68],[[],68],[[],69],[[69,24],14],[16],[16],[69],[16,16],[[],16],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[16,70],[16],[65],[16],[16,70],[16,70],[16,70],[16,70],[69,70],[16,70],[16,70],[16,70],[16,70],0,0,[60,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],71],[72,51],[[71,71],71],[[71,71]],[[71,71],71],[[71,71]],[71,32],[[71,71],71],[[71,71]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,50],[[14,[72,29]]]],[73,73],[74,74],[70,70],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[71,71],[82,82],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,74],47],[[71,71],47],[71,71],[[71,71],16],0,[72,[[49,[58]]]],0,[[],70],[[],75],[[],77],[[],81],[[],82],[[],83],[12,[[14,[76]]]],[12,[[14,[77]]]],[12,[[14,[80]]]],[[71,71],71],[[72,78],[[14,[27]]]],[72,[[14,[27]]]],[72],[[],74],[[],71],[72,71],0,[[74,74],16],[[76,76],16],[[77,77],16],[[78,78],16],[[79,79],16],[[80,80],16],[[81,81],16],[[71,71],16],[[82,82],16],[[83,83],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[71,48]],[[72,18],19],[[84,18],19],[[84,18],19],[[73,18],[[14,[28]]]],[[74,18],19],[[70,18],19],[[75,18],19],[[76,18],19],[[77,18],19],[[78,18],19],[[79,18],19],[[80,18],19],[[81,18],19],[[71,18],19],[[71,18],19],[[71,18],19],[[71,18],19],[[71,18],19],[[82,18],19],[[83,18],19],[72],[[]],[[]],[[]],[85,74],[[]],[[]],[[]],[[]],[78,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[49,[71]]]],[32,71],[32,71],[48,71],[[[87,[86]],32,32],[[14,[73,84]]]],[72,[[49,[79]]]],0,[72,16],[72,16],[[74,22]],[[76,22]],[[77,22]],[[78,22]],[[71,22]],[72,74],[72,[[14,[[3,[62]],26]]]],[72,[[5,[32]]]],0,[[71,71]],[[71,71],71],[[71,71],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,16],[72,16],[72,16],[71,16],[72,16],[72,[[49,[16]]]],[72,16],[72,[[49,[16]]]],0,0,0,[50,[[14,[72,29]]]],[[],70],[71,71],[72,68],[72,68],[72,69],[72,[[14,[[3,[62]],26]]]],[72,[[5,[32]]]],0,[[74,74],[[49,[47]]]],[[71,71],[[49,[47]]]],0,0,[72,[[49,[58]]]],[72,59],[72,88],[[71,71]],[72],[[72,[49,[81]]]],0,[72,[[49,[[5,[32]]]]]],0,[72,8],[[76,24],14],[[77,24],14],[[80,24],14],[[71,71,16]],[[72,16]],[[72,76],[[14,[27]]]],[[72,16],[[14,[27]]]],[[72,77]],[[72,[7,[10]]],[[14,[27]]]],[[72,16]],[[72,16]],[[72,16]],[[72,71]],[[72,[49,[79]]]],[[72,16]],[[72,16]],[[72,[7,[10]]]],[[72,83]],[[72,[7,[6]]]],[[72,[49,[[7,[6]]]]]],[[72,16]],[[72,[49,[[7,[6]]]]]],[[72,16]],[[72,69]],[[72,[7,[10]]]],[[72,16]],[[72,[49,[[7,[6]]]]]],[[72,16],16],[[72,[49,[80]]]],[[72,89]],[[72,16]],[[72,16]],[[72,[49,[73]]]],[[72,82]],[72,16],[84,[[49,[90]]]],[[71,71],71],[[71,71]],[[71,71],71],[72,[[49,[80]]]],[72,30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[71,71]],[70,16],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[71,71],71],0,[70,75],0,0,[[70,16],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,71],70],[[70,[49,[79]]],70],[[70,16],70],[[70,16],70],[[70,[7,[6]]],70],[[70,[7,[6]]],70],[[70,16],70],[[70,[7,[6]]],70],[[70,16],70],[[70,69],70],[[70,[49,[88]]],70],[[70,[7,[10]]],70],[[70,16],70],[[70,[7,[6]]],70],[[70,[49,[80]]],70],[[70,[7,[30]]],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,16],70],[[70,[49,[73]]],70],[[70,82],70],0,0,0,0,0],"c":[633,757,758,759,892],"p":[[8,"Pixel"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[8,"Into"],[15,"f64"],[8,"Clone"],[4,"Position"],[8,"Default"],[8,"Deserializer"],[8,"Deserialize"],[4,"Result"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"array"],[8,"Hash"],[8,"Hasher"],[8,"Serialize"],[8,"Serializer"],[3,"TypeId"],[3,"NotSupportedError"],[4,"ExternalError"],[3,"Error"],[3,"OsError"],[3,"String"],[3,"ModifiersState"],[15,"u32"],[4,"Event"],[4,"StartCause"],[4,"WindowEvent"],[3,"DeviceId"],[4,"DeviceEvent"],[3,"KeyboardInput"],[4,"Ime"],[4,"TouchPhase"],[3,"Touch"],[4,"Force"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"Ordering"],[8,"IntoIterator"],[4,"Option"],[3,"EventLoopWindowTarget"],[8,"Iterator"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"EventLoopProxy"],[4,"ControlFlow"],[3,"EventLoopClosed"],[4,"DeviceEventFilter"],[3,"MonitorHandle"],[4,"RawDisplayHandle"],[8,"FnMut"],[15,"never"],[15,"i32"],[3,"Duration"],[6,"Instant"],[4,"ActivationPolicy"],[3,"VideoMode"],[15,"u16"],[6,"c_void"],[4,"OptionAsAlt"],[3,"WindowBuilder"],[3,"WindowButtons"],[3,"Window"],[3,"Icon"],[3,"WindowId"],[3,"WindowAttributes"],[4,"CursorGrabMode"],[4,"CursorIcon"],[4,"ResizeDirection"],[4,"Fullscreen"],[4,"Theme"],[4,"UserAttentionType"],[4,"WindowLevel"],[4,"ImePurpose"],[4,"BadIcon"],[15,"u64"],[15,"u8"],[3,"Vec"],[4,"RawWindowHandle"],[15,"str"],[8,"Error"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Calibrated"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"TouchpadMagnify"],[13,"TouchpadRotate"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"SmartMagnify"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[8,"WindowExtMacOS"],[8,"EventLoopWindowTargetExtMacOS"],[8,"MonitorHandleExtMacOS"],[8,"WindowBuilderExtMacOS"],[8,"EventLoopBuilderExtMacOS"],[8,"EventLoopExtRunReturn"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};

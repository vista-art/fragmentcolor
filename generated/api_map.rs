
#[derive(Clone, Debug, PartialEq)]
struct FunctionParameter {
    pub name: &'static str,
    pub type_name: &'static str,
}

#[derive(Clone, Debug, PartialEq)]
struct FunctionSignature {
    pub name: &'static str,
    pub parameters: &'static [FunctionParameter],
    pub return_type: Option<&'static str>,
}

#[derive(Clone, Debug, PartialEq)]
struct ObjectProperty {
    pub name: &'static str,
    pub type_name: &'static str,
    pub function: Option<FunctionSignature>,
}


static API_MAP: phf::Map<&'static str, &[ObjectProperty]> = ::phf::Map {
    key: 16287231350648472473,
    disps: &[
        (1, 38),
        (23, 25),
        (0, 6),
        (1, 32),
        (5, 14),
        (6, 0),
        (10, 25),
        (0, 4),
    ],
    entries: &[
        ("Shader", &[ObjectProperty { name: "set", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set", parameters: &[FunctionParameter { name: "key", type_name: "& str" }, FunctionParameter { name: "value", type_name: "impl Into < UniformData >" }], return_type: Some("Result < () , ShaderError >") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "source", type_name: "& str" }], return_type: Some("Result < Self , ShaderError >") }) }, ObjectProperty { name: "list_keys", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "list_keys", parameters: &[], return_type: Some("Vec < String >") }) }, ObjectProperty { name: "get", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "get", parameters: &[FunctionParameter { name: "key", type_name: "& str" }], return_type: Some("Result < T , ShaderError >") }) }, ObjectProperty { name: "list_uniforms", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "list_uniforms", parameters: &[], return_type: Some("Vec < String >") }) }, ]),
        ("Color", &[ObjectProperty { name: "white", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "white", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "r", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "r", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "from_rgba", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_rgba", parameters: &[FunctionParameter { name: "d", type_name: "[f32 ; 4]" }], return_type: Some("Self") }) }, ObjectProperty { name: "blue", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "blue", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "to_f32_array", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "to_f32_array", parameters: &[], return_type: Some("[f32 ; 4]") }) }, ObjectProperty { name: "g", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "g", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "b", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "b", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "alpha", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "alpha", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "red", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "red", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "a", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "a", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "transparent", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "transparent", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "from_hex", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_hex", parameters: &[FunctionParameter { name: "hex", type_name: "& str" }], return_type: Some("Result < Self , csscolorparser :: ParseColorError >") }) }, ObjectProperty { name: "into_vec4_gamma", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "into_vec4_gamma", parameters: &[], return_type: Some("[f32 ; 4]") }) }, ObjectProperty { name: "from_rgb_alpha", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_rgb_alpha", parameters: &[FunctionParameter { name: "d", type_name: "[f32 ; 3]" }, FunctionParameter { name: "alpha", type_name: "f32" }], return_type: Some("Self") }) }, ObjectProperty { name: "from_css", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_css", parameters: &[FunctionParameter { name: "color", type_name: "& str" }], return_type: Some("Result < Self , csscolorparser :: ParseColorError >") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "red", type_name: "f32" }, FunctionParameter { name: "green", type_name: "f32" }, FunctionParameter { name: "blue", type_name: "f32" }, FunctionParameter { name: "alpha", type_name: "f32" }], return_type: Some("Self") }) }, ObjectProperty { name: "black", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "black", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "green", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "green", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "", type_name: "u32", function: None }, ]),
        ("Size", &[ObjectProperty { name: "depth", type_name: "Option < u32 >", function: None }, ObjectProperty { name: "width", type_name: "u32", function: None }, ObjectProperty { name: "height", type_name: "u32", function: None }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "width", type_name: "u32" }, FunctionParameter { name: "height", type_name: "u32" }, FunctionParameter { name: "depth", type_name: "Option < u32 >" }], return_type: Some("Self") }) }, ]),
        ("u32", &[]),
        ("RenderPipeline", &[]),
        ("renderer_platform_android_mod.rs", &[ObjectProperty { name: "fragmentcolor_init", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "fragmentcolor_init", parameters: &[FunctionParameter { name: "env", type_name: "* mut JNIEnv" }, FunctionParameter { name: "_", type_name: "JClass" }, FunctionParameter { name: "surface", type_name: "jobject" }], return_type: Some("* const FragmentColor") }) }, ]),
        ("renderer_platform_python_mod.rs", &[ObjectProperty { name: "fragmentcolor", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "fragmentcolor", parameters: &[FunctionParameter { name: "m", type_name: "& Bound < '_ , PyModule >" }], return_type: Some("PyResult < () >") }) }, ]),
        ("Pass", &[ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "name", type_name: "& str" }], return_type: Some("Self") }) }, ObjectProperty { name: "load_previous", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "load_previous", parameters: &[], return_type: None }) }, ObjectProperty { name: "add_shader", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "add_shader", parameters: &[FunctionParameter { name: "shader", type_name: "& Shader" }], return_type: None }) }, ObjectProperty { name: "from_shader", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_shader", parameters: &[FunctionParameter { name: "name", type_name: "& str" }, FunctionParameter { name: "shader", type_name: "& Shader" }], return_type: Some("Self") }) }, ObjectProperty { name: "compute", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "compute", parameters: &[FunctionParameter { name: "name", type_name: "& str" }], return_type: Some("Self") }) }, ObjectProperty { name: "set_clear_color", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set_clear_color", parameters: &[FunctionParameter { name: "color", type_name: "[f32 ; 4]" }], return_type: None }) }, ObjectProperty { name: "get_input", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "get_input", parameters: &[], return_type: Some("PassInput") }) }, ObjectProperty { name: "set_viewport", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set_viewport", parameters: &[FunctionParameter { name: "viewport", type_name: "Region" }], return_type: None }) }, ]),
        ("Texture", &[ObjectProperty { name: "sampler", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "sampler", parameters: &[], return_type: Some("& wgpu :: Sampler") }) }, ObjectProperty { name: "format", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "format", parameters: &[], return_type: Some("wgpu :: TextureFormat") }) }, ObjectProperty { name: "size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "size", parameters: &[], return_type: Some("Size") }) }, ObjectProperty { name: "aspect", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "aspect", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "create_depth_texture", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_depth_texture", parameters: &[FunctionParameter { name: "context", type_name: "& RenderContext" }, FunctionParameter { name: "size", type_name: "wgpu :: Extent3d" }], return_type: Some("Self") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "context", type_name: "& RenderContext" }, FunctionParameter { name: "size", type_name: "wgpu :: Extent3d" }, FunctionParameter { name: "format", type_name: "wgpu :: TextureFormat" }, FunctionParameter { name: "options", type_name: "SamplerOptions" }], return_type: Some("Self") }) }, ObjectProperty { name: "from_file", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_file", parameters: &[FunctionParameter { name: "context", type_name: "& RenderContext" }, FunctionParameter { name: "path", type_name: "impl AsRef < Path >" }], return_type: Some("Result < Self , Error >") }) }, ObjectProperty { name: "from_bytes", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_bytes", parameters: &[FunctionParameter { name: "context", type_name: "& RenderContext" }, FunctionParameter { name: "bytes", type_name: "& [u8]" }], return_type: Some("Result < Self , Error >") }) }, ObjectProperty { name: "create_destination_texture", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_destination_texture", parameters: &[FunctionParameter { name: "context", type_name: "& RenderContext" }, FunctionParameter { name: "size", type_name: "wgpu :: Extent3d" }], return_type: Some("Self") }) }, ]),
        ("PassInput", &[ObjectProperty { name: "clear", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "clear", parameters: &[FunctionParameter { name: "color", type_name: "Color" }], return_type: Some("Self") }) }, ObjectProperty { name: "load", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "load", parameters: &[], return_type: Some("Self") }) }, ]),
        ("RenderContext", &[]),
        ("sampler.rs", &[ObjectProperty { name: "create_default_sampler", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_default_sampler", parameters: &[FunctionParameter { name: "device", type_name: "& wgpu :: Device" }], return_type: Some("wgpu :: Sampler") }) }, ObjectProperty { name: "create_sampler", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_sampler", parameters: &[FunctionParameter { name: "device", type_name: "& wgpu :: Device" }, FunctionParameter { name: "options", type_name: "SamplerOptions" }], return_type: Some("wgpu :: Sampler") }) }, ]),
        ("TextureFrame", &[]),
        ("PyRenderable", &[]),
        ("JsValue", &[]),
        ("PyWindowHandle", &[]),
        ("renderer_platform_python_target.rs", &[ObjectProperty { name: "rendercanvas_context_hook", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "rendercanvas_context_hook", parameters: &[FunctionParameter { name: "canvas", type_name: "Py < PyAny >" }, FunctionParameter { name: "present_methods", type_name: "Py < PyAny >" }], return_type: Some("RenderCanvasTarget") }) }, ]),
        ("CanvasTarget", &[]),
        ("Extent3d", &[]),
        ("AndroidNativeWindow", &[]),
        ("WindowFrame", &[]),
        ("PyErr", &[]),
        ("ShaderObject", &[ObjectProperty { name: "list_keys", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "list_keys", parameters: &[], return_type: Some("Vec < String >") }) }, ObjectProperty { name: "wgsl", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "wgsl", parameters: &[FunctionParameter { name: "source", type_name: "& str" }], return_type: Some("Result < Self , ShaderError >") }) }, ObjectProperty { name: "set", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set", parameters: &[FunctionParameter { name: "key", type_name: "& str" }, FunctionParameter { name: "value", type_name: "impl Into < UniformData >" }], return_type: Some("Result < () , ShaderError >") }) }, ObjectProperty { name: "list_uniforms", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "list_uniforms", parameters: &[], return_type: Some("Vec < String >") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "source", type_name: "& str" }], return_type: Some("Result < Self , ShaderError >") }) }, ]),
        ("Canvas", &[ObjectProperty { name: "height", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "height", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "width", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "width", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "size", parameters: &[], return_type: Some("wgpu :: Extent3d") }) }, ]),
        ("PyTextureTarget", &[ObjectProperty { name: "resize", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "resize", parameters: &[FunctionParameter { name: "size", type_name: "crate :: PySize" }], return_type: None }) }, ObjectProperty { name: "size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "size", parameters: &[], return_type: Some("[u32 ; 2]") }) }, ]),
        ("WindowTarget", &[ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "context", type_name: "Arc < RenderContext >" }, FunctionParameter { name: "surface", type_name: "wgpu :: Surface < 'static >" }, FunctionParameter { name: "config", type_name: "wgpu :: SurfaceConfiguration" }], return_type: Some("Self") }) }, ]),
        ("ShaderError", &[]),
        ("PassObject", &[ObjectProperty { name: "add_shader", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "add_shader", parameters: &[FunctionParameter { name: "shader", type_name: "& Shader" }], return_type: None }) }, ObjectProperty { name: "set_viewport", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set_viewport", parameters: &[FunctionParameter { name: "viewport", type_name: "Region" }], return_type: None }) }, ObjectProperty { name: "is_compute", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "is_compute", parameters: &[], return_type: Some("bool") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "name", type_name: "& str" }, FunctionParameter { name: "pass_type", type_name: "PassType" }], return_type: Some("Self") }) }, ObjectProperty { name: "get_input", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "get_input", parameters: &[], return_type: Some("PassInput") }) }, ObjectProperty { name: "pass_type", type_name: "PassType", function: None }, ObjectProperty { name: "set_clear_color", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "set_clear_color", parameters: &[FunctionParameter { name: "color", type_name: "impl Into < Color >" }], return_type: None }) }, ]),
        ("Frame", &[ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "add_pass", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "add_pass", parameters: &[FunctionParameter { name: "pass", type_name: "& Pass" }], return_type: None }) }, ]),
        ("Renderer", &[ObjectProperty { name: "create_texture_target_js", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_texture_target_js", parameters: &[FunctionParameter { name: "size", type_name: "JsValue" }], return_type: Some("Result < TextureTarget , JsError >") }) }, ObjectProperty { name: "render", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "render", parameters: &[FunctionParameter { name: "renderable", type_name: "& impl Renderable" }, FunctionParameter { name: "target", type_name: "& impl Target" }], return_type: Some("Result < () , ShaderError >") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "create_target", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_target", parameters: &[FunctionParameter { name: "canvas", type_name: "JsValue" }], return_type: Some("Result < CanvasTarget , JsError >") }) }, ObjectProperty { name: "render_js", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "render_js", parameters: &[FunctionParameter { name: "renderable", type_name: "JsValue" }, FunctionParameter { name: "target", type_name: "JsValue" }], return_type: Some("Result < () , ShaderError >") }) }, ObjectProperty { name: "render_py", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "render_py", parameters: &[FunctionParameter { name: "renderable", type_name: "Py < PyAny >" }, FunctionParameter { name: "target", type_name: "Py < PyAny >" }], return_type: Some("Result < () , PyErr >") }) }, ObjectProperty { name: "new_py", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new_py", parameters: &[], return_type: Some("Renderer") }) }, ObjectProperty { name: "headless", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "headless", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "new_js", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new_js", parameters: &[], return_type: Some("Self") }) }, ObjectProperty { name: "create_texture_target_py", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_texture_target_py", parameters: &[FunctionParameter { name: "size", type_name: "PySize" }], return_type: Some("Result < Py < PyTextureTarget > , PyErr >") }) }, ObjectProperty { name: "render_bitmap", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "render_bitmap", parameters: &[FunctionParameter { name: "image", type_name: "& Image" }, FunctionParameter { name: "bounds", type_name: "Option < Arc < Rect > >" }, FunctionParameter { name: "pixel_format", type_name: "PixelFormat" }], return_type: Some("Option < Arc < Bitmap > >") }) }, ObjectProperty { name: "create_texture_target", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "create_texture_target", parameters: &[FunctionParameter { name: "size", type_name: "impl Into < Size >" }], return_type: Some("Result < TextureTarget , InitializationError >") }) }, ]),
        ("Vec", &[]),
        ("Region", &[ObjectProperty { name: "from_tuple", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_tuple", parameters: &[FunctionParameter { name: "size", type_name: "(u32 , u32)" }], return_type: Some("Self") }) }, ObjectProperty { name: "encompass", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "encompass", parameters: &[FunctionParameter { name: "x", type_name: "u32" }, FunctionParameter { name: "y", type_name: "u32" }], return_type: None }) }, ObjectProperty { name: "area", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "area", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "from_tuples_i32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_tuples_i32", parameters: &[FunctionParameter { name: "a", type_name: "(i32 , i32)" }, FunctionParameter { name: "b", type_name: "(i32 , i32)" }], return_type: Some("Self") }) }, ObjectProperty { name: "half_height_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "half_height_f32", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "union", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "union", parameters: &[FunctionParameter { name: "other", type_name: "Region" }], return_type: None }) }, ObjectProperty { name: "is_smaller_than", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "is_smaller_than", parameters: &[FunctionParameter { name: "other", type_name: "Region" }], return_type: Some("bool") }) }, ObjectProperty { name: "outbound_radius", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "outbound_radius", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "origin", type_name: "impl Into < (u32 , u32) >" }, FunctionParameter { name: "size", type_name: "impl Into < (u32 , u32) >" }], return_type: Some("Self") }) }, ObjectProperty { name: "clamp_with_intersection", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "clamp_with_intersection", parameters: &[FunctionParameter { name: "self_point", type_name: "(i32 , i32)" }, FunctionParameter { name: "other_point", type_name: "(i32 , i32)" }, FunctionParameter { name: "size", type_name: "(i32 , i32)" }, FunctionParameter { name: "other", type_name: "& mut Region" }], return_type: None }) }, ObjectProperty { name: "from_region_i32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_region_i32", parameters: &[FunctionParameter { name: "x", type_name: "i32" }, FunctionParameter { name: "y", type_name: "i32" }, FunctionParameter { name: "width", type_name: "i32" }, FunctionParameter { name: "height", type_name: "i32" }], return_type: Some("Self") }) }, ObjectProperty { name: "from_size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_size", parameters: &[FunctionParameter { name: "width", type_name: "u32" }, FunctionParameter { name: "height", type_name: "u32" }], return_type: Some("Self") }) }, ObjectProperty { name: "clamp", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "clamp", parameters: &[FunctionParameter { name: "width", type_name: "u32" }, FunctionParameter { name: "height", type_name: "u32" }], return_type: None }) }, ObjectProperty { name: "max_y", type_name: "u32", function: None }, ObjectProperty { name: "min_x", type_name: "u32", function: None }, ObjectProperty { name: "to_wgpu_size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "to_wgpu_size", parameters: &[], return_type: Some("wgpu :: Extent3d") }) }, ObjectProperty { name: "height", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "height", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "smaller_side", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "smaller_side", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "inbound_radius", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "inbound_radius", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "height_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "height_f32", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "from_inbound_radius", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_inbound_radius", parameters: &[FunctionParameter { name: "radius", type_name: "f32" }], return_type: Some("Self") }) }, ObjectProperty { name: "pixel_center", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "pixel_center", parameters: &[], return_type: Some("(u32 , u32)") }) }, ObjectProperty { name: "to_vec4", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "to_vec4", parameters: &[], return_type: Some("Vec4") }) }, ObjectProperty { name: "from_arrays_i32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_arrays_i32", parameters: &[FunctionParameter { name: "a", type_name: "[i32 ; 2]" }, FunctionParameter { name: "b", type_name: "[i32 ; 2]" }], return_type: Some("Self") }) }, ObjectProperty { name: "aspect", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "aspect", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "max_x", type_name: "u32", function: None }, ObjectProperty { name: "from_pixel", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_pixel", parameters: &[FunctionParameter { name: "x", type_name: "u32" }, FunctionParameter { name: "y", type_name: "u32" }], return_type: Some("Self") }) }, ObjectProperty { name: "width", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "width", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "from_wgpu_size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_wgpu_size", parameters: &[FunctionParameter { name: "size", type_name: "wgpu :: Extent3d" }], return_type: Some("Self") }) }, ObjectProperty { name: "width_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "width_f32", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "intersects", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "intersects", parameters: &[FunctionParameter { name: "other", type_name: "Region" }], return_type: Some("bool") }) }, ObjectProperty { name: "from_region", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_region", parameters: &[FunctionParameter { name: "x", type_name: "u32" }, FunctionParameter { name: "y", type_name: "u32" }, FunctionParameter { name: "width", type_name: "u32" }, FunctionParameter { name: "height", type_name: "u32" }], return_type: Some("Self") }) }, ObjectProperty { name: "to_array", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "to_array", parameters: &[], return_type: Some("[f32 ; 4]") }) }, ObjectProperty { name: "half_height", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "half_height", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "min_y", type_name: "u32", function: None }, ObjectProperty { name: "half_width_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "half_width_f32", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "center_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "center_f32", parameters: &[], return_type: Some("Vec2") }) }, ObjectProperty { name: "is_larger_than", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "is_larger_than", parameters: &[FunctionParameter { name: "other", type_name: "Region" }], return_type: Some("bool") }) }, ObjectProperty { name: "from_tuples", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_tuples", parameters: &[FunctionParameter { name: "a", type_name: "(u32 , u32)" }, FunctionParameter { name: "b", type_name: "(u32 , u32)" }], return_type: Some("Self") }) }, ObjectProperty { name: "half_width", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "half_width", parameters: &[], return_type: Some("u32") }) }, ObjectProperty { name: "from_size_f32", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "from_size_f32", parameters: &[FunctionParameter { name: "width", type_name: "f32" }, FunctionParameter { name: "height", type_name: "f32" }], return_type: Some("Self") }) }, ObjectProperty { name: "equals", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "equals", parameters: &[FunctionParameter { name: "other", type_name: "Region" }], return_type: Some("bool") }) }, ObjectProperty { name: "to_vec2", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "to_vec2", parameters: &[], return_type: Some("Vec2") }) }, ObjectProperty { name: "antialias_factor", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "antialias_factor", parameters: &[], return_type: Some("f32") }) }, ObjectProperty { name: "larger_side", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "larger_side", parameters: &[], return_type: Some("u32") }) }, ]),
        ("RenderCanvasFrame", &[]),
        ("TextureTarget", &[ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "context", type_name: "Arc < RenderContext >" }, FunctionParameter { name: "size", type_name: "Size" }], return_type: Some("Self") }) }, ]),
        ("InitializationError", &[]),
        ("SamplerOptions", &[ObjectProperty { name: "repeat_y", type_name: "bool", function: None }, ObjectProperty { name: "smooth", type_name: "bool", function: None }, ObjectProperty { name: "repeat_x", type_name: "bool", function: None }, ObjectProperty { name: "compare", type_name: "Option < wgpu :: CompareFunction >", function: None }, ]),
        ("FragmentColor", &[ObjectProperty { name: "draw", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "draw", parameters: &[FunctionParameter { name: "composition", type_name: "& ffi :: Composition" }], return_type: None }) }, ObjectProperty { name: "in_metal_layer", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "in_metal_layer", parameters: &[FunctionParameter { name: "metal_layer_ptr", type_name: "u64" }], return_type: Some("Self") }) }, ObjectProperty { name: "init", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "init", parameters: &[FunctionParameter { name: "env", type_name: "* mut JNIEnv < '_ >" }, FunctionParameter { name: "surface", type_name: "jobject" }], return_type: Some("(Renderer , Target)") }) }, ObjectProperty { name: "headless", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "headless", parameters: &[], return_type: Some("Self") }) }, ]),
        ("PyPassIterator", &[ObjectProperty { name: "passes", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "passes", parameters: &[], return_type: Some("impl IntoIterator < Item = & PassObject >") }) }, ObjectProperty { name: "", type_name: "Vec < Arc < PassObject > >", function: None }, ]),
        ("RenderCanvasTarget", &[ObjectProperty { name: "resize", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "resize", parameters: &[FunctionParameter { name: "size", type_name: "crate :: PySize" }], return_type: None }) }, ObjectProperty { name: "canvas", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "canvas", parameters: &[], return_type: Some("Py < PyAny >") }) }, ObjectProperty { name: "new", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "new", parameters: &[FunctionParameter { name: "canvas", type_name: "Py < PyAny >" }, FunctionParameter { name: "_present_methods", type_name: "Py < PyAny >" }], return_type: Some("Self") }) }, ObjectProperty { name: "is_ready", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "is_ready", parameters: &[], return_type: Some("bool") }) }, ObjectProperty { name: "size", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "size", parameters: &[], return_type: Some("[u32 ; 2]") }) }, ObjectProperty { name: "present", type_name: "FunctionSignature", function: Some(FunctionSignature { name: "present", parameters: &[], return_type: Some("Result < Py < PyDict > , PyErr >") }) }, ]),
    ],
};

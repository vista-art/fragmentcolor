[package]
name = "fragmentcolor"
version = "0.10.8"
homepage = "https://fragmentcolor.org"
repository = "https://github.com/vista-art/fragmentcolor"
description = "Easy GPU Rendering for Javascript, Python, Swift and Kotlin"
authors = ["Vista Tech & Art GmbH"]
readme = "README.md"
license = "MIT"
keywords = ["graphics", "rendering", "wgpu", "cross-platform", "art"]
categories = ["rendering", "rendering::engine", "parsing"]
edition = "2024"

[lib]
name = "fragmentcolor"
crate-type = ["staticlib", "cdylib", "rlib"]

[workspace]
resolver = "3"
members = ["examples/rust"]

[features]
python = ["pyo3", "numpy", "pollster"]
winit = ["dep:winit", "pollster"]

[dependencies]
wgpu = { version = "27", features = ["glsl", "wgsl", "webgl", "naga-ir"] }
naga = { version = "27", features = ["wgsl-in", "glsl-in"] }
parking_lot = "0.12"
derive-new = "0.7"
thiserror = "2.0"
bytemuck = "1.0"
futures = "0.3"
lsp_doc = "0.2"
dashmap = "6.1"
glam = "0.30"
sha2 = "0.10"
log = "0.4"

# Serialization
csscolorparser = { version = "0.7", default-features = false, features = [
    "named-colors",
] }

# Asset loading
image = { version = "0.25", default-features = false, features = [
    "jpeg",
    "png",
    "bmp",
    "hdr",
] }

# Python FFI (optional)
pyo3 = { version = "0.26", features = [
    "abi3-py39",
    "experimental-async",
    "generate-import-lib",
], optional = true }
numpy = { version = "0.26", optional = true }

# MacOS
[target.'cfg(target_os = "macos")'.dependencies]
objc2 = { version = "0.6" }
objc2-app-kit = { version = "0.3" }

# Android & iOS FFI
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# uniffi = { version = "0.29" } // planned for v0.10.8
winit = { version = "0.30", features = ["serde"], optional = true }
ureq = { version = "3", default-features = false }
pollster = { version = "0.4", optional = true }

# iOS Specific (planned for v0.10.8)
# [target.'cfg(target_os = "ios")'.dependencies]
# objc = "0.2"
# objc2-app-kit = "0.3"
# core-graphics = "0.25"

# WASM-Specific
[target.'cfg(target_family = "wasm")'.dependencies]
console_error_panic_hook = "0.1"
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = "0.6"
wasm-bindgen-test = "0.3"
wasm-bindgen = "0.2"
console_log = "1"
lsp_doc = "0.2"
js-sys = "0.3"
gloo-utils = { version = "0.2", features = ["serde"] }
web-sys = { version = "0.3", features = [
    'OffscreenCanvasRenderingContext2d',
    'CanvasRenderingContext2d',
    'WebGl2RenderingContext',
    'WebGlRenderingContext',
    'HtmlCanvasElement',
    'HtmlImageElement',
    'OffscreenCanvas',
    'RequestMode',
    'RequestInit',
    'EventTarget',
    'ImageData',
    'Document',
    'Location',
    'Response',
    'Element',
    'Request',
    'Window',
] }

[build-dependencies]
phf = { version = "0.13", features = ["macros"] }
syn = { version = "2.0", features = ["full"] }
phf_codegen = "0.13"
cfg_aliases = "0.2"
quote = "1"

[dev-dependencies]
wasm-bindgen-test = "0.3"
image-compare = "0.5"
pollster = "0.4"
fastrand = "2"
tempfile = "3"
proptest = "1"
